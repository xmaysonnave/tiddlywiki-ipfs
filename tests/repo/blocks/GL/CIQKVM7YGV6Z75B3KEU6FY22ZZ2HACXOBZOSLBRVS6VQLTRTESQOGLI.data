
Š€€€ields/plugin-type\",\n            \"text\": \"The type of plugin in a plugin tiddler\"\n        },\n        \"$:/language/Docs/Fields/revision\": {\n            \"title\": \"$:/language/Docs/Fields/revision\",\n            \"text\": \"The revision of the tiddler held at the server\"\n        },\n        \"$:/language/Docs/Fields/released\": {\n            \"title\": \"$:/language/Docs/Fields/released\",\n            \"text\": \"Date of a TiddlyWiki release\"\n        },\n        \"$:/language/Docs/Fields/source\": {\n            \"title\": \"$:/language/Docs/Fields/source\",\n            \"text\": \"The source URL associated with a tiddler\"\n        },\n        \"$:/language/Docs/Fields/subtitle\": {\n            \"title\": \"$:/language/Docs/Fields/subtitle\",\n            \"text\": \"The subtitle text for a wizard\"\n        },\n        \"$:/language/Docs/Fields/tags\": {\n            \"title\": \"$:/language/Docs/Fields/tags\",\n            \"text\": \"A list of tags associated with a tiddler\"\n        },\n        \"$:/language/Docs/Fields/text\": {\n            \"title\": \"$:/language/Docs/Fields/text\",\n            \"text\": \"The body text of a tiddler\"\n        },\n        \"$:/language/Docs/Fields/throttle.refresh\": {\n            \"title\": \"$:/language/Docs/Fields/throttle.refresh\",\n            \"text\": \"If present, throttles refreshes of this tiddler\"\n        },\n        \"$:/language/Docs/Fields/title\": {\n            \"title\": \"$:/language/Docs/Fields/title\",\n            \"text\": \"The unique name of a tiddler\"\n        },\n        \"$:/language/Docs/Fields/toc-link\": {\n            \"title\": \"$:/language/Docs/Fields/toc-link\",\n            \"text\": \"Suppresses the tiddler's link in a Table of Contents tree if set to: ''no''\"\n        },\n        \"$:/language/Docs/Fields/type\": {\n            \"title\": \"$:/language/Docs/Fields/type\",\n            \"text\": \"The content type of a tiddler\"\n        },\n        \"$:/language/Docs/Fields/version\": {\n            \"title\": \"$:/language/Docs/Fields/version\",\n            \"text\": \"Version information for a plugin\"\n        },\n        \"$:/language/Docs/Fields/_is_skinny\": {\n            \"title\": \"$:/language/Docs/Fields/_is_skinny\",\n            \"text\": \"If present, indicates that the tiddler text field must be loaded from the server\"\n        },\n        \"$:/language/Filters/AllTiddlers\": {\n            \"title\": \"$:/language/Filters/AllTiddlers\",\n            \"text\": \"All tiddlers except system tiddlers\"\n        },\n        \"$:/language/Filters/RecentSystemTiddlers\": {\n            \"title\": \"$:/language/Filters/RecentSystemTiddlers\",\n            \"text\": \"Recently modified tiddlers, including system tiddlers\"\n        },\n        \"$:/language/Filters/RecentTiddlers\": {\n            \"title\": \"$:/language/Filters/RecentTiddlers\",\n            \"text\": \"Recently modified tiddlers\"\n        },\n        \"$:/language/Filters/AllTags\": {\n            \"title\": \"$:/language/Filters/AllTags\",\n            \"text\": \"All tags except system tags\"\n        },\n        \"$:/language/Filters/Missing\": {\n            \"title\": \"$:/language/Filters/Missing\",\n            \"text\": \"Missing tiddlers\"\n        },\n        \"$:/language/Filters/Drafts\": {\n            \"title\": \"$:/language/Filters/Drafts\",\n            \"text\": \"Draft tiddlers\"\n        },\n        \"$:/language/Filters/Orphans\": {\n            \"title\": \"$:/language/Filters/Orphans\",\n            \"text\": \"Orphan tiddlers\"\n        },\n        \"$:/language/Filters/SystemTiddlers\": {\n            \"title\": \"$:/language/Filters/SystemTiddlers\",\n            \"text\": \"System tiddlers\"\n        },\n        \"$:/language/Filters/ShadowTiddlers\": {\n            \"title\": \"$:/language/Filters/ShadowTiddlers\",\n            \"text\": \"Shadow tiddlers\"\n        },\n        \"$:/language/Filters/OverriddenShadowTiddlers\": {\n            \"title\": \"$:/language/Filters/OverriddenShadowTiddlers\",\n            \"text\": \"Overridden shadow tiddlers\"\n        },\n        \"$:/language/Filters/SessionTiddlers\": {\n            \"title\": \"$:/language/Filters/SessionTiddlers\",\n            \"text\": \"Tiddlers modified since the wiki was loaded\"\n        },\n        \"$:/language/Filters/SystemTags\": {\n            \"title\": \"$:/language/Filters/SystemTags\",\n            \"text\": \"System tags\"\n        },\n        \"$:/language/Filters/StoryList\": {\n            \"title\": \"$:/language/Filters/StoryList\",\n            \"text\": \"Tiddlers in the story river, excluding <$text text=\\\"$:/AdvancedSearch\\\"/>\"\n        },\n        \"$:/language/Filters/TypedTiddlers\": {\n            \"title\": \"$:/language/Filters/TypedTiddlers\",\n            \"text\": \"Non wiki-text tiddlers\"\n        },\n        \"GettingStarted\": {\n            \"title\": \"GettingStarted\",\n            \"text\": \"\\\\define lingo-base() $:/language/ControlPanel/Basics/\\nWelcome to ~TiddlyWiki and the ~TiddlyWiki community\\n\\nBefore you start storing important information in ~TiddlyWiki it is vital to make sure that you can reliably save changes. See https://tiddlywiki.com/#GettingStarted for details\\n\\n!! Set up this ~TiddlyWiki\\n\\n<div class=\\\"tc-control-panel\\\">\\n\\n|<$link to=\\\"$:/SiteTitle\\\"><<lingo Title/Prompt>></$link> |<$edit-text tiddler=\\\"$:/SiteTitle\\\" default=\\\"\\\" tag=\\\"input\\\"/> |\\n|<$link to=\\\"$:/SiteSubtitle\\\"><<lingo Subtitle/Prompt>></$link> |<$edit-text tiddler=\\\"$:/SiteSubtitle\\\" default=\\\"\\\" tag=\\\"input\\\"/> |\\n|<$link to=\\\"$:/DefaultTiddlers\\\"><<lingo DefaultTiddlers/Prompt>></$link> |<<lingo DefaultTiddlers/TopHint>><br> <$edit tag=\\\"textarea\\\" tiddler=\\\"$:/DefaultTiddlers\\\"/><br>//<<lingo DefaultTiddlers/BottomHint>>// |\\n</div>\\n\\nSee the [[control panel|$:/ControlPanel]] for more options.\\n\"\n        },\n        \"$:/language/Help/build\": {\n            \"title\": \"$:/language/Help/build\",\n            \"description\": \"Automatically run configured commands\",\n            \"text\": \"Build the specified build targets for the current wiki. If no build targets are specified then all available targets will be built.\\n\\n```\\n--build <target> [<target> ...]\\n```\\n\\nBuild targets are defined in the `tiddlywiki.info` file of a wiki folder.\\n\\n\"\n        },\n        \"$:/language/Help/clearpassword\": {\n            \"title\": \"$:/language/Help/clearpassword\",\n            \"description\": \"Clear a password for subsequent crypto operations\",\n            \"text\": \"Clear the password for subsequent crypto operations\\n\\n```\\n--clearpassword\\n```\\n\"\n        },\n        \"$:/language/Help/default\": {\n            \"title\": \"$:/language/Help/default\",\n            \"text\": \"\\\\define commandTitle()\\n$:/language/Help/$(command)$\\n\\\\end\\n```\\nusage: tiddlywiki [<wikifolder>] [--<command> [<args>...]...]\\n```\\n\\nAvailable commands:\\n\\n<ul>\\n<$list filter=\\\"[commands[]sort[title]]\\\" variable=\\\"command\\\">\\n<li><$link to=<<commandTitle>>><$macrocall $name=\\\"command\\\" $type=\\\"text/plain\\\" $output=\\\"text/plain\\\"/></$link>: <$transclude tiddler=<<commandTitle>> field=\\\"description\\\"/></li>\\n</$list>\\n</ul>\\n\\nTo get detailed help on a command:\\n\\n```\\ntiddlywiki --help <command>\\n```\\n\"\n        },\n        \"$:/language/Help/deletetiddlers\": {\n            \"title\": \"$:/language/Help/deletetiddlers\",\n            \"description\": \"Deletes a group of tiddlers\",\n            \"text\": \"<<.from-version \\\"5.1.20\\\">> Deletes a group of tiddlers identified by a filter.\\n\\n```\\n--deletetiddlers <filter>\\n```\\n\"\n        },\n        \"$:/language/Help/editions\": {\n            \"title\": \"$:/language/Help/editions\",\n            \"description\": \"Lists the available editions of TiddlyWiki\",\n            \"text\": \"Lists the names and descriptions of the available editions. You can create a new wiki of a specified edition with the `--init` command.\\n\\n```\\n--editions\\n```\\n\"\n        },\n        \"$:/language/Help/fetch\": {\n            \"title\": \"$:/language/Help/fetch\",\n            \"description\": \"Fetch tiddlers from wiki by URL\",\n            \"text\": \"Fetch one or more files over HTTP/HTTPS, and import the tiddlers matching a filter, optionally transforming the incoming titles.\\n\\n```\\n--fetch file <url> <import-filter> <transform-filter>\\n--fetch files <url-filter> <import-filter> <transform-filter>\\n--fetch raw-file <url> <transform-filter>\\n--fetch raw-files <url-filter> <transform-filter>\\n```\\n\\nThe \\\"file\\\" and \\\"files\\\" variants fetch the specified files and attempt to import the tiddlers within them (the same processing as if the files were dragged into the browser window). The \\\"raw-file\\\" and \\\"raw-files\\\" variants fetch the specified files and then store the raw file data in tiddlers, without applying the import logic.\\n\\nWith the \\\"file\\\" and \\\"raw-file\\\" variants only a single file is fetched and the first parameter is the URL of the file to read.\\n\\nWith the \\\"files\\\" and \\\"raw-files\\\" variants, multiple files are fetched and the first parameter is a filter yielding a list of URLs of the files to read. For example, given a set of tiddlers tagged \\\"remote-server\\\" that have a field \\\"url\\\" the filter `[tag[remote-server]get[url]]` will retrieve all the available URLs.\\n\\nFor the \\\"file\\\" and \\\"files\\\" variants, the `<import-filter>` parameter specifies a filter determining which tiddlers are imported. It defaults to `[all[tiddlers]]` if not provided.\\n\\nFor all variants, the `<transform-filter>` parameter specifies an optional filter that transforms the titles of the imported tiddlers. For example, `[addprefix[$:/myimports/]]` would add the prefix `$:/myimports/` to each title.\\n\\nPreceding the `--fetch` command with `--verbose` will output progress information during the import.\\n\\nNote that TiddlyWiki will not fetch an older version of an already loaded plugin.\\n\\nThe following example retrieves all the non-system tiddlers from https://tiddlywiki.com and saves them to a JSON file:\\n\\n```\\ntiddlywiki --verbose --fetch file \\\"https://tiddlywiki.com/\\\" \\\"[!is[system]]\\\" \\\"\\\" --rendertiddler \\\"$:/core/templates/exporters/JsonFile\\\" output.json text/plain \\\"\\\" exportFilter \\\"[!is[system]]\\\"\\n```\\n\\nThe following example retrieves the \\\"favicon\\\" file from tiddlywiki.com and saves it in a file called \\\"output.ico\\\". Note that the intermediate tiddler \\\"Icon Tiddler\\\" is quoted in the \\\"--fetch\\\" command because it is being used as a transformation filter to replace the default title, while there are no quotes for the \\\"--savetiddler\\\" command because it is being used directly as a title.\\n\\n```\\ntiddlywiki --verbose --fetch raw-file \\\"https://tiddlywiki.com/favicon.ico\\\" \\\"[[Icon Tiddler]]\\\" --savetiddler \\\"Icon Tiddler\\\" output.ico\\n```\\n\\n\"\n        },\n        \"$:/language/Help/help\": {\n            \"title\": \"$:/language/Help/help\",\n            \"description\": \"Display help for TiddlyWiki commands\",\n            \"text\": \"Displays help text for a command:\\n\\n```\\n--help [<command>]\\n```\\n\\nIf the command name is omitted then a list of available commands is displayed.\\n\"\n        },\n        \"$:/language/Help/import\": {\n            \"title\": \"$:/language/Help/import\",\n            \"description\": \"Import tiddlers from a file\",\n            \"text\": \"Import tiddlers from TiddlyWiki (`.html`), `.tiddler`, `.tid`, `.json` or other local files. The deserializer must be explicitly specified, unlike the `load` command which infers the deserializer from the file extension.\\n\\n```\\n--import <filepath> <deserializer> [<title>] [<encoding>]\\n```\\n\\nThe deserializers in the core include:\\n\\n* application/javascript\\n* application/json\\n* application/x-tiddler\\n* application/x-tiddler-html-div\\n* application/x-tiddlers\\n* text/html\\n* text/plain\\n\\nThe title of the imported tiddler defaults to the filename.\\n\\nThe encoding defaults to \\\"utf8\\\", but can be \\\"base64\\\" for importing binary files.\\n\\nNote that TiddlyWiki will not import an older version of an already loaded plugin.\\n\"\n        },\n        \"$:/language/Help/init\": {\n            \"title\": \"$:/language/Help/init\",\n            \"description\": \"Initialise a new wiki folder\",\n            \"text\": \"Initialise an empty [[WikiFolder|WikiFolders]] with a copy of the specified edition.\\n\\n```\\n--init <edition> [<edition> ...]\\n```\\n\\nFor example:\\n\\n```\\ntiddlywiki ./MyWikiFolder --init empty\\n```\\n\\nNote:\\n\\n* The wiki folder directory will be created if necessary\\n* The \\\"edition\\\" defaults to ''empty''\\n* The init command will fail if the wiki folder is not empty\\n* The init command removes any `includeWikis` definitions in the edition's `tiddlywiki.info` file\\n* When multiple editions are specified, editions initialised later will overwrite any files shared with earlier editions (so, the final `tiddlywiki.info` file will be copied from the last edition)\\n* `--editions` returns a list of available editions\\n\"\n        },\n        \"$:/language/Help/listen\": {\n            \"title\": \"$:/language/Help/listen\",\n            \"description\": \"Provides an HTTP server interface to TiddlyWiki\",\n            \"text\": \"Serves a wiki over HTTP.\\n\\nThe listen command uses NamedCommandParameters:\\n\\n```\\n--listen [<name>=<value>]...\\n```\\n\\nAll parameters are optional with safe defaults, and can be specified in any order. The recognised parameters are:\\n\\n* ''host'' - optional hostname to serve from (defaults to \\\"127.0.0.1\\\" aka \\\"localhost\\\")\\n* ''path-prefix'' - optional prefix for paths\\n* ''port'' - port number on which to listen; non-numeric values are interpreted as a system environment variable from which the port number is extracted (defaults to \\\"8080\\\")\\n* ''credentials'' - pathname of credentials CSV file (relative to wiki folder)\\n* ''anon-username'' - the username for signing edits for anonymous users\\n* ''username'' - optional username for basic authentication\\n* ''password'' - optional password for basic authentication\\n* ''authenticated-user-header'' - optional name of header to be used for trusted authentication\\n* ''readers'' - comma separated list of principals allowed to read from this wiki\\n* ''writers'' - comma separated list of principals allowed to write to this wiki\\n* ''csrf-disable'' - set to \\\"yes\\\" to disable CSRF checks (defaults to \\\"no\\\")\\n* ''root-tiddler'' - the tiddler to serve at the root (defaults to \\\"$:/core/save/all\\\")\\n* ''root-render-type'' - the content type to which the root tiddler should be rendered (defaults to \\\"text/plain\\\")\\n* ''root-serve-type'' - the content type with which the root tiddler should be served (defaults to \\\"text/html\\\")\\n* ''tls-cert'' - pathname of TLS certificate file (relative to wiki folder)\\n* ''tls-key'' - pathname of TLS key file (relative to wiki folder)\\n* ''debug-level'' - optional debug level; set to \\\"debug\\\" to view request details (defaults to \\\"none\\\")\\n* ''gzip'' - set to \\\"yes\\\" to enable gzip compression for some http endpoints (defaults to \\\"no\\\")\\n\\nFor information on opening up your instance to the entire local network, and possible security concerns, see the WebServer tiddler at TiddlyWiki.com.\\n\\n\"\n        },\n        \"$:/language/Help/load\": {\n            \"title\": \"$:/language/Help/load\",\n            \"description\": \"Load tiddlers from a file\",\n            \"text\": \"Load tiddlers from TiddlyWiki (`.html`), `.tiddler`, `.tid`, `.json` or other local files. The processing applied to incoming files is determined by the file extension. Use the alternative `import` command if you need to specify the deserializer and encoding explicitly.\\n\\n```\\n--load <filepath> [noerror]\\n--load <dirpath> [noerror]\\n```\\n\\nBy default, the load command raises an error if no tiddlers are found. The error can be suppressed by providing the optional \\\"noerror\\\" parameter.\\n\\nTo load tiddlers from an encrypted TiddlyWiki file you should first specify the password with the PasswordCommand. For example:\\n\\n```\\ntiddlywiki ./MyWiki --password pa55w0rd --load my_encrypted_wiki.html\\n```\\n\\nNote that TiddlyWiki will not load an older version of an already loaded plugin.\\n\"\n        },\n        \"$:/language/Help/makelibrary\": {\n            \"title\": \"$:/language/Help/makelibrary\",\n            \"description\": \"Construct library plugin required by upgrade process\",\n            \"text\": \"Constructs the `$:/UpgradeLibrary` tiddler for the upgrade process.\\n\\nThe upgrade library is formatted as an ordinary plugin tiddler with the plugin type `library`. It contains a copy of each of the plugins, themes and language packs available within the TiddlyWiki5 repository.\\n\\nThis command is intended for internal use; it is only relevant to users constructing a custom upgrade procedure.\\n\\n```\\n--makelibrary <title>\\n```\\n\\nThe title argument defaults to `$:/UpgradeLibrary`.\\n\"\n        },\n        \"$:/language/Help/notfound\": {\n            \"title\": \"$:/language/Help/notfound\",\n            \"text\": \"No such help item\"\n        },\n        \"$:/language/Help/output\": {\n            \"title\": \"$:/language/Help/output\",\n            \"description\": \"Set the base output directory for subsequent commands\",\n            \"text\": \"Sets the base output directory for subsequent commands. The default output directory is the `output` subdirectory of the edition directory.\\n\\n```\\n--output <pathname>\\n```\\n\\nIf the specified pathname is relative then it is resolved relative to the current working directory. For example `--output .` sets the output directory to the current working directory.\\n\\n\"\n        },\n        \"$:/language/Help/password\": {\n            \"title\": \"$:/language/Help/password\",\n            \"description\": \"Set a password for subsequent crypto operations\",\n            \"text\": \"Set a password for subsequent crypto operations\\n\\n```\\n--password <password>\\n```\\n\\n''Note'': This should not be used for serving TiddlyWiki with password protection. Instead, see the password option under the [[ServerCommand]].\\n\"\n        },\n        \"$:/language/Help/render\": {\n            \"title\": \"$:/language/Help/render\",\n            \"description\": \"Renders individual tiddlers to files\",\n            \"text\": \"Render individual tiddlers identified by a filter and save the results to the specified files.\\n\\nOptionally, the title of a template tiddler can be specified. In this case, instead of directly rendering each tiddler, the template tiddler is rendered with the \\\"currentTiddler\\\" variable set to the title of the tiddler that is being rendered.\\n\\nA name and value for an additional variable may optionally also be specified.\\n\\n```\\n--render <tiddler-filter> [<filename-filter>] [<render-type>] [<template>] [<name>] [<value>]\\n```\\n\\n* ''tiddler-filter'': A filter identifying the tiddler(s) to be rendered\\n* ''filename-filter'': Optional filter transforming tiddler titles into pathnames. If omitted, defaults to `[is[tiddler]addsuffix[.html]]`, which uses the unchanged tiddler title as the filename\\n* ''render-type'': Optional render type: `text/html` (the default) returns the full HTML text and `text/plain` just returns the text content (ie it ignores HTML tags and other unprintable material)\\n* ''template'': Optional template through which each tiddler is rendered\\n* ''name'': Name of optional variable\\n* ''value'': Value of optional variable\\n\\nBy default, the filename is resolved relative to the `output` subdirectory of the edition directory. The `--output` command can be used to direct output to a different directory.\\n\\nNotes:\\n\\n* The output directory is not cleared of any existing files\\n* Any missing directories in the path to the filename are automatically created.\\n* When referring to a tiddler with spaces in its title, take care to use both the quotes required by your shell and also TiddlyWiki's double square brackets : `--render \\\"[[Motovun Jack.jpg]]\\\"`\\n* The filename filter is evaluated with the selected items being set to the title of the tiddler currently being rendered, allowing the title to be used as the basis for computing the filename. For example `[encodeuricomponent[]addprefix[static/]]` applies URI encoding to each title, and then adds the prefix `static/`\\n* The `--render` command is a more flexible replacement for both the `--rendertiddler` and `--rendertiddlers` commands, which are deprecated\\n\\nExamples:\\n\\n* `--render \\\"[!is[system]]\\\" \\\"[encodeuricomponent[]addprefix[tiddlers/]addsuffix[.html]]\\\"` -- renders all non-system tiddlers as files in the subdirectory \\\"tiddlers\\\" with URL-encoded titles and the extension HTML\\n\\n\"\n        },\n        \"$:/language/Help/rendertiddler\": {\n            \"title\": \"$:/language/Help/rendertiddler\",\n            \"description\": \"Render an individual tiddler as a specified ContentType\",\n            \"text\": \"(Note: The `--rendertiddler` command is deprecated in favour of the new, more flexible `--render` command)\\n\\nRender an individual tiddler as a specified ContentType, defaulting to `text/html` and save it to the specified filename.\\n\\nOptionally the title of a template tiddler can be specified, in which case the template tiddler is rendered with the \\\"currentTiddler\\\" variable set to the tiddler that is being rendered (the first parameter value).\\n\\nA name and value for an additional variable may optionally also be specified.\\n\\n```\\n--rendertiddler <title> <filename> [<type>] [<template>] [<name>] [<value>]\\n```\\n\\nBy default, the filename is resolved relative to the `output` subdirectory of the edition directory. The `--output` command can be used to direct output to a different directory.\\n\\nAny missing directories in the path to the filename are automatically created.\\n\\nFor example, the following command saves all tiddlers matching the filter `[tag[done]]` to a JSON file titled `output.json` by employing the core template `$:/core/templates/exporters/JsonFile`.\\n\\n```\\n--rendertiddler \\\"$:/core/templates/exporters/JsonFile\\\" output.json text/plain \\\"\\\" exportFilter \\\"[tag[done]]\\\"\\n```\\n\"\n        },\n        \"$:/language/Help/rendertiddlers\": {\n            \"title\": \"$:/language/Help/rendertiddlers\",\n            \"description\": \"Render tiddlers matching a filter to a specified ContentType\",\n            \"text\": \"(Note: The `--rendertiddlers` command is deprecated in favour of the new, more flexible `--render` command)\\n\\nRender a set of tiddlers matching a filter to separate files of a specified ContentType (defaults to `text/html`) and extension (defaults to `.html`).\\n\\n```\\n--rendertiddlers '<filter>' <template> <pathname> [<type>] [<extension>] [\\\"noclean\\\"]\\n```\\n\\nFor example:\\n\\n```\\n--rendertiddlers '[!is[system]]' $:/core/templates/static.tiddler.html ./static text/plain\\n```\\n\\nBy default, the pathname is resolved relative to the `output` subdirectory of the edition directory. The `--output` command can be used to direct output to a different directory.\\n\\nAny files in the target directory are deleted unless the ''noclean'' flag is specified. The target directory is recursively created if it is missing.\\n\"\n        },\n        \"$:/language/Help/save\": {\n            \"title\": \"$:/language/Help/save\",\n            \"description\": \"Saves individual raw tiddlers to files\",\n            \"text\": \"Saves individual tiddlers identified by a filter in their raw text or binary format to the specified files.\\n\\n```\\n--save <tiddler-filter> <filename-filter>\\n```\\n\\n* ''tiddler-filter'': A filter identifying the tiddler(s) to be saved\\n* ''filename-filter'': Optional filter transforming tiddler titles into pathnames. If omitted, defaults to `[is[tiddler]]`, which uses the unchanged tiddler title as the filename\\n\\nBy default, the filename is resolved relative to the `output` subdirectory of the edition directory. The `--output` command can be used to direct output to a different directory.\\n\\nNotes:\\n\\n* The output directory is not cleared of any existing files\\n* Any missing directories in the path to the filename are automatically created.\\n* When saving a tiddler with spaces in its title, take care to use both the quotes required by your shell and also TiddlyWiki's double square brackets : `--save \\\"[[Motovun Jack.jpg]]\\\"`\\n* The filename filter is evaluated with the selected items being set to the title of the tiddler currently being saved, allowing the title to be used as the basis for computing the filename. For example `[encodeuricomponent[]addprefix[static/]]` applies URI encoding to each title, and then adds the prefix `static/`\\n* The `--save` command is a more flexible replacement for both the `--savetiddler` and `--savetiddlers` commands, which are deprecated\\n\\nExamples:\\n\\n* `--save \\\"[!is[system]is[image]]\\\" \\\"[encodeuricomponent[]addprefix[tiddlers/]]\\\"` -- saves all non-system image tiddlers as files in the subdirectory \\\"tiddlers\\\" with URL-encoded titles\\n\"\n        },\n        \"$:/language/Help/savetiddler\": {\n            \"title\": \"$:/language/Help/savetiddler\",\n            \"description\": \"Saves a raw tiddler to a file\",\n            \"text\": \"(Note: The `--savetiddler` command is deprecated in favour of the new, more flexible `--save` command)\\n\\nSaves an individual tiddler in its raw text or binary format to the specified filename.\\n\\n```\\n--savetiddler <title> <filename>\\n```\\n\\nBy default, the filename is resolved relative to the `output` subdirectory of the edition directory. The `--output` command can be used to direct output to a different directory.\\n\\nAny missing directories in the path to the filename are automatically created.\\n\"\n        },\n        \"$:/language/Help/savetiddlers\": {\n            \"title\": \"$:/language/Help/savetiddlers\",\n            \"description\": \"Saves a group of raw tiddlers to a directory\",\n            \"text\": \"(Note: The `--savetiddlers` command is deprecated in favour of the new, more flexible `--save` command)\\n\\nSaves a group of tiddlers in their raw text or binary format to the specified directory.\\n\\n```\\n--savetiddlers <filter> <pathname> [\\\"noclean\\\"]\\n```\\n\\nBy default, the pathname is resolved relative to the `output` subdirectory of the edition directory. The `--output` command can be used to direct output to a different directory.\\n\\nThe output directory is cleared of existing files before saving the specified files. The deletion can be disabled by specifying the ''noclean'' flag.\\n\\nAny missing directories in the pathname are automatically created.\\n\"\n        },\n        \"$:/language/Help/savewikifolder\": {\n            \"title\": \"$:/language/Help/savewikifolder\",\n            \"description\": \"Saves a wiki to a new wiki folder\",\n            \"text\": \"<<.from-version \\\"5.1.20\\\">> Saves the current wiki as a wiki folder, including tiddlers, plugins and configuration:\\n\\n```\\n--savewikifolder <wikifolderpath> [<filter>]\\n```\\n\\n* The target wiki folder must be empty or non-existent\\n* The filter specifies which tiddlers should be included. It is optional, defaulting to `[all[tiddlers]]`\\n* Plugins from the official plugin library are replaced with references to those plugins in the `tiddlywiki.info` file\\n* Custom plugins are unpacked into their own folder\\n\\nA common usage is to convert a TiddlyWiki HTML file into a wiki folder:\\n\\n```\\ntiddlywiki --load ./mywiki.html --savewikifolder ./mywikifolder\\n```\\n\"\n        },\n        \"$:/language/Help/server\": {\n            \"title\": \"$:/language/Help/server\",\n            \"description\": \"Provides an HTTP server interface to TiddlyWiki (deprecated in favour of the new listen command)\",\n            \"text\": \"Legacy command to serve a wiki over HTTP.\\n\\n```\\n--server <port> <root-tiddler> <root-render-type> <root-serve-type> <username> <password> <host> <path-prefix> <debug-level>\\n```\\n\\nThe parameters are:\\n\\n* ''port'' - port number on which to listen; non-numeric values are interpreted as a system environment variable from which the port number is extracted (defaults to \\\"8080\\\")\\n* ''root-tiddler'' - the tiddler to serve at the root (defaults to \\\"$:/core/save/all\\\")\\n* ''root-render-type'' - the content type to which the root tiddler should be rendered (defaults to \\\"text/plain\\\")\\n* ''root-serve-type'' - the content type with which the root tiddler should be served (defaults to \\\"text/html\\\")\\n* ''username'' - the default username for signing edits\\n* ''password'' - optional password for basic authentication\\n* ''host'' - optional hostname to serve from (defaults to \\\"127.0.0.1\\\" aka \\\"localhost\\\")\\n* ''path-prefix'' - optional prefix for paths\\n* ''debug-level'' - optional debug level; set to \\\"debug\\\" to view request details (defaults to \\\"none\\\")\\n\\nIf the password parameter is specified then the browser will prompt the user for the username and password. Note that the password is transmitted in plain text so this implementation should only be used on a trusted network or over HTTPS.\\n\\nFor example:\\n\\n```\\n--server 8080 $:/core/save/all text/plain text/html MyUserName passw0rd\\n```\\n\\nThe username and password can be specified as empty strings if you need to set the hostname or pathprefix and don't want to require a password.\\n\\n\\n```\\n--server 8080 $:/core/save/all text/plain text/html \\\"\\\" \\\"\\\" 192.168.0.245\\n```\\n\\nUsing an address like this exposes your system to the local network. For information on opening up your instance to the entire local network, and possible security concerns, see the WebServer tiddler at TiddlyWiki.com.\\n\\nTo run multiple TiddlyWiki servers at the same time you'll need to put each one on a different port. It can be useful to use an environment variable to pass the port number to the Node.js process. This example references an environment variable called \\\"MY_PORT_NUMBER\\\":\\n\\n```\\n--server MY_PORT_NUMBER $:/core/save/all text/plain text/html MyUserName passw0rd\\n```\\n\"\n        },\n        \"$:/language/Help/setfield\": {\n            \"title\": \"$:/language/Help/setfield\",\n            \"description\": \"Prepares external tiddlers for use\",\n            \"text\": \"//Note that this command is experimental and may change or be replaced before being finalised//\\n\\nSets the specified field of a group of tiddlers to the result of wikifying a template tiddler with the `currentTiddler` variable set to the tiddler.\\n\\n```\\n--setfield <filter> <fieldname> <templatetitle> <rendertype>\\n```\\n\\nThe parameters are:\\n\\n* ''filter'' - filter identifying the tiddlers to be affected\\n* ''fieldname'' - the field to modify (defaults to \\\"text\\\")\\n* ''templatetitle'' - the tiddler to wikify into the specified field. If blank or missing then the specified field is deleted\\n* ''rendertype'' - the text type to render (defaults to \\\"text/plain\\\"; \\\"text/html\\\" can be used to include HTML tags)\\n\"\n        },\n        \"$:/language/Help/unpackplugin\": {\n            \"title\": \"$:/language/Help/unpackplugin\",\n            \"description\": \"Unpack the payload tiddlers from a plugin\",\n            \"text\": \"Extract the payload tiddlers from a plugin, creating them as ordinary tiddlers:\\n\\n```\\n--unpackplugin <title>\\n```\\n\"\n        },\n        \"$:/language/Help/verbose\": {\n            \"title\": \"$:/language/Help/verbose\",\n            \"description\": \"Triggers verbose output mode\",\n            \"text\": \"Triggers verbose output, useful for debugging\\n\\n```\\n--verbose\\n```\\n\"\n        },\n        \"$:/language/Help/version\": {\n            \"title\": \"$:/language/Help/version\",\n            \"description\": \"Displays the version number of TiddlyWiki\",\n            \"text\": \"Displays the version number of TiddlyWiki.\\n\\n```\\n--version\\n```\\n\"\n        },\n        \"$:/language/Import/Imported/Hint\": {\n            \"title\": \"$:/language/Import/Imported/Hint\",\n            \"text\": \"The following tiddlers were imported:\"\n        },\n        \"$:/language/Import/Listing/Cancel/Caption\": {\n            \"title\": \"$:/language/Import/Listing/Cancel/Caption\",\n            \"text\": \"Cancel\"\n        },\n        \"$:/language/Import/Listing/Hint\": {\n            \"title\": \"$:/language/Import/Listing/Hint\",\n            \"text\": \"These tiddlers are ready to import:\"\n        },\n        \"$:/language/Import/Listing/Import/Caption\": {\n            \"title\": \"$:/language/Import/Listing/Import/Caption\",\n            \"text\": \"Import\"\n        },\n        \"$:/language/Import/Listing/Select/Caption\": {\n            \"title\": \"$:/language/Import/Listing/Select/Caption\",\n            \"text\": \"Select\"\n        },\n        \"$:/language/Import/Listing/Status/Caption\": {\n            \"title\": \"$:/language/Import/Listing/Status/Caption\",\n            \"text\": \"Status\"\n        },\n        \"$:/language/Import/Listing/Title/Caption\": {\n            \"title\": \"$:/language/Import/Listing/Title/Caption\",\n            \"text\": \"Title\"\n        },\n        \"$:/language/Import/Listing/Preview\": {\n            \"title\": \"$:/language/Import/Listing/Preview\",\n            \"text\": \"Preview:\"\n        },\n        \"$:/language/Import/Listing/Preview/Text\": {\n            \"title\": \"$:/language/Import/Listing/Preview/Text\",\n            \"text\": \"Text\"\n        },\n        \"$:/language/Import/Listing/Preview/TextRaw\": {\n            \"title\": \"$:/language/Import/Listing/Preview/TextRaw\",\n            \"text\": \"Text (Raw)\"\n        },\n        \"$:/language/Import/Listing/Preview/Fields\": {\n            \"title\": \"$:/language/Import/Listing/Preview/Fields\",\n            \"text\": \"Fields\"\n        },\n        \"$:/language/Import/Listing/Preview/Diff\": {\n            \"title\": \"$:/language/Import/Listing/Preview/Diff\",\n            \"text\": \"Diff\"\n        },\n        \"$:/language/Import/Listing/Preview/DiffFields\": {\n            \"title\": \"$:/language/Import/Listing/Preview/DiffFields\",\n            \"text\": \"Diff (Fields)\"\n        },\n        \"$:/language/Import/Listing/Rename/Tooltip\": {\n            \"title\": \"$:/language/Import/Listing/Rename/Tooltip\",\n            \"text\": \"Rename tiddler before importing\"\n        },\n        \"$:/language/Import/Listing/Rename/Prompt\": {\n            \"title\": \"$:/language/Import/Listing/Rename/Prompt\",\n            \"text\": \"Rename to:\"\n        },\n        \"$:/language/Import/Listing/Rename/ConfirmRename\": {\n            \"title\": \"$:/language/Import/Listing/Rename/ConfirmRename\",\n            \"text\": \"Rename tiddler\"\n        },\n        \"$:/language/Import/Listing/Rename/CancelRename\": {\n            \"title\": \"$:/language/Import/Listing/Rename/CancelRename\",\n            \"text\": \"Cancel\"\n        },\n        \"$:/language/Import/Listing/Rename/OverwriteWarning\": {\n            \"title\": \"$:/language/Import/Listing/Rename/OverwriteWarning\",\n            \"text\": \"A tiddler with this title already exists.\"\n        },\n        \"$:/language/Import/Upgrader/Plugins/Suppressed/Incompatible\": {\n            \"title\": \"$:/language/Import/Upgrader/Plugins/Suppressed/Incompatible\",\n            \"text\": \"Blocked incompatible or obsolete plugin.\"\n        },\n        \"$:/language/Import/Upgrader/Plugins/Suppressed/Version\": {\n            \"title\": \"$:/language/Import/Upgrader/Plugins/Suppressed/Version\",\n            \"text\": \"Blocked plugin (due to incoming <<incoming>> not being newer than existing <<existing>>).\"\n        },\n        \"$:/language/Import/Upgrader/Plugins/Upgraded\": {\n            \"title\": \"$:/language/Import/Upgrader/Plugins/Upgraded\",\n            \"text\": \"Upgraded plugin from <<incoming>> to <<upgraded>>.\"\n        },\n        \"$:/language/Import/Upgrader/State/Suppressed\": {\n            \"title\": \"$:/language/Import/Upgrader/State/Suppressed\",\n            \"text\": \"Blocked temporary state tiddler.\"\n        },\n        \"$:/language/Import/Upgrader/System/Suppressed\": {\n            \"title\": \"$:/language/Import/Upgrader/System/Suppressed\",\n            \"text\": \"Blocked system tiddler.\"\n        },\n        \"$:/language/Import/Upgrader/System/Warning\": {\n            \"title\": \"$:/language/Import/Upgrader/System/Warning\",\n            \"text\": \"Core module tiddler.\"\n        },\n        \"$:/language/Import/Upgrader/System/Alert\": {\n            \"title\": \"$:/language/Import/Upgrader/System/Alert\",\n            \"text\": \"You are about to import a tiddler that will overwrite a core module tiddler. This is not recommended as it may make the system unstable.\"\n        },\n        \"$:/language/Import/Upgrader/ThemeTweaks/Created\": {\n            \"title\": \"$:/language/Import/Upgrader/ThemeTweaks/Created\",\n            \"text\": \"Migrated theme tweak from <$text text=<<from>>/>.\"\n        },\n        \"$:/language/AboveStory/ClassicPlugin/Warning\": {\n            \"title\": \"$:/language/AboveStory/ClassicPlugin/Warning\",\n            \"text\": \"It looks like you are trying to load a plugin designed for ~TiddlyWiki Classic. Please note that [[these plugins do not work with TiddlyWiki version 5.x.x|https://tiddlywiki.com/#TiddlyWikiClassic]]. ~TiddlyWiki Classic plugins detected:\"\n        },\n        \"$:/language/BinaryWarning/Prompt\": {\n            \"title\": \"$:/language/BinaryWarning/Prompt\",\n            \"text\": \"This tiddler contains binary data\"\n        },\n        \"$:/language/ClassicWarning/Hint\": {\n            \"title\": \"$:/language/ClassicWarning/Hint\",\n            \"text\": \"This tiddler is written in TiddlyWiki Classic wiki text format, which is not fully compatible with TiddlyWiki version 5. See https://tiddlywiki.com/static/Upgrading.html for more details.\"\n        },\n        \"$:/language/ClassicWarning/Upgrade/Caption\": {\n            \"title\": \"$:/language/ClassicWarning/Upgrade/Caption\",\n            \"text\": \"upgrade\"\n        },\n        \"$:/language/CloseAll/Button\": {\n            \"title\": \"$:/language/CloseAll/Button\",\n            \"text\": \"close all\"\n        },\n        \"$:/language/ColourPicker/Recent\": {\n            \"title\": \"$:/language/ColourPicker/Recent\",\n            \"text\": \"Recent:\"\n        },\n        \"$:/language/ConfirmCancelTiddler\": {\n            \"title\": \"$:/language/ConfirmCancelTiddler\",\n            \"text\": \"Do you wish to discard changes to the tiddler \\\"<$text text=<<title>>/>\\\"?\"\n        },\n        \"$:/language/ConfirmDeleteTiddler\": {\n            \"title\": \"$:/language/ConfirmDeleteTiddler\",\n            \"text\": \"Do you wish to delete the tiddler \\\"<$text text=<<title>>/>\\\"?\"\n        },\n        \"$:/language/ConfirmOverwriteTiddler\": {\n            \"title\": \"$:/language/ConfirmOverwriteTiddler\",\n            \"text\": \"Do you wish to overwrite the tiddler \\\"<$text text=<<title>>/>\\\"?\"\n        },\n        \"$:/language/ConfirmEditShadowTiddler\": {\n            \"title\": \"$:/language/ConfirmEditShadowTiddler\",\n            \"text\": \"You are about to edit a ShadowTiddler. Any changes will override the default system making future upgrades non-trivial. Are you sure you want to edit \\\"<$text text=<<title>>/>\\\"?\"\n        },\n        \"$:/language/ConfirmAction\": {\n            \"title\": \"$:/language/ConfirmAction\",\n            \"text\": \"Do you wish to proceed?\"\n        },\n        \"$:/language/Count\": {\n            \"title\": \"$:/language/Count\",\n            \"text\": \"count\"\n        },\n        \"$:/language/DefaultNewTiddlerTitle\": {\n            \"title\": \"$:/language/DefaultNewTiddlerTitle\",\n            \"text\": \"New Tiddler\"\n        },\n        \"$:/language/Diffs/CountMessage\": {\n            \"title\": \"$:/language/Diffs/CountMessage\",\n            \"text\": \"<<diff-count>> differences\"\n        },\n        \"$:/language/DropMessage\": {\n            \"title\": \"$:/language/DropMessage\",\n            \"text\": \"Drop here (or use the 'Escape' key to cancel)\"\n        },\n        \"$:/language/Encryption/Cancel\": {\n            \"title\": \"$:/language/Encryption/Cancel\",\n            \"text\": \"Cancel\"\n        },\n        \"$:/language/Encryption/ConfirmClearPassword\": {\n            \"title\": \"$:/language/Encryption/ConfirmClearPassword\",\n            \"text\": \"Do you wish to clear the password? This will remove the encryption applied when saving this wiki\"\n        },\n        \"$:/language/Encryption/PromptSetPassword\": {\n            \"title\": \"$:/language/Encryption/PromptSetPassword\",\n            \"text\": \"Set a new password for this TiddlyWiki\"\n        },\n        \"$:/language/Encryption/Username\": {\n            \"title\": \"$:/language/Encryption/Username\",\n            \"text\": \"Username\"\n        },\n        \"$:/language/Encryption/Password\": {\n            \"title\": \"$:/language/Encryption/Password\",\n            \"text\": \"Password\"\n        },\n        \"$:/language/Encryption/RepeatPassword\": {\n            \"title\": \"$:/language/Encryption/RepeatPassword\",\n            \"text\": \"Repeat password\"\n        },\n        \"$:/language/Encryption/PasswordNoMatch\": {\n            \"title\": \"$:/language/Encryption/PasswordNoMatch\",\n            \"text\": \"Passwords do not match\"\n        },\n        \"$:/language/Encryption/SetPassword\": {\n            \"title\": \"$:/language/Encryption/SetPassword\",\n            \"text\": \"Set password\"\n        },\n        \"$:/language/Error/Caption\": {\n            \"title\": \"$:/language/Error/Caption\",\n            \"text\": \"Error\"\n        },\n        \"$:/language/Error/EditConflict\": {\n            \"title\": \"$:/language/Error/EditConflict\",\n            \"text\": \"File changed on server\"\n        },\n        \"$:/language/Error/Filter\": {\n            \"title\": \"$:/language/Error/Filter\",\n            \"text\": \"Filter error\"\n        },\n        \"$:/language/Error/FilterSyntax\": {\n            \"title\": \"$:/language/Error/FilterSyntax\",\n            \"text\": \"Syntax error in filter expression\"\n        },\n        \"$:/language/Error/FilterRunPrefix\": {\n            \"title\": \"$:/language/Error/FilterRunPrefix\",\n            \"text\": \"Filter Error: Unknown prefix for filter run\"\n        },\n        \"$:/language/Error/IsFilterOperator\": {\n            \"title\": \"$:/language/Error/IsFilterOperator\",\n            \"text\": \"Filter Error: Unknown operand for the 'is' filter operator\"\n        },\n        \"$:/language/Error/FormatFilterOperator\": {\n            \"title\": \"$:/language/Error/FormatFilterOperator\",\n            \"text\": \"Filter Error: Unknown suffix for the 'format' filter operator\"\n        },\n        \"$:/language/Error/LoadingPluginLibrary\": {\n            \"title\": \"$:/language/Error/LoadingPluginLibrary\",\n            \"text\": \"Error loading plugin library\"\n        },\n        \"$:/language/Error/NetworkErrorAlert\": {\n            \"title\": \"$:/language/Error/NetworkErrorAlert\",\n            \"text\": \"`<h2>''Network Error''</h2>It looks like the connection to the server has been lost. This may indicate a problem with your network connection. Please attempt to restore network connectivity before continuing.<br><br>''Any unsaved changes will be automatically synchronised when connectivity is restored''.`\"\n        },\n        \"$:/language/Error/RecursiveTransclusion\": {\n            \"title\": \"$:/language/Error/RecursiveTransclusion\",\n            \"text\": \"Recursive transclusion error in transclude widget\"\n        },\n        \"$:/language/Error/RetrievingSkinny\": {\n            \"title\": \"$:/language/Error/RetrievingSkinny\",\n            \"text\": \"Error retrieving skinny tiddler list\"\n        },\n        \"$:/language/Error/SavingToTWEdit\": {\n            \"title\": \"$:/language/Error/SavingToTWEdit\",\n            \"text\": \"Error saving to TWEdit\"\n        },\n        \"$:/language/Error/WhileSaving\": {\n            \"title\": \"$:/language/Error/WhileSaving\",\n            \"text\": \"Error while saving\"\n        },\n        \"$:/language/Error/XMLHttpRequest\": {\n            \"title\": \"$:/language/Error/XMLHttpRequest\",\n            \"text\": \"XMLHttpRequest error code\"\n        },\n        \"$:/language/InternalJavaScriptError/Title\": {\n            \"title\": \"$:/language/InternalJavaScriptError/Title\",\n            \"text\": \"Internal JavaScript Error\"\n        },\n        \"$:/language/InternalJavaScriptError/Hint\": {\n            \"title\": \"$:/language/InternalJavaScriptError/Hint\",\n            \"text\": \"Well, this is embarrassing. It is recommended that you restart TiddlyWiki by refreshing your browser\"\n        },\n        \"$:/language/InvalidFieldName\": {\n            \"title\": \"$:/language/InvalidFieldName\",\n            \"text\": \"Illegal characters in field name \\\"<$text text=<<fieldName>>/>\\\". Fields can only contain lowercase letters, digits and the characters underscore (`_`), hyphen (`-`) and period (`.`)\"\n        },\n        \"$:/language/LayoutSwitcher/Description\": {\n            \"title\": \"$:/language/LayoutSwitcher/Description\",\n            \"text\": \"Open the layout switcher\"\n        },\n        \"$:/language/LazyLoadingWarning\": {\n            \"title\": \"$:/language/LazyLoadingWarning\",\n            \"text\": \"<p>Trying to load external content from ''<$text text={{!!_canonical_uri}}/>''</p><p>If this message doesn't disappear, either the tiddler content type doesn't match the type of the external content, or you may be using a browser that doesn't support external content for wikis loaded as standalone files. See https://tiddlywiki.com/#ExternalText</p>\"\n        },\n        \"$:/language/LoginToTiddlySpace\": {\n            \"title\": \"$:/language/LoginToTiddlySpace\",\n            \"text\": \"Login to TiddlySpace\"\n        },\n        \"$:/language/Manager/Controls/FilterByTag/None\": {\n            \"title\": \"$:/language/Manager/Controls/FilterByTag/None\",\n            \"text\": \"(none)\"\n        },\n        \"$:/language/Manager/Controls/FilterByTag/Prompt\": {\n            \"title\": \"$:/language/Manager/Controls/FilterByTag/Prompt\",\n            \"text\": \"Filter by tag:\"\n        },\n        \"$:/language/Manager/Controls/Order/Prompt\": {\n            \"title\": \"$:/language/Manager/Controls/Order/Prompt\",\n            \"text\": \"Reverse order\"\n        },\n        \"$:/language/Manager/Controls/Search/Placeholder\": {\n            \"title\": \"$:/language/Manager/Controls/Search/Placeholder\",\n            \"text\": \"Search\"\n        },\n        \"$:/language/Manager/Controls/Search/Prompt\": {\n            \"title\": \"$:/language/Manager/Controls/Search/Prompt\",\n            \"text\": \"Search:\"\n        },\n        \"$:/language/Manager/Controls/Show/Option/Tags\": {\n            \"title\": \"$:/language/Manager/Controls/Show/Option/Tags\",\n            \"text\": \"tags\"\n        },\n        \"$:/language/Manager/Controls/Show/Option/Tiddlers\": {\n            \"title\": \"$:/language/Manager/Controls/Show/Option/Tiddlers\",\n            \"text\": \"tiddlers\"\n        },\n        \"$:/language/Manager/Controls/Show/Prompt\": {\n            \"title\": \"$:/language/Manager/Controls/Show/Prompt\",\n            \"text\": \"Show:\"\n        },\n        \"$:/language/Manager/Controls/Sort/Prompt\": {\n            \"title\": \"$:/language/Manager/Controls/Sort/Prompt\",\n            \"text\": \"Sort by:\"\n        },\n        \"$:/language/Manager/Item/Colour\": {\n            \"title\": \"$:/language/Manager/Item/Colour\",\n            \"text\": \"Colour\"\n        },\n        \"$:/language/Manager/Item/Fields\": {\n            \"title\": \"$:/language/Manager/Item/Fields\",\n            \"text\": \"Fields\"\n        },\n        \"$:/language/Manager/Item/Icon/None\": {\n            \"title\": \"$:/language/Manager/Item/Icon/None\",\n            \"text\": \"(none)\"\n        },\n        \"$:/language/Manager/Item/Icon\": {\n            \"title\": \"$:/language/Manager/Item/Icon\",\n            \"text\": \"Icon\"\n        },\n        \"$:/language/Manager/Item/RawText\": {\n            \"title\": \"$:/language/Manager/Item/RawText\",\n            \"text\": \"Raw text\"\n        },\n        \"$:/language/Manager/Item/Tags\": {\n            \"title\": \"$:/language/Manager/Item/Tags\",\n            \"text\": \"Tags\"\n        },\n        \"$:/language/Manager/Item/Tools\": {\n            \"title\": \"$:/language/Manager/Item/Tools\",\n            \"text\": \"Tools\"\n        },\n        \"$:/language/Manager/Item/WikifiedText\": {\n            \"title\": \"$:/language/Manager/Item/WikifiedText\",\n            \"text\": \"Wikified text\"\n        },\n        \"$:/language/MissingTiddler/Hint\": {\n            \"title\": \"$:/language/MissingTiddler/Hint\",\n            \"text\": \"Missing tiddler \\\"<$text text=<<currentTiddler>>/>\\\" -- click {{||$:/core/ui/Buttons/edit}} to create\"\n        },\n        \"$:/language/No\": {\n            \"title\": \"$:/language/No\",\n            \"text\": \"No\"\n        },\n        \"$:/language/OfficialPluginLibrary\": {\n            \"title\": \"$:/language/OfficialPluginLibrary\",\n            \"text\": \"Official ~TiddlyWiki Plugin Library\"\n        },\n        \"$:/language/OfficialPluginLibrary/Hint\": {\n            \"title\": \"$:/language/OfficialPluginLibrary/Hint\",\n            \"text\": \"The official ~TiddlyWiki plugin library at tiddlywiki.com. Plugins, themes and language packs are maintained by the core team.\"\n        },\n        \"$:/language/PageTemplate/Description\": {\n            \"title\": \"$:/language/PageTemplate/Description\",\n            \"text\": \"the default ~TiddlyWiki layout\"\n        },\n        \"$:/language/PageTemplate/Name\": {\n            \"title\": \"$:/language/PageTemplate/Name\",\n            \"text\": \"Default ~PageTemplate\"\n        },\n        \"$:/language/PluginReloadWarning\": {\n            \"title\": \"$:/language/PluginReloadWarning\",\n            \"text\": \"Please save {{$:/core/ui/Buttons/save-wiki}} and reload {{$:/core/ui/Buttons/refresh}} to allow changes to ~JavaScript plugins to take effect\"\n        },\n        \"$:/language/RecentChanges/DateFormat\": {\n            \"title\": \"$:/language/RecentChanges/DateFormat\",\n            \"text\": \"DDth MMM YYYY\"\n        },\n        \"$:/language/Shortcuts/Input/AdvancedSearch/Hint\": {\n            \"title\": \"$:/language/Shortcuts/Input/AdvancedSearch/Hint\",\n            \"text\": \"Open the ~AdvancedSearch panel from within the sidebar search field\"\n        },\n        \"$:/language/Shortcuts/Input/Accept/Hint\": {\n            \"title\": \"$:/language/Shortcuts/Input/Accept/Hint\",\n            \"text\": \"Accept the selected item\"\n        },\n        \"$:/language/Shortcuts/Input/AcceptVariant/Hint\": {\n            \"title\": \"$:/language/Shortcuts/Input/AcceptVariant/Hint\",\n            \"text\": \"Accept the selected item (variant)\"\n        },\n        \"$:/language/Shortcuts/Input/Cancel/Hint\": {\n            \"title\": \"$:/language/Shortcuts/Input/Cancel/Hint\",\n            \"text\": \"Clear the input field\"\n        },\n        \"$:/language/Shortcuts/Input/Down/Hint\": {\n            \"title\": \"$:/language/Shortcuts/Input/Down/Hint\",\n            \"text\": \"Select the next item\"\n        },\n        \"$:/language/Shortcuts/Input/Tab-Left/Hint\": {\n            \"title\": \"$:/language/Shortcuts/Input/Tab-Left/Hint\",\n            \"text\": \"Select the previous Tab\"\n        },\n        \"$:/language/Shortcuts/Input/Tab-Right/Hint\": {\n            \"title\": \"$:/language/Shortcuts/Input/Tab-Right/Hint\",\n            \"text\": \"Select the next Tab\"\n        },\n        \"$:/language/Shortcuts/Input/Up/Hint\": {\n            \"title\": \"$:/language/Shortcuts/Input/Up/Hint\",\n            \"text\": \"Select the previous item\"\n        },\n        \"$:/language/Shortcuts/SidebarLayout/Hint\": {\n            \"title\": \"$:/language/Shortcuts/SidebarLayout/Hint\",\n            \"text\": \"Change the sidebar layout\"\n        },\n        \"$:/language/Switcher/Subtitle/theme\": {\n            \"title\": \"$:/language/Switcher/Subtitle/theme\",\n            \"text\": \"Switch Theme\"\n        },\n        \"$:/language/Switcher/Subtitle/layout\": {\n            \"title\": \"$:/language/Switcher/Subtitle/layout\",\n            \"text\": \"Switch Layout\"\n        },\n        \"$:/language/Switcher/Subtitle/language\": {\n            \"title\": \"$:/language/Switcher/Subtitle/language\",\n            \"text\": \"Switch Language\"\n        },\n        \"$:/language/Switcher/Subtitle/palette\": {\n            \"title\": \"$:/language/Switcher/Subtitle/palette\",\n            \"text\": \"Switch Palette\"\n        },\n        \"$:/language/SystemTiddler/Tooltip\": {\n            \"title\": \"$:/language/SystemTiddler/Tooltip\",\n            \"text\": \"This is a system tiddler\"\n        },\n        \"$:/language/SystemTiddlers/Include/Prompt\": {\n            \"title\": \"$:/language/SystemTiddlers/Include/Prompt\",\n            \"text\": \"Include system tiddlers\"\n        },\n        \"$:/language/TagManager/Colour/Heading\": {\n            \"title\": \"$:/language/TagManager/Colour/Heading\",\n            \"text\": \"Colour\"\n        },\n        \"$:/language/TagManager/Count/Heading\": {\n            \"title\": \"$:/language/TagManager/Count/Heading\",\n            \"text\": \"Count\"\n        },\n        \"$:/language/TagManager/Icon/Heading\": {\n            \"title\": \"$:/language/TagManager/Icon/Heading\",\n            \"text\": \"Icon\"\n        },\n        \"$:/language/TagManager/Icons/None\": {\n            \"title\": \"$:/language/TagManager/Icons/None\",\n            \"text\": \"None\"\n        },\n        \"$:/language/TagManager/Info/Heading\": {\n            \"title\": \"$:/language/TagManager/Info/Heading\",\n            \"text\": \"Info\"\n        },\n        \"$:/language/TagManager/Tag/Heading\": {\n            \"title\": \"$:/language/TagManager/Tag/Heading\",\n            \"text\": \"Tag\"\n        },\n        \"$:/language/Tiddler/DateFormat\": {\n            \"title\": \"$:/language/Tiddler/DateFormat\",\n            \"text\": \"DDth MMM YYYY at hh12:0mmam\"\n        },\n        \"$:/language/UnsavedChangesWarning\": {\n            \"title\": \"$:/language/UnsavedChangesWarning\",\n            \"text\": \"You have unsaved changes in TiddlyWiki\"\n        },\n        \"$:/language/Yes\": {\n            \"title\": \"$:/language/Yes\",\n            \"text\": \"Yes\"\n        },\n        \"$:/language/Modals/Download\": {\n            \"title\": \"$:/language/Modals/Download\",\n            \"subtitle\": \"Download changes\",\n            \"footer\": \"<$button message=\\\"tm-close-tiddler\\\">Close</$button>\",\n            \"help\": \"https://tiddlywiki.com/static/DownloadingChanges.html\",\n            \"text\": \"Your browser only supports manual saving.\\n\\nTo save your modified wiki, right click on the download link below and select \\\"Download file\\\" or \\\"Save file\\\", and then choose the folder and filename.\\n\\n//You can marginally speed things up by clicking the link with the control key (Windows) or the options/alt key (Mac OS X). You will not be prompted for the folder or filename, but your browser is likely to give it an unrecognisable name -- you may need to rename the file to include an `.html` extension before you can do anything useful with it.//\\n\\nOn smartphones that do not allow files to be downloaded you can instead bookmark the link, and then sync your bookmarks to a desktop computer from where the wiki can be saved normally.\\n\"\n        },\n        \"$:/language/Modals/SaveInstructions\": {\n            \"title\": \"$:/language/Modals/SaveInstructions\",\n            \"subtitle\": \"Save your work\",\n            \"footer\": \"<$button message=\\\"tm-close-tiddler\\\">Close</$button>\",\n            \"help\": \"https://tiddlywiki.com/static/SavingChanges.html\",\n            \"text\": \"Your changes to this wiki need to be saved as a ~TiddlyWiki HTML file.\\n\\n!!! Desktop browsers\\n\\n# Select ''Save As'' from the ''File'' menu\\n# Choose a filename and location\\n#* Some browsers also require you to explicitly specify the file saving format as ''Webpage, HTML only'' or similar\\n# Close this tab\\n\\n!!! Smartphone browsers\\n\\n# Create a bookmark to this page\\n#* If you've got iCloud or Google Sync set up then the bookmark will automatically sync to your desktop where you can open it and save it as above\\n# Close this tab\\n\\n//If you open the bookmark again in Mobile Safari you will see this message again. If you want to go ahead and use the file, just click the ''close'' button below//\\n\"\n        },\n        \"$:/config/NewJournal/Title\": {\n            \"title\": \"$:/config/NewJournal/Title\",\n            \"text\": \"DDth MMM YYYY\"\n        },\n        \"$:/config/NewJournal/Text\": {\n            \"title\": \"$:/config/NewJournal/Text\",\n            \"text\": \"\"\n        },\n        \"$:/config/NewJournal/Tags\": {\n            \"title\": \"$:/config/NewJournal/Tags\",\n            \"text\": \"Journal\\n\"\n        },\n        \"$:/language/Notifications/Save/Done\": {\n            \"title\": \"$:/language/Notifications/Save/Done\",\n            \"text\": \"Saved wiki\"\n        },\n        \"$:/language/Notifications/Save/Starting\": {\n            \"title\": \"$:/language/Notifications/Save/Starting\",\n            \"text\": \"Starting to save wiki\"\n        },\n        \"$:/language/Notifications/CopiedToClipboard/Succeeded\": {\n            \"title\": \"$:/language/Notifications/CopiedToClipboard/Succeeded\",\n            \"text\": \"Copied to clipboard!\"\n        },\n        \"$:/language/Notifications/CopiedToClipboard/Failed\": {\n            \"title\": \"$:/language/Notifications/CopiedToClipboard/Failed\",\n            \"text\": \"Failed to copy to clipboard!\"\n        },\n        \"$:/language/Search/DefaultResults/Caption\": {\n            \"title\": \"$:/language/Search/DefaultResults/Caption\",\n            \"text\": \"List\"\n        },\n        \"$:/language/Search/Filter/Caption\": {\n            \"title\": \"$:/language/Search/Filter/Caption\",\n            \"text\": \"Filter\"\n        },\n        \"$:/language/Search/Filter/Hint\": {\n            \"title\": \"$:/language/Search/Filter/Hint\",\n            \"text\": \"Search via a [[filter expression|https://tiddlywiki.com/static/Filters.html]]\"\n        },\n        \"$:/language/Search/Filter/Matches\": {\n            \"title\": \"$:/language/Search/Filter/Matches\",\n            \"text\": \"//<small><<resultCount>> matches</small>//\"\n        },\n        \"$:/language/Search/Matches\": {\n            \"title\": \"$:/language/Search/Matches\",\n            \"text\": \"//<small><<resultCount>> matches</small>//\"\n        },\n        \"$:/language/Search/Matches/All\": {\n            \"title\": \"$:/language/Search/Matches/All\",\n            \"text\": \"All matches:\"\n        },\n        \"$:/language/Search/Matches/Title\": {\n            \"title\": \"$:/language/Search/Matches/Title\",\n            \"text\": \"Title matches:\"\n        },\n        \"$:/language/Search/Search\": {\n            \"title\": \"$:/language/Search/Search\",\n            \"text\": \"Search\"\n        },\n        \"$:/language/Search/Search/TooShort\": {\n            \"title\": \"$:/language/Search/Search/TooShort\",\n            \"text\": \"Search text too short\"\n        },\n        \"$:/language/Search/Shadows/Caption\": {\n            \"title\": \"$:/language/Search/Shadows/Caption\",\n            \"text\": \"Shadows\"\n        },\n        \"$:/language/Search/Shadows/Hint\": {\n            \"title\": \"$:/language/Search/Shadows/Hint\",\n            \"text\": \"Search for shadow tiddlers\"\n        },\n        \"$:/language/Search/Shadows/Matches\": {\n            \"title\": \"$:/language/Search/Shadows/Matches\",\n            \"text\": \"//<small><<resultCount>> matches</small>//\"\n        },\n        \"$:/language/Search/Standard/Caption\": {\n            \"title\": \"$:/language/Search/Standard/Caption\",\n            \"text\": \"Standard\"\n        },\n        \"$:/language/Search/Standard/Hint\": {\n            \"title\": \"$:/language/Search/Standard/Hint\",\n            \"text\": \"Search for standard tiddlers\"\n        },\n        \"$:/language/Search/Standard/Matches\": {\n            \"title\": \"$:/language/Search/Standard/Matches\",\n            \"text\": \"//<small><<resultCount>> matches</small>//\"\n        },\n        \"$:/language/Search/System/Caption\": {\n            \"title\": \"$:/language/Search/System/Caption\",\n            \"text\": \"System\"\n        },\n        \"$:/language/Search/System/Hint\": {\n            \"title\": \"$:/language/Search/System/Hint\",\n            \"text\": \"Search for system tiddlers\"\n        },\n        \"$:/language/Search/System/Matches\": {\n            \"title\": \"$:/language/Search/System/Matches\",\n            \"text\": \"//<small><<resultCount>> matches</small>//\"\n        },\n        \"$:/language/SideBar/All/Caption\": {\n            \"title\": \"$:/language/SideBar/All/Caption\",\n            \"text\": \"All\"\n        },\n        \"$:/language/SideBar/Contents/Caption\": {\n            \"title\": \"$:/language/SideBar/Contents/Caption\",\n            \"text\": \"Contents\"\n        },\n        \"$:/language/SideBar/Drafts/Caption\": {\n            \"title\": \"$:/language/SideBar/Drafts/Caption\",\n            \"text\": \"Drafts\"\n        },\n        \"$:/language/SideBar/Explorer/Caption\": {\n            \"title\": \"$:/language/SideBar/Explorer/Caption\",\n            \"text\": \"Explorer\"\n        },\n        \"$:/language/SideBar/Missing/Caption\": {\n            \"title\": \"$:/language/SideBar/Missing/Caption\",\n            \"text\": \"Missing\"\n        },\n        \"$:/language/SideBar/More/Caption\": {\n            \"title\": \"$:/language/SideBar/More/Caption\",\n            \"text\": \"More\"\n        },\n        \"$:/language/SideBar/Open/Caption\": {\n            \"title\": \"$:/language/SideBar/Open/Caption\",\n            \"text\": \"Open\"\n        },\n        \"$:/language/SideBar/Orphans/Caption\": {\n            \"title\": \"$:/language/SideBar/Orphans/Caption\",\n            \"text\": \"Orphans\"\n        },\n        \"$:/language/SideBar/Recent/Caption\": {\n            \"title\": \"$:/language/SideBar/Recent/Caption\",\n            \"text\": \"Recent\"\n        },\n        \"$:/language/SideBar/Shadows/Caption\": {\n            \"title\": \"$:/language/SideBar/Shadows/Caption\",\n            \"text\": \"Shadows\"\n        },\n        \"$:/language/SideBar/System/Caption\": {\n            \"title\": \"$:/language/SideBar/System/Caption\",\n            \"text\": \"System\"\n        },\n        \"$:/language/SideBar/Tags/Caption\": {\n            \"title\": \"$:/language/SideBar/Tags/Caption\",\n            \"text\": \"Tags\"\n        },\n        \"$:/language/SideBar/Tags/Untagged/Caption\": {\n            \"title\": \"$:/language/SideBar/Tags/Untagged/Caption\",\n            \"text\": \"untagged\"\n        },\n        \"$:/language/SideBar/Tools/Caption\": {\n            \"title\": \"$:/language/SideBar/Tools/Caption\",\n            \"text\": \"Tools\"\n        },\n        \"$:/language/SideBar/Types/Caption\": {\n            \"title\": \"$:/language/SideBar/Types/Caption\",\n            \"text\": \"Types\"\n        },\n        \"$:/SiteSubtitle\": {\n            \"title\": \"$:/SiteSubtitle\",\n            \"text\": \"a non-linear personal web notebook\"\n        },\n        \"$:/SiteTitle\": {\n            \"title\": \"$:/SiteTitle\",\n            \"text\": \"My ~TiddlyWiki\"\n        },\n        \"$:/language/Snippets/ListByTag\": {\n            \"title\": \"$:/language/Snippets/ListByTag\",\n            \"tags\": \"$:/tags/TextEditor/Snippet\",\n            \"caption\": \"List of tiddlers by tag\",\n            \"text\": \"<<list-links \\\"[tag[task]sort[title]]\\\">>\\n\"\n        },\n        \"$:/language/Snippets/MacroDefinition\": {\n            \"title\": \"$:/language/Snippets/MacroDefinition\",\n            \"tags\": \"$:/tags/TextEditor/Snippet\",\n            \"caption\": \"Macro definition\",\n            \"text\": \"\\\\define macroName(param1:\\\"default value\\\",param2)\\nText of the macro\\n\\\\end\\n\"\n        },\n        \"$:/language/Snippets/Table4x3\": {\n            \"title\": \"$:/language/Snippets/Table4x3\",\n            \"tags\": \"$:/tags/TextEditor/Snippet\",\n            \"caption\": \"Table with 4 columns by 3 rows\",\n            \"text\": \"|! |!Alpha |!Beta |!Gamma |!Delta |\\n|!One | | | | |\\n|!Two | | | | |\\n|!Three | | | | |\\n\"\n        },\n        \"$:/language/Snippets/TableOfContents\": {\n            \"title\": \"$:/language/Snippets/TableOfContents\",\n            \"tags\": \"$:/tags/TextEditor/Snippet\",\n            \"caption\": \"Table of Contents\",\n            \"text\": \"<div class=\\\"tc-table-of-contents\\\">\\n\\n<<toc-selective-expandable 'TableOfContents'>>\\n\\n</div>\"\n        },\n        \"$:/language/ThemeTweaks/ThemeTweaks\": {\n            \"title\": \"$:/language/ThemeTweaks/ThemeTweaks\",\n            \"text\": \"Theme Tweaks\"\n        },\n        \"$:/language/ThemeTweaks/ThemeTweaks/Hint\": {\n            \"title\": \"$:/language/ThemeTweaks/ThemeTweaks/Hint\",\n            \"text\": \"You can tweak certain aspects of the ''Vanilla'' theme.\"\n        },\n        \"$:/language/ThemeTweaks/Options\": {\n            \"title\": \"$:/language/ThemeTweaks/Options\",\n            \"text\": \"Options\"\n        },\n        \"$:/language/ThemeTweaks/Options/SidebarLayout\": {\n            \"title\": \"$:/language/ThemeTweaks/Options/SidebarLayout\",\n            \"text\": \"Sidebar layout\"\n        },\n        \"$:/language/ThemeTweaks/Options/SidebarLayout/Fixed-Fluid\": {\n            \"title\": \"$:/language/ThemeTweaks/Options/SidebarLayout/Fixed-Fluid\",\n            \"text\": \"Fixed story, fluid sidebar\"\n        },\n        \"$:/language/ThemeTweaks/Options/SidebarLayout/Fluid-Fixed\": {\n            \"title\": \"$:/language/ThemeTweaks/Options/SidebarLayout/Fluid-Fixed\",\n            \"text\": \"Fluid story, fixed sidebar\"\n        },\n        \"$:/language/ThemeTweaks/Options/StickyTitles\": {\n            \"title\": \"$:/language/ThemeTweaks/Options/StickyTitles\",\n            \"text\": \"Sticky titles\"\n        },\n        \"$:/language/ThemeTweaks/Options/StickyTitles/Hint\": {\n            \"title\": \"$:/language/ThemeTweaks/Options/StickyTitles/Hint\",\n            \"text\": \"Causes tiddler titles to \\\"stick\\\" to the top of the browser window\"\n        },\n        \"$:/language/ThemeTweaks/Options/CodeWrapping\": {\n            \"title\": \"$:/language/ThemeTweaks/Options/CodeWrapping\",\n            \"text\": \"Wrap long lines in code blocks\"\n        },\n        \"$:/language/ThemeTweaks/Settings\": {\n            \"title\": \"$:/language/ThemeTweaks/Settings\",\n            \"text\": \"Settings\"\n        },\n        \"$:/language/ThemeTweaks/Settings/FontFamily\": {\n            \"title\": \"$:/language/ThemeTweaks/Settings/FontFamily\",\n            \"text\": \"Font family\"\n        },\n        \"$:/language/ThemeTweaks/Settings/CodeFontFamily\": {\n            \"title\": \"$:/language/ThemeTweaks/Settings/CodeFontFamily\",\n            \"text\": \"Code font family\"\n        },\n        \"$:/language/ThemeTweaks/Settings/EditorFontFamily\": {\n            \"title\": \"$:/language/ThemeTweaks/Settings/EditorFontFamily\",\n            \"text\": \"Editor font family\"\n        },\n        \"$:/language/ThemeTweaks/Settings/BackgroundImage\": {\n            \"title\": \"$:/language/ThemeTweaks/Settings/BackgroundImage\",\n            \"text\": \"Page background image\"\n        },\n        \"$:/language/ThemeTweaks/Settings/BackgroundImageAttachment\": {\n            \"title\": \"$:/language/ThemeTweaks/Settings/BackgroundImageAttachment\",\n            \"text\": \"Page background image attachment\"\n        },\n        \"$:/language/ThemeTweaks/Settings/BackgroundImageAttachment/Scroll\": {\n            \"title\": \"$:/language/ThemeTweaks/Settings/BackgroundImageAttachment/Scroll\",\n            \"text\": \"Scroll with tiddlers\"\n        },\n        \"$:/language/ThemeTweaks/Settings/BackgroundImageAttachment/Fixed\": {\n            \"title\": \"$:/language/ThemeTweaks/Settings/BackgroundImageAttachment/Fixed\",\n            \"text\": \"Fixed to window\"\n        },\n        \"$:/language/ThemeTweaks/Settings/BackgroundImageSize\": {\n            \"title\": \"$:/language/ThemeTweaks/Settings/BackgroundImageSize\",\n            \"text\": \"Page background image size\"\n        },\n        \"$:/language/ThemeTweaks/Settings/BackgroundImageSize/Auto\": {\n            \"title\": \"$:/language/ThemeTweaks/Settings/BackgroundImageSize/Auto\",\n            \"text\": \"Auto\"\n        },\n        \"$:/language/ThemeTweaks/Settings/BackgroundImageSize/Cover\": {\n            \"title\": \"$:/language/ThemeTweaks/Settings/BackgroundImageSize/Cover\",\n            \"text\": \"Cover\"\n        },\n        \"$:/language/ThemeTweaks/Settings/BackgroundImageSize/Contain\": {\n            \"title\": \"$:/language/ThemeTweaks/Settings/BackgroundImageSize/Contain\",\n            \"text\": \"Contain\"\n        },\n        \"$:/language/ThemeTweaks/Metrics\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics\",\n            \"text\": \"Sizes\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/FontSize\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/FontSize\",\n            \"text\": \"Font size\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/LineHeight\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/LineHeight\",\n            \"text\": \"Line height\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/BodyFontSize\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/BodyFontSize\",\n            \"text\": \"Font size for tiddler body\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/BodyLineHeight\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/BodyLineHeight\",\n            \"text\": \"Line height for tiddler body\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/StoryLeft\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/StoryLeft\",\n            \"text\": \"Story left position\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/StoryLeft/Hint\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/StoryLeft/Hint\",\n            \"text\": \"how far the left margin of the story river<br>(tiddler area) is from the left of the page\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/StoryTop\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/StoryTop\",\n            \"text\": \"Story top position\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/StoryTop/Hint\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/StoryTop/Hint\",\n            \"text\": \"how far the top margin of the story river<br>is from the top of the page\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/StoryRight\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/StoryRight\",\n            \"text\": \"Story right\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/StoryRight/Hint\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/StoryRight/Hint\",\n            \"text\": \"how far the left margin of the sidebar <br>is from the left of the page\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/StoryWidth\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/StoryWidth\",\n            \"text\": \"Story width\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/StoryWidth/Hint\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/StoryWidth/Hint\",\n            \"text\": \"the overall width of the story river\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/TiddlerWidth\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/TiddlerWidth\",\n            \"text\": \"Tiddler width\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/TiddlerWidth/Hint\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/TiddlerWidth/Hint\",\n            \"text\": \"within the story river\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/SidebarBreakpoint\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/SidebarBreakpoint\",\n            \"text\": \"Sidebar breakpoint\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/SidebarBreakpoint/Hint\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/SidebarBreakpoint/Hint\",\n            \"text\": \"the minimum page width at which the story<br>river and sidebar will appear side by side\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/SidebarWidth\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/SidebarWidth\",\n            \"text\": \"Sidebar width\"\n        },\n        \"$:/language/ThemeTweaks/Metrics/SidebarWidth/Hint\": {\n            \"title\": \"$:/language/ThemeTweaks/Metrics/SidebarWidth/Hint\",\n            \"text\": \"the width of the sidebar in fluid-fixed layout\"\n        },\n        \"$:/language/TiddlerInfo/Advanced/Caption\": {\n            \"title\": \"$:/language/TiddlerInfo/Advanced/Caption\",\n            \"text\": \"Advanced\"\n        },\n        \"$:/language/TiddlerInfo/Advanced/PluginInfo/Empty/Hint\": {\n            \"title\": \"$:/language/TiddlerInfo/Advanced/PluginInfo/Empty/Hint\",\n            \"text\": \"none\"\n        },\n        \"$:/language/TiddlerInfo/Advanced/PluginInfo/Heading\": {\n            \"title\": \"$:/language/TiddlerInfo/Advanced/PluginInfo/Heading\",\n            \"text\": \"Plugin Details\"\n        },\n        \"$:/language/TiddlerInfo/Advanced/PluginInfo/Hint\": {\n            \"title\": \"$:/language/TiddlerInfo/Advanced/PluginInfo/Hint\",\n            \"text\": \"This plugin contains the following shadow tiddlers:\"\n        },\n        \"$:/language/TiddlerInfo/Advanced/ShadowInfo/Heading\": {\n            \"title\": \"$:/language/TiddlerInfo/Advanced/ShadowInfo/Heading\",\n            \"text\": \"Shadow Status\"\n        },\n        \"$:/language/TiddlerInfo/Advanced/ShadowInfo/NotShadow/Hint\": {\n            \"title\": \"$:/language/TiddlerInfo/Advanced/ShadowInfo/NotShadow/Hint\",\n            \"text\": \"The tiddler <$link to=<<infoTiddler>>><$text text=<<infoTiddler>>/></$link> is not a shadow tiddler\"\n        },\n        \"$:/language/TiddlerInfo/Advanced/ShadowInfo/Shadow/Hint\": {\n            \"title\": \"$:/language/TiddlerInfo/Advanced/ShadowInfo/Shadow/Hint\",\n            \"text\": \"The tiddler <$link to=<<infoTiddler>>><$text text=<<infoTiddler>>/></$link> is a shadow tiddler\"\n        },\n        \"$:/language/TiddlerInfo/Advanced/ShadowInfo/Shadow/Source\": {\n            \"title\": \"$:/language/TiddlerInfo/Advanced/ShadowInfo/Shadow/Source\",\n            \"text\": \"It is defined in the plugin <$link to=<<pluginTiddler>>><$text text=<<pluginTiddler>>/></$link>\"\n        },\n        \"$:/language/TiddlerInfo/Advanced/ShadowInfo/OverriddenShadow/Hint\": {\n            \"title\": \"$:/language/TiddlerInfo/Advanced/ShadowInfo/OverriddenShadow/Hint\",\n            \"text\": \"It is overridden by an ordinary tiddler\"\n        },\n        \"$:/language/TiddlerInfo/Fields/Caption\": {\n            \"title\": \"$:/language/TiddlerInfo/Fields/Caption\",\n            \"text\": \"Fields\"\n        },\n        \"$:/language/TiddlerInfo/List/Caption\": {\n            \"title\": \"$:/language/TiddlerInfo/List/Caption\",\n            \"text\": \"List\"\n        },\n        \"$:/language/TiddlerInfo/List/Empty\": {\n            \"title\": \"$:/language/TiddlerInfo/List/Empty\",\n            \"text\": \"This tiddler does not have a list\"\n        },\n        \"$:/language/TiddlerInfo/Listed/Caption\": {\n            \"title\": \"$:/language/TiddlerInfo/Listed/Caption\",\n            \"text\": \"Listed\"\n        },\n        \"$:/language/TiddlerInfo/Listed/Empty\": {\n            \"title\": \"$:/language/TiddlerInfo/Listed/Empty\",\n            \"text\": \"This tiddler is not listed by any others\"\n        },\n        \"$:/language/TiddlerInfo/References/Caption\": {\n            \"title\": \"$:/language/TiddlerInfo/References/Caption\",\n            \"text\": \"Backlinks\"\n        },\n        \"$:/language/TiddlerInfo/References/Empty\": {\n            \"title\": \"$:/language/TiddlerInfo/References/Empty\",\n            \"text\": \"No tiddlers link to this one\"\n        },\n        \"$:/language/TiddlerInfo/Tagging/Caption\": {\n            \"title\": \"$:/language/TiddlerInfo/Tagging/Caption\",\n            \"text\": \"Tagging\"\n        },\n        \"$:/language/TiddlerInfo/Tagging/Empty\": {\n            \"title\": \"$:/language/TiddlerInfo/Tagging/Empty\",\n            \"text\": \"No tiddlers are tagged with this one\"\n        },\n        \"$:/language/TiddlerInfo/Tools/Caption\": {\n            \"title\": \"$:/language/TiddlerInfo/Tools/Caption\",\n            \"text\": \"Tools\"\n        },\n        \"$:/language/Docs/Types/application/javascript\": {\n            \"title\": \"$:/language/Docs/Types/application/javascript\",\n            \"description\": \"JavaScript code\",\n            \"name\": \"application/javascript\",\n            \"group\": \"Developer\",\n            \"group-sort\": \"2\"\n        },\n        \"$:/language/Docs/Types/application/json\": {\n            \"title\": \"$:/language/Docs/Types/application/json\",\n            \"description\": \"JSON data\",\n            \"name\": \"application/json\",\n            \"group\": \"Developer\",\n            \"group-sort\": \"2\"\n        },\n        \"$:/language/Docs/Types/application/x-tiddler-dictionary\": {\n            \"title\": \"$:/language/Docs/Types/application/x-tiddler-dictionary\",\n            \"description\": \"Data dictionary\",\n            \"name\": \"application/x-tiddler-dictionary\",\n            \"group\": \"Developer\",\n            \"group-sort\": \"2\"\n        },\n        \"$:/language/Docs/Types/image/gif\": {\n            \"title\": \"$:/language/Docs/Types/image/gif\",\n            \"description\": \"GIF image\",\n            \"name\": \"image/gif\",\n            \"group\": \"Image\",\n            \"group-sort\": \"1\"\n        },\n        \"$:/language/Docs/Types/image/jpeg\": {\n            \"title\": \"$:/language/Docs/Types/image/jpeg\",\n            \"description\": \"JPEG image\",\n            \"name\": \"image/jpeg\",\n            \"group\": \"Image\",\n            \"group-sort\": \"1\"\n        },\n        \"$:/language/Docs/Types/image/png\": {\n            \"title\": \"$:/language/Docs/Types/image/png\",\n            \"description\": \"PNG image\",\n            \"name\": \"image/png\",\n            \"group\": \"Image\",\n            \"group-sort\": \"1\"\n        },\n        \"$:/language/Docs/Types/image/svg+xml\": {\n            \"title\": \"$:/language/Docs/Types/image/svg+xml\",\n            \"description\": \"Structured Vector Graphics image\",\n            \"name\": \"image/svg+xml\",\n            \"group\": \"Image\",\n            \"group-sort\": \"1\"\n        },\n        \"$:/language/Docs/Types/image/x-icon\": {\n            \"title\": \"$:/language/Docs/Types/image/x-icon\",\n            \"description\": \"ICO format icon file\",\n            \"name\": \"image/x-icon\",\n            \"group\": \"Image\",\n            \"group-sort\": \"1\"\n        },\n        \"$:/language/Docs/Types/text/css\": {\n            \"title\": \"$:/language/Docs/Types/text/css\",\n            \"description\": \"Static stylesheet\",\n            \"name\": \"text/css\",\n            \"group\": \"Developer\",\n            \"group-sort\": \"2\"\n        },\n        \"$:/language/Docs/Types/text/html\": {\n            \"title\": \"$:/language/Docs/Types/text/html\",\n            \"description\": \"HTML markup\",\n            \"name\": \"text/html\",\n            \"group\": \"Text\",\n            \"group-sort\": \"0\"\n        },\n        \"$:/language/Docs/Types/text/plain\": {\n            \"title\": \"$:/language/Docs/Types/text/plain\",\n            \"description\": \"Plain text\",\n            \"name\": \"text/plain\",\n            \"group\": \"Text\",\n            \"group-sort\": \"0\"\n        },\n        \"$:/language/Docs/Types/text/vnd.tiddlywiki\": {\n            \"title\": \"$:/language/Docs/Types/text/vnd.tiddlywiki\",\n            \"description\": \"TiddlyWiki 5\",\n            \"name\": \"text/vnd.tiddlywiki\",\n            \"group\": \"Text\",\n            \"group-sort\": \"0\"\n        },\n        \"$:/language/Docs/Types/text/x-tiddlywiki\": {\n            \"title\": \"$:/language/Docs/Types/text/x-tiddlywiki\",\n            \"description\": \"TiddlyWiki Classic\",\n            \"name\": \"text/x-tiddlywiki\",\n            \"group\": \"Text\",\n            \"group-sort\": \"0\"\n        },\n        \"$:/languages/en-GB/icon\": {\n            \"title\": \"$:/languages/en-GB/icon\",\n            \"type\": \"image/svg+xml\",\n            \"text\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 60 30\\\" width=\\\"1200\\\" height=\\\"600\\\">\\n<clipPath id=\\\"t\\\">\\n\\t<path d=\\\"M30,15 h30 v15 z v15 h-30 z h-30 v-15 z v-15 h30 z\\\"/>\\n</clipPath>\\n<path d=\\\"M0,0 v30 h60 v-30 z\\\" fill=\\\"#00247d\\\"/>\\n<path d=\\\"M0,0 L60,30 M60,0 L0,30\\\" stroke=\\\"#fff\\\" stroke-width=\\\"6\\\"/>\\n<path d=\\\"M0,0 L60,30 M60,0 L0,30\\\" clip-path=\\\"url(#t)\\\" stroke=\\\"#cf142b\\\" stroke-width=\\\"4\\\"/>\\n<path d=\\\"M30,0 v30 M0,15 h60\\\" stroke=\\\"#fff\\\" stroke-width=\\\"10\\\"/>\\n<path d=\\\"M30,0 v30 M0,15 h60\\\" stroke=\\\"#cf142b\\\" stroke-width=\\\"6\\\"/>\\n</svg>\\n\"\n        },\n        \"$:/languages/en-GB\": {\n            \"title\": \"$:/languages/en-GB\",\n            \"name\": \"en-GB\",\n            \"description\": \"English (British)\",\n            \"author\": \"JeremyRuston\",\n            \"core-version\": \">=5.0.0\\\"\",\n            \"text\": \"Stub pseudo-plugin for the default language\"\n        },\n        \"$:/core/modules/commander.js\": {\n            \"title\": \"$:/core/modules/commander.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commander.js\\ntype: application/javascript\\nmodule-type: global\\n\\nThe $tw.Commander class is a command interpreter\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nParse a sequence of commands\\n\\tcommandTokens: an array of command string tokens\\n\\twiki: reference to the wiki store object\\n\\tstreams: {output:, error:}, each of which has a write(string) method\\n\\tcallback: a callback invoked as callback(err) where err is null if there was no error\\n*/\\nvar Commander = function(commandTokens,callback,wiki,streams) {\\n\\tvar path = require(\\\"path\\\");\\n\\tthis.commandTokens = commandTokens;\\n\\tthis.nextToken = 0;\\n\\tthis.callback = callback;\\n\\tthis.wiki = wiki;\\n\\tthis.streams = streams;\\n\\tthis.outputPath = path.resolve($tw.boot.wikiPath,$tw.config.wikiOutputSubDir);\\n};\\n\\n/*\\nLog a string if verbose flag is set\\n*/\\nCommander.prototype.log = function(str) {\\n\\tif(this.verbose) {\\n\\t\\tthis.streams.output.write(str + \\\"\\\\n\\\");\\n\\t}\\n};\\n\\n/*\\nWrite a string if verbose flag is set\\n*/\\nCommander.prototype.write = function(str) {\\n\\tif(this.verbose) {\\n\\t\\tthis.streams.output.write(str);\\n\\t}\\n};\\n\\n/*\\nAdd a string of tokens to the command queue\\n*/\\nCommander.prototype.addCommandTokens = function(commandTokens) {\\n\\tvar params = commandTokens.slice(0);\\n\\tparams.unshift(0);\\n\\tparams.unshift(this.nextToken);\\n\\tArray.prototype.splice.apply(this.commandTokens,params);\\n};\\n\\n/*\\nExecute the sequence of commands and invoke a callback on completion\\n*/\\nCommander.prototype.execute = function() {\\n\\tthis.executeNextCommand();\\n};\\n\\n/*\\nExecute the next command in the sequence\\n*/\\nCommander.prototype.executeNextCommand = function() {\\n\\tvar self = this;\\n\\t// Invoke the callback if there are no more commands\\n\\tif(this.nextToken >= this.commandTokens.length) {\\n\\t\\tthis.callback(null);\\n\\t} else {\\n\\t\\t// Get and check the command token\\n\\t\\tvar commandName = this.commandTokens[this.nextToken++];\\n\\t\\tif(commandName.substr(0,2) !== \\\"--\\\") {\\n\\t\\t\\tthis.callback(\\\"Missing command: \\\" + commandName);\\n\\t\\t} else {\\n\\t\\t\\tcommandName = commandName.substr(2); // Trim off the --\\n\\t\\t\\t// Accumulate the parameters to the command\\n\\t\\t\\tvar params = [];\\n\\t\\t\\twhile(this.nextToken < this.commandTokens.length && \\n\\t\\t\\t\\tthis.commandTokens[this.nextToken].substr(0,2) !== \\\"--\\\") {\\n\\t\\t\\t\\tparams.push(this.commandTokens[this.nextToken++]);\\n\\t\\t\\t}\\n\\t\\t\\t// Get the command info\\n\\t\\t\\tvar command = $tw.commands[commandName],\\n\\t\\t\\t\\tc,err;\\n\\t\\t\\tif(!command) {\\n\\t\\t\\t\\tthis.callback(\\\"Unknown command: \\\" + commandName);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif(this.verbose) {\\n\\t\\t\\t\\t\\tthis.streams.output.write(\\\"Executing command: \\\" + commandName + \\\" \\\" + params.join(\\\" \\\") + \\\"\\\\n\\\");\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t// Parse named parameters if required\\n\\t\\t\\t\\tif(command.info.namedParameterMode) {\\n\\t\\t\\t\\t\\tparams = this.extractNamedParameters(params,command.info.mandatoryParameters);\\n\\t\\t\\t\\t\\tif(typeof params === \\\"string\\\") {\\n\\t\\t\\t\\t\\t\\treturn this.callback(params);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif(command.info.synchronous) {\\n\\t\\t\\t\\t\\t// Synchronous command\\n\\t\\t\\t\\t\\tc = new command.Command(params,this);\\n\\t\\t\\t\\t\\terr = c.execute();\\n\\t\\t\\t\\t\\tif(err) {\\n\\t\\t\\t\\t\\t\\tthis.callback(err);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tthis.executeNextCommand();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t// Asynchronous command\\n\\t\\t\\t\\t\\tc = new command.Command(params,this,function(err) {\\n\\t\\t\\t\\t\\t\\tif(err) {\\n\\t\\t\\t\\t\\t\\t\\tself.callback(err);\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tself.executeNextCommand();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\terr = c.execute();\\n\\t\\t\\t\\t\\tif(err) {\\n\\t\\t\\t\\t\\t\\tthis.callback(err);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n};\\n\\n/*\\nGiven an array of parameter strings `params` in name:value format, and an array of mandatory parameter names in `mandatoryParameters`, returns a hashmap of values or a string if error\\n*/\\nCommander.prototype.extractNamedParameters = function(params,mandatoryParameters) {\\n\\tmandatoryParameters = mandatoryParameters || [];\\n\\tvar errors = [],\\n\\t\\tparamsByName = Object.create(null);\\n\\t// Extract the parameters\\n\\t$tw.utils.each(params,function(param) {\\n\\t\\tvar index = param.indexOf(\\\"=\\\");\\n\\t\\tif(index < 1) {\\n\\t\\t\\terrors.push(\\\"malformed named parameter: '\\\" + param + \\\"'\\\");\\n\\t\\t}\\n\\t\\tparamsByName[param.slice(0,index)] = $tw.utils.trim(param.slice(index+1));\\n\\t});\\n\\t// Check the mandatory parameters are present\\n\\t$tw.utils.each(mandatoryParameters,function(mandatoryParameter) {\\n\\t\\tif(!$tw.utils.hop(paramsByName,mandatoryParameter)) {\\n\\t\\t\\terrors.push(\\\"missing mandatory parameter: '\\\" + mandatoryParameter + \\\"'\\\");\\n\\t\\t}\\n\\t});\\n\\t// Return any errors\\n\\tif(errors.length > 0) {\\n\\t\\treturn errors.join(\\\" and\\\\n\\\");\\n\\t} else {\\n\\t\\treturn paramsByName;\\t\\t\\n\\t}\\n};\\n\\nCommander.initCommands = function(moduleType) {\\n\\tmoduleType = moduleType || \\\"command\\\";\\n\\t$tw.commands = {};\\n\\t$tw.modules.forEachModuleOfType(moduleType,function(title,module) {\\n\\t\\tvar c = $tw.commands[module.info.name] = {};\\n\\t\\t// Add the methods defined by the module\\n\\t\\tfor(var f in module) {\\n\\t\\t\\tif($tw.utils.hop(module,f)) {\\n\\t\\t\\t\\tc[f] = module[f];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n};\\n\\nexports.Commander = Commander;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"global\"\n        },\n        \"$:/core/modules/commands/build.js\": {\n            \"title\": \"$:/core/modules/commands/build.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/build.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to build a build target\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"build\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\t// Get the build targets defined in the wiki\\n\\tvar buildTargets = $tw.boot.wikiInfo.build;\\n\\tif(!buildTargets) {\\n\\t\\treturn \\\"No build targets defined\\\";\\n\\t}\\n\\t// Loop through each of the specified targets\\n\\tvar targets;\\n\\tif(this.params.length > 0) {\\n\\t\\ttargets = this.params;\\n\\t} else {\\n\\t\\ttargets = Object.keys(buildTargets);\\n\\t}\\n\\tfor(var targetIndex=0; targetIndex<targets.length; targetIndex++) {\\n\\t\\tvar target = targets[targetIndex],\\n\\t\\t\\tcommands = buildTargets[target];\\n\\t\\tif(!commands) {\\n\\t\\t\\treturn \\\"Build target '\\\" + target + \\\"' not found\\\";\\n\\t\\t}\\n\\t\\t// Add the commands to the queue\\n\\t\\tthis.commander.addCommandTokens(commands);\\n\\t}\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/clearpassword.js\": {\n            \"title\": \"$:/core/modules/commands/clearpassword.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/clearpassword.js\\ntype: application/javascript\\nmodule-type: command\\n\\nClear password for crypto operations\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"clearpassword\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\t$tw.crypto.setPassword(null);\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/deletetiddlers.js\": {\n            \"title\": \"$:/core/modules/commands/deletetiddlers.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/deletetiddlers.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to delete tiddlers\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"deletetiddlers\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(this.params.length < 1) {\\n\\t\\treturn \\\"Missing filter\\\";\\n\\t}\\n\\tvar self = this,\\n\\t\\twiki = this.commander.wiki,\\n\\t\\tfilter = this.params[0],\\n\\t\\ttiddlers = wiki.filterTiddlers(filter);\\n\\t$tw.utils.each(tiddlers,function(title) {\\n\\t\\twiki.deleteTiddler(title);\\n\\t});\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/editions.js\": {\n            \"title\": \"$:/core/modules/commands/editions.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/editions.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to list the available editions\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"editions\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tvar self = this;\\n\\t// Output the list\\n\\tthis.commander.streams.output.write(\\\"Available editions:\\\\n\\\\n\\\");\\n\\tvar editionInfo = $tw.utils.getEditionInfo();\\n\\t$tw.utils.each(editionInfo,function(info,name) {\\n\\t\\tself.commander.streams.output.write(\\\"    \\\" + name + \\\": \\\" + info.description + \\\"\\\\n\\\");\\n\\t});\\n\\tthis.commander.streams.output.write(\\\"\\\\n\\\");\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/fetch.js\": {\n            \"title\": \"$:/core/modules/commands/fetch.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/fetch.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommands to fetch external tiddlers\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"fetch\\\",\\n\\tsynchronous: false\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(this.params.length < 2) {\\n\\t\\treturn \\\"Missing subcommand and url\\\";\\n\\t}\\n\\tswitch(this.params[0]) {\\n\\t\\tcase \\\"raw-file\\\":\\n\\t\\t\\treturn this.fetchFiles({\\n\\t\\t\\t\\traw: true,\\n\\t\\t\\t\\turl: this.params[1],\\n\\t\\t\\t\\ttransformFilter: this.params[2] || \\\"\\\",\\n\\t\\t\\t\\tcallback: this.callback\\n\\t\\t\\t});\\n\\t\\t\\tbreak;\\n\\t\\tcase \\\"file\\\":\\n\\t\\t\\treturn this.fetchFiles({\\n\\t\\t\\t\\turl: this.params[1],\\n\\t\\t\\t\\timportFilter: this.params[2],\\n\\t\\t\\t\\ttransformFilter: this.params[3] || \\\"\\\",\\n\\t\\t\\t\\tcallback: this.callback\\n\\t\\t\\t});\\n\\t\\t\\tbreak;\\n\\t\\tcase \\\"raw-files\\\":\\n\\t\\t\\treturn this.fetchFiles({\\n\\t\\t\\t\\traw: true,\\n\\t\\t\\t\\turlFilter: this.params[1],\\n\\t\\t\\t\\ttransformFilter: this.params[2] || \\\"\\\",\\n\\t\\t\\t\\tcallback: this.callback\\n\\t\\t\\t});\\n\\t\\t\\tbreak;\\n\\t\\tcase \\\"files\\\":\\n\\t\\t\\treturn this.fetchFiles({\\n\\t\\t\\t\\turlFilter: this.params[1],\\n\\t\\t\\t\\timportFilter: this.params[2],\\n\\t\\t\\t\\ttransformFilter: this.params[3] || \\\"\\\",\\n\\t\\t\\t\\tcallback: this.callback\\n\\t\\t\\t});\\n\\t\\t\\tbreak;\\n\\t}\\n\\treturn null;\\n};\\n\\nCommand.prototype.fetchFiles = function(options) {\\n\\tvar self = this;\\n\\t// Get the list of URLs\\n\\tvar urls;\\n\\tif(options.url) {\\n\\t\\turls = [options.url]\\n\\t} else if(options.urlFilter) {\\n\\t\\turls = this.commander.wiki.filterTiddlers(options.urlFilter);\\n\\t} else {\\n\\t\\treturn \\\"Missing URL\\\";\\n\\t}\\n\\t// Process each URL in turn\\n\\tvar next = 0;\\n\\tvar getNextFile = function(err) {\\n\\t\\tif(err) {\\n\\t\\t\\treturn options.callback(err);\\n\\t\\t}\\n\\t\\tif(next < urls.length) {\\n\\t\\t\\tself.fetchFile(urls[next++],options,getNextFile);\\n\\t\\t} else {\\n\\t\\t\\toptions.callback(null);\\n\\t\\t}\\n\\t};\\n\\tgetNextFile(null);\\n\\t// Success\\n\\treturn null;\\n};\\n\\nCommand.prototype.fetchFile = function(url,options,callback,redirectCount) {\\n\\tif(redirectCount > 10) {\\n\\t\\treturn callback(\\\"Error too many redirects retrieving \\\" + url);\\n\\t}\\n\\tvar self = this,\\n\\t\\tlib = url.substr(0,8) === \\\"https://\\\" ? require(\\\"https\\\") : require(\\\"http\\\");\\n\\tlib.get(url).on(\\\"response\\\",function(response) {\\n\\t    var type = (response.headers[\\\"content-type\\\"] || \\\"\\\").split(\\\";\\\")[0],\\n\\t    \\tdata = [];\\n\\t    self.commander.write(\\\"Reading \\\" + url + \\\": \\\");\\n\\t    response.on(\\\"data\\\",function(chunk) {\\n\\t        data.push(chunk);\\n\\t        self.commander.write(\\\".\\\");\\n\\t    });\\n\\t    response.on(\\\"end\\\",function() {\\n\\t        self.commander.write(\\\"\\\\n\\\");\\n\\t        if(response.statusCode === 200) {\\n\\t\\t        self.processBody(Buffer.concat(data),type,options,url);\\n\\t\\t        callback(null);\\n\\t        } else {\\n\\t        \\tif(response.statusCode === 302 || response.statusCode === 303 || response.statusCode === 307) {\\n\\t        \\t\\treturn self.fetchFile(response.headers.location,options,callback,redirectCount + 1);\\n\\t        \\t} else {\\n\\t\\t        \\treturn callback(\\\"Error \\\" + response.statusCode + \\\" retrieving \\\" + url)\\t        \\t\\t\\n\\t        \\t}\\n\\t        }\\n\\t   \\t});\\n\\t   \\tresponse.on(\\\"error\\\",function(e) {\\n\\t\\t\\tconsole.log(\\\"Error on GET request: \\\" + e);\\n\\t\\t\\tcallback(e);\\n\\t   \\t});\\n\\t});\\n\\treturn null;\\n};\\n\\nCommand.prototype.processBody = function(body,type,options,url) {\\n\\tvar self = this;\\n\\t// Collect the tiddlers in a wiki\\n\\tvar incomingWiki = new $tw.Wiki();\\n\\tif(options.raw) {\\n\\t\\tvar typeInfo = type ? $tw.config.contentTypeInfo[type] : null,\\n\\t\\t\\tencoding = typeInfo ? typeInfo.encoding : \\\"utf8\\\";\\n\\t\\tincomingWiki.addTiddler(new $tw.Tiddler({\\n\\t\\t\\ttitle: url,\\n\\t\\t\\ttype: type,\\n\\t\\t\\ttext: body.toString(encoding)\\n\\t\\t}));\\n\\t} else {\\n\\t\\t// Deserialise the file to extract the tiddlers\\n\\t\\tvar tiddlers = this.commander.wiki.deserializeTiddlers(type || \\\"text/html\\\",body.toString(\\\"utf8\\\"),{});\\n\\t\\t$tw.utils.each(tiddlers,function(tiddler) {\\n\\t\\t\\tincomingWiki.addTiddler(new $tw.Tiddler(tiddler));\\n\\t\\t});\\n\\t}\\n\\t// Filter the tiddlers to select the ones we want\\n\\tvar filteredTitles = incomingWiki.filterTiddlers(options.importFilter || \\\"[all[tiddlers]]\\\");\\n\\t// Import the selected tiddlers\\n\\tvar count = 0;\\n\\tincomingWiki.each(function(tiddler,title) {\\n\\t\\tif(filteredTitles.indexOf(title) !== -1) {\\n\\t\\t\\tvar newTiddler;\\n\\t\\t\\tif(options.transformFilter) {\\n\\t\\t\\t\\tvar transformedTitle = (incomingWiki.filterTiddlers(options.transformFilter,null,self.commander.wiki.makeTiddlerIterator([title])) || [\\\"\\\"])[0];\\n\\t\\t\\t\\tif(transformedTitle) {\\n\\t\\t\\t\\t\\tself.commander.log(\\\"Importing \\\" + title + \\\" as \\\" + transformedTitle)\\n\\t\\t\\t\\t\\tnewTiddler = new $tw.Tiddler(tiddler,{title: transformedTitle});\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tself.commander.log(\\\"Importing \\\" + title)\\n\\t\\t\\t\\tnewTiddler = tiddler;\\n\\t\\t\\t}\\n\\t\\t\\tself.commander.wiki.importTiddler(newTiddler);\\n\\t\\t\\tcount++;\\n\\t\\t}\\n\\t});\\n\\tself.commander.log(\\\"Imported \\\" + count + \\\" tiddlers\\\")\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/help.js\": {\n            \"title\": \"$:/core/modules/commands/help.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/help.js\\ntype: application/javascript\\nmodule-type: command\\n\\nHelp command\\n\\n\\\\*/\\n(function(){\\n\\n/*jshint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"help\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tvar subhelp = this.params[0] || \\\"default\\\",\\n\\t\\thelpBase = \\\"$:/language/Help/\\\",\\n\\t\\ttext;\\n\\tif(!this.commander.wiki.getTiddler(helpBase + subhelp)) {\\n\\t\\tsubhelp = \\\"notfound\\\";\\n\\t}\\n\\t// Wikify the help as formatted text (ie block elements generate newlines)\\n\\ttext = this.commander.wiki.renderTiddler(\\\"text/plain-formatted\\\",helpBase + subhelp);\\n\\t// Remove any leading linebreaks\\n\\ttext = text.replace(/^(\\\\r?\\\\n)*/g,\\\"\\\");\\n\\tthis.commander.streams.output.write(text);\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/import.js\": {\n            \"title\": \"$:/core/modules/commands/import.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/import.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to import tiddlers from a file\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"import\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tvar self = this,\\n\\t\\tfs = require(\\\"fs\\\"),\\n\\t\\tpath = require(\\\"path\\\");\\n\\tif(this.params.length < 2) {\\n\\t\\treturn \\\"Missing parameters\\\";\\n\\t}\\n\\tvar filename = self.params[0],\\n\\t\\tdeserializer = self.params[1],\\n\\t\\ttitle = self.params[2] || filename,\\n\\t\\tencoding = self.params[3] || \\\"utf8\\\",\\n\\t\\ttext = fs.readFileSync(filename,encoding),\\n\\t\\ttiddlers = this.commander.wiki.deserializeTiddlers(null,text,{title: title},{deserializer: deserializer});\\n\\t$tw.utils.each(tiddlers,function(tiddler) {\\n\\t\\tself.commander.wiki.importTiddler(new $tw.Tiddler(tiddler));\\n\\t});\\n\\tthis.commander.log(tiddlers.length + \\\" tiddler(s) imported\\\");\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/init.js\": {\n            \"title\": \"$:/core/modules/commands/init.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/init.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to initialise an empty wiki folder\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"init\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tvar fs = require(\\\"fs\\\"),\\n\\t\\tpath = require(\\\"path\\\");\\n\\t// Check that we don't already have a valid wiki folder\\n\\tif($tw.boot.wikiTiddlersPath || ($tw.utils.isDirectory($tw.boot.wikiPath) && !$tw.utils.isDirectoryEmpty($tw.boot.wikiPath))) {\\n\\t\\treturn \\\"Wiki folder is not empty\\\";\\n\\t}\\n\\t// Loop through each of the specified editions\\n\\tvar editions = this.params.length > 0 ? this.params : [\\\"empty\\\"];\\n\\tfor(var editionIndex=0; editionIndex<editions.length; editionIndex++) {\\n\\t\\tvar editionName = editions[editionIndex];\\n\\t\\t// Check the edition exists\\n\\t\\tvar editionPath = $tw.findLibraryItem(editionName,$tw.getLibraryItemSearchPaths($tw.config.editionsPath,$tw.config.editionsEnvVar));\\n\\t\\tif(!$tw.utils.isDirectory(editionPath)) {\\n\\t\\t\\treturn \\\"Edition '\\\" + editionName + \\\"' not found\\\";\\n\\t\\t}\\n\\t\\t// Copy the edition content\\n\\t\\tvar err = $tw.utils.copyDirectory(editionPath,$tw.boot.wikiPath);\\n\\t\\tif(!err) {\\n\\t\\t\\tthis.commander.streams.output.write(\\\"Copied edition '\\\" + editionName + \\\"' to \\\" + $tw.boot.wikiPath + \\\"\\\\n\\\");\\n\\t\\t} else {\\n\\t\\t\\treturn err;\\n\\t\\t}\\n\\t}\\n\\t// Tweak the tiddlywiki.info to remove any included wikis\\n\\tvar packagePath = $tw.boot.wikiPath + \\\"/tiddlywiki.info\\\",\\n\\t\\tpackageJson = JSON.parse(fs.readFileSync(packagePath));\\n\\tdelete packageJson.includeWikis;\\n\\tfs.writeFileSync(packagePath,JSON.stringify(packageJson,null,$tw.config.preferences.jsonSpaces));\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/listen.js\": {\n            \"title\": \"$:/core/modules/commands/listen.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/listen.js\\ntype: application/javascript\\nmodule-type: command\\n\\nListen for HTTP requests and serve tiddlers\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar Server = require(\\\"$:/core/modules/server/server.js\\\").Server;\\n\\nexports.info = {\\n\\tname: \\\"listen\\\",\\n\\tsynchronous: true,\\n\\tnamedParameterMode: true,\\n\\tmandatoryParameters: [],\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tvar self = this;\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tvar self = this;\\n\\tif(!$tw.boot.wikiTiddlersPath) {\\n\\t\\t$tw.utils.warning(\\\"Warning: Wiki folder '\\\" + $tw.boot.wikiPath + \\\"' does not exist or is missing a tiddlywiki.info file\\\");\\n\\t}\\n\\t// Set up server\\n\\tthis.server = new Server({\\n\\t\\twiki: this.commander.wiki,\\n\\t\\tvariables: self.params\\n\\t});\\n\\tvar nodeServer = this.server.listen();\\n\\t$tw.hooks.invokeHook(\\\"th-server-command-post-start\\\",this.server,nodeServer,\\\"tiddlywiki\\\");\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/load.js\": {\n            \"title\": \"$:/core/modules/commands/load.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/load.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to load tiddlers from a file or directory\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"load\\\",\\n\\tsynchronous: false\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tvar self = this,\\n\\t\\tfs = require(\\\"fs\\\"),\\n\\t\\tpath = require(\\\"path\\\");\\n\\tif(this.params.length < 1) {\\n\\t\\treturn \\\"Missing filename\\\";\\n\\t}\\n\\tvar tiddlers = $tw.loadTiddlersFromPath(self.params[0]),\\n\\t\\tcount = 0;\\n\\t$tw.utils.each(tiddlers,function(tiddlerInfo) {\\n\\t\\t$tw.utils.each(tiddlerInfo.tiddlers,function(tiddler) {\\n\\t\\t\\tself.commander.wiki.importTiddler(new $tw.Tiddler(tiddler));\\n\\t\\t\\tcount++;\\n\\t\\t});\\n\\t});\\n\\tif(!count && self.params[1] !== \\\"noerror\\\") {\\n\\t\\tself.callback(\\\"No tiddlers found in file \\\\\\\"\\\" + self.params[0] + \\\"\\\\\\\"\\\");\\n\\t} else {\\n\\t\\tself.callback(null);\\n\\t}\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/makelibrary.js\": {\n            \"title\": \"$:/core/modules/commands/makelibrary.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/makelibrary.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to pack all of the plugins in the library into a plugin tiddler of type \\\"library\\\"\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"makelibrary\\\",\\n\\tsynchronous: true\\n};\\n\\nvar UPGRADE_LIBRARY_TITLE = \\\"$:/UpgradeLibrary\\\";\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tvar wiki = this.commander.wiki,\\n\\t\\tfs = require(\\\"fs\\\"),\\n\\t\\tpath = require(\\\"path\\\"),\\n\\t\\tupgradeLibraryTitle = this.params[0] || UPGRADE_LIBRARY_TITLE,\\n\\t\\ttiddlers = {};\\n\\t// Collect up the library plugins\\n\\tvar collectPlugins = function(folder) {\\n\\t\\t\\tvar pluginFolders = $tw.utils.getSubdirectories(folder) || [];\\n\\t\\t\\tfor(var p=0; p<pluginFolders.length; p++) {\\n\\t\\t\\t\\tif(!$tw.boot.excludeRegExp.test(pluginFolders[p])) {\\n\\t\\t\\t\\t\\tpluginFields = $tw.loadPluginFolder(path.resolve(folder,\\\"./\\\" + pluginFolders[p]));\\n\\t\\t\\t\\t\\tif(pluginFields && pluginFields.title) {\\n\\t\\t\\t\\t\\t\\ttiddlers[pluginFields.title] = pluginFields;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tcollectPublisherPlugins = function(folder) {\\n\\t\\t\\tvar publisherFolders = $tw.utils.getSubdirectories(folder) || [];\\n\\t\\t\\tfor(var t=0; t<publisherFolders.length; t++) {\\n\\t\\t\\t\\tif(!$tw.boot.excludeRegExp.test(publisherFolders[t])) {\\n\\t\\t\\t\\t\\tcollectPlugins(path.resolve(folder,\\\"./\\\" + publisherFolders[t]));\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t$tw.utils.each($tw.getLibraryItemSearchPaths($tw.config.pluginsPath,$tw.config.pluginsEnvVar),collectPublisherPlugins);\\n\\t$tw.utils.each($tw.getLibraryItemSearchPaths($tw.config.themesPath,$tw.config.themesEnvVar),collectPublisherPlugins);\\n\\t$tw.utils.each($tw.getLibraryItemSearchPaths($tw.config.languagesPath,$tw.config.languagesEnvVar),collectPlugins);\\n\\t// Save the upgrade library tiddler\\n\\tvar pluginFields = {\\n\\t\\ttitle: upgradeLibraryTitle,\\n\\t\\ttype: \\\"application/json\\\",\\n\\t\\t\\\"plugin-type\\\": \\\"library\\\",\\n\\t\\t\\\"text\\\": JSON.stringify({tiddlers: tiddlers})\\n\\t};\\n\\twiki.addTiddler(new $tw.Tiddler(pluginFields));\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/output.js\": {\n            \"title\": \"$:/core/modules/commands/output.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/output.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to set the default output location (defaults to current working directory)\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"output\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tvar fs = require(\\\"fs\\\"),\\n\\t\\tpath = require(\\\"path\\\");\\n\\tif(this.params.length < 1) {\\n\\t\\treturn \\\"Missing output path\\\";\\n\\t}\\n\\tthis.commander.outputPath = path.resolve(process.cwd(),this.params[0]);\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/password.js\": {\n            \"title\": \"$:/core/modules/commands/password.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/password.js\\ntype: application/javascript\\nmodule-type: command\\n\\nSave password for crypto operations\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"password\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(this.params.length < 1) {\\n\\t\\treturn \\\"Missing password\\\";\\n\\t}\\n\\t$tw.crypto.setPassword(this.params[0]);\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/render.js\": {\n            \"title\": \"$:/core/modules/commands/render.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/render.js\\ntype: application/javascript\\nmodule-type: command\\n\\nRender individual tiddlers and save the results to the specified files\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar widget = require(\\\"$:/core/modules/widgets/widget.js\\\");\\n\\nexports.info = {\\n\\tname: \\\"render\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(this.params.length < 1) {\\n\\t\\treturn \\\"Missing tiddler filter\\\";\\n\\t}\\n\\tvar self = this,\\n\\t\\tfs = require(\\\"fs\\\"),\\n\\t\\tpath = require(\\\"path\\\"),\\n\\t\\twiki = this.commander.wiki,\\n\\t\\ttiddlerFilter = this.params[0],\\n\\t\\tfilenameFilter = this.params[1] || \\\"[is[tiddler]addsuffix[.html]]\\\",\\n\\t\\ttype = this.params[2] || \\\"text/html\\\",\\n\\t\\ttemplate = this.params[3],\\n\\t\\tvarName = this.params[4],\\n\\t\\tvarValue = this.params[5],\\n\\t\\ttiddlers = wiki.filterTiddlers(tiddlerFilter);\\n\\t$tw.utils.each(tiddlers,function(title) {\\n\\t\\tvar parser = wiki.parseTiddler(template || title),\\n\\t\\t\\tvariables = {currentTiddler: title};\\n\\t\\tif(varName) {\\n\\t\\t\\tvariables[varName] = varValue || \\\"\\\";\\n\\t\\t}\\n\\t\\tvar widgetNode = wiki.makeWidget(parser,{variables: variables}),\\n\\t\\t\\tcontainer = $tw.fakeDocument.createElement(\\\"div\\\");\\n\\t\\twidgetNode.render(container,null);\\n\\t\\tvar text = type === \\\"text/html\\\" ? container.innerHTML : container.textContent,\\n\\t\\t\\tfilepath = path.resolve(self.commander.outputPath,wiki.filterTiddlers(filenameFilter,$tw.rootWidget,wiki.makeTiddlerIterator([title]))[0]);\\n\\t\\tif(self.commander.verbose) {\\n\\t\\t\\tconsole.log(\\\"Rendering \\\\\\\"\\\" + title + \\\"\\\\\\\" to \\\\\\\"\\\" + filepath + \\\"\\\\\\\"\\\");\\n\\t\\t}\\n\\t\\t$tw.utils.createFileDirectories(filepath);\\n\\t\\tfs.writeFileSync(filepath,text,\\\"utf8\\\");\\n\\t});\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/rendertiddler.js\": {\n            \"title\": \"$:/core/modules/commands/rendertiddler.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/rendertiddler.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to render a tiddler and save it to a file\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"rendertiddler\\\",\\n\\tsynchronous: false\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(this.params.length < 2) {\\n\\t\\treturn \\\"Missing filename\\\";\\n\\t}\\n\\tvar self = this,\\n\\t\\tfs = require(\\\"fs\\\"),\\n\\t\\tpath = require(\\\"path\\\"),\\n\\t\\ttitle = this.params[0],\\n\\t\\tfilename = path.resolve(this.commander.outputPath,this.params[1]),\\n\\t\\ttype = this.params[2] || \\\"text/html\\\",\\n\\t\\ttemplate = this.params[3],\\n\\t\\tname = this.params[4],\\n\\t\\tvalue = this.params[5],\\n\\t\\tvariables = {};\\n\\t$tw.utils.createFileDirectories(filename);\\n\\tif(template) {\\n\\t\\tvariables.currentTiddler = title;\\n\\t\\ttitle = template;\\n\\t}\\n\\tif(name && value) {\\n\\t\\tvariables[name] = value;\\n\\t}\\n\\tfs.writeFile(filename,this.commander.wiki.renderTiddler(type,title,{variables: variables}),\\\"utf8\\\",function(err) {\\n\\t\\tself.callback(err);\\n\\t});\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/rendertiddlers.js\": {\n            \"title\": \"$:/core/modules/commands/rendertiddlers.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/rendertiddlers.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to render several tiddlers to a folder of files\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar widget = require(\\\"$:/core/modules/widgets/widget.js\\\");\\n\\nexports.info = {\\n\\tname: \\\"rendertiddlers\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(this.params.length < 2) {\\n\\t\\treturn \\\"Missing filename\\\";\\n\\t}\\n\\tvar self = this,\\n\\t\\tfs = require(\\\"fs\\\"),\\n\\t\\tpath = require(\\\"path\\\"),\\n\\t\\twiki = this.commander.wiki,\\n\\t\\tfilter = this.params[0],\\n\\t\\ttemplate = this.params[1],\\n\\t\\toutputPath = this.commander.outputPath,\\n\\t\\tpathname = path.resolve(outputPath,this.params[2]),\\t\\t\\n\\t\\ttype = this.params[3] || \\\"text/html\\\",\\n\\t\\textension = this.params[4] || \\\".html\\\",\\n\\t\\tdeleteDirectory = (this.params[5] || \\\"\\\").toLowerCase() !== \\\"noclean\\\",\\n\\t\\ttiddlers = wiki.filterTiddlers(filter);\\n\\tif(deleteDirectory) {\\n\\t\\t$tw.utils.deleteDirectory(pathname);\\n\\t}\\n\\t$tw.utils.each(tiddlers,function(title) {\\n\\t\\tvar parser = wiki.parseTiddler(template),\\n\\t\\t\\twidgetNode = wiki.makeWidget(parser,{variables: {currentTiddler: title}}),\\n\\t\\t\\tcontainer = $tw.fakeDocument.createElement(\\\"div\\\");\\n\\t\\twidgetNode.render(container,null);\\n\\t\\tvar text = type === \\\"text/html\\\" ? container.innerHTML : container.textContent,\\n\\t\\t\\texportPath = null;\\n\\t\\tif($tw.utils.hop($tw.macros,\\\"tv-get-export-path\\\")) {\\n\\t\\t\\tvar macroPath = $tw.macros[\\\"tv-get-export-path\\\"].run.apply(self,[title]);\\n\\t\\t\\tif(macroPath) {\\n\\t\\t\\t\\texportPath = path.resolve(outputPath,macroPath + extension);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tvar finalPath = exportPath || path.resolve(pathname,encodeURIComponent(title) + extension);\\n\\t\\t$tw.utils.createFileDirectories(finalPath);\\n\\t\\tfs.writeFileSync(finalPath,text,\\\"utf8\\\");\\n\\t});\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/save.js\": {\n            \"title\": \"$:/core/modules/commands/save.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/save.js\\ntype: application/javascript\\nmodule-type: command\\n\\nSaves individual tiddlers in their raw text or binary format to the specified files\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"save\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(this.params.length < 1) {\\n\\t\\treturn \\\"Missing filename filter\\\";\\n\\t}\\n\\tvar self = this,\\n\\t\\tfs = require(\\\"fs\\\"),\\n\\t\\tpath = require(\\\"path\\\"),\\n\\t\\twiki = this.commander.wiki,\\n\\t\\ttiddlerFilter = this.params[0],\\n\\t\\tfilenameFilter = this.params[1] || \\\"[is[tiddler]]\\\",\\n\\t\\ttiddlers = wiki.filterTiddlers(tiddlerFilter);\\n\\t$tw.utils.each(tiddlers,function(title) {\\n\\t\\tvar tiddler = self.commander.wiki.getTiddler(title),\\n\\t\\t\\ttype = tiddler.fields.type || \\\"text/vnd.tiddlywiki\\\",\\n\\t\\t\\tcontentTypeInfo = $tw.config.contentTypeInfo[type] || {encoding: \\\"utf8\\\"},\\n\\t\\t\\tfilepath = path.resolve(self.commander.outputPath,wiki.filterTiddlers(filenameFilter,$tw.rootWidget,wiki.makeTiddlerIterator([title]))[0]);\\n\\t\\tif(self.commander.verbose) {\\n\\t\\t\\tconsole.log(\\\"Saving \\\\\\\"\\\" + title + \\\"\\\\\\\" to \\\\\\\"\\\" + filepath + \\\"\\\\\\\"\\\");\\n\\t\\t}\\n\\t\\t$tw.utils.createFileDirectories(filepath);\\n\\t\\tfs.writeFileSync(filepath,tiddler.fields.text,contentTypeInfo.encoding);\\n\\t});\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/savelibrarytiddlers.js\": {\n            \"title\": \"$:/core/modules/commands/savelibrarytiddlers.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/savelibrarytiddlers.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to save the subtiddlers of a bundle tiddler as a series of JSON files\\n\\n--savelibrarytiddlers <tiddler> <tiddler-filter> <pathname> <skinnylisting>\\n\\nThe tiddler identifies the bundle tiddler that contains the subtiddlers.\\n\\nThe tiddler filter specifies the plugins to be included.\\n\\nThe pathname specifies the pathname to the folder in which the JSON files should be saved. The filename is the URL encoded title of the subtiddler.\\n\\nThe skinnylisting specifies the title of the tiddler to which a JSON catalogue of the subtiddlers will be saved. The JSON file contains the same data as the bundle tiddler but with the `text` field removed.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"savelibrarytiddlers\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(this.params.length < 2) {\\n\\t\\treturn \\\"Missing filename\\\";\\n\\t}\\n\\tvar self = this,\\n\\t\\tfs = require(\\\"fs\\\"),\\n\\t\\tpath = require(\\\"path\\\"),\\n\\t\\tcontainerTitle = this.params[0],\\n\\t\\tfilter = this.params[1],\\n\\t\\tbasepath = this.params[2],\\n\\t\\tskinnyListTitle = this.params[3];\\n\\t// Get the container tiddler as data\\n\\tvar containerData = self.commander.wiki.getTiddlerDataCached(containerTitle,undefined);\\n\\tif(!containerData) {\\n\\t\\treturn \\\"'\\\" + containerTitle + \\\"' is not a tiddler bundle\\\";\\n\\t}\\n\\t// Filter the list of plugins\\n\\tvar pluginList = [];\\n\\t$tw.utils.each(containerData.tiddlers,function(tiddler,title) {\\n\\t\\tpluginList.push(title);\\n\\t});\\n\\tvar filteredPluginList;\\n\\tif(filter) {\\n\\t\\tfilteredPluginList = self.commander.wiki.filterTiddlers(filter,null,self.commander.wiki.makeTiddlerIterator(pluginList));\\n\\t} else {\\n\\t\\tfilteredPluginList = pluginList;\\n\\t}\\n\\t// Iterate through the plugins\\n\\tvar skinnyList = [];\\n\\t$tw.utils.each(filteredPluginList,function(title) {\\n\\t\\tvar tiddler = containerData.tiddlers[title];\\n\\t\\t// Save each JSON file and collect the skinny data\\n\\t\\tvar pathname = path.resolve(self.commander.outputPath,basepath + encodeURIComponent(title) + \\\".json\\\");\\n\\t\\t$tw.utils.createFileDirectories(pathname);\\n\\t\\tfs.writeFileSync(pathname,JSON.stringify(tiddler),\\\"utf8\\\");\\n\\t\\t// Collect the skinny list data\\n\\t\\tvar pluginTiddlers = JSON.parse(tiddler.text),\\n\\t\\t\\treadmeContent = (pluginTiddlers.tiddlers[title + \\\"/readme\\\"] || {}).text,\\n\\t\\t\\tdoesRequireReload = !!self.commander.wiki.doesPluginInfoRequireReload(pluginTiddlers),\\n\\t\\t\\ticonTiddler = pluginTiddlers.tiddlers[title + \\\"/icon\\\"] || {},\\n\\t\\t\\ticonType = iconTiddler.type,\\n\\t\\t\\ticonText = iconTiddler.text,\\n\\t\\t\\ticonContent;\\n\\t\\tif(iconType && iconText) {\\n\\t\\t\\ticonContent = $tw.utils.makeDataUri(iconText,iconType);\\n\\t\\t}\\n\\t\\tskinnyList.push($tw.utils.extend({},tiddler,{\\n\\t\\t\\ttext: undefined,\\n\\t\\t\\treadme: readmeContent,\\n\\t\\t\\t\\\"requires-reload\\\": doesRequireReload ? \\\"yes\\\" : \\\"no\\\",\\n\\t\\t\\ticon: iconContent\\n\\t\\t}));\\n\\t});\\n\\t// Save the catalogue tiddler\\n\\tif(skinnyListTitle) {\\n\\t\\tself.commander.wiki.setTiddlerData(skinnyListTitle,skinnyList);\\n\\t}\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/savetiddler.js\": {\n            \"title\": \"$:/core/modules/commands/savetiddler.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/savetiddler.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to save the content of a tiddler to a file\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"savetiddler\\\",\\n\\tsynchronous: false\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(this.params.length < 2) {\\n\\t\\treturn \\\"Missing filename\\\";\\n\\t}\\n\\tvar self = this,\\n\\t\\tfs = require(\\\"fs\\\"),\\n\\t\\tpath = require(\\\"path\\\"),\\n\\t\\ttitle = this.params[0],\\n\\t\\tfilename = path.resolve(this.commander.outputPath,this.params[1]),\\n\\t\\ttiddler = this.commander.wiki.getTiddler(title);\\n\\tif(tiddler) {\\n\\t\\tvar type = tiddler.fields.type || \\\"text/vnd.tiddlywiki\\\",\\n\\t\\t\\tcontentTypeInfo = $tw.config.contentTypeInfo[type] || {encoding: \\\"utf8\\\"};\\n\\t\\t$tw.utils.createFileDirectories(filename);\\n\\t\\tfs.writeFile(filename,tiddler.fields.text,contentTypeInfo.encoding,function(err) {\\n\\t\\t\\tself.callback(err);\\n\\t\\t});\\n\\t} else {\\n\\t\\treturn \\\"Missing tiddler: \\\" + title;\\n\\t}\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/savetiddlers.js\": {\n            \"title\": \"$:/core/modules/commands/savetiddlers.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/savetiddlers.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to save several tiddlers to a folder of files\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar widget = require(\\\"$:/core/modules/widgets/widget.js\\\");\\n\\nexports.info = {\\n\\tname: \\\"savetiddlers\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(this.params.length < 1) {\\n\\t\\treturn \\\"Missing filename\\\";\\n\\t}\\n\\tvar self = this,\\n\\t\\tfs = require(\\\"fs\\\"),\\n\\t\\tpath = require(\\\"path\\\"),\\n\\t\\twiki = this.commander.wiki,\\n\\t\\tfilter = this.params[0],\\n\\t\\tpathname = path.resolve(this.commander.outputPath,this.params[1]),\\n\\t\\tdeleteDirectory = (this.params[2] || \\\"\\\").toLowerCase() !== \\\"noclean\\\",\\n\\t\\ttiddlers = wiki.filterTiddlers(filter);\\n\\tif(deleteDirectory) {\\n\\t\\t$tw.utils.deleteDirectory(pathname);\\n\\t}\\n\\t$tw.utils.createDirectory(pathname);\\n\\t$tw.utils.each(tiddlers,function(title) {\\n\\t\\tvar tiddler = self.commander.wiki.getTiddler(title),\\n\\t\\t\\ttype = tiddler.fields.type || \\\"text/vnd.tiddlywiki\\\",\\n\\t\\t\\tcontentTypeInfo = $tw.config.contentTypeInfo[type] || {encoding: \\\"utf8\\\"},\\n\\t\\t\\tfilename = path.resolve(pathname,encodeURIComponent(title));\\n\\t\\tfs.writeFileSync(filename,tiddler.fields.text,contentTypeInfo.encoding);\\n\\t});\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/savewikifolder.js\": {\n            \"title\": \"$:/core/modules/commands/savewikifolder.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/savewikifolder.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to save the current wiki as a wiki folder\\n\\n--savewikifolder <wikifolderpath> [<filter>]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"savewikifolder\\\",\\n\\tsynchronous: true\\n};\\n\\nvar fs,path;\\nif($tw.node) {\\n\\tfs = require(\\\"fs\\\");\\n\\tpath = require(\\\"path\\\");\\n}\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(this.params.length < 1) {\\n\\t\\treturn \\\"Missing wiki folder path\\\";\\n\\t}\\n\\tvar wikifoldermaker = new WikiFolderMaker(this.params[0],this.params[1],this.commander);\\n\\treturn wikifoldermaker.save();\\n};\\n\\nfunction WikiFolderMaker(wikiFolderPath,wikiFilter,commander) {\\n\\tthis.wikiFolderPath = wikiFolderPath;\\n\\tthis.wikiFilter = wikiFilter || \\\"[all[tiddlers]]\\\";\\n\\tthis.commander = commander;\\n\\tthis.wiki = commander.wiki;\\n\\tthis.savedPaths = []; // So that we can detect filename clashes\\n}\\n\\nWikiFolderMaker.prototype.log = function(str) {\\n\\tif(this.commander.verbose) {\\n\\t\\tconsole.log(str);\\n\\t}\\n};\\n\\nWikiFolderMaker.prototype.tiddlersToIgnore = [\\n\\t\\\"$:/boot/boot.css\\\",\\n\\t\\\"$:/boot/boot.js\\\",\\n\\t\\\"$:/boot/bootprefix.js\\\",\\n\\t\\\"$:/core\\\",\\n\\t\\\"$:/library/sjcl.js\\\",\\n\\t\\\"$:/temp/info-plugin\\\"\\n];\\n\\n/*\\nReturns null if successful, or an error string if there was an error\\n*/\\nWikiFolderMaker.prototype.save = function() {\\n\\tvar self = this;\\n\\t// Check that the output directory doesn't exist\\n\\tif(fs.existsSync(this.wikiFolderPath) && !$tw.utils.isDirectoryEmpty(this.wikiFolderPath)) {\\n\\t\\treturn \\\"The unpackwiki command requires that the output wiki folder be empty\\\";\\n\\t}\\n\\t// Get the tiddlers from the source wiki\\n\\tvar tiddlerTitles = this.wiki.filterTiddlers(this.wikiFilter);\\n\\t// Initialise a new tiddlwiki.info file\\n\\tvar newWikiInfo = {};\\n\\t// Process each incoming tiddler in turn\\n\\t$tw.utils.each(tiddlerTitles,function(title) {\\n\\t\\tvar tiddler = self.wiki.getTiddler(title);\\n\\t\\tif(tiddler) {\\n\\t\\t\\tif(self.tiddlersToIgnore.indexOf(title) !== -1) {\\n\\t\\t\\t\\t// Ignore the core plugin and the ephemeral info plugin\\n\\t\\t\\t\\tself.log(\\\"Ignoring tiddler: \\\" + title);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tvar type = tiddler.fields.type,\\n\\t\\t\\t\\t\\tpluginType = tiddler.fields[\\\"plugin-type\\\"];\\n\\t\\t\\t\\tif(type === \\\"application/json\\\" && pluginType) {\\n\\t\\t\\t\\t\\t// Plugin tiddler\\n\\t\\t\\t\\t\\tvar libraryDetails = self.findPluginInLibrary(title);\\n\\t\\t\\t\\t\\tif(libraryDetails) {\\n\\t\\t\\t\\t\\t\\t// A plugin from the core library\\n\\t\\t\\t\\t\\t\\tself.log(\\\"Adding built-in plugin: \\\" + libraryDetails.name);\\n\\t\\t\\t\\t\\t\\tnewWikiInfo[libraryDetails.type] = newWikiInfo[libraryDetails.type]  || [];\\n\\t\\t\\t\\t\\t\\t$tw.utils.pushTop(newWikiInfo[libraryDetails.type],libraryDetails.name);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t// A custom plugin\\n\\t\\t\\t\\t\\t\\tself.log(\\\"Processing custom plugin: \\\" + title);\\n\\t\\t\\t\\t\\t\\tself.saveCustomPlugin(tiddler);\\n\\t\\t\\t\\t\\t}\\t\\t\\t\\t\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t// Ordinary tiddler\\n\\t\\t\\t\\t\\tself.saveTiddler(\\\"tiddlers\\\",tiddler);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n\\t// Save the tiddlywiki.info file\\n\\tthis.saveJSONFile(\\\"tiddlywiki.info\\\",newWikiInfo);\\n\\tself.log(\\\"Writing tiddlywiki.info: \\\" + JSON.stringify(newWikiInfo,null,$tw.config.preferences.jsonSpaces));\\n\\treturn null;\\n};\\n\\n/*\\nTest whether the specified tiddler is a plugin in the plugin library\\n*/\\nWikiFolderMaker.prototype.findPluginInLibrary = function(title) {\\n\\tvar parts = title.split(\\\"/\\\"),\\n\\t\\tpluginPath, type, name;\\n\\tif(parts[0] === \\\"$:\\\") {\\n\\t\\tif(parts[1] === \\\"languages\\\" && parts.length === 3) {\\n\\t\\t\\tpluginPath = \\\"languages\\\" + path.sep + parts[2];\\n\\t\\t\\ttype = parts[1];\\n\\t\\t\\tname = parts[2];\\n\\t\\t} else if(parts[1] === \\\"plugins\\\" || parts[1] === \\\"themes\\\" && parts.length === 4) {\\n\\t\\t\\tpluginPath = parts[1] + path.sep + parts[2] + path.sep + parts[3];\\n\\t\\t\\ttype = parts[1];\\n\\t\\t\\tname = parts[2] + \\\"/\\\" + parts[3];\\n\\t\\t}\\n\\t}\\n\\tif(pluginPath && type && name) {\\n\\t\\tpluginPath = path.resolve($tw.boot.bootPath,\\\"..\\\",pluginPath);\\n\\t\\tif(fs.existsSync(pluginPath)) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tpluginPath: pluginPath,\\n\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\tname: name\\n\\t\\t\\t};\\n\\t\\t}\\n\\t}\\n\\treturn false;\\n};\\n\\nWikiFolderMaker.prototype.saveCustomPlugin = function(pluginTiddler) {\\n\\tvar self = this,\\n\\t\\tpluginTitle = pluginTiddler.fields.title,\\n\\t\\ttitleParts = pluginTitle.split(\\\"/\\\"),\\n\\t\\tdirectory = $tw.utils.generateTiddlerFilepath(titleParts[titleParts.length - 1],{\\n\\t\\t\\tdirectory: path.resolve(this.wikiFolderPath,pluginTiddler.fields[\\\"plugin-type\\\"] + \\\"s\\\")\\n\\t\\t}),\\n\\t\\tpluginInfo = pluginTiddler.getFieldStrings({exclude: [\\\"text\\\",\\\"type\\\"]});\\n\\tthis.saveJSONFile(directory + path.sep + \\\"plugin.info\\\",pluginInfo);\\n\\tself.log(\\\"Writing \\\" + directory + path.sep + \\\"plugin.info: \\\" + JSON.stringify(pluginInfo,null,$tw.config.preferences.jsonSpaces));\\n\\tvar pluginTiddlers = JSON.parse(pluginTiddler.fields.text).tiddlers; // A hashmap of tiddlers in the plugin\\n\\t$tw.utils.each(pluginTiddlers,function(tiddler) {\\n\\t\\tself.saveTiddler(directory,new $tw.Tiddler(tiddler));\\n\\t});\\n};\\n\\nWikiFolderMaker.prototype.saveTiddler = function(directory,tiddler) {\\n\\tvar fileInfo = $tw.utils.generateTiddlerFileInfo(tiddler,{\\n\\t\\tdirectory: path.resolve(this.wikiFolderPath,directory),\\n\\t\\twiki: this.wiki\\n\\t});\\n\\t$tw.utils.saveTiddlerToFileSync(tiddler,fileInfo);\\n};\\n\\nWikiFolderMaker.prototype.saveJSONFile = function(filename,json) {\\n\\tthis.saveTextFile(filename,JSON.stringify(json,null,$tw.config.preferences.jsonSpaces));\\n};\\n\\nWikiFolderMaker.prototype.saveTextFile = function(filename,data) {\\n\\tthis.saveFile(filename,\\\"utf8\\\",data);\\n};\\n\\nWikiFolderMaker.prototype.saveFile = function(filename,encoding,data) {\\n\\tvar filepath = path.resolve(this.wikiFolderPath,filename);\\n\\t$tw.utils.createFileDirectories(filepath);\\n\\tfs.writeFileSync(filepath,data,encoding);\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/server.js\": {\n            \"title\": \"$:/core/modules/commands/server.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/server.js\\ntype: application/javascript\\nmodule-type: command\\n\\nDeprecated legacy command for serving tiddlers\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar Server = require(\\\"$:/core/modules/server/server.js\\\").Server;\\n\\nexports.info = {\\n\\tname: \\\"server\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tvar self = this;\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(!$tw.boot.wikiTiddlersPath) {\\n\\t\\t$tw.utils.warning(\\\"Warning: Wiki folder '\\\" + $tw.boot.wikiPath + \\\"' does not exist or is missing a tiddlywiki.info file\\\");\\n\\t}\\n\\t// Set up server\\n\\tthis.server = new Server({\\n\\t\\twiki: this.commander.wiki,\\n\\t\\tvariables: {\\n\\t\\t\\tport: this.params[0],\\n\\t\\t\\thost: this.params[6],\\n\\t\\t\\t\\\"root-tiddler\\\": this.params[1],\\n\\t\\t\\t\\\"root-render-type\\\": this.params[2],\\n\\t\\t\\t\\\"root-serve-type\\\": this.params[3],\\n\\t\\t\\tusername: this.params[4],\\n\\t\\t\\tpassword: this.params[5],\\n\\t\\t\\t\\\"path-prefix\\\": this.params[7],\\n\\t\\t\\t\\\"debug-level\\\": this.params[8]\\n\\t\\t}\\n\\t});\\n\\tvar nodeServer = this.server.listen();\\n\\t$tw.hooks.invokeHook(\\\"th-server-command-post-start\\\",this.server,nodeServer,\\\"tiddlywiki\\\");\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/setfield.js\": {\n            \"title\": \"$:/core/modules/commands/setfield.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/setfield.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to modify selected tiddlers to set a field to the text of a template tiddler that has been wikified with the selected tiddler as the current tiddler.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar widget = require(\\\"$:/core/modules/widgets/widget.js\\\");\\n\\nexports.info = {\\n\\tname: \\\"setfield\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(this.params.length < 4) {\\n\\t\\treturn \\\"Missing parameters\\\";\\n\\t}\\n\\tvar self = this,\\n\\t\\twiki = this.commander.wiki,\\n\\t\\tfilter = this.params[0],\\n\\t\\tfieldname = this.params[1] || \\\"text\\\",\\n\\t\\ttemplatetitle = this.params[2],\\n\\t\\trendertype = this.params[3] || \\\"text/plain\\\",\\n\\t\\ttiddlers = wiki.filterTiddlers(filter);\\n\\t$tw.utils.each(tiddlers,function(title) {\\n\\t\\tvar parser = wiki.parseTiddler(templatetitle),\\n\\t\\t\\tnewFields = {},\\n\\t\\t\\ttiddler = wiki.getTiddler(title);\\n\\t\\tif(parser) {\\n\\t\\t\\tvar widgetNode = wiki.makeWidget(parser,{variables: {currentTiddler: title}});\\n\\t\\t\\tvar container = $tw.fakeDocument.createElement(\\\"div\\\");\\n\\t\\t\\twidgetNode.render(container,null);\\n\\t\\t\\tnewFields[fieldname] = rendertype === \\\"text/html\\\" ? container.innerHTML : container.textContent;\\n\\t\\t} else {\\n\\t\\t\\tnewFields[fieldname] = undefined;\\n\\t\\t}\\n\\t\\twiki.addTiddler(new $tw.Tiddler(tiddler,newFields));\\n\\t});\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/unpackplugin.js\": {\n            \"title\": \"$:/core/modules/commands/unpackplugin.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/unpackplugin.js\\ntype: application/javascript\\nmodule-type: command\\n\\nCommand to extract the shadow tiddlers from within a plugin\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"unpackplugin\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander,callback) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n\\tthis.callback = callback;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tif(this.params.length < 1) {\\n\\t\\treturn \\\"Missing plugin name\\\";\\n\\t}\\n\\tvar self = this,\\n\\t\\ttitle = this.params[0],\\n\\t\\tpluginData = this.commander.wiki.getTiddlerDataCached(title);\\n\\tif(!pluginData) {\\n\\t\\treturn \\\"Plugin '\\\" + title + \\\"' not found\\\";\\n\\t}\\n\\t$tw.utils.each(pluginData.tiddlers,function(tiddler) {\\n\\t\\tself.commander.wiki.addTiddler(new $tw.Tiddler(tiddler));\\n\\t});\\n\\treturn null;\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/verbose.js\": {\n            \"title\": \"$:/core/modules/commands/verbose.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/verbose.js\\ntype: application/javascript\\nmodule-type: command\\n\\nVerbose command\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"verbose\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tthis.commander.verbose = true;\\n\\t// Output the boot message log\\n\\tthis.commander.streams.output.write(\\\"Boot log:\\\\n  \\\" + $tw.boot.logMessages.join(\\\"\\\\n  \\\") + \\\"\\\\n\\\");\\n\\treturn null; // No error\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/version.js\": {\n            \"title\": \"$:/core/modules/commands/version.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/version.js\\ntype: application/javascript\\nmodule-type: command\\n\\nVersion command\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.info = {\\n\\tname: \\\"version\\\",\\n\\tsynchronous: true\\n};\\n\\nvar Command = function(params,commander) {\\n\\tthis.params = params;\\n\\tthis.commander = commander;\\n};\\n\\nCommand.prototype.execute = function() {\\n\\tthis.commander.streams.output.write($tw.version + \\\"\\\\n\\\");\\n\\treturn null; // No error\\n};\\n\\nexports.Command = Command;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/config.js\": {\n            \"title\": \"$:/core/modules/config.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/config.js\\ntype: application/javascript\\nmodule-type: config\\n\\nCore configuration constants\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.preferences = {};\\n\\nexports.preferences.notificationDuration = 3 * 1000;\\nexports.preferences.jsonSpaces = 4;\\n\\nexports.textPrimitives = {\\n\\tupperLetter: \\\"[A-Z\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00de\\\\u0150\\\\u0170]\\\",\\n\\tlowerLetter: \\\"[a-z\\\\u00df-\\\\u00f6\\\\u00f8-\\\\u00ff\\\\u0151\\\\u0171]\\\",\\n\\tanyLetter:   \\\"[A-Za-z0-9\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00de\\\\u00df-\\\\u00f6\\\\u00f8-\\\\u00ff\\\\u0150\\\\u0170\\\\u0151\\\\u0171]\\\",\\n\\tblockPrefixLetters:\\t\\\"[A-Za-z0-9-_\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00de\\\\u00df-\\\\u00f6\\\\u00f8-\\\\u00ff\\\\u0150\\\\u0170\\\\u0151\\\\u0171]\\\"\\n};\\n\\nexports.textPrimitives.unWikiLink = \\\"~\\\";\\nexports.textPrimitives.wikiLink = exports.textPrimitives.upperLetter + \\\"+\\\" +\\n\\texports.textPrimitives.lowerLetter + \\\"+\\\" +\\n\\texports.textPrimitives.upperLetter +\\n\\texports.textPrimitives.anyLetter + \\\"*\\\";\\n\\nexports.htmlEntities = {quot:34, amp:38, apos:39, lt:60, gt:62, nbsp:160, iexcl:161, cent:162, pound:163, curren:164, yen:165, brvbar:166, sect:167, uml:168, copy:169, ordf:170, laquo:171, not:172, shy:173, reg:174, macr:175, deg:176, plusmn:177, sup2:178, sup3:179, acute:180, micro:181, para:182, middot:183, cedil:184, sup1:185, ordm:186, raquo:187, frac14:188, frac12:189, frac34:190, iquest:191, Agrave:192, Aacute:193, Acirc:194, Atilde:195, Auml:196, Aring:197, AElig:198, Ccedil:199, Egrave:200, Eacute:201, Ecirc:202, Euml:203, Igrave:204, Iacute:205, Icirc:206, Iuml:207, ETH:208, Ntilde:209, Ograve:210, Oacute:211, Ocirc:212, Otilde:213, Ouml:214, times:215, Oslash:216, Ugrave:217, Uacute:218, Ucirc:219, Uuml:220, Yacute:221, THORN:222, szlig:223, agrave:224, aacute:225, acirc:226, atilde:227, auml:228, aring:229, aelig:230, ccedil:231, egrave:232, eacute:233, ecirc:234, euml:235, igrave:236, iacute:237, icirc:238, iuml:239, eth:240, ntilde:241, ograve:242, oacute:243, ocirc:244, otilde:245, ouml:246, divide:247, oslash:248, ugrave:249, uacute:250, ucirc:251, uuml:252, yacute:253, thorn:254, yuml:255, OElig:338, oelig:339, Scaron:352, scaron:353, Yuml:376, fnof:402, circ:710, tilde:732, Alpha:913, Beta:914, Gamma:915, Delta:916, Epsilon:917, Zeta:918, Eta:919, Theta:920, Iota:921, Kappa:922, Lambda:923, Mu:924, Nu:925, Xi:926, Omicron:927, Pi:928, Rho:929, Sigma:931, Tau:932, Upsilon:933, Phi:934, Chi:935, Psi:936, Omega:937, alpha:945, beta:946, gamma:947, delta:948, epsilon:949, zeta:950, eta:951, theta:952, iota:953, kappa:954, lambda:955, mu:956, nu:957, xi:958, omicron:959, pi:960, rho:961, sigmaf:962, sigma:963, tau:964, upsilon:965, phi:966, chi:967, psi:968, omega:969, thetasym:977, upsih:978, piv:982, ensp:8194, emsp:8195, thinsp:8201, zwnj:8204, zwj:8205, lrm:8206, rlm:8207, ndash:8211, mdash:8212, lsquo:8216, rsquo:8217, sbquo:8218, ldquo:8220, rdquo:8221, bdquo:8222, dagger:8224, Dagger:8225, bull:8226, hellip:8230, permil:8240, prime:8242, Prime:8243, lsaquo:8249, rsaquo:8250, oline:8254, frasl:8260, euro:8364, image:8465, weierp:8472, real:8476, trade:8482, alefsym:8501, larr:8592, uarr:8593, rarr:8594, darr:8595, harr:8596, crarr:8629, lArr:8656, uArr:8657, rArr:8658, dArr:8659, hArr:8660, forall:8704, part:8706, exist:8707, empty:8709, nabla:8711, isin:8712, notin:8713, ni:8715, prod:8719, sum:8721, minus:8722, lowast:8727, radic:8730, prop:8733, infin:8734, ang:8736, and:8743, or:8744, cap:8745, cup:8746, int:8747, there4:8756, sim:8764, cong:8773, asymp:8776, ne:8800, equiv:8801, le:8804, ge:8805, sub:8834, sup:8835, nsub:8836, sube:8838, supe:8839, oplus:8853, otimes:8855, perp:8869, sdot:8901, lceil:8968, rceil:8969, lfloor:8970, rfloor:8971, lang:9001, rang:9002, loz:9674, spades:9824, clubs:9827, hearts:9829, diams:9830 };\\n\\nexports.htmlVoidElements = \\\"area,base,br,col,command,embed,hr,img,input,keygen,link,meta,param,source,track,wbr\\\".split(\\\",\\\");\\n\\nexports.htmlBlockElements = \\\"address,article,aside,audio,blockquote,canvas,dd,div,dl,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,li,noscript,ol,output,p,pre,section,table,tfoot,ul,video\\\".split(\\\",\\\");\\n\\nexports.htmlUnsafeElements = \\\"script\\\".split(\\\",\\\");\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"config\"\n        },\n        \"$:/core/modules/deserializers.js\": {\n            \"title\": \"$:/core/modules/deserializers.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/deserializers.js\\ntype: application/javascript\\nmodule-type: tiddlerdeserializer\\n\\nFunctions to deserialise tiddlers from a block of text\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nUtility function to parse an old-style tiddler DIV in a *.tid file. It looks like this:\\n\\n<div title=\\\"Title\\\" creator=\\\"JoeBloggs\\\" modifier=\\\"JoeBloggs\\\" created=\\\"201102111106\\\" modified=\\\"201102111310\\\" tags=\\\"myTag [[my long tag]]\\\">\\n<pre>The text of the tiddler (without the expected HTML encoding).\\n</pre>\\n</div>\\n\\nNote that the field attributes are HTML encoded, but that the body of the <PRE> tag is not encoded.\\n\\nWhen these tiddler DIVs are encountered within a TiddlyWiki HTML file then the body is encoded in the usual way.\\n*/\\nvar parseTiddlerDiv = function(text /* [,fields] */) {\\n\\t// Slot together the default results\\n\\tvar result = {};\\n\\tif(arguments.length > 1) {\\n\\t\\tfor(var f=1; f<arguments.length; f++) {\\n\\t\\t\\tvar fields = arguments[f];\\n\\t\\t\\tfor(var t in fields) {\\n\\t\\t\\t\\tresult[t] = fields[t];\\t\\t\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\t// Parse the DIV body\\n\\tvar startRegExp = /^\\\\s*<div\\\\s+([^>]*)>(\\\\s*<pre>)?/gi,\\n\\t\\tendRegExp,\\n\\t\\tmatch = startRegExp.exec(text);\\n\\tif(match) {\\n\\t\\t// Old-style DIVs don't have the <pre> tag\\n\\t\\tif(match[2]) {\\n\\t\\t\\tendRegExp = /<\\\\/pre>\\\\s*<\\\\/div>\\\\s*$/gi;\\n\\t\\t} else {\\n\\t\\t\\tendRegExp = /<\\\\/div>\\\\s*$/gi;\\n\\t\\t}\\n\\t\\tvar endMatch = endRegExp.exec(text);\\n\\t\\tif(endMatch) {\\n\\t\\t\\t// Extract the text\\n\\t\\t\\tresult.text = text.substring(match.index + match[0].length,endMatch.index);\\n\\t\\t\\t// Process the attributes\\n\\t\\t\\tvar attrRegExp = /\\\\s*([^=\\\\s]+)\\\\s*=\\\\s*(?:\\\"([^\\\"]*)\\\"|'([^']*)')/gi,\\n\\t\\t\\t\\tattrMatch;\\n\\t\\t\\tdo {\\n\\t\\t\\t\\tattrMatch = attrRegExp.exec(match[1]);\\n\\t\\t\\t\\tif(attrMatch) {\\n\\t\\t\\t\\t\\tvar name = attrMatch[1];\\n\\t\\t\\t\\t\\tvar value = attrMatch[2] !== undefined ? attrMatch[2] : attrMatch[3];\\n\\t\\t\\t\\t\\tresult[name] = value;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} while(attrMatch);\\n\\t\\t\\treturn result;\\n\\t\\t}\\n\\t}\\n\\treturn undefined;\\n};\\n\\nexports[\\\"application/x-tiddler-html-div\\\"] = function(text,fields) {\\n\\treturn [parseTiddlerDiv(text,fields)];\\n};\\n\\nexports[\\\"application/json\\\"] = function(text,fields) {\\n\\tvar incoming,\\n\\t\\tresults = [];\\n\\ttry {\\n\\t\\tincoming = JSON.parse(text);\\n\\t} catch(e) {\\n\\t\\tincoming = [{\\n\\t\\t\\ttitle: \\\"JSON error: \\\" + e,\\n\\t\\t\\ttext: \\\"\\\"\\n\\t\\t}]\\n\\t}\\n\\tif(!$tw.utils.isArray(incoming)) {\\n\\t\\tincoming = [incoming];\\n\\t}\\n\\tfor(var t=0; t<incoming.length; t++) {\\n\\t\\tvar incomingFields = incoming[t],\\n\\t\\t\\tfields = {};\\n\\t\\tfor(var f in incomingFields) {\\n\\t\\t\\tif(typeof incomingFields[f] === \\\"string\\\") {\\n\\t\\t\\t\\tfields[f] = incomingFields[f];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tresults.push(fields);\\n\\t}\\n\\treturn results;\\n};\\n\\n/*\\nParse an HTML file into tiddlers. There are three possibilities:\\n# A TiddlyWiki classic HTML file containing `text/x-tiddlywiki` tiddlers\\n# A TiddlyWiki5 HTML file containing `text/vnd.tiddlywiki` tiddlers\\n# An ordinary HTML file\\n*/\\nexports[\\\"text/html\\\"] = function(text,fields) {\\n\\t// Check if we've got a store area\\n\\tvar storeAreaMarkerRegExp = /<div id=[\\\"']?storeArea['\\\"]?( style=[\\\"']?display:none;[\\\"']?)?>/gi,\\n\\t\\tmatch = storeAreaMarkerRegExp.exec(text);\\n\\tif(match) {\\n\\t\\t// If so, it's either a classic TiddlyWiki file or an unencrypted TW5 file\\n\\t\\t// First read the normal tiddlers\\n\\t\\tvar results = deserializeTiddlyWikiFile(text,storeAreaMarkerRegExp.lastIndex,!!match[1],fields);\\n\\t\\t// Then any system tiddlers\\n\\t\\tvar systemAreaMarkerRegExp = /<div id=[\\\"']?systemArea['\\\"]?( style=[\\\"']?display:none;[\\\"']?)?>/gi,\\n\\t\\t\\tsysMatch = systemAreaMarkerRegExp.exec(text);\\n\\t\\tif(sysMatch) {\\n\\t\\t\\tresults.push.apply(results,deserializeTiddlyWikiFile(text,systemAreaMarkerRegExp.lastIndex,!!sysMatch[1],fields));\\n\\t\\t}\\n\\t\\treturn results;\\n\\t} else {\\n\\t\\t// Check whether we've got an encrypted file\\n\\t\\tvar encryptedStoreArea = $tw.utils.extractEncryptedStoreArea(text);\\n\\t\\tif(encryptedStoreArea) {\\n\\t\\t\\t// If so, attempt to decrypt it using the current password\\n\\t\\t\\treturn $tw.utils.decryptStoreArea(encryptedStoreArea);\\n\\t\\t} else {\\n\\t\\t\\t// It's not a TiddlyWiki so we'll return the entire HTML file as a tiddler\\n\\t\\t\\treturn deserializeHtmlFile(text,fields);\\n\\t\\t}\\n\\t}\\n};\\n\\nfunction deserializeHtmlFile(text,fields) {\\n\\tvar result = {};\\n\\t$tw.utils.each(fields,function(value,name) {\\n\\t\\tresult[name] = value;\\n\\t});\\n\\tresult.text = text;\\n\\tresult.type = \\\"text/html\\\";\\n\\treturn [result];\\n}\\n\\nfunction deserializeTiddlyWikiFile(text,storeAreaEnd,isTiddlyWiki5,fields) {\\n\\tvar results = [],\\n\\t\\tendOfDivRegExp = /(<\\\\/div>\\\\s*)/gi,\\n\\t\\tstartPos = storeAreaEnd,\\n\\t\\tdefaultType = isTiddlyWiki5 ? undefined : \\\"text/x-tiddlywiki\\\";\\n\\tendOfDivRegExp.lastIndex = startPos;\\n\\tvar match = endOfDivRegExp.exec(text);\\n\\twhile(match) {\\n\\t\\tvar endPos = endOfDivRegExp.lastIndex,\\n\\t\\t\\ttiddlerFields = parseTiddlerDiv(text.substring(startPos,endPos),fields,{type: defaultType});\\n\\t\\tif(!tiddlerFields) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t\\t$tw.utils.each(tiddlerFields,function(value,name) {\\n\\t\\t\\tif(typeof value === \\\"string\\\") {\\n\\t\\t\\t\\ttiddlerFields[name] = $tw.utils.htmlDecode(value);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\tif(tiddlerFields.text !== null) {\\n\\t\\t\\tresults.push(tiddlerFields);\\n\\t\\t}\\n\\t\\tstartPos = endPos;\\n\\t\\tmatch = endOfDivRegExp.exec(text);\\n\\t}\\n\\treturn results;\\n}\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"tiddlerdeserializer\"\n        },\n        \"$:/core/modules/editor/engines/framed.js\": {\n            \"title\": \"$:/core/modules/editor/engines/framed.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/engines/framed.js\\ntype: application/javascript\\nmodule-type: library\\n\\nText editor engine based on a simple input or textarea within an iframe. This is done so that the selection is preserved even when clicking away from the textarea\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true,browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar HEIGHT_VALUE_TITLE = \\\"$:/config/TextEditor/EditorHeight/Height\\\";\\n\\nfunction FramedEngine(options) {\\n\\t// Save our options\\n\\toptions = options || {};\\n\\tthis.widget = options.widget;\\n\\tthis.value = options.value;\\n\\tthis.parentNode = options.parentNode;\\n\\tthis.nextSibling = options.nextSibling;\\n\\t// Create our hidden dummy text area for reading styles\\n\\tthis.dummyTextArea = this.widget.document.createElement(\\\"textarea\\\");\\n\\tif(this.widget.editClass) {\\n\\t\\tthis.dummyTextArea.className = this.widget.editClass;\\n\\t}\\n\\tthis.dummyTextArea.setAttribute(\\\"hidden\\\",\\\"true\\\");\\n\\tthis.parentNode.insertBefore(this.dummyTextArea,this.nextSibling);\\n\\tthis.widget.domNodes.push(this.dummyTextArea);\\n\\t// Create the iframe\\n\\tthis.iframeNode = this.widget.document.createElement(\\\"iframe\\\");\\n\\tthis.parentNode.insertBefore(this.iframeNode,this.nextSibling);\\n\\tthis.iframeDoc = this.iframeNode.contentWindow.document;\\n\\t// (Firefox requires us to put some empty content in the iframe)\\n\\tthis.iframeDoc.open();\\n\\tthis.iframeDoc.write(\\\"\\\");\\n\\tthis.iframeDoc.close();\\n\\t// Style the iframe\\n\\tthis.iframeNode.className = this.dummyTextArea.className;\\n\\tthis.iframeNode.style.border = \\\"none\\\";\\n\\tthis.iframeNode.style.padding = \\\"0\\\";\\n\\tthis.iframeNode.style.resize = \\\"none\\\";\\n\\tthis.iframeDoc.body.style.margin = \\\"0\\\";\\n\\tthis.iframeDoc.body.style.padding = \\\"0\\\";\\n\\tthis.widget.domNodes.push(this.iframeNode);\\n\\t// Construct the textarea or input node\\n\\tvar tag = this.widget.editTag;\\n\\tif($tw.config.htmlUnsafeElements.indexOf(tag) !== -1) {\\n\\t\\ttag = \\\"input\\\";\\n\\t}\\n\\tthis.domNode = this.iframeDoc.createElement(tag);\\n\\t// Set the text\\n\\tif(this.widget.editTag === \\\"textarea\\\") {\\n\\t\\tthis.domNode.appendChild(this.iframeDoc.createTextNode(this.value));\\n\\t} else {\\n\\t\\tthis.domNode.value = this.value;\\n\\t}\\n\\t// Set the attributes\\n\\tif(this.widget.editType) {\\n\\t\\tthis.domNode.setAttribute(\\\"type\\\",this.widget.editType);\\n\\t}\\n\\tif(this.widget.editPlaceholder) {\\n\\t\\tthis.domNode.setAttribute(\\\"placeholder\\\",this.widget.editPlaceholder);\\n\\t}\\n\\tif(this.widget.editSize) {\\n\\t\\tthis.domNode.setAttribute(\\\"size\\\",this.widget.editSize);\\n\\t}\\n\\tif(this.widget.editRows) {\\n\\t\\tthis.domNode.setAttribute(\\\"rows\\\",this.widget.editRows);\\n\\t}\\n\\tif(this.widget.editTabIndex) {\\n\\t\\tthis.iframeNode.setAttribute(\\\"tabindex\\\",this.widget.editTabIndex);\\n\\t}\\n\\tif(this.widget.editAutoComplete) {\\n\\t\\tthis.domNode.setAttribute(\\\"autocomplete\\\",this.widget.editAutoComplete);\\n\\t}\\n\\tif(this.widget.isDisabled === \\\"yes\\\") {\\n\\t\\tthis.domNode.setAttribute(\\\"disabled\\\",true);\\n\\t}\\t\\n\\t// Copy the styles from the dummy textarea\\n\\tthis.copyStyles();\\n\\t// Add event listeners\\n\\t$tw.utils.addEventListeners(this.domNode,[\\n\\t\\t{name: \\\"click\\\",handlerObject: this,handlerMethod: \\\"handleClickEvent\\\"},\\n\\t\\t{name: \\\"input\\\",handlerObject: this,handlerMethod: \\\"handleInputEvent\\\"},\\n\\t\\t{name: \\\"keydown\\\",handlerObject: this.widget,handlerMethod: \\\"handleKeydownEvent\\\"},\\n\\t\\t{name: \\\"focus\\\",handlerObject: this,handlerMethod: \\\"handleFocusEvent\\\"}\\n\\t]);\\n\\t// Insert the element into the DOM\\n\\tthis.iframeDoc.body.appendChild(this.domNode);\\n}\\n\\n/*\\nCopy styles from the dummy text area to the textarea in the iframe\\n*/\\nFramedEngine.prototype.copyStyles = function() {\\n\\t// Copy all styles\\n\\t$tw.utils.copyStyles(this.dummyTextArea,this.domNode);\\n\\t// Override the ones that should not be set the same as the dummy textarea\\n\\tthis.domNode.style.display = \\\"block\\\";\\n\\tthis.domNode.style.width = \\\"100%\\\";\\n\\tthis.domNode.style.margin = \\\"0\\\";\\n\\t// In Chrome setting -webkit-text-fill-color overrides the placeholder text colour\\n\\tthis.domNode.style[\\\"-webkit-text-fill-color\\\"] = \\\"currentcolor\\\";\\n};\\n\\n/*\\nSet the text of the engine if it doesn't currently have focus\\n*/\\nFramedEngine.prototype.setText = function(text,type) {\\n\\tif(!this.domNode.isTiddlyWikiFakeDom) {\\n\\t\\tif(this.domNode.ownerDocument.activeElement !== this.domNode) {\\n\\t\\t\\tthis.updateDomNodeText(text);\\n\\t\\t}\\n\\t\\t// Fix the height if needed\\n\\t\\tthis.fixHeight();\\n\\t}\\n};\\n\\n/*\\nUpdate the DomNode with the new text\\n*/\\nFramedEngine.prototype.updateDomNodeText = function(text) {\\n\\tthis.domNode.value = text;\\n};\\n\\n/*\\nGet the text of the engine\\n*/\\nFramedEngine.prototype.getText = function() {\\n\\treturn this.domNode.value;\\n};\\n\\n/*\\nFix the height of textarea to fit content\\n*/\\nFramedEngine.prototype.fixHeight = function() {\\n\\t// Make sure styles are updated\\n\\tthis.copyStyles();\\n\\t// Adjust height\\n\\tif(this.widget.editTag === \\\"textarea\\\") {\\n\\t\\tif(this.widget.editAutoHeight) {\\n\\t\\t\\tif(this.domNode && !this.domNode.isTiddlyWikiFakeDom) {\\n\\t\\t\\t\\tvar newHeight = $tw.utils.resizeTextAreaToFit(this.domNode,this.widget.editMinHeight);\\n\\t\\t\\t\\tthis.iframeNode.style.height = (newHeight + 14) + \\\"px\\\"; // +14 for the border on the textarea\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tvar fixedHeight = parseInt(this.widget.wiki.getTiddlerText(HEIGHT_VALUE_TITLE,\\\"400px\\\"),10);\\n\\t\\t\\tfixedHeight = Math.max(fixedHeight,20);\\n\\t\\t\\tthis.domNode.style.height = fixedHeight + \\\"px\\\";\\n\\t\\t\\tthis.iframeNode.style.height = (fixedHeight + 14) + \\\"px\\\";\\n\\t\\t}\\n\\t}\\n};\\n\\n/*\\nFocus the engine node\\n*/\\nFramedEngine.prototype.focus  = function() {\\n\\tif(this.domNode.focus && this.domNode.select) {\\n\\t\\tthis.domNode.focus();\\n\\t\\tthis.domNode.select();\\n\\t}\\n};\\n\\n/*\\nHandle a focus event\\n*/\\nFramedEngine.prototype.handleFocusEvent = function(event) {\\n\\tif(this.widget.editCancelPopups) {\\n\\t\\t$tw.popup.cancel(0);\\t\\n\\t}\\n};\\n\\n/*\\nHandle a click\\n*/\\nFramedEngine.prototype.handleClickEvent = function(event) {\\n\\tthis.fixHeight();\\n\\treturn true;\\n};\\n\\n/*\\nHandle a dom \\\"input\\\" event which occurs when the text has changed\\n*/\\nFramedEngine.prototype.handleInputEvent = function(event) {\\n\\tthis.widget.saveChanges(this.getText());\\n\\tthis.fixHeight();\\n\\tif(this.widget.editInputActions) {\\n\\t\\tthis.widget.invokeActionString(this.widget.editInputActions);\\n\\t}\\n\\treturn true;\\n};\\n\\n/*\\nCreate a blank structure representing a text operation\\n*/\\nFramedEngine.prototype.createTextOperation = function() {\\n\\tvar operation = {\\n\\t\\ttext: this.domNode.value,\\n\\t\\tselStart: this.domNode.selectionStart,\\n\\t\\tselEnd: this.domNode.selectionEnd,\\n\\t\\tcutStart: null,\\n\\t\\tcutEnd: null,\\n\\t\\treplacement: null,\\n\\t\\tnewSelStart: null,\\n\\t\\tnewSelEnd: null\\n\\t};\\n\\toperation.selection = operation.text.substring(operation.selStart,operation.selEnd);\\n\\treturn operation;\\n};\\n\\n/*\\nExecute a text operation\\n*/\\nFramedEngine.prototype.executeTextOperation = function(operation) {\\n\\t// Perform the required changes to the text area and the underlying tiddler\\n\\tvar newText = operation.text;\\n\\tif(operation.replacement !== null) {\\n\\t\\tnewText = operation.text.substring(0,operation.cutStart) + operation.replacement + operation.text.substring(operation.cutEnd);\\n\\t\\t// Attempt to use a execCommand to modify the value of the control\\n\\t\\tif(this.iframeDoc.queryCommandSupported(\\\"insertText\\\") && this.iframeDoc.queryCommandSupported(\\\"delete\\\") && !$tw.browser.isFirefox) {\\n\\t\\t\\tthis.domNode.focus();\\n\\t\\t\\tthis.domNode.setSelectionRange(operation.cutStart,operation.cutEnd);\\n\\t\\t\\tif(operation.replacement === \\\"\\\") {\\n\\t\\t\\t\\tthis.iframeDoc.execCommand(\\\"delete\\\",false,\\\"\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tthis.iframeDoc.execCommand(\\\"insertText\\\",false,operation.replacement);\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tthis.domNode.value = newText;\\n\\t\\t}\\n\\t\\tthis.domNode.focus();\\n\\t\\tthis.domNode.setSelectionRange(operation.newSelStart,operation.newSelEnd);\\n\\t}\\n\\tthis.domNode.focus();\\n\\treturn newText;\\n};\\n\\nexports.FramedEngine = FramedEngine;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/core/modules/editor/engines/simple.js\": {\n            \"title\": \"$:/core/modules/editor/engines/simple.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/engines/simple.js\\ntype: application/javascript\\nmodule-type: library\\n\\nText editor engine based on a simple input or textarea tag\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar HEIGHT_VALUE_TITLE = \\\"$:/config/TextEditor/EditorHeight/Height\\\";\\n\\nfunction SimpleEngine(options) {\\n\\t// Save our options\\n\\toptions = options || {};\\n\\tthis.widget = options.widget;\\n\\tthis.value = options.value;\\n\\tthis.parentNode = options.parentNode;\\n\\tthis.nextSibling = options.nextSibling;\\n\\t// Construct the textarea or input node\\n\\tvar tag = this.widget.editTag;\\n\\tif($tw.config.htmlUnsafeElements.indexOf(tag) !== -1) {\\n\\t\\ttag = \\\"input\\\";\\n\\t}\\n\\tthis.domNode = this.widget.document.createElement(tag);\\n\\t// Set the text\\n\\tif(this.widget.editTag === \\\"textarea\\\") {\\n\\t\\tthis.domNode.appendChild(this.widget.document.createTextNode(this.value));\\n\\t} else {\\n\\t\\tthis.domNode.value = this.value;\\n\\t}\\n\\t// Set the attributes\\n\\tif(this.widget.editType) {\\n\\t\\tthis.domNode.setAttribute(\\\"type\\\",this.widget.editType);\\n\\t}\\n\\tif(this.widget.editPlaceholder) {\\n\\t\\tthis.domNode.setAttribute(\\\"placeholder\\\",this.widget.editPlaceholder);\\n\\t}\\n\\tif(this.widget.editSize) {\\n\\t\\tthis.domNode.setAttribute(\\\"size\\\",this.widget.editSize);\\n\\t}\\n\\tif(this.widget.editRows) {\\n\\t\\tthis.domNode.setAttribute(\\\"rows\\\",this.widget.editRows);\\n\\t}\\n\\tif(this.widget.editClass) {\\n\\t\\tthis.domNode.className = this.widget.editClass;\\n\\t}\\n\\tif(this.widget.editTabIndex) {\\n\\t\\tthis.domNode.setAttribute(\\\"tabindex\\\",this.widget.editTabIndex);\\n\\t}\\n\\tif(this.widget.editAutoComplete) {\\n\\t\\tthis.domNode.setAttribute(\\\"autocomplete\\\",this.widget.editAutoComplete);\\n\\t}\\n\\tif(this.widget.isDisabled === \\\"yes\\\") {\\n\\t\\tthis.domNode.setAttribute(\\\"disabled\\\",true);\\n\\t}\\n\\t// Add an input event handler\\n\\t$tw.utils.addEventListeners(this.domNode,[\\n\\t\\t{name: \\\"focus\\\", handlerObject: this, handlerMethod: \\\"handleFocusEvent\\\"},\\n\\t\\t{name: \\\"input\\\", handlerObject: this, handlerMethod: \\\"handleInputEvent\\\"}\\n\\t]);\\n\\t// Insert the element into the DOM\\n\\tthis.parentNode.insertBefore(this.domNode,this.nextSibling);\\n\\tthis.widget.domNodes.push(this.domNode);\\n}\\n\\n/*\\nSet the text of the engine if it doesn't currently have focus\\n*/\\nSimpleEngine.prototype.setText = function(text,type) {\\n\\tif(!this.domNode.isTiddlyWikiFakeDom) {\\n\\t\\tif(this.domNode.ownerDocument.activeElement !== this.domNode || text === \\\"\\\") {\\n\\t\\t\\tthis.updateDomNodeText(text);\\n\\t\\t}\\n\\t\\t// Fix the height if needed\\n\\t\\tthis.fixHeight();\\n\\t}\\n};\\n\\n/*\\nUpdate the DomNode with the new text\\n*/\\nSimpleEngine.prototype.updateDomNodeText = function(text) {\\n\\tthis.domNode.value = text;\\n};\\n\\n/*\\nGet the text of the engine\\n*/\\nSimpleEngine.prototype.getText = function() {\\n\\treturn this.domNode.value;\\n};\\n\\n/*\\nFix the height of textarea to fit content\\n*/\\nSimpleEngine.prototype.fixHeight = function() {\\n\\tif(this.widget.editTag === \\\"textarea\\\") {\\n\\t\\tif(this.widget.editAutoHeight) {\\n\\t\\t\\tif(this.domNode && !this.domNode.isTiddlyWikiFakeDom) {\\n\\t\\t\\t\\t$tw.utils.resizeTextAreaToFit(this.domNode,this.widget.editMinHeight);\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tvar fixedHeight = parseInt(this.widget.wiki.getTiddlerText(HEIGHT_VALUE_TITLE,\\\"400px\\\"),10);\\n\\t\\t\\tfixedHeight = Math.max(fixedHeight,20);\\n\\t\\t\\tthis.domNode.style.height = fixedHeight + \\\"px\\\";\\n\\t\\t}\\n\\t}\\n};\\n\\n/*\\nFocus the engine node\\n*/\\nSimpleEngine.prototype.focus  = function() {\\n\\tif(this.domNode.focus && this.domNode.select) {\\n\\t\\tthis.domNode.focus();\\n\\t\\tthis.domNode.select();\\n\\t}\\n};\\n\\n/*\\nHandle a dom \\\"input\\\" event which occurs when the text has changed\\n*/\\nSimpleEngine.prototype.handleInputEvent = function(event) {\\n\\tthis.widget.saveChanges(this.getText());\\n\\tthis.fixHeight();\\n\\tif(this.widget.editInputActions) {\\n\\t\\tthis.widget.invokeActionString(this.widget.editInputActions);\\n\\t}\\n\\treturn true;\\n};\\n\\n/*\\nHandle a dom \\\"focus\\\" event\\n*/\\nSimpleEngine.prototype.handleFocusEvent = function(event) {\\n\\tif(this.widget.editCancelPopups) {\\n\\t\\t$tw.popup.cancel(0);\\n\\t}\\n\\tif(this.widget.editFocusPopup) {\\n\\t\\t$tw.popup.triggerPopup({\\n\\t\\t\\tdomNode: this.domNode,\\n\\t\\t\\ttitle: this.widget.editFocusPopup,\\n\\t\\t\\twiki: this.widget.wiki,\\n\\t\\t\\tforce: true\\n\\t\\t});\\n\\t}\\n\\treturn true;\\n};\\n\\n/*\\nCreate a blank structure representing a text operation\\n*/\\nSimpleEngine.prototype.createTextOperation = function() {\\n\\treturn null;\\n};\\n\\n/*\\nExecute a text operation\\n*/\\nSimpleEngine.prototype.executeTextOperation = function(operation) {\\n};\\n\\nexports.SimpleEngine = SimpleEngine;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/core/modules/editor/factory.js\": {\n            \"title\": \"$:/core/modules/editor/factory.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/factory.js\\ntype: application/javascript\\nmodule-type: library\\n\\nFactory for constructing text editor widgets with specified engines for the toolbar and non-toolbar cases\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar DEFAULT_MIN_TEXT_AREA_HEIGHT = \\\"100px\\\"; // Minimum height of textareas in pixels\\n\\n// Configuration tiddlers\\nvar HEIGHT_MODE_TITLE = \\\"$:/config/TextEditor/EditorHeight/Mode\\\";\\nvar ENABLE_TOOLBAR_TITLE = \\\"$:/config/TextEditor/EnableToolbar\\\";\\n\\nvar Widget = require(\\\"$:/core/modules/widgets/widget.js\\\").widget;\\n\\nfunction editTextWidgetFactory(toolbarEngine,nonToolbarEngine) {\\n\\n\\tvar EditTextWidget = function(parseTreeNode,options) {\\n\\t\\t// Initialise the editor operations if they've not been done already\\n\\t\\tif(!this.editorOperations) {\\n\\t\\t\\tEditTextWidget.prototype.editorOperations = {};\\n\\t\\t\\t$tw.modules.applyMethods(\\\"texteditoroperation\\\",this.editorOperations);\\n\\t\\t}\\n\\t\\tthis.initialise(parseTreeNode,options);\\n\\t};\\n\\n\\t/*\\n\\tInherit from the base widget class\\n\\t*/\\n\\tEditTextWidget.prototype = new Widget();\\n\\n\\t/*\\n\\tRender this widget into the DOM\\n\\t*/\\n\\tEditTextWidget.prototype.render = function(parent,nextSibling) {\\n\\t\\t// Save the parent dom node\\n\\t\\tthis.parentDomNode = parent;\\n\\t\\t// Compute our attributes\\n\\t\\tthis.computeAttributes();\\n\\t\\t// Execute our logic\\n\\t\\tthis.execute();\\n\\t\\t// Create the wrapper for the toolbar and render its content\\n\\t\\tif(this.editShowToolbar) {\\n\\t\\t\\tthis.toolbarNode = this.document.createElement(\\\"div\\\");\\n\\t\\t\\tthis.toolbarNode.className = \\\"tc-editor-toolbar\\\";\\n\\t\\t\\tparent.insertBefore(this.toolbarNode,nextSibling);\\n\\t\\t\\tthis.renderChildren(this.toolbarNode,null);\\n\\t\\t\\tthis.domNodes.push(this.toolbarNode);\\n\\t\\t}\\n\\t\\t// Create our element\\n\\t\\tvar editInfo = this.getEditInfo(),\\n\\t\\t\\tEngine = this.editShowToolbar ? toolbarEngine : nonToolbarEngine;\\n\\t\\tthis.engine = new Engine({\\n\\t\\t\\t\\twidget: this,\\n\\t\\t\\t\\tvalue: editInfo.value,\\n\\t\\t\\t\\ttype: editInfo.type,\\n\\t\\t\\t\\tparentNode: parent,\\n\\t\\t\\t\\tnextSibling: nextSibling\\n\\t\\t\\t});\\n\\t\\t// Call the postRender hook\\n\\t\\tif(this.postRender) {\\n\\t\\t\\tthis.postRender();\\n\\t\\t}\\n\\t\\t// Fix height\\n\\t\\tthis.engine.fixHeight();\\n\\t\\t// Focus if required\\n\\t\\tif(this.editFocus === \\\"true\\\" || this.editFocus === \\\"yes\\\") {\\n\\t\\t\\tthis.engine.focus();\\n\\t\\t}\\n\\t\\t// Add widget message listeners\\n\\t\\tthis.addEventListeners([\\n\\t\\t\\t{type: \\\"tm-edit-text-operation\\\", handler: \\\"handleEditTextOperationMessage\\\"}\\n\\t\\t]);\\n\\t};\\n\\n\\t/*\\n\\tGet the tiddler being edited and current value\\n\\t*/\\n\\tEditTextWidget.prototype.getEditInfo = function() {\\n\\t\\t// Get the edit value\\n\\t\\tvar self = this,\\n\\t\\t\\tvalue,\\n\\t\\t\\ttype = \\\"text/plain\\\",\\n\\t\\t\\tupdate;\\n\\t\\tif(this.editIndex) {\\n\\t\\t\\tvalue = this.wiki.extractTiddlerDataItem(this.editTitle,this.editIndex,this.editDefault);\\n\\t\\t\\tupdate = function(value) {\\n\\t\\t\\t\\tvar data = self.wiki.getTiddlerData(self.editTitle,{});\\n\\t\\t\\t\\tif(data[self.editIndex] !== value) {\\n\\t\\t\\t\\t\\tdata[self.editIndex] = value;\\n\\t\\t\\t\\t\\tself.wiki.setTiddlerData(self.editTitle,data);\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t} else {\\n\\t\\t\\t// Get the current tiddler and the field name\\n\\t\\t\\tvar tiddler = this.wiki.getTiddler(this.editTitle);\\n\\t\\t\\tif(tiddler) {\\n\\t\\t\\t\\t// If we've got a tiddler, the value to display is the field string value\\n\\t\\t\\t\\tvalue = tiddler.getFieldString(this.editField);\\n\\t\\t\\t\\tif(this.editField === \\\"text\\\") {\\n\\t\\t\\t\\t\\ttype = tiddler.fields.type || \\\"text/vnd.tiddlywiki\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// Otherwise, we need to construct a default value for the editor\\n\\t\\t\\t\\tswitch(this.editField) {\\n\\t\\t\\t\\t\\tcase \\\"text\\\":\\n\\t\\t\\t\\t\\t\\tvalue = \\\"Type the text for the tiddler '\\\" + this.editTitle + \\\"'\\\";\\n\\t\\t\\t\\t\\t\\ttype = \\\"text/vnd.tiddlywiki\\\";\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\tcase \\\"title\\\":\\n\\t\\t\\t\\t\\t\\tvalue = this.editTitle;\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\t\\tvalue = \\\"\\\";\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif(this.editDefault !== undefined) {\\n\\t\\t\\t\\t\\tvalue = this.editDefault;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tupdate = function(value) {\\n\\t\\t\\t\\tvar tiddler = self.wiki.getTiddler(self.editTitle),\\n\\t\\t\\t\\t\\tupdateFields = {\\n\\t\\t\\t\\t\\t\\ttitle: self.editTitle\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\tupdateFields[self.editField] = value;\\n\\t\\t\\t\\tself.wiki.addTiddler(new $tw.Tiddler(self.wiki.getCreationFields(),tiddler,updateFields,self.wiki.getModificationFields()));\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tif(this.editType) {\\n\\t\\t\\ttype = this.editType;\\n\\t\\t}\\n\\t\\treturn {value: value || \\\"\\\", type: type, update: update};\\n\\t};\\n\\n\\t/*\\n\\tHandle an edit text operation message from the toolbar\\n\\t*/\\n\\tEditTextWidget.prototype.handleEditTextOperationMessage = function(event) {\\n\\t\\t// Prepare information about the operation\\n\\t\\tvar operation = this.engine.createTextOperation();\\n\\t\\t// Invoke the handler for the selected operation\\n\\t\\tvar handler = this.editorOperations[event.param];\\n\\t\\tif(handler) {\\n\\t\\t\\thandler.call(this,event,operation);\\n\\t\\t}\\n\\t\\t// Execute the operation via the engine\\n\\t\\tvar newText = this.engine.executeTextOperation(operation);\\n\\t\\t// Fix the tiddler height and save changes\\n\\t\\tthis.engine.fixHeight();\\n\\t\\tthis.saveChanges(newText);\\n\\t};\\n\\n\\t/*\\n\\tCompute the internal state of the widget\\n\\t*/\\n\\tEditTextWidget.prototype.execute = function() {\\n\\t\\t// Get our parameters\\n\\t\\tthis.editTitle = this.getAttribute(\\\"tiddler\\\",this.getVariable(\\\"currentTiddler\\\"));\\n\\t\\tthis.editField = this.getAttribute(\\\"field\\\",\\\"text\\\");\\n\\t\\tthis.editIndex = this.getAttribute(\\\"index\\\");\\n\\t\\tthis.editDefault = this.getAttribute(\\\"default\\\");\\n\\t\\tthis.editClass = this.getAttribute(\\\"class\\\");\\n\\t\\tthis.editPlaceholder = this.getAttribute(\\\"placeholder\\\");\\n\\t\\tthis.editSize = this.getAttribute(\\\"size\\\");\\n\\t\\tthis.editRows = this.getAttribute(\\\"rows\\\");\\n\\t\\tthis.editAutoHeight = this.wiki.getTiddlerText(HEIGHT_MODE_TITLE,\\\"auto\\\");\\n\\t\\tthis.editAutoHeight = this.getAttribute(\\\"autoHeight\\\",this.editAutoHeight === \\\"auto\\\" ? \\\"yes\\\" : \\\"no\\\") === \\\"yes\\\";\\n\\t\\tthis.editMinHeight = this.getAttribute(\\\"minHeight\\\",DEFAULT_MIN_TEXT_AREA_HEIGHT);\\n\\t\\tthis.editFocusPopup = this.getAttribute(\\\"focusPopup\\\");\\n\\t\\tthis.editFocus = this.getAttribute(\\\"focus\\\");\\n\\t\\tthis.editTabIndex = this.getAttribute(\\\"tabindex\\\");\\n\\t\\tthis.editCancelPopups = this.getAttribute(\\\"cancelPopups\\\",\\\"\\\") === \\\"yes\\\";\\n\\t\\tthis.editInputActions = this.getAttribute(\\\"inputActions\\\");\\n\\t\\tthis.editRefreshTitle = this.getAttribute(\\\"refreshTitle\\\");\\n\\t\\tthis.editAutoComplete = this.getAttribute(\\\"autocomplete\\\");\\n\\t\\tthis.isDisabled = this.getAttribute(\\\"disabled\\\",\\\"no\\\");\\n\\t\\t// Get the default editor element tag and type\\n\\t\\tvar tag,type;\\n\\t\\tif(this.editField === \\\"text\\\") {\\n\\t\\t\\ttag = \\\"textarea\\\";\\n\\t\\t} else {\\n\\t\\t\\ttag = \\\"input\\\";\\n\\t\\t\\tvar fieldModule = $tw.Tiddler.fieldModules[this.editField];\\n\\t\\t\\tif(fieldModule && fieldModule.editTag) {\\n\\t\\t\\t\\ttag = fieldModule.editTag;\\n\\t\\t\\t}\\n\\t\\t\\tif(fieldModule && fieldModule.editType) {\\n\\t\\t\\t\\ttype = fieldModule.editType;\\n\\t\\t\\t}\\n\\t\\t\\ttype = type || \\\"text\\\";\\n\\t\\t}\\n\\t\\t// Get the rest of our parameters\\n\\t\\tthis.editTag = this.getAttribute(\\\"tag\\\",tag) || \\\"input\\\";\\n\\t\\tthis.editType = this.getAttribute(\\\"type\\\",type);\\n\\t\\t// Make the child widgets\\n\\t\\tthis.makeChildWidgets();\\n\\t\\t// Determine whether to show the toolbar\\n\\t\\tthis.editShowToolbar = this.wiki.getTiddlerText(ENABLE_TOOLBAR_TITLE,\\\"yes\\\");\\n\\t\\tthis.editShowToolbar = (this.editShowToolbar === \\\"yes\\\") && !!(this.children && this.children.length > 0) && (!this.document.isTiddlyWikiFakeDom);\\n\\t};\\n\\n\\t/*\\n\\tSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n\\t*/\\n\\tEditTextWidget.prototype.refresh = function(changedTiddlers) {\\n\\t\\tvar changedAttributes = this.computeAttributes();\\n\\t\\t// Completely rerender if any of our attributes have changed\\n\\t\\tif(changedAttributes.tiddler || changedAttributes.field || changedAttributes.index || changedAttributes[\\\"default\\\"] || changedAttributes[\\\"class\\\"] || changedAttributes.placeholder || changedAttributes.size || changedAttributes.autoHeight || changedAttributes.minHeight || changedAttributes.focusPopup ||  changedAttributes.rows || changedAttributes.tabindex || changedAttributes.cancelPopups || changedAttributes.inputActions || changedAttributes.refreshTitle || changedAttributes.autocomplete || changedTiddlers[HEIGHT_MODE_TITLE] || changedTiddlers[ENABLE_TOOLBAR_TITLE] || changedAttributes.disabled) {\\n\\t\\t\\tthis.refreshSelf();\\n\\t\\t\\treturn true;\\n\\t\\t} else if (changedTiddlers[this.editRefreshTitle]) {\\n\\t\\t\\tthis.engine.updateDomNodeText(this.getEditInfo().value);\\n\\t\\t} else if(changedTiddlers[this.editTitle]) {\\n\\t\\t\\tvar editInfo = this.getEditInfo();\\n\\t\\t\\tthis.updateEditor(editInfo.value,editInfo.type);\\n\\t\\t}\\n\\t\\tthis.engine.fixHeight();\\n\\t\\tif(this.editShowToolbar) {\\n\\t\\t\\treturn this.refreshChildren(changedTiddlers);\\n\\t\\t} else {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t};\\n\\n\\t/*\\n\\tUpdate the editor with new text. This method is separate from updateEditorDomNode()\\n\\tso that subclasses can override updateEditor() and still use updateEditorDomNode()\\n\\t*/\\n\\tEditTextWidget.prototype.updateEditor = function(text,type) {\\n\\t\\tthis.updateEditorDomNode(text,type);\\n\\t};\\n\\n\\t/*\\n\\tUpdate the editor dom node with new text\\n\\t*/\\n\\tEditTextWidget.prototype.updateEditorDomNode = function(text,type) {\\n\\t\\tthis.engine.setText(text,type);\\n\\t};\\n\\n\\t/*\\n\\tSave changes back to the tiddler store\\n\\t*/\\n\\tEditTextWidget.prototype.saveChanges = function(text) {\\n\\t\\tvar editInfo = this.getEditInfo();\\n\\t\\tif(text !== editInfo.value) {\\n\\t\\t\\teditInfo.update(text);\\n\\t\\t}\\n\\t};\\n\\n\\t/*\\n\\tHandle a dom \\\"keydown\\\" event, which we'll bubble up to our container for the keyboard widgets benefit\\n\\t*/\\n\\tEditTextWidget.prototype.handleKeydownEvent = function(event) {\\n\\t\\t// Check for a keyboard shortcut\\n\\t\\tif(this.toolbarNode) {\\n\\t\\t\\tvar shortcutElements = this.toolbarNode.querySelectorAll(\\\"[data-tw-keyboard-shortcut]\\\");\\n\\t\\t\\tfor(var index=0; index<shortcutElements.length; index++) {\\n\\t\\t\\t\\tvar el = shortcutElements[index],\\n\\t\\t\\t\\t\\tshortcutData = el.getAttribute(\\\"data-tw-keyboard-shortcut\\\"),\\n\\t\\t\\t\\t\\tkeyInfoArray = $tw.keyboardManager.parseKeyDescriptors(shortcutData,{\\n\\t\\t\\t\\t\\t\\twiki: this.wiki\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\tif($tw.keyboardManager.checkKeyDescriptors(event,keyInfoArray)) {\\n\\t\\t\\t\\t\\tvar clickEvent = this.document.createEvent(\\\"Events\\\");\\n\\t\\t\\t\\t    clickEvent.initEvent(\\\"click\\\",true,false);\\n\\t\\t\\t\\t    el.dispatchEvent(clickEvent);\\n\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\tevent.stopPropagation();\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t// Propogate the event to the container\\n\\t\\tif(this.propogateKeydownEvent(event)) {\\n\\t\\t\\t// Ignore the keydown if it was already handled\\n\\t\\t\\tevent.preventDefault();\\n\\t\\t\\tevent.stopPropagation();\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\t// Otherwise, process the keydown normally\\n\\t\\treturn false;\\n\\t};\\n\\n\\t/*\\n\\tPropogate keydown events to our container for the keyboard widgets benefit\\n\\t*/\\n\\tEditTextWidget.prototype.propogateKeydownEvent = function(event) {\\n\\t\\tvar newEvent = this.document.createEventObject ? this.document.createEventObject() : this.document.createEvent(\\\"Events\\\");\\n\\t\\tif(newEvent.initEvent) {\\n\\t\\t\\tnewEvent.initEvent(\\\"keydown\\\", true, true);\\n\\t\\t}\\n\\t\\tnewEvent.keyCode = event.keyCode;\\n\\t\\tnewEvent.which = event.which;\\n\\t\\tnewEvent.metaKey = event.metaKey;\\n\\t\\tnewEvent.ctrlKey = event.ctrlKey;\\n\\t\\tnewEvent.altKey = event.altKey;\\n\\t\\tnewEvent.shiftKey = event.shiftKey;\\n\\t\\treturn !this.parentDomNode.dispatchEvent(newEvent);\\n\\t};\\n\\n\\treturn EditTextWidget;\\n\\n}\\n\\nexports.editTextWidgetFactory = editTextWidgetFactory;\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/core/modules/editor/operations/bitmap/clear.js\": {\n            \"title\": \"$:/core/modules/editor/operations/bitmap/clear.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/operations/bitmap/clear.js\\ntype: application/javascript\\nmodule-type: bitmapeditoroperation\\n\\nBitmap editor operation to clear the image\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports[\\\"clear\\\"] = function(event) {\\n\\tvar ctx = this.canvasDomNode.getContext(\\\"2d\\\");\\n\\tctx.globalAlpha = 1;\\n\\tctx.fillStyle = event.paramObject.colour || \\\"white\\\";\\n\\tctx.fillRect(0,0,this.canvasDomNode.width,this.canvasDomNode.height);\\n\\t// Save changes\\n\\tthis.strokeEnd();\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"bitmapeditoroperation\"\n        },\n        \"$:/core/modules/editor/operations/bitmap/resize.js\": {\n            \"title\": \"$:/core/modules/editor/operations/bitmap/resize.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/operations/bitmap/resize.js\\ntype: application/javascript\\nmodule-type: bitmapeditoroperation\\n\\nBitmap editor operation to resize the image\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports[\\\"resize\\\"] = function(event) {\\n\\t// Get the new width\\n\\tvar newWidth = parseInt(event.paramObject.width || this.canvasDomNode.width,10),\\n\\t\\tnewHeight = parseInt(event.paramObject.height || this.canvasDomNode.height,10);\\n\\t// Update if necessary\\n\\tif(newWidth > 0 && newHeight > 0 && !(newWidth === this.currCanvas.width && newHeight === this.currCanvas.height)) {\\n\\t\\tthis.changeCanvasSize(newWidth,newHeight);\\n\\t}\\n\\t// Update the input controls\\n\\tthis.refreshToolbar();\\n\\t// Save the image into the tiddler\\n\\tthis.saveChanges();\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"bitmapeditoroperation\"\n        },\n        \"$:/core/modules/editor/operations/bitmap/rotate-left.js\": {\n            \"title\": \"$:/core/modules/editor/operations/bitmap/rotate-left.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/operations/bitmap/rotate-left.js\\ntype: application/javascript\\nmodule-type: bitmapeditoroperation\\n\\nBitmap editor operation to rotate the image left by 90 degrees\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports[\\\"rotate-left\\\"] = function(event) {\\n\\t// Rotate the canvas left by 90 degrees\\n\\tthis.rotateCanvasLeft();\\n\\t// Update the input controls\\n\\tthis.refreshToolbar();\\n\\t// Save the image into the tiddler\\n\\tthis.saveChanges();\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"bitmapeditoroperation\"\n        },\n        \"$:/core/modules/editor/operations/text/excise.js\": {\n            \"title\": \"$:/core/modules/editor/operations/text/excise.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/operations/text/excise.js\\ntype: application/javascript\\nmodule-type: texteditoroperation\\n\\nText editor operation to excise the selection to a new tiddler\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports[\\\"excise\\\"] = function(event,operation) {\\n\\tvar editTiddler = this.wiki.getTiddler(this.editTitle),\\n\\t\\teditTiddlerTitle = this.editTitle;\\n\\tif(editTiddler && editTiddler.fields[\\\"draft.of\\\"]) {\\n\\t\\teditTiddlerTitle = editTiddler.fields[\\\"draft.of\\\"];\\n\\t}\\n\\tvar excisionTitle = event.paramObject.title || this.wiki.generateNewTitle(\\\"New Excision\\\");\\n\\tthis.wiki.addTiddler(new $tw.Tiddler(\\n\\t\\tthis.wiki.getCreationFields(),\\n\\t\\tthis.wiki.getModificationFields(),\\n\\t\\t{\\n\\t\\t\\ttitle: excisionTitle,\\n\\t\\t\\ttext: operation.selection,\\n\\t\\t\\ttags: event.paramObject.tagnew === \\\"yes\\\" ?  [editTiddlerTitle] : []\\n\\t\\t}\\n\\t));\\n\\toperation.replacement = excisionTitle;\\n\\tswitch(event.paramObject.type || \\\"transclude\\\") {\\n\\t\\tcase \\\"transclude\\\":\\n\\t\\t\\toperation.replacement = \\\"{{\\\" + operation.replacement+ \\\"}}\\\";\\n\\t\\t\\tbreak;\\n\\t\\tcase \\\"link\\\":\\n\\t\\t\\toperation.replacement = \\\"[[\\\" + operation.replacement+ \\\"]]\\\";\\n\\t\\t\\tbreak;\\n\\t\\tcase \\\"macro\\\":\\n\\t\\t\\toperation.replacement = \\\"<<\\\" + (event.paramObject.macro || \\\"translink\\\") + \\\" \\\\\\\"\\\\\\\"\\\\\\\"\\\" + operation.replacement + \\\"\\\\\\\"\\\\\\\"\\\\\\\">>\\\";\\n\\t\\t\\tbreak;\\n\\t}\\n\\toperation.cutStart = operation.selStart;\\n\\toperation.cutEnd = operation.selEnd;\\n\\toperation.newSelStart = operation.selStart;\\n\\toperation.newSelEnd = operation.selStart + operation.replacement.length;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"texteditoroperation\"\n        },\n        \"$:/core/modules/editor/operations/text/make-link.js\": {\n            \"title\": \"$:/core/modules/editor/operations/text/make-link.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/operations/text/make-link.js\\ntype: application/javascript\\nmodule-type: texteditoroperation\\n\\nText editor operation to make a link\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports[\\\"make-link\\\"] = function(event,operation) {\\n\\tif(operation.selection) {\\n\\t\\toperation.replacement = \\\"[[\\\" + operation.selection + \\\"|\\\" + event.paramObject.text + \\\"]]\\\";\\n\\t\\toperation.cutStart = operation.selStart;\\n\\t\\toperation.cutEnd = operation.selEnd;\\n\\t} else {\\n\\t\\toperation.replacement = \\\"[[\\\" + event.paramObject.text + \\\"]]\\\";\\n\\t\\toperation.cutStart = operation.selStart;\\n\\t\\toperation.cutEnd = operation.selEnd;\\n\\t}\\n\\toperation.newSelStart = operation.selStart + operation.replacement.length;\\n\\toperation.newSelEnd = operation.newSelStart;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"texteditoroperation\"\n        },\n        \"$:/core/modules/editor/operations/text/prefix-lines.js\": {\n            \"title\": \"$:/core/modules/editor/operations/text/prefix-lines.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/operations/text/prefix-lines.js\\ntype: application/javascript\\nmodule-type: texteditoroperation\\n\\nText editor operation to add a prefix to the selected lines\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports[\\\"prefix-lines\\\"] = function(event,operation) {\\n\\tvar targetCount = parseInt(event.paramObject.count + \\\"\\\",10);\\n\\t// Cut just past the preceding line break, or the start of the text\\n\\toperation.cutStart = $tw.utils.findPrecedingLineBreak(operation.text,operation.selStart);\\n\\t// Cut to just past the following line break, or to the end of the text\\n\\toperation.cutEnd = $tw.utils.findFollowingLineBreak(operation.text,operation.selEnd);\\n\\t// Compose the required prefix\\n\\tvar prefix = $tw.utils.repeat(event.paramObject.character,targetCount);\\n\\t// Process each line\\n\\tvar lines = operation.text.substring(operation.cutStart,operation.cutEnd).split(/\\\\r?\\\\n/mg);\\n\\t$tw.utils.each(lines,function(line,index) {\\n\\t\\t// Remove and count any existing prefix characters\\n\\t\\tvar count = 0;\\n\\t\\twhile(line.charAt(0) === event.paramObject.character) {\\n\\t\\t\\tline = line.substring(1);\\n\\t\\t\\tcount++;\\n\\t\\t}\\n\\t\\t// Remove any whitespace\\n\\t\\twhile(line.charAt(0) === \\\" \\\") {\\n\\t\\t\\tline = line.substring(1);\\n\\t\\t}\\n\\t\\t// We're done if we removed the exact required prefix, otherwise add it\\n\\t\\tif(count !== targetCount) {\\n\\t\\t\\t// Apply the prefix\\n\\t\\t\\tline =  prefix + \\\" \\\" + line;\\n\\t\\t}\\n\\t\\t// Save the modified line\\n\\t\\tlines[index] = line;\\n\\t});\\n\\t// Stitch the replacement text together and set the selection\\n\\toperation.replacement = lines.join(\\\"\\\\n\\\");\\n\\tif(lines.length === 1) {\\n\\t\\toperation.newSelStart = operation.cutStart + operation.replacement.length;\\n\\t\\toperation.newSelEnd = operation.newSelStart;\\n\\t} else {\\n\\t\\toperation.newSelStart = operation.cutStart;\\n\\t\\toperation.newSelEnd = operation.newSelStart + operation.replacement.length;\\n\\t}\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"texteditoroperation\"\n        },\n        \"$:/core/modules/editor/operations/text/replace-all.js\": {\n            \"title\": \"$:/core/modules/editor/operations/text/replace-all.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/operations/text/replace-all.js\\ntype: application/javascript\\nmodule-type: texteditoroperation\\n\\nText editor operation to replace the entire text\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports[\\\"replace-all\\\"] = function(event,operation) {\\n\\toperation.cutStart = 0;\\n\\toperation.cutEnd = operation.text.length;\\n\\toperation.replacement = event.paramObject.text;\\n\\toperation.newSelStart = 0;\\n\\toperation.newSelEnd = operation.replacement.length;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"texteditoroperation\"\n        },\n        \"$:/core/modules/editor/operations/text/replace-selection.js\": {\n            \"title\": \"$:/core/modules/editor/operations/text/replace-selection.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/operations/text/replace-selection.js\\ntype: application/javascript\\nmodule-type: texteditoroperation\\n\\nText editor operation to replace the selection\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports[\\\"replace-selection\\\"] = function(event,operation) {\\n\\toperation.replacement = event.paramObject.text;\\n\\toperation.cutStart = operation.selStart;\\n\\toperation.cutEnd = operation.selEnd;\\n\\toperation.newSelStart = operation.selStart;\\n\\toperation.newSelEnd = operation.selStart + operation.replacement.length;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"texteditoroperation\"\n        },\n        \"$:/core/modules/editor/operations/text/save-selection.js\": {\n            \"title\": \"$:/core/modules/editor/operations/text/save-selection.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/operations/text/save-selection.js\\ntype: application/javascript\\nmodule-type: texteditoroperation\\n\\nText editor operation to save the current selection in a specified tiddler\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports[\\\"save-selection\\\"] = function(event,operation) {\\n\\tvar tiddler = event.paramObject.tiddler,\\n\\t\\tfield = event.paramObject.field || \\\"text\\\";\\n\\tif(tiddler && field) {\\n\\t\\tthis.wiki.setText(tiddler,field,null,operation.text.substring(operation.selStart,operation.selEnd));\\n\\t}\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"texteditoroperation\"\n        },\n        \"$:/core/modules/editor/operations/text/wrap-lines.js\": {\n            \"title\": \"$:/core/modules/editor/operations/text/wrap-lines.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/operations/text/wrap-lines.js\\ntype: application/javascript\\nmodule-type: texteditoroperation\\n\\nText editor operation to wrap the selected lines with a prefix and suffix\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports[\\\"wrap-lines\\\"] = function(event,operation) {\\n\\t// Cut just past the preceding line break, or the start of the text\\n\\toperation.cutStart = $tw.utils.findPrecedingLineBreak(operation.text,operation.selStart);\\n\\t// Cut to just past the following line break, or to the end of the text\\n\\toperation.cutEnd = $tw.utils.findFollowingLineBreak(operation.text,operation.selEnd);\\n\\t// Add the prefix and suffix\\n\\toperation.replacement = event.paramObject.prefix + \\\"\\\\n\\\" +\\n\\t\\t\\t\\toperation.text.substring(operation.cutStart,operation.cutEnd) + \\\"\\\\n\\\" +\\n\\t\\t\\t\\tevent.paramObject.suffix + \\\"\\\\n\\\";\\n\\toperation.newSelStart = operation.cutStart + event.paramObject.prefix.length + 1;\\n\\toperation.newSelEnd = operation.newSelStart + (operation.cutEnd - operation.cutStart);\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"texteditoroperation\"\n        },\n        \"$:/core/modules/editor/operations/text/wrap-selection.js\": {\n            \"title\": \"$:/core/modules/editor/operations/text/wrap-selection.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/editor/operations/text/wrap-selection.js\\ntype: application/javascript\\nmodule-type: texteditoroperation\\n\\nText editor operation to wrap the selection with the specified prefix and suffix\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports[\\\"wrap-selection\\\"] = function(event,operation) {\\n\\tif(operation.selStart === operation.selEnd) {\\n\\t\\t// No selection; check if we're within the prefix/suffix\\n\\t\\tif(operation.text.substring(operation.selStart - event.paramObject.prefix.length,operation.selStart + event.paramObject.suffix.length) === event.paramObject.prefix + event.paramObject.suffix) {\\n\\t\\t\\t// Remove the prefix and suffix\\n\\t\\t\\toperation.cutStart = operation.selStart - event.paramObject.prefix.length;\\n\\t\\t\\toperation.cutEnd = operation.selEnd + event.paramObject.suffix.length;\\n\\t\\t\\toperation.replacement = \\\"\\\";\\n\\t\\t\\toperation.newSelStart = operation.cutStart;\\n\\t\\t\\toperation.newSelEnd = operation.newSelStart;\\n\\t\\t} else {\\n\\t\\t\\t// Wrap the cursor instead\\n\\t\\t\\toperation.cutStart = operation.selStart;\\n\\t\\t\\toperation.cutEnd = operation.selEnd;\\n\\t\\t\\toperation.replacement = event.paramObject.prefix + event.paramObject.suffix;\\n\\t\\t\\toperation.newSelStart = operation.selStart + event.paramObject.prefix.length;\\n\\t\\t\\toperation.newSelEnd = operation.newSelStart;\\n\\t\\t}\\n\\t} else if(operation.text.substring(operation.selStart,operation.selStart + event.paramObject.prefix.length) === event.paramObject.prefix && operation.text.substring(operation.selEnd - event.paramObject.suffix.length,operation.selEnd) === event.paramObject.suffix) {\\n\\t\\t// Prefix and suffix are already present, so remove them\\n\\t\\toperation.cutStart = operation.selStart;\\n\\t\\toperation.cutEnd = operation.selEnd;\\n\\t\\toperation.replacement = operation.selection.substring(event.paramObject.prefix.length,operation.selection.length - event.paramObject.suffix.length);\\n\\t\\toperation.newSelStart = operation.selStart;\\n\\t\\toperation.newSelEnd = operation.selStart + operation.replacement.length;\\n\\t} else {\\n\\t\\t// Add the prefix and suffix\\n\\t\\toperation.cutStart = operation.selStart;\\n\\t\\toperation.cutEnd = operation.selEnd;\\n\\t\\toperation.replacement = event.paramObject.prefix + operation.selection + event.paramObject.suffix;\\n\\t\\toperation.newSelStart = operation.selStart;\\n\\t\\toperation.newSelEnd = operation.selStart + operation.replacement.length;\\n\\t}\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"texteditoroperation\"\n        },\n        \"$:/core/modules/filterrunprefixes/all.js\": {\n            \"title\": \"$:/core/modules/filterrunprefixes/all.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filterrunprefixes/all.js\\ntype: application/javascript\\nmodule-type: filterrunprefix\\n\\nUnion of sets without de-duplication.\\nEquivalent to = filter run prefix.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter prefix function\\n*/\\nexports.all = function(operationSubFunction) {\\n\\treturn function(results,source,widget) {\\n\\t\\tresults.push.apply(results, operationSubFunction(source,widget));\\n\\t};\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filterrunprefix\"\n        },\n        \"$:/core/modules/filterrunprefixes/and.js\": {\n            \"title\": \"$:/core/modules/filterrunprefixes/and.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filterrunprefixes/and.js\\ntype: application/javascript\\nmodule-type: filterrunprefix\\n\\nIntersection of sets.\\nEquivalent to + filter run prefix.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter prefix function\\n*/\\nexports.and = function(operationSubFunction,options) {\\n\\treturn function(results,source,widget) {\\n\\t\\t// This replaces all the elements of the array, but keeps the actual array so that references to it are preserved\\n\\t\\tsource = options.wiki.makeTiddlerIterator(results.toArray());\\n\\t\\tresults.clear();\\n\\t\\tresults.pushTop(operationSubFunction(source,widget));\\n\\t};\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filterrunprefix\"\n        },\n        \"$:/core/modules/filterrunprefixes/else.js\": {\n            \"title\": \"$:/core/modules/filterrunprefixes/else.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filterrunprefixes/else.js\\ntype: application/javascript\\nmodule-type: filterrunprefix\\n\\nEquivalent to ~ filter run prefix.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter prefix function\\n*/\\nexports.else = function(operationSubFunction) {\\n\\treturn function(results,source,widget) {\\n\\t\\tif(results.length === 0) {\\n\\t\\t\\t// Main result so far is empty\\n\\t\\t\\tresults.pushTop(operationSubFunction(source,widget));\\n\\t\\t}\\n\\t};\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filterrunprefix\"\n        },\n        \"$:/core/modules/filterrunprefixes/except.js\": {\n            \"title\": \"$:/core/modules/filterrunprefixes/except.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filterrunprefixes/except.js\\ntype: application/javascript\\nmodule-type: filterrunprefix\\n\\nDifference of sets.\\nEquivalent to - filter run prefix.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter prefix function\\n*/\\nexports.except = function(operationSubFunction) {\\n\\treturn function(results,source,widget) {\\n\\t\\tresults.remove(operationSubFunction(source,widget));\\n\\t};\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filterrunprefix\"\n        },\n        \"$:/core/modules/filterrunprefixes/filter.js\": {\n            \"title\": \"$:/core/modules/filterrunprefixes/filter.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filterrunprefixes/filter.js\\ntype: application/javascript\\nmodule-type: filterrunprefix\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.filter = function(operationSubFunction,options) {\\n\\treturn function(results,source,widget) {\\n\\t\\tif(results.length > 0) {\\n\\t\\t\\tvar resultsToRemove = [];\\n\\t\\t\\tresults.each(function(result) {\\n\\t\\t\\t\\tvar filtered = operationSubFunction(options.wiki.makeTiddlerIterator([result]),widget);\\n\\t\\t\\t\\tif(filtered.length === 0) {\\n\\t\\t\\t\\t\\tresultsToRemove.push(result);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t\\tresults.remove(resultsToRemove);\\n\\t\\t}\\n\\t}\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filterrunprefix\"\n        },\n        \"$:/core/modules/filterrunprefixes/intersection.js\": {\n            \"title\": \"$:/core/modules/filterrunprefixes/intersection.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filterrunprefixes/intersection.js\\ntype: application/javascript\\nmodule-type: filterrunprefix\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter prefix function\\n*/\\nexports.intersection = function(operationSubFunction) {\\n\\treturn function(results,source,widget) {\\n\\t\\tif(results.length !== 0) {\\n\\t\\t\\tvar secondRunResults = operationSubFunction(source,widget);\\n\\t\\t\\tvar firstRunResults = results.toArray();\\n\\t\\t\\tresults.clear();\\n\\t\\t\\t$tw.utils.each(firstRunResults,function(title) {\\n\\t\\t\\t\\tif(secondRunResults.indexOf(title) !== -1) {\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\t};\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filterrunprefix\"\n        },\n        \"$:/core/modules/filterrunprefixes/or.js\": {\n            \"title\": \"$:/core/modules/filterrunprefixes/or.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filterrunprefixes/or.js\\ntype: application/javascript\\nmodule-type: filterrunprefix\\n\\nEquivalent to a filter run with no prefix.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter prefix function\\n*/\\nexports.or = function(operationSubFunction) {\\n\\treturn function(results,source,widget) {\\n\\t\\tresults.pushTop(operationSubFunction(source,widget));\\n\\t};\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filterrunprefix\"\n        },\n        \"$:/core/modules/filterrunprefixes/reduce.js\": {\n            \"title\": \"$:/core/modules/filterrunprefixes/reduce.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filterrunprefixes/reduce.js\\ntype: application/javascript\\nmodule-type: filterrunprefix\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter prefix function\\n*/\\nexports.reduce = function(operationSubFunction,options) {\\n\\treturn function(results,source,widget) {\\n\\t\\tif(results.length > 0) {\\n\\t\\t\\tvar accumulator = \\\"\\\";\\n\\t\\t\\tvar index = 0;\\n\\t\\t\\tresults.each(function(title) {\\n\\t\\t\\t\\tvar list = operationSubFunction(options.wiki.makeTiddlerIterator([title]),{\\n\\t\\t\\t\\t\\t\\tgetVariable: function(name) {\\n\\t\\t\\t\\t\\t\\t\\tswitch(name) {\\n\\t\\t\\t\\t\\t\\t\\t\\tcase \\\"currentTiddler\\\":\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn \\\"\\\" + title;\\n\\t\\t\\t\\t\\t\\t\\t\\tcase \\\"accumulator\\\":\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn \\\"\\\" + accumulator;\\n\\t\\t\\t\\t\\t\\t\\t\\tcase \\\"index\\\":\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn \\\"\\\" + index;\\n\\t\\t\\t\\t\\t\\t\\t\\tcase \\\"revIndex\\\":\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn \\\"\\\" +  (results.length - 1 - index);\\n\\t\\t\\t\\t\\t\\t\\t\\tcase \\\"length\\\":\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn \\\"\\\" + results.length;\\n\\t\\t\\t\\t\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn widget.getVariable(name);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\tif(list.length > 0) {\\n\\t\\t\\t\\t\\taccumulator = \\\"\\\" + list[0];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t++index;\\n\\t\\t\\t});\\n\\t\\t\\tresults.clear();\\n\\t\\t\\tresults.push(accumulator);\\t\\n\\t\\t}\\n\\t}\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filterrunprefix\"\n        },\n        \"$:/core/modules/filters/addprefix.js\": {\n            \"title\": \"$:/core/modules/filters/addprefix.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/addprefix.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for adding a prefix to each title in the list. This is\\nespecially useful in contexts where only a filter expression is allowed\\nand macro substitution isn't available.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.addprefix = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push(operator.operand + title);\\n\\t});\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/addsuffix.js\": {\n            \"title\": \"$:/core/modules/filters/addsuffix.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/addsuffix.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for adding a suffix to each title in the list. This is\\nespecially useful in contexts where only a filter expression is allowed\\nand macro substitution isn't available.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.addsuffix = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push(title + operator.operand);\\n\\t});\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/after.js\": {\n            \"title\": \"$:/core/modules/filters/after.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/after.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator returning the tiddler from the current list that is after the tiddler named in the operand.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.after = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push(title);\\n\\t});\\n\\tvar index = results.indexOf(operator.operand);\\n\\tif(index === -1 || index > (results.length - 2)) {\\n\\t\\treturn [];\\n\\t} else {\\n\\t\\treturn [results[index + 1]];\\n\\t}\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/all/current.js\": {\n            \"title\": \"$:/core/modules/filters/all/current.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/all/current.js\\ntype: application/javascript\\nmodule-type: allfilteroperator\\n\\nFilter function for [all[current]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.current = function(source,prefix,options) {\\n\\tvar currTiddlerTitle = options.widget && options.widget.getVariable(\\\"currentTiddler\\\");\\n\\tif(currTiddlerTitle) {\\n\\t\\treturn [currTiddlerTitle];\\n\\t} else {\\n\\t\\treturn [];\\n\\t}\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"allfilteroperator\"\n        },\n        \"$:/core/modules/filters/all/missing.js\": {\n            \"title\": \"$:/core/modules/filters/all/missing.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/all/missing.js\\ntype: application/javascript\\nmodule-type: allfilteroperator\\n\\nFilter function for [all[missing]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.missing = function(source,prefix,options) {\\n\\treturn options.wiki.getMissingTitles();\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"allfilteroperator\"\n        },\n        \"$:/core/modules/filters/all/orphans.js\": {\n            \"title\": \"$:/core/modules/filters/all/orphans.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/all/orphans.js\\ntype: application/javascript\\nmodule-type: allfilteroperator\\n\\nFilter function for [all[orphans]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.orphans = function(source,prefix,options) {\\n\\treturn options.wiki.getOrphanTitles();\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"allfilteroperator\"\n        },\n        \"$:/core/modules/filters/all/shadows.js\": {\n            \"title\": \"$:/core/modules/filters/all/shadows.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/all/shadows.js\\ntype: application/javascript\\nmodule-type: allfilteroperator\\n\\nFilter function for [all[shadows]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.shadows = function(source,prefix,options) {\\n\\treturn options.wiki.allShadowTitles();\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"allfilteroperator\"\n        },\n        \"$:/core/modules/filters/all/tags.js\": {\n            \"title\": \"$:/core/modules/filters/all/tags.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/all/tags.js\\ntype: application/javascript\\nmodule-type: allfilteroperator\\n\\nFilter function for [all[tags]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.tags = function(source,prefix,options) {\\n\\treturn Object.keys(options.wiki.getTagMap());\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"allfilteroperator\"\n        },\n        \"$:/core/modules/filters/all/tiddlers.js\": {\n            \"title\": \"$:/core/modules/filters/all/tiddlers.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/all/tiddlers.js\\ntype: application/javascript\\nmodule-type: allfilteroperator\\n\\nFilter function for [all[tiddlers]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.tiddlers = function(source,prefix,options) {\\n\\treturn options.wiki.allTitles();\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"allfilteroperator\"\n        },\n        \"$:/core/modules/filters/all.js\": {\n            \"title\": \"$:/core/modules/filters/all.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/all.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for selecting tiddlers\\n\\n[all[shadows+tiddlers]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar allFilterOperators;\\n\\nfunction getAllFilterOperators() {\\n\\tif(!allFilterOperators) {\\n\\t\\tallFilterOperators = {};\\n\\t\\t$tw.modules.applyMethods(\\\"allfilteroperator\\\",allFilterOperators);\\n\\t}\\n\\treturn allFilterOperators;\\n}\\n\\n/*\\nExport our filter function\\n*/\\nexports.all = function(source,operator,options) {\\n\\t// Get our suboperators\\n\\tvar allFilterOperators = getAllFilterOperators();\\n\\t// Cycle through the suboperators accumulating their results\\n\\tvar results = [],\\n\\t\\tsubops = operator.operand.split(\\\"+\\\");\\n\\t// Check for common optimisations\\n\\tif(subops.length === 1 && subops[0] === \\\"\\\") {\\n\\t\\treturn source;\\n\\t} else if(subops.length === 1 && subops[0] === \\\"tiddlers\\\") {\\n\\t\\treturn options.wiki.each;\\n\\t} else if(subops.length === 1 && subops[0] === \\\"shadows\\\") {\\n\\t\\treturn options.wiki.eachShadow;\\n\\t} else if(subops.length === 2 && subops[0] === \\\"tiddlers\\\" && subops[1] === \\\"shadows\\\") {\\n\\t\\treturn options.wiki.eachTiddlerPlusShadows;\\n\\t} else if(subops.length === 2 && subops[0] === \\\"shadows\\\" && subops[1] === \\\"tiddlers\\\") {\\n\\t\\treturn options.wiki.eachShadowPlusTiddlers;\\n\\t}\\n\\t// Do it the hard way\\n\\tfor(var t=0; t<subops.length; t++) {\\n\\t\\tvar subop = allFilterOperators[subops[t]];\\n\\t\\tif(subop) {\\n\\t\\t\\t$tw.utils.pushTop(results,subop(source,operator.prefix,options));\\n\\t\\t}\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/backlinks.js\": {\n            \"title\": \"$:/core/modules/filters/backlinks.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/backlinks.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for returning all the backlinks from a tiddler\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.backlinks = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\t$tw.utils.pushTop(results,options.wiki.getTiddlerBacklinks(title));\\n\\t});\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/before.js\": {\n            \"title\": \"$:/core/modules/filters/before.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/before.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator returning the tiddler from the current list that is before the tiddler named in the operand.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.before = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push(title);\\n\\t});\\n\\tvar index = results.indexOf(operator.operand);\\n\\tif(index <= 0) {\\n\\t\\treturn [];\\n\\t} else {\\n\\t\\treturn [results[index - 1]];\\n\\t}\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/commands.js\": {\n            \"title\": \"$:/core/modules/filters/commands.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/commands.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for returning the names of the commands available in this wiki\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.commands = function(source,operator,options) {\\n\\tvar results = [];\\n\\t$tw.utils.each($tw.commands,function(commandInfo,name) {\\n\\t\\tresults.push(name);\\n\\t});\\n\\tresults.sort();\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/compare.js\": {\n            \"title\": \"$:/core/modules/filters/compare.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/compare.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nGeneral purpose comparison operator\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nexports.compare = function(source,operator,options) {\\n\\tvar suffixes = operator.suffixes || [],\\n\\t\\ttype = (suffixes[0] || [])[0],\\n\\t\\tmode = (suffixes[1] || [])[0],\\n\\t\\ttypeFn = $tw.utils.makeCompareFunction(type,{defaultType: \\\"number\\\"}),\\n\\t\\tmodeFn = modes[mode] || modes.eq,\\n\\t\\tinvert = operator.prefix === \\\"!\\\",\\n\\t\\tresults = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tif(modeFn(typeFn(title,operator.operand)) !== invert) {\\n\\t\\t\\tresults.push(title);\\n\\t\\t}\\n\\t});\\n\\treturn results;\\n};\\n\\nvar modes = {\\n\\t\\\"eq\\\": function(value) {return value === 0;},\\n\\t\\\"ne\\\": function(value) {return value !== 0;},\\n\\t\\\"gteq\\\": function(value) {return value >= 0;},\\n\\t\\\"gt\\\": function(value) {return value > 0;},\\n\\t\\\"lteq\\\": function(value) {return value <= 0;},\\n\\t\\\"lt\\\": function(value) {return value < 0;}\\n}\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/contains.js\": {\n            \"title\": \"$:/core/modules/filters/contains.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/contains.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for finding values in array fields\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.contains = function(source,operator,options) {\\n\\tvar results = [],\\n\\t\\tfieldname = (operator.suffix || \\\"list\\\").toLowerCase();\\n\\tif(operator.prefix === \\\"!\\\") {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(tiddler) {\\n\\t\\t\\t\\tvar list = tiddler.getFieldList(fieldname);\\n\\t\\t\\t\\tif(list.indexOf(operator.operand) === -1) {\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t} else {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(tiddler) {\\n\\t\\t\\t\\tvar list = tiddler.getFieldList(fieldname);\\n\\t\\t\\t\\tif(list.indexOf(operator.operand) !== -1) {\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/count.js\": {\n            \"title\": \"$:/core/modules/filters/count.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/count.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator returning the number of entries in the current list.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.count = function(source,operator,options) {\\n\\tvar count = 0;\\n\\tsource(function(tiddler,title) {\\n\\t\\tcount++;\\n\\t});\\n\\treturn [count + \\\"\\\"];\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/days.js\": {\n            \"title\": \"$:/core/modules/filters/days.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/days.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator that selects tiddlers with a specified date field within a specified date interval.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.days = function(source,operator,options) {\\n\\tvar results = [],\\n\\t\\tfieldName = operator.suffix || \\\"modified\\\",\\n\\t\\tdayInterval = (parseInt(operator.operand,10)||0),\\n\\t\\tdayIntervalSign = $tw.utils.sign(dayInterval),\\n\\t\\ttargetTimeStamp = (new Date()).setHours(0,0,0,0) + 1000*60*60*24*dayInterval,\\n\\t\\tisWithinDays = function(dateField) {\\n\\t\\t\\tvar sign = $tw.utils.sign(targetTimeStamp - (new Date(dateField)).setHours(0,0,0,0));\\n\\t\\t\\treturn sign === 0 || sign === dayIntervalSign;\\n\\t\\t};\\n\\n\\tif(operator.prefix === \\\"!\\\") {\\n\\t\\ttargetTimeStamp = targetTimeStamp - 1000*60*60*24*dayIntervalSign;\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(tiddler && tiddler.fields[fieldName]) {\\n\\t\\t\\t\\tif(!isWithinDays($tw.utils.parseDate(tiddler.fields[fieldName]))) {\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\t} else {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(tiddler && tiddler.fields[fieldName]) {\\n\\t\\t\\t\\tif(isWithinDays($tw.utils.parseDate(tiddler.fields[fieldName]))) {\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/duplicateslugs.js\": {\n            \"title\": \"$:/core/modules/filters/duplicateslugs.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/duplicateslugs.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter function for [duplicateslugs[]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.duplicateslugs = function(source,operator,options) {\\n\\tvar slugs = Object.create(null), // Hashmap by slug of title, replaced with \\\"true\\\" if the duplicate title has already been output\\n\\t\\tresults = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tvar slug = options.wiki.slugify(title);\\n\\t\\tif(slug in slugs) {\\n\\t\\t\\tif(slugs[slug] !== true) {\\n\\t\\t\\t\\tresults.push(slugs[slug]);\\n\\t\\t\\t\\tslugs[slug] = true;\\n\\t\\t\\t}\\n\\t\\t\\tresults.push(title);\\n\\t\\t} else {\\n\\t\\t\\tslugs[slug] = title;\\n\\t\\t}\\n\\t});\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/each.js\": {\n            \"title\": \"$:/core/modules/filters/each.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/each.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator that selects one tiddler for each unique value of the specified field.\\nWith suffix \\\"list\\\", selects all tiddlers that are values in a specified list field.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.each = function(source,operator,options) {\\n\\tvar results =[] ,\\n\\tvalue,values = {},\\n\\tfield = operator.operand || \\\"title\\\";\\n\\tif(operator.suffix === \\\"value\\\" && field === \\\"title\\\") {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(!$tw.utils.hop(values,title)) {\\n\\t\\t\\t\\tvalues[title] = true;\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t} else if(operator.suffix !== \\\"list-item\\\") {\\n\\t\\tif(field === \\\"title\\\") {\\n\\t\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\t\\tif(tiddler && !$tw.utils.hop(values,title)) {\\n\\t\\t\\t\\t\\tvalues[title] = true;\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\t\\tif(tiddler) {\\n\\t\\t\\t\\t\\tvalue = tiddler.getFieldString(field);\\n\\t\\t\\t\\t\\tif(!$tw.utils.hop(values,value)) {\\n\\t\\t\\t\\t\\t\\tvalues[value] = true;\\n\\t\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\t} else {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(tiddler) {\\n\\t\\t\\t\\t$tw.utils.each(\\n\\t\\t\\t\\t\\toptions.wiki.getTiddlerList(title,field),\\n\\t\\t\\t\\t\\tfunction(value) {\\n\\t\\t\\t\\t\\t\\tif(!$tw.utils.hop(values,value)) {\\n\\t\\t\\t\\t\\t\\t\\tvalues[value] = true;\\n\\t\\t\\t\\t\\t\\t\\tresults.push(value);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/eachday.js\": {\n            \"title\": \"$:/core/modules/filters/eachday.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/eachday.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator that selects one tiddler for each unique day covered by the specified date field\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.eachday = function(source,operator,options) {\\n\\tvar results = [],\\n\\t\\tvalues = [],\\n\\t\\tfieldName = operator.operand || \\\"modified\\\";\\n\\t// Function to convert a date/time to a date integer\\n\\tvar toDate = function(value) {\\n\\t\\tvalue = (new Date(value)).setHours(0,0,0,0);\\n\\t\\treturn value+0;\\n\\t};\\n\\tsource(function(tiddler,title) {\\n\\t\\tif(tiddler && tiddler.fields[fieldName]) {\\n\\t\\t\\tvar value = toDate($tw.utils.parseDate(tiddler.fields[fieldName]));\\n\\t\\t\\tif(values.indexOf(value) === -1) {\\n\\t\\t\\t\\tvalues.push(value);\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/editiondescription.js\": {\n            \"title\": \"$:/core/modules/filters/editiondescription.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/editiondescription.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for returning the descriptions of the specified edition names\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.editiondescription = function(source,operator,options) {\\n\\tvar results = [];\\n\\tif($tw.node) {\\n\\t\\tvar editionInfo = $tw.utils.getEditionInfo();\\n\\t\\tif(editionInfo) {\\n\\t\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\t\\tif($tw.utils.hop(editionInfo,title)) {\\n\\t\\t\\t\\t\\tresults.push(editionInfo[title].description || \\\"\\\");\\t\\t\\t\\t\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/editions.js\": {\n            \"title\": \"$:/core/modules/filters/editions.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/editions.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for returning the names of the available editions in this wiki\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.editions = function(source,operator,options) {\\n\\tvar results = [];\\n\\tif($tw.node) {\\n\\t\\tvar editionInfo = $tw.utils.getEditionInfo();\\n\\t\\tif(editionInfo) {\\n\\t\\t\\t$tw.utils.each(editionInfo,function(info,name) {\\n\\t\\t\\t\\tresults.push(name);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\tresults.sort();\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/else.js\": {\n            \"title\": \"$:/core/modules/filters/else.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/else.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for replacing an empty input list with a constant, passing a non-empty input list straight through\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.else = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push(title);\\n\\t});\\n\\tif(results.length === 0) {\\n\\t\\treturn [operator.operand];\\n\\t} else {\\n\\t\\treturn results;\\n\\t}\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/decodeuricomponent.js\": {\n            \"title\": \"$:/core/modules/filters/decodeuricomponent.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/decodeuricomponent.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for applying decodeURIComponent() to each item.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter functions\\n*/\\n\\nexports.decodeuricomponent = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tvar value = title;\\n\\t\\ttry {\\n\\t\\t\\tvalue = decodeURIComponent(title);\\n\\t\\t} catch(e) {\\n\\t\\t}\\n\\t\\tresults.push(value);\\n\\t});\\n\\treturn results;\\n};\\n\\nexports.encodeuricomponent = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push(encodeURIComponent(title));\\n\\t});\\n\\treturn results;\\n};\\n\\nexports.decodeuri = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tvar value = title;\\n\\t\\ttry {\\n\\t\\t\\tvalue = decodeURI(title);\\n\\t\\t} catch(e) {\\n\\t\\t}\\n\\t\\tresults.push(value);\\n\\t});\\n\\treturn results;\\n};\\n\\nexports.encodeuri = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push(encodeURI(title));\\n\\t});\\n\\treturn results;\\n};\\n\\nexports.decodehtml = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push($tw.utils.htmlDecode(title));\\n\\t});\\n\\treturn results;\\n};\\n\\nexports.encodehtml = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push($tw.utils.htmlEncode(title));\\n\\t});\\n\\treturn results;\\n};\\n\\nexports.stringify = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push($tw.utils.stringify(title,(operator.suffix === \\\"rawunicode\\\")));\\n\\t});\\n\\treturn results;\\n};\\n\\nexports.jsonstringify = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push($tw.utils.jsonStringify(title,(operator.suffix === \\\"rawunicode\\\")));\\n\\t});\\n\\treturn results;\\n};\\n\\nexports.escaperegexp = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push($tw.utils.escapeRegExp(title));\\n\\t});\\n\\treturn results;\\n};\\n\\nexports.escapecss = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\t// escape any character with a special meaning in CSS using CSS.escape()\\n\\t\\tresults.push(CSS.escape(title));\\n\\t});\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/enlist.js\": {\n            \"title\": \"$:/core/modules/filters/enlist.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/enlist.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator returning its operand parsed as a list\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.enlist = function(source,operator,options) {\\n\\tvar allowDuplicates = false;\\n\\tswitch(operator.suffix) {\\n\\t\\tcase \\\"raw\\\":\\n\\t\\t\\tallowDuplicates = true;\\n\\t\\t\\tbreak;\\n\\t\\tcase \\\"dedupe\\\":\\n\\t\\t\\tallowDuplicates = false;\\n\\t\\t\\tbreak;\\n\\t}\\n\\tvar list = $tw.utils.parseStringArray(operator.operand,allowDuplicates);\\n\\tif(operator.prefix === \\\"!\\\") {\\n\\t\\tvar results = [];\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(list.indexOf(title) === -1) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\treturn results;\\n\\t} else {\\n\\t\\treturn list;\\n\\t}\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/field.js\": {\n            \"title\": \"$:/core/modules/filters/field.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/field.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for comparing fields for equality\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.field = function(source,operator,options) {\\n\\tvar results = [],indexedResults,\\n\\t\\tfieldname = (operator.suffix || operator.operator || \\\"title\\\").toLowerCase();\\n\\tif(operator.prefix === \\\"!\\\") {\\n\\t\\tif(operator.regexp) {\\n\\t\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\t\\tif(tiddler) {\\n\\t\\t\\t\\t\\tvar text = tiddler.getFieldString(fieldname);\\n\\t\\t\\t\\t\\tif(text !== null && !operator.regexp.exec(text)) {\\n\\t\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\t\\tif(tiddler) {\\n\\t\\t\\t\\t\\tvar text = tiddler.getFieldString(fieldname);\\n\\t\\t\\t\\t\\tif(text !== null && text !== operator.operand) {\\n\\t\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\t} else {\\n\\t\\tif(operator.regexp) {\\n\\t\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\t\\tif(tiddler) {\\n\\t\\t\\t\\t\\tvar text = tiddler.getFieldString(fieldname);\\n\\t\\t\\t\\t\\tif(text !== null && !!operator.regexp.exec(text)) {\\n\\t\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tif(source.byField && operator.operand) {\\n\\t\\t\\t\\tindexedResults = source.byField(fieldname,operator.operand);\\n\\t\\t\\t\\tif(indexedResults) {\\n\\t\\t\\t\\t\\treturn indexedResults\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\t\\tif(tiddler) {\\n\\t\\t\\t\\t\\tvar text = tiddler.getFieldString(fieldname);\\n\\t\\t\\t\\t\\tif(text !== null && text === operator.operand) {\\n\\t\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/fields.js\": {\n            \"title\": \"$:/core/modules/filters/fields.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/fields.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for returning the names of the fields on the selected tiddlers\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.fields = function(source,operator,options) {\\n\\tvar results = [],\\n\\t\\tfieldName,\\n\\t\\tsuffixes = (operator.suffixes || [])[0] || [],\\n\\t\\toperand = $tw.utils.parseStringArray(operator.operand);\\n\\t\\n\\tsource(function(tiddler,title) {\\n\\t\\tif(tiddler) {\\n\\t\\t\\tif(suffixes.indexOf(\\\"include\\\") !== -1) {\\n\\t\\t\\t\\tfor(fieldName in tiddler.fields) {\\n\\t\\t\\t\\t\\t(operand.indexOf(fieldName) !== -1) ? $tw.utils.pushTop(results,fieldName) : \\\"\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (suffixes.indexOf(\\\"exclude\\\") !== -1) {\\n\\t\\t\\t\\tfor(fieldName in tiddler.fields) {\\n\\t\\t\\t\\t\\t(operand.indexOf(fieldName) !== -1) ? \\\"\\\" : $tw.utils.pushTop(results,fieldName);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} // else if\\n\\t\\t\\telse {\\n\\t\\t\\t\\tfor(fieldName in tiddler.fields) {\\n\\t\\t\\t\\t\\t$tw.utils.pushTop(results,fieldName);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} // else\\n\\t\\t} // if (tiddler)\\n\\t});\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/filter.js\": {\n            \"title\": \"$:/core/modules/filters/filter.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/filter.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator returning those input titles that pass a subfilter\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.filter = function(source,operator,options) {\\n\\tvar filterFn = options.wiki.compileFilter(operator.operand),\\n\\t\\tresults = [],\\n\\t\\ttarget = operator.prefix !== \\\"!\\\";\\n\\tsource(function(tiddler,title) {\\n\\t\\tvar list = filterFn.call(options.wiki,options.wiki.makeTiddlerIterator([title]));\\n\\t\\tif((list.length > 0) === target) {\\n\\t\\t\\tresults.push(title);\\n\\t\\t}\\n\\t});\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/format/date.js\": {\n            \"title\": \"$:/core/modules/filters/format/date.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/format/date.js\\ntype: application/javascript\\nmodule-type: formatfilteroperator\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.date = function(source,operand,options) {\\n\\tvar results = [];\\t\\n\\tsource(function(tiddler,title) {\\n\\t\\tvar value = $tw.utils.parseDate(title);\\n\\t\\tif(value && $tw.utils.isDate(value) && value.toString() !== \\\"Invalid Date\\\") {\\n\\t\\t\\tresults.push($tw.utils.formatDateString(value,operand || \\\"YYYY MM DD 0hh:0mm\\\"));\\n\\t\\t}\\n\\t});\\t\\n\\treturn results;\\n};\\n\\n})();\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"formatfilteroperator\"\n        },\n        \"$:/core/modules/filters/format/relativedate.js\": {\n            \"title\": \"$:/core/modules/filters/format/relativedate.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/format/relativedate.js\\ntype: application/javascript\\nmodule-type: formatfilteroperator\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.relativedate = function(source,operand,options) {\\n\\tvar results = [];\\t\\n\\tsource(function(tiddler,title) {\\n\\t\\tvar value = $tw.utils.parseDate(title);\\n\\t\\tif(value && $tw.utils.isDate(value) && value.toString() !== \\\"Invalid Date\\\") {\\n\\t\\t\\tresults.push($tw.utils.getRelativeDate((new Date()) - (new Date(value))).description);\\n\\t\\t}\\n\\t});\\t\\n\\treturn results;\\n};\\n\\n})();\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"formatfilteroperator\"\n        },\n        \"$:/core/modules/filters/format.js\": {\n            \"title\": \"$:/core/modules/filters/format.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/format.js\\ntype: application/javascript\\nmodule-type: filteroperator\\nFilter operator for formatting strings\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\nvar formatFilterOperators;\\n\\nfunction getFormatFilterOperators() {\\n\\tif(!formatFilterOperators) {\\n\\t\\tformatFilterOperators = {};\\n\\t\\t$tw.modules.applyMethods(\\\"formatfilteroperator\\\",formatFilterOperators);\\n\\t}\\n\\treturn formatFilterOperators;\\n}\\n\\n/*\\nExport our filter function\\n*/\\nexports.format = function(source,operator,options) {\\n\\t// Dispatch to the correct formatfilteroperator\\n\\tvar formatFilterOperators = getFormatFilterOperators();\\n\\tif(operator.suffix) {\\n\\t\\tvar formatFilterOperator = formatFilterOperators[operator.suffix];\\n\\t\\tif(formatFilterOperator) {\\n\\t\\t\\treturn formatFilterOperator(source,operator.operand,options);\\n\\t\\t} else {\\n\\t\\t\\treturn [$tw.language.getString(\\\"Error/FormatFilterOperator\\\")];\\n\\t\\t}\\n\\t} else {\\n\\t\\t// Return all unchanged if the suffix is missing\\n\\t\\tvar results = [];\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tresults.push(title);\\n\\t\\t});\\n\\t\\treturn results;\\n\\t}\\n};\\n\\n})();\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/get.js\": {\n            \"title\": \"$:/core/modules/filters/get.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/get.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for replacing tiddler titles by the value of the field specified in the operand.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.get = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tif(tiddler) {\\n\\t\\t\\tvar value = tiddler.getFieldString(operator.operand);\\n\\t\\t\\tif(value) {\\n\\t\\t\\t\\tresults.push(value);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/getindex.js\": {\n            \"title\": \"$:/core/modules/filters/getindex.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/getindex.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nreturns the value at a given index of datatiddlers\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.getindex = function(source,operator,options) {\\n\\tvar data,title,results = [];\\n\\tif(operator.operand){\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\ttitle = tiddler ? tiddler.fields.title : title;\\n\\t\\t\\tdata = options.wiki.extractTiddlerDataItem(tiddler,operator.operand);\\n\\t\\t\\tif(data) {\\n\\t\\t\\t\\tresults.push(data);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/getvariable.js\": {\n            \"title\": \"$:/core/modules/filters/getvariable.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/getvariable.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for replacing input values by the value of the variable with the same name, or blank if the variable is missing\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.getvariable = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push(options.widget.getVariable(title) || \\\"\\\");\\n\\t});\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/has.js\": {\n            \"title\": \"$:/core/modules/filters/has.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/has.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for checking if a tiddler has the specified field or index\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.has = function(source,operator,options) {\\n\\tvar results = [],\\n\\t\\tinvert = operator.prefix === \\\"!\\\";\\n\\n\\tif(operator.suffix === \\\"field\\\") {\\n\\t\\tif(invert) {\\n\\t\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\t\\tif(!tiddler || (tiddler && (!$tw.utils.hop(tiddler.fields,operator.operand)))) {\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\t\\tif(tiddler && $tw.utils.hop(tiddler.fields,operator.operand)) {\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\telse if(operator.suffix === \\\"index\\\") {\\n\\t\\tif(invert) {\\n\\t\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\t\\tif(!tiddler || (tiddler && (!$tw.utils.hop(options.wiki.getTiddlerDataCached(tiddler,Object.create(null)),operator.operand)))) {\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\t\\tif(tiddler && $tw.utils.hop(options.wiki.getTiddlerDataCached(tiddler,Object.create(null)),operator.operand)) {\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\telse {\\n\\t\\tif(invert) {\\n\\t\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\t\\tif(!tiddler || !$tw.utils.hop(tiddler.fields,operator.operand) || (tiddler.fields[operator.operand].length === 0)) {\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\t\\tif(tiddler && $tw.utils.hop(tiddler.fields,operator.operand) && (tiddler.fields[operator.operand].length !== 0)) {\\n\\t\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\t\\t\\t\\t\\n\\t\\t}\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/haschanged.js\": {\n            \"title\": \"$:/core/modules/filters/haschanged.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/haschanged.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator returns tiddlers from the list that have a non-zero changecount.\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.haschanged = function(source,operator,options) {\\n\\tvar results = [];\\n\\tif(operator.prefix === \\\"!\\\") {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(options.wiki.getChangeCount(title) === 0) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t} else {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(options.wiki.getChangeCount(title) > 0) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/indexes.js\": {\n            \"title\": \"$:/core/modules/filters/indexes.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/indexes.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nFilter operator for returning the indexes of a data tiddler\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.indexes = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tvar data = options.wiki.getTiddlerDataCached(title);\\n\\t\\tif(data) {\\n\\t\\t\\t$tw.utils.pushTop(results,Object.keys(data));\\n\\t\\t}\\n\\t});\\n\\tresults.sort();\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/insertbefore.js\": {\n            \"title\": \"$:/core/modules/filters/insertbefore.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/insertbefore.js\\ntype: application/javascript\\nmodule-type: filteroperator\\n\\nInsert an item before another item in a list\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nOrder a list\\n*/\\nexports.insertbefore = function(source,operator,options) {\\n\\tvar results = [];\\n\\tsource(function(tiddler,title) {\\n\\t\\tresults.push(title);\\n\\t});\\n\\tvar target = options.widget && options.widget.getVariable(operator.suffix || \\\"currentTiddler\\\");\\n\\tif(target !== operator.operand) {\\n\\t\\t// Remove the entry from the list if it is present\\n\\t\\tvar pos = results.indexOf(operator.operand);\\n\\t\\tif(pos !== -1) {\\n\\t\\t\\tresults.splice(pos,1);\\n\\t\\t}\\n\\t\\t// Insert the entry before the target marker\\n\\t\\tpos = results.indexOf(target);\\n\\t\\tif(pos !== -1) {\\n\\t\\t\\tresults.splice(pos,0,operator.operand);\\n\\t\\t} else {\\n\\t\\t\\tresults.push(operator.operand);\\n\\t\\t}\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/is/binary.js\": {\n            \"title\": \"$:/core/modules/filters/is/binary.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/is/binary.js\\ntype: application/javascript\\nmodule-type: isfilteroperator\\n\\nFilter function for [is[binary]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.binary = function(source,prefix,options) {\\n\\tvar results = [];\\n\\tif(prefix === \\\"!\\\") {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(!options.wiki.isBinaryTiddler(title)) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t} else {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(options.wiki.isBinaryTiddler(title)) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"isfilteroperator\"\n        },\n        \"$:/core/modules/filters/is/blank.js\": {\n            \"title\": \"$:/core/modules/filters/is/blank.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/is/blank.js\\ntype: application/javascript\\nmodule-type: isfilteroperator\\n\\nFilter function for [is[blank]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.blank = function(source,prefix,options) {\\n\\tvar results = [];\\n\\tif(prefix === \\\"!\\\") {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(title) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t} else {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(!title) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"isfilteroperator\"\n        },\n        \"$:/core/modules/filters/is/current.js\": {\n            \"title\": \"$:/core/modules/filters/is/current.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/is/current.js\\ntype: application/javascript\\nmodule-type: isfilteroperator\\n\\nFilter function for [is[current]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.current = function(source,prefix,options) {\\n\\tvar results = [],\\n\\t\\tcurrTiddlerTitle = options.widget && options.widget.getVariable(\\\"currentTiddler\\\");\\n\\tif(prefix === \\\"!\\\") {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(title !== currTiddlerTitle) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t} else {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(title === currTiddlerTitle) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"isfilteroperator\"\n        },\n        \"$:/core/modules/filters/is/draft.js\": {\n            \"title\": \"$:/core/modules/filters/is/draft.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/is/draft.js\\ntype: application/javascript\\nmodule-type: isfilteroperator\\n\\nFilter function for [is[draft]] analagous to [has[draft.of]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.draft = function(source,prefix,options) {\\n\\tvar results = [];\\n\\tif(prefix === \\\"!\\\") {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(!tiddler || !$tw.utils.hop(tiddler.fields,\\\"draft.of\\\")) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t} else {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(tiddler && $tw.utils.hop(tiddler.fields,\\\"draft.of\\\") && (tiddler.fields[\\\"draft.of\\\"].length !== 0)) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\t\\t\\t\\t\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"isfilteroperator\"\n        },\n        \"$:/core/modules/filters/is/image.js\": {\n            \"title\": \"$:/core/modules/filters/is/image.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/is/image.js\\ntype: application/javascript\\nmodule-type: isfilteroperator\\n\\nFilter function for [is[image]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.image = function(source,prefix,options) {\\n\\tvar results = [];\\n\\tif(prefix === \\\"!\\\") {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(!options.wiki.isImageTiddler(title)) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t} else {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(options.wiki.isImageTiddler(title)) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"isfilteroperator\"\n        },\n        \"$:/core/modules/filters/is/missing.js\": {\n            \"title\": \"$:/core/modules/filters/is/missing.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/is/missing.js\\ntype: application/javascript\\nmodule-type: isfilteroperator\\n\\nFilter function for [is[missing]]\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n/*\\nExport our filter function\\n*/\\nexports.missing = function(source,prefix,options) {\\n\\tvar results = [];\\n\\tif(prefix === \\\"!\\\") {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(options.wiki.tiddlerExists(title)) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t} else {\\n\\t\\tsource(function(tiddler,title) {\\n\\t\\t\\tif(!options.wiki.tiddlerExists(title)) {\\n\\t\\t\\t\\tresults.push(title);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\treturn results;\\n};\\n\\n})();\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"isfilteroperator\"\n        },\n        \"$:/core/modules/filters/is/orphan.js\": {\n            \"title\": \"$:/core/modules/filters/is/orphan.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/is/orphan.js\\ntype: application/javascript\\nmodule-type: isfilteroperator\\n\\nFilter function for [is[orphan]€€