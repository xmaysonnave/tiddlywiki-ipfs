{
    "title": "$:/plugins/ipfs",
    "description": "IPFS with TiddlyWiki",
    "author": "Xavier Maysonnave",
    "version": "0.4.0-beta-tw-v5.1.23+build-210320353",
    "license": "GPL-3.0-or-later",
    "tags": "$:/ipfs/core",
    "core-version": ">=5.1.2",
    "_project_uri": "https://github.com/xmaysonnave/tiddlywiki-ipfs",
    "plugin-priority": "71000",
    "plugin-type": "plugin",
    "list": "readme changelog",
    "dependents": "",
    "type": "application/json",
    "text": "{\n    \"tiddlers\": {\n        \"$:/favicon.ico\": {\n            \"title\": \"$:/favicon.ico\",\n            \"text\": \"AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACMuAAAjLgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANd3VRrYeFdb2HhXidh4V6vYeFe52HhXudh4V6rYeFeJ2HhXW9d3VRoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1ndVBdh4V17YeFfE2HhX/th4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/th4V8TYeFde1ndVBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANd3Vk7YeFfd2HhX/9h4V//YeFf/2HhX/9h4V//ekXr/4qWV/9qBY//YeFf/2HhX/9h4V//YeFf/2HhX/9l6Wv/v0Mjg////vP///6b///8EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANZ2VgvYeFeg2HhX/9h4V//dj3n/57ap/+Spmv/agGL/89vV////////////8dfR/9h4V//YeFf/2HhX/9yJcP/x19H/9uXh////////////8tnU5NqJcwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXd1UV2HhXydh4V//YeFf/4JyK//35+P////////7+//bl4P///////fn3//Lb1f/gnoz/2HhX/9h4V//YeFf/5bCj//////////////////Xj3v/YeFf/2HhXydd3VRUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA13dWDth4V87YeFf/2HhX/9qBZP/68e///////+3Jwf/1497///////rv7f/cinL/2HhX/9h4V//YeFf/2HhX/9h4V//msaT/////////////////5Kud/9h4V//YeFf/2HhXztd3Vg4AAAAAAAAAAAAAAAAAAAAAAAAAANJ4SwHYeFey2HhX/9h4V//YeFf/7Mi////////v0Mj/8NPM////////////4aGQ/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/+Gfjf////////////z49v/Ze1v/2HhX/9h4V//YeFf/2HhXstJ4SwEAAAAAAAAAAAAAAAAAAAAA2HhXath4V//YeFf/2HhX/9h4V//79PL///////DUzf/////////////////agGH/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/3Yxy////////////9eHd/9h4V//YeFf/2HhX/9h4V//YeFf/2HhXagAAAAAAAAAAAAAAANZ2VxXYeFfw2HhX/9h4V//YeFf/2HhX//Tf2v///////vz7/////////////////+Gei//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//kq5z////////////y2dP/2HhX/9h4V//YeFf/2HhX/9h4V//YeFfw1ndWFQAAAAAAAAAA2HhXhth4V//YeFf/2HhX/9h4V//YeFf/3Y94//36+f//////////////////////7Me+/9h4V//YeFf/2Xxd/9uGav/ch2v/2Xtb//La1f////////////v08//cjXX/2HhX/9h4V//YeFf/2HhX/9h4V//YeFeGAAAAANRzUwbYeFfs2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/6sK4///////////////////////89vT/9+rm//z29P///////////////////v3///7+//////////////////z39v/ms6b/2HhX/9h4V//YeFf/2HhX/9h4V+zUc1MG2HhWTNh4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//ZfV///Pb1///////////////////////////////////////////////////////////////////////////////////////y2dP/2Xpa/9h4V//YeFf/2HhX/9h3VkzYeFeQ2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/+rAtf///v7////////////////////////////////////////////////////////////////////////////////////////////ouq//2HhX/9h4V//YeFf/2HhXkNh4V8PYeFf/2HhX/9h4V//YeFf/2HhX/9h4V//ek37//v39//////////////////////////////////////////////////////////////////////////////////////////////////rw7v/78vD/9ePe/9uHbv/YeFfD2HhX59h4V//YeFf/2HhX/9h4V//YeFf/2HhX/+i6rv//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////9N/a/9h4V+fYeFf32HhX/9+Xg//v0Mn/+Ozo//z29f/78/H/+vLw////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////4J2K99h4V/ruzMT///7+//79/f/78e//+u7r//z18/////7////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////sycD66sG37f36+f/pvLH/2oFk/9h4V//YeFf/2HhX/9qCZf/krZ//+e/s///////////////////////////////////////79PH/+/Lw//77+v////////////79/P/57er///////////////////////////////////////Pc1+z9+vnm5a+h/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//ZfV7/5rSn/+/Sy//04dz/9N7Z/+7Oxv/lsaP/24dt/9h4V//YeFf/2HhX/9p/Yf/bhWj/2HpZ/9h4WP/9+Pb/////////////////////////////////9ubhzf36+frYeVn/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX//bm4v/////////////////////////////////99/a5/fj32th4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/7s3F///////++/v/8NPM/+rAtv/lrqH/79LL//36+en///+B24Ro+th4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//elYD//fj2/+e2qv/YeFf/2HhX/9h4V//YeFf47c/IJf7+/gHYeFek2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//Zelr/2HhX/9h4V//YeFf/2HhX/9h4V6QAAAAAAAAAANd3VyvYeFf82HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf813dXKwAAAAAAAAAAAAAAANh4V5LYeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V5IAAAAAAAAAAAAAAAAAAAAA13hVDNh4V9fYeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFfX13hVDAAAAAAAAAAAAAAAAAAAAAAAAAAA13dXKdh4V+zYeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX7Nd3VykAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA13dWNth4V+zYeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V+zXd1Y2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA13dWKNh4V9XYeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFfV13dWKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1nZWC9h4V47YeFf72HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf72HhXjtZ2VgsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANh3VifYeFee2HhX9th4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf/2HhX/9h4V//YeFf22HhXnth3VicAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXdlYO2HhWWdh4V5rYeFfJ2HhX6th4V/nYeFf52HhX6th4V8nYeFea2HhWWdd2Vg4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/+AH//8AAP/+AAAf+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAABwAAAA8AAAAPgAAAH8AAAD/gAAB/8AAA//wAA///AA/8=\",\n            \"type\": \"image/x-icon\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $:/isAttachment $:/isEmbedded\"\n        },\n        \"$:/ipfs/icons/dns\": {\n            \"title\": \"$:/ipfs/icons/dns\",\n            \"text\": \"\",\n            \"type\": \"image/png\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $:/isAttachment $:/isEmbedded\"\n        },\n        \"$:/ipfs/icons/ens\": {\n            \"title\": \"$:/ipfs/icons/ens\",\n            \"text\": \"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV/TSotUHCwo4pChOlkQFemoVShChVArtOpgcv2EJg1Jiouj4Fpw8GOx6uDirKuDqyAIfoA4OTopukiJ/0sKLWI8OO7Hu3uPu3eA0Kwy1QxMAKpmGelkQszmVsXgK8IYRABxhGRm6nOSlILn+LqHj693MZ7lfe7P0ZcvmAzwicSzTDcs4g3imU1L57xPHGFlOU98Tjxu0AWJH7muuPzGueSwwDMjRiY9TxwhFktdrHQxKxsq8TRxNK9qlC9kXc5z3uKsVuusfU/+wnBBW1nmOs0RJLGIJUgQoaCOCqqwEKNVI8VEmvYTHv5hxy+RSyFXBYwcC6hBhez4wf/gd7dmcWrSTQongJ4X2/4YBYK7QKth29/Htt06AfzPwJXW8deaQPyT9EZHix4B/dvAxXVHU/aAyx1g6EmXDdmR/DSFYhF4P6NvygEDt0Dvmttbex+nD0CGukrdAAeHwFiJstc93h3q7u3fM+3+fgBr1HKk47w5KwAAAAZiS0dEAAAAAAAA+UO7fwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+QMFwUEGU/z3jwAAAJZSURBVCjPhZNLSFVRFIbXXmfvs8+9evV6b6URQk0iCg16IESjwkQiDQkbRRPDZ1SGaRRBEWG3wkKNMIpolgMjzMpyEFGBJJFFg2jQg0pLTe/Dc84+j70bKXJ99M0WrG/BWvyLwALcaBeFnivXSKVMzrWx6gb+Lr2HzC1il1MYDvFailgzNWUX2bbv5uYF+32pHkwmzPbmpmw5T2zrsFZkBvQuqmGZEO6+mmq9BwCg87ooCATZG1+qAdMWVUfqgqMAAAgA0HI+tVwiH1QUywXIgfF48v7MwPo6/kFIGQOGu40M4237LWfbrJh09YoJk6yetJVjut6x0yeiau4KcdNqdUB9kpSsRE57r9y28jF2R5SMmSpjJAkwmvA7Gw/xj+mHaGkImbb0DjsI0tdIBDlrRtC1CzxgDY1b1s+JlHUOFuH4Qf2ZC7LbQwBfI6XoM1K4bkPmdiDJkrtns6ZgCWzPaXI0lXQ1yEehgfJ0bNm4OSsB/+HF5z9ZNpGtggJBh8IPQUnIN/TYUlL51d/haUafvv8y8tJBNYyCwmObAQgd9zf2OcWLmjmhMzTCV40qudUl3in0iHvRouqvyYBYnHYcfZQKpju1T8R6I2rUG9EAZESM1KUyox+vlRrffeLvsaj6ldLJ2njQODlXquoziRmgbTRE9GAO+xYJaT2zAejayV4zJTY5VPYmDGw68MoumBGnw9reJCfFPpMPo7pXdK9y2di8kFc9T2AiwOpdVBV5jrnLRsomKR9kEm7mTIuOrh1hueB3zFA5FC/UlZ8rAYIe0b52b8keTu/5B84rA4ufLFw3AAAAAElFTkSuQmCC\",\n            \"type\": \"image/png\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $:/isAttachment $:/isEmbedded\"\n        },\n        \"$:/ipfs/icons/github\": {\n            \"title\": \"$:/ipfs/icons/github\",\n            \"text\": \"\",\n            \"type\": \"image/png\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $:/isAttachment $:/isEmbedded\"\n        },\n        \"$:/ipfs/icons/ipfs\": {\n            \"title\": \"$:/ipfs/icons/ipfs\",\n            \"text\": \"iVBORw0KGgoAAAANSUhEUgAAAA4AAAAQCAYAAAAmlE46AAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV/TSotUHCwo4pChOlkQFemoVShChVArtOpgcv2EJg1Jiouj4Fpw8GOx6uDirKuDqyAIfoA4OTopukiJ/0sKLWI8OO7Hu3uPu3eA0Kwy1QxMAKpmGelkQszmVsXgK8IYRABxhGRm6nOSlILn+LqHj693MZ7lfe7P0ZcvmAzwicSzTDcs4g3imU1L57xPHGFlOU98Tjxu0AWJH7muuPzGueSwwDMjRiY9TxwhFktdrHQxKxsq8TRxNK9qlC9kXc5z3uKsVuusfU/+wnBBW1nmOs0RJLGIJUgQoaCOCqqwEKNVI8VEmvYTHv5hxy+RSyFXBYwcC6hBhez4wf/gd7dmcWrSTQongJ4X2/4YBYK7QKth29/Htt06AfzPwJXW8deaQPyT9EZHix4B/dvAxXVHU/aAyx1g6EmXDdmR/DSFYhF4P6NvygEDt0Dvmttbex+nD0CGukrdAAeHwFiJstc93h3q7u3fM+3+fgBr1HKk47w5KwAAAAZiS0dEAAAAAAAA+UO7fwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB+QMFwUDBo26RQ4AAAAZdEVYdENvbW1lbnQAQ3JlYXRlZCB3aXRoIEdJTVBXgQ4XAAAB/UlEQVQoz42TS2sTURiGn3PLdDK5dKat9YYoLoqu3Im6cNeFy/6AgkEsiAvpDyhS3ClFJCuRLor4E1wE+yMqQsWF9dKmTWOaqeklmcyZcSEVm47guzy8zzkv7/cdQYYmF5euAc+BBHhUq0y/H/SIAeAUMO+4+XvlYEQB7O60bO/w4CXwuFaZ3j4GTi4u5YCH2pi5YPx0uVj2EeL3nWma0gnbtBpbbRv354FqrTIdi8nFpTtCyIXh0dEJf2wcKWVWehJraTe3CVvN1SRJZmVv7+C1MWaiOBz8EwKQSlH0fYzjXEli+0YKITHG5evHVZr1Day1JyBrLc36BvW1z5T9UZQ2aCEE+UIB1/PohG3WWh8YO3cek8sB0I967DQaFMs+Zy9eRgiBEAL9pyUhKPkBNi7xY71ObCOEkuTzBc5cuITS+nj0wVhKawqlMtFBl9QmlIKRExCAzipiyPMo+QFOIY/rFbLLStOUNE3Jellrc+L8yC9tHLP/c5f/VSdsY+M+MkmSqZ3G1krY3CbJGMXfC9BqbNLaqq8AU+p77e2XsRu3X1kbb+53dq9LpTzjOETdLjqXw3FdOmGbxvq35uH+3qxUcubd/btrx5b85tMXgVRqzhlyH+icMY6Xpx9Fvah7WAWeLM9UwszfcaRbz6pXhRQLjufGwOzyTOXToOcXpMLGTLGqOcgAAAAASUVORK5CYII=\",\n            \"type\": \"image/png\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $:/isAttachment $:/isEmbedded\"\n        },\n        \"$:/ipfs/image/bluelight\": {\n            \"title\": \"$:/ipfs/image/bluelight\",\n            \"modified\": \"20201224045157536\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $:/isAttachment $:/isEmbedded\",\n            \"type\": \"image/png\",\n            \"text\": \"iVBORw0KGgoAAAANSUhEUgAAAS4AAAEaCAIAAAAgyS2vAAAeJnpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarZtnshw5doX/YxVaAtyFWQ5shHag5es7qEc2TTdHMyGyyXpdlZUJXHMMALrzP/993X/xq8bYXLbaSi/F8yv33OPgh+Y/vz6vwef39/sVz9dP4ef3XRhfP0ZeE6/p80E5n9f3uf31hZq/3p8/v+/q+npS+7rR1wfc+P1KerJ+/rqufd0oxc/74ev/Xf/63sg/TOfrT/42xa+b//b/lWBs434punhSSMw8NT0lff4M/tj7mwfzeeDn8PV++PvYue8//hK8c79P8afY+W8xTT+HwvnydUH5JUZf7wf75f30fXrx56z571n76YNYyMuPv36I3b273Xs+sxu5EKnivib1LYTvJy7kJjm9rxV+V/4YP9f3u/O7McVFxjbZnPxeLvQQieMNOewwwg3nva6wGGKOJ1ZeY1wxvfdaqrHHpaCnrN/hxpp62i418rTIWuLt+H0s4T23v+et0HjyDlwZAzcLfOO33+7v3vxPfn+/0b0q3RAUTFIfPgmOqmmGoczpb64iIeF+xdRefN9v9z2tf/1SYhMZtBfmxgSHn59bTAt/1VZ6eU5cZz47/2mNUPfXDQgRzzYGQ0Xn4EtIFkrwYEUNgTg28jMYeUw5TjIQzOIO7pKblArJaVHP5js1vGujxc/bQAuJsFRSJTU9DZKVs1E/NTdqaFiy7MysWLVm3UZJJRcrpdQijBo11Vytllprq72Ollpu1kqrrbXeRo89AWHWS6+ut977GDx0cOvBtwdXjDHjTDNPm2XW2WafY1E+Ky9bZdXVVl9jx5027b/Lrm633fc44VBKJx875dTTTj/jUms33Xztlltvu/2O71n7yurPWQu/ZO7PWQtfWVPG8ruu/pU13q712y2C4MSUMzIWcyDjVRmgoKNy5lvIOSpzypnvkaawSNaCKTk7KGNkMJ8Q7Ybvufsrc3/Mm7P8b+Ut/lPmnFL3/5E5p9R9Ze73vP1N1vZ4jJJegtSFiqlPF2DjohEb/4HH/8Zrmasp4rWHFkdzZ+S+yK+vFizTV2MTp14XM9otz5pXOWMu39KOfeZdTszMptm7K4illzHd3vvasLaYku29FjRVbwWJ/Uh8Qu0E8hFn3CXlvXPugdjvclMPe6TueXitydGNZS//xjz8f/7q/uED7n8qfdO2HZtnUzKTuohxH6pthFwptbBzHzfXZCs4yqGulGqJl28QhLYWkxm1gjNnDJI2Tl9xUhD75BJaM4DpVvI7eVrbx985uhtn5kJpENbOZ8Ha5RYLbEDuUMxzdvAr0y15UQ7cozGItBM1RQmVNdIsbR6y1k6+o59TZllmmdK9cRD16S+N1G33ct6Ej0/Tl8nwejqNBuO62javc29X7xtMsp3HsZjok9RGirVl8zzex3l4OF87sVOxt1kgq2GMdccoLVP/C2Zz+0ZCkxqRPCcLBW1XGlP0VdfK1ExhiGqVRQj97I3Bb7qxldLWOVYJTfCuzNMv9NLqPYynrnxPYIzzzBbuAYtordivlbDPXOGseQIzGucy45zu7hVGTjAtEaSq0JLbGxkQZzE0snz92TymNcUAoImJW9e+yOOeYaYBvoxJy4Jri6m9Up/rpOz/k577enXCKMZTTfNe0M6MdS4KkMhTIsaECw+96Ku9GFcq+xJtMldDbbNoBgUQcsmvCrUJpkxvnmm1x0pcbvB7l5lO8nPOQpdPAlQKhZstnNpCO6PS9LvSbo7SjAgdWyo2ZgyY7poTX2nD6IBkgHL1p60UxyJ6sO0dJxFypGhFNCwCzo3GaTPQJMA9EaUEqMcd5wzUX1+1l3wiwc0RfOB5dFD62851+gGOL9/Chg6iT5bKZQ+g/M41QOnL3z4OowT6AOApArNlGwnW795huR5uN+tTgMfsYoh7rtX54ZyHgqP0cAjnyQiveBYug7ntIvwffc0B7lmYbkwIdfcWF+h+PIV2eqGAwhy6roeV94FXJo1qDBtWBKPbEcnMls/8qgH35yJZ5UJ7MAjK8pJERtksQTtG6NWE+XgSV0h/3nNCr6VAe7suHt4vapFO8VwgMdpB5rFvLcR8KaKFoqKbxh2BJ50eb1nI4znapQpL24Ui4MPA18rYvpO8mjzsl9JSYQbK8GxwbtqeQOfMRvGB8rQP4H+CaIpaqauIGNdgDpXuhC/uoe8BerQxHNxorhN6C0iBI6nZ7WZaEOjdBVNDLG4k0sHAkQC8gV79FopgqvvoaoT5AAgpGLDnCiF7qJDpJZU3AbahHmd3nQE6trMIBmOOfZHHdUEyKvD6ix6xvCHoMs3wAFT6pmJaGoBYlJbkr+Ho1iKB0DvfmBm0o9FmMKpu7ciHrxAQEv5HQvydeEg/UgfHoXsv2JTy0KeXLgcF6DtgZ+8kZinceOIkAFegcV+4IUNGO45TzdHS5IuJgqQyDMRqIZmol6ySKO3jsYB0WjJCQdaOYJZU0yKUtIFCuxFsjSDCOULVf4VfByaIUoEqOlB0gNIDfiLDDrRQHkCiG/O5FuAG4LsVyAzyX/TraP0gh9beFPPsVEd4KI8sy1M/jWvNvVsAMpCUxMCucHGpRgmtiyAJO/lhHb8kmX8O+rDDJSnQhtQRKgpJs8bYrudM3fNEHtORa7e3shOkf2mwXSpubls/JXSwF2iM/uoGcx6fbwM1uBWoWxzAC/JC3iUJYe6aEQCktW5BfQ/ac8iSbxqP1u991zP3vbjBud60DsjAkNzcponwFpy0T70kXLVoaBAezjTDCzHciRqo6R6yVIgi7T24B09CsOAgfV1QxaaNIp/N2vyEJ0ySrFJ9eNMBFIATKNYjbVPn02PoKzmD4RM9THM4sAkpCzBTybLLpA1tRFfMDMq2a56IbZo3LjVR8spblhagx1K+IWo2KzqGHfgIpR9aj3BmzMJQun3r4ijq6ugC6ztA9kAD/vaeFIkMDEPZjow/G24Ji+NET9IBw1MxhWDigdMi2nNLj6ikUFGwE4OUFGXUcCKNf8O8CwjNyOOzzoXnOgQEODNtfwgp40ILoJtIHjJoCj0QNke6S6AWhifF/nUDKjsPh+bFfECXyPKQYIi6U/8U1LxZ1bSJH3EqMBNR7dy/pZsiKfeB8kN9TAyGQ/YUZApfmHQI6DmQcx3B1Icv+sJrB1Q9nmICN0hsOwhzlVQQZSIWsb5YUX7WcpJ8FfiRvFQPDcebOCauw4bZP72iNmGZS22h2I50ecZkeFAcEORv/rsXJaEaBGI+n5WOJMY00NcU2WX6c9brqzQxasUtvA/slcge6o6XgAmziAG6cB8WlYZPXK++plwV14ZZxyHOktPiWQEBSkFCASS3i1POWfQvcNcKIUOzUasGbRCWab59GGwb4qNgW9AmACrpQMSGsmERkD9Qw1C4Sr/iDbVg05DwFCuay4qIHA2jiwpVDCPMQa+AMChQvA4Y01ywRINTizPQhOSfmZJTAQJ0SG162hgAYYIEwSh6uoTSJpgegK8qb+j8ONQHjFoqSoPKoHSkR41PJ0+oMN6kcfY6uAN0Gx72A7biJDTP5XbC0xzdPDXC4umTKi8VSGfwxKaFLQ8GoAcM+Y5aApMQxfgPckmLvgrr6M8MVEuN3IK2BtT6XZDD+5BraPlAD9IH7z2EUkJ4MU/UKk0Dx9L8qFLUsz53qGmQE3JSR2tO1Ea/aW+KRMECyWRlE6NmcGAgXShx0OAxLD7gBbp2QS26jrRTOxeEqyhgcO1q2cKeeCctF3xF6K8CU987iUKin0FmSpRyNanr60yX5KyayVprQNx1mRd68KYQVaOoSUo3Gu13mTt6elGcSQYXX8Ig8SjQkTAfhAvI5tiyZzYHEczYJwKEFkQTImhh2lZ8fsWFhJJNCsWHplAKtK676DaTtgS2ADDYtzdQGflxGw2B3ENegZMkqqa5F/SDQ6n41JvALCiuUVMNwU5SkFqkaF6aGgGMcyaIqcHxwq7V0EAd7DNocAigcFBhTFXaQMgNZJ14Db0LH6y2O3UO9ZF6ejhmLGyQEZhoCox7xARgA/PcHRGcayULzJGqokFq9ss9U9AVa1AReURE0VERvmmQsG8BRtIokzBmJTok1W+qIq0nKqh/yRrCtXp9ThHQ2Oj9DWnBo7QNcE5UZOSqEDldrsblhIskBYnmwu7GtfvyuOzQMQzwCNTRJcPhfbQBIN0pUfxWzkMjXZd2o58pPzmMTV7oQWlan7XE49CVKw6s9tFiQMHcY52pJUac0bIgywUXfMc9oOngWq0WaTmyS7FFg5MRtRsWSeIseAC/+W6JfPI03rhSuWU9eP6g+nd0TwAQIKpFNw87J2kPx/jRQBG9AzPywAbHhGpBSwAloFgQn72jucLefdNkX3gv49sBfENkvaaF6YMWEnmTG2AGcLsT3kFUTvq0eFWN9Cb8fT0EnUotGBLQp6GcnoeluZaDY3k2lgtMV4qu2ZDOfrRHuiGOPgoVGFcaGZbBuAJNs4ZZIk18KKdL87ir7kFcEyvMHNm4yFdsvwEuB/0OYNOIICSEDt4F8oj5NC00dJisyJB52tVxD4a9eeQ1rV0gaCpl3JGaWJsKFSGEUYLYP1+aRB5czPi31oPU67fmusZyxYNmJP5tt+S39QMdayFOFn1I5kqnUZv0JmNvWrgqkZtSVolv4wzx4dARHEADk/iStFRRWoIUI0bJXwx8Bp+xLNRglew5YBsshmXGHyHd6+1FIn0AbLLtOZ6W6mdLpbUmVu+kMjTrCUuetTSCHYLEyRJoS7VW1FmjeSs9nuK+DtcCkw+CCMyibUDMRpNxARxLPxZgj3gueQfpbBAvXoYC7DwepltouLLAI4pfa4QlGsAHl7QlErwUAi/T4HRMcQJTswEhg0kD7UJI+Gx+npcnvLbnbiAkuEf1hhnzAAArUlkrj8AxM8B+Y5ZAEqOXofOZV+cbuYFh4tVG5h2lj9/V+knXTpAWlikFYhHUuFDMRkWgFDBCHQFaGrEGwCCshbLTgHGcgJgD7KlxZJP4YgxZNSS3FoxI6kHoIuIbIk7uVgYW5+gVpKUlz6sGLzjFFN2l1Cr/XZTF1BpICRkXQkhBECwRCESz4ylIcTFUCGxynwU0xgtfpYjHACEZYhiSCCUGSZKqAsklaT+K0WP7Mes1Fhp/hqZQbakRbkuhrQTUQrxMzyVmDBDivW+ZFb2PvQ15hzG6r1I/IDXuEvr1i9JGPNvSck9JHoSuQ1LYSKhbKPEkXaUKohojz8M44/Fgg4D/i9hu6yiWkE4DrOdCDxDI3OCUBY1+LKEW66KJwrlvDFTJotbBVLGcdE5jPFskNptZp4rruPheyJc0RzgFzc4joWxkd4f/50LL+EUvICN4E1V1Zu2Cl0N+lmltB8LSysLGZQ6G4SmTEykdRK6jDYirkA/LThi2XDu0ikPSTh+soN1DS7iIkewxWiakvuAYO8QG2uEusKJaqMzDI0M7BWQZvZffMsyQKSFtxIMS4f+0Hi0EXGIGuDDS5Xtq1VY+G3fU4HGLDGkNiC3OGLTepvW031cdTkEmVWaMMKXwQy7UQZeNdk1CGb0+kKG4OPQ9fh2vRJZB+0Q0J72D6QYR65rUM8MnNTKC6PyUGrSJrXfn0dnCr+H/FhpEux2YoAkNA1mUeyMWk5g8CYq4X8akD0hCB4StCRQS6IAHwA+K3QwkIbiNAAMEFGTGnPoO55kYFJvK3CEkvnoQ+16bDNQLIMb1G14jiFt1ZknbDwU63VoKWhgoZAF+Zk7JT5C/1IiZoTiQJ/ktriKrJK5QX+4TWGjnVo9ikXPvWmT5wbejpcaVEPbnInKnXCjcjvYM8DA2SIbKyZUgzEfO2kRAA6Gx0JqY4zXlp0x5geU3E7qoi0OCA+2JbkNV0IIk4CAjHKwJT71Fk9ghGqAnLY3JQFM72hcAz5mL7kJjB4x1p1WIKwpsKeW+IvlctjJAP1wtl0pTFTw4N4MdiSNCVW6ax9M8TRYGENy3hZTn4Eri11A6oTVXEwpnEEkiiM7jRx67Ef9a3/UooCN45o60Dd07IWngNhGLO1tAZEydXMhHu1ngBzNH5lDZ9S3FSiWPSPlDemiCJlEFRqKrETzgCwxfk9qqIoQ0m9a1L8K1NNBAF9Jr1A3WSVIVTUPB3BG1KrW1ADzl66g0KLlj7Rqzokb7JGwZmwWwaO2o04hgq4AJvg/+5bt8y3eFwHsMmW7cjLtqochPXABdtMcSQTKAgzNYfm4tvAhyU4WTO6iy6dolSwaybimIMvG0tNZzdj6gVS6AHwmdCxXHioZBZy5hGHJ17fTZmdAqc4CkPcBbkUmgrdGBBM83db4c9dvm4k6oWm6phchSUK5JsjupsgH4or2xfIzbI+knloaIUDYza7Fma61709HaHCjFEdPTMAtvWwL2rh1MQ02JNg/mYGk1HcGHCPdDuxGoOZCF8qp4Sp6ujefdvFto1C2bCcDy3IaA1poGjUg50CYJMYTeRZPTvzJon1nHX7dj3L/eh/mrlfcfWtl962VksgexsFdPScNsEWs+0a+QS88kcmkvu3GBKliOX8vfKBV0NRLeBT3FZGa0t9TLx2V7r2dDUAvfHs9G9kNHyLeEmiIOcC5qSktcGf9//ByOtIMcE7MjceSxhlPLNiLwjcbT6hseFxG4hjRx0yMCFEkZamtva6MgBAqSDgHM41hIcwyJ/H9qPLuFPD0jMdLcjEmgS1G5CCLuh75EvFEuW2pOABZ0AgF6GchpqptMkxutMnaKk6Bo+xt9gsHTBoLk2pTgAYxF3wSyVUlC8kwdgcZgoQdbOvnnS1hOnPpClkj91AcweHiUNg5eG7NR3abSzDh2bAHcEhyoZ+q8IZS42vMhzFMOvGNgeTLSkKjA62QFitByMXUbEf1wC3AUfNPmFXQ0wAIaCjMjia7jJjygWq3wOlMGYbS4UIcAC7ntxadJJwNA0EFrRS0im+MbPFd2AL+tfNF83JBAA/Twch00TMbuxheKz+6MTjrIQnSQiQcBCxg/j64dFBxojySHHnLVqhcIBNgiR/DcoMH0EB/so2rAwtBB6Ke0SL+WkHqbmBodWUry2Inc4srHfrOflwT1g/45srHZU9vzdQHl7lF9SWvrsT3ncbZbkn1orgzP74kJQcppVVQ7N/IRyF+8QGCUe/I9Iot8p0SveWSzlpi1E5yn0y4Zjz4UmsyVNepGC5KIrhC0gBC1VY8MRKnBGg0VO7VCiVrMyPOOXpZB/6yMVo+4/81O40CpoRYUcdSBhgHS26VRwWe5Zu0xg4sH4Yw7Gt20/93ROBARuEBGsdubbAPQKKqdqrY0sDv0L75KN5Q3ncJnehnLCbC4hVghxmeetSOG5PIkFG1F9lMeGCJq7tZ9KzYEwky3oi9FoKhbTAt9oANpqbmJg/laNUGqfJtXKV97DennvYZ/3mpwsJ+f2mzwX5sNpP+RTfT+c4v4Ftk8OHDSW+Xz4jok46m2giQapEuM5jshIehHQSCtuT92B+1u2PCGWL7obGqDIBFD9OHRWYQuyNs+aDN5JIylNnyBvgq64F+PttlveCsYEPbHTyRmfN461EU7HJLZtZeEBphcPih0oLC5+KAGL6m+9CDWIZ5wGokCa1F59F05SF45nlql/xoWL8gVA8XUWBbhXIcwKB437eMi5p0Q7Mpv7TTLZCNQ5lTLoNIEpVX7GNs/ZaDteJ5hWr+s7mgTJ8dLZ1UM9kIHglBJ5wf1DZhmaAH+BT4gsftVpqBipY/HhPvJofvrI6S38Mh4kBZ6tKkgoLtA39E8O75XkAy6n2yXCt4PEwEK4MVBEFOLZ0xhl7cuhGl/ZMTEKRBpLR4FcWjtv6KK31po+vFauvU6Yr4kEy9zLPVTOU1CG68MrVmUBoGhJ+wZtQ7c8M26Ix+StqVlZADpustN67u7CZzjOMinfsWNuZSrnYfSPp5mZZ0f+MXlwIQRQ3FdDdI+8eSqXYWYO64HxBuAFl6EEk04Hi136IQVCEIjmDWvzVhU3aREKp3oh3vnLdDQOscyhc4F0YJQksMEHbQrgSDU4pXO3JDzDoBXbdpHkAjRqB6mt1H+ZAm3TuChDZqASSYsfuE+2pu6RbzWMT7SglG7mhhs1EMiGIaRKLAvAttplxpqAdA/nV902UfPxCblR8+MbDtDm2JCuvtZeD1By/DI/q2yArMN3uoEiJwRjaHDWhdE5DtgV4T3GR6ISp2jvM4W7KQIJmMUD3hcwFYw3h1tlxxpGBwR7ZcR0rg/lGbJkPesDww3RBc7TcwnAKRvHSwhCA/uYCvsetOCMiBqQPm68upR6kTLcehbrjPVNYY9SEwm5CRALQPQA1C198pY/zuhIy3ZoRGF7xlsZUCkDxTf6ypz/mYKVutHSDTt2SbKRpEQ7QpUk5ZxBlmLcuYIKOQXXEsRNBg7XjNehENBu8QYiK4dIy3ry2+g8XQUillIpgvhXNKhsJPaJoWI2BWg5zveAWRJRSwbVY6iwwyCPdpnO6PKS8j4bxox44AqvKbjgyEQQp0uAZxMeweUPGofg1PfsmOnD/DB8mmg9AH2gtYJBgFAAiBTprJWtJYgUrfWtLIL+QGBVXuVkOXET03DzsBgqeI5ABFEl1oGVJ4f5w+ZHxk/KeacPUDG/AeCzy/MiPcISDQD7Q8WL0AdDhG9Xa2Hl2CEYGZm0iBhC45qw/QmNTt3inCOjruQAonEoMW5oRLDVD73H3Q8mypnpIUMqaYX0mwsFwKoUU0VFg4lom3m1NpbzwEsiRyWdm4ddtPKN3UCBmpRLzDaqa1WHdXb5qIOnaEDL2nQnjr03oY0q2nXSruu3g6MhA4sBz+iVTPEHF22xbyooQ2rpu1Q7TNLGvEWaGRafeE/Y/xJy1YI1/Y5Ag+UlJkkfvFeFH3LmMPYP7u2jMj+eT9XJyrJwNThiJi3eP5lhZKsOsUD/vhyFqQVh+vYXlndilXGivV2MgDt0xLy18/hTkgKop1fT2jlVynF03BHkQLEFMoOEEctrUpMYobr1LTvE0YWdZCuhL4kMnWOC+kgz639QaQ8lV0YBTZHihmc3tp8y1uHfQCqpT3jzoDlsRYwm5F2ipFIQt5EfgpbWukNp7P2UuMIakpcazoJCtYSS4aV6sk6flvGU4iYFcKMk6DzO0WJ1QUHAReS4rAGTSWwM+N/h8abtvi0t4uO8IJkpGrSes0JIAAWmDYLsdEa77B8pSyoTQeX6VjejdpVoFAKyFC1vYQb0zGkqMWQqi1ldTpUzw3xGzBeyB/NmLQAL3eEjEI8aJnqLtTGTIcIYA+rrKJOa9UXK53tONi6VdNb2yxlCWTFxYi3CLDphOPbh+06KK2351Ndvk1I/UMt/s/Vxqv74ThBl46K0tCwCMpfh+91bNEURhQiKCkhgJ2hvQAp5th1BIpR3uA+XLDVDDobAXldRKdfOeNiE4SQtQNGxwtZcZXtAWTPR41P/pGQXmTrIu2CjN1IUVSGdqJSxRYmrAbwNd7GrjZTtYlrr0R4XJL9sqzDipQAQU3FvTLRnik227S05JeOyFzp7/zxF0F7Ar9t1317LVag9ujwkjAis6Wts85C0YIeAsLuUbR5J4xWCWE1GVwUvkfWRZ2MmCYPqYOMYWPsXCWNp2txmdycodlrX4jA7By0WQyOXy3kY5AabAVrZnmGhGbWadKEFsBUI2t06JyuYHTqfhTM2AMGpZyYFPqGvsAc6zgemBIfRFmQg0E+xWiY+IR0O45Q0GyzIamwMtY3lE8BaYWTSoKNo/ZS4GTcoRYV3lINjiqCwjoyF7S9+I7DxuHLH2L5y+u3I6Hrx3rUeUCMX0MIdt4L2DAFROPRLhkioGNfbX46T+e+6PlwQfg7tCOUTOvVdsMi8K4hCXKROhNsF1ROLFRAolMKrOyh43MhFgoCLKuwCR5Q6y/TdxXo7sjx2uD+7mVSdSRr6rAhcNLJPExXsYvpLKoDKz+BHYEeMps60z+RkCrRqRZtAyKN8P1aT5kynPqnQRJGWvfa0ir4Eum5i7BEDOmQ/ng09SofF0Ztp3duFk3stNuFWUfBTK7pWYn2b7uIOZGkvg9apmmBTuvS2hQBR7rWbHSgFIm6VbDeCbJ0HNgTXEoKAACMGskFdSM8Pz09SrYoNKmEuiUoGwXBrJCRp+AFkDbDJR2nDKnUqj00pOTWupeyaPb1D9CaVuG1CITF1rkICul3anL/9xL686srEY93tBEG8CJ1wRaUMKY6bORn8qgUlE+H+QFiEBt9V7WUG+i/EbX1D5lRTw7/h7tBzL5/8YD6Qrx/bdi800qff4Wnfycz3j+j6OjtvwNb96ezXH//Ks+4u/tf+3At8uJwlmkAABAAaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczppcHRjRXh0PSJodHRwOi8vaXB0Yy5vcmcvc3RkL0lwdGM0eG1wRXh0LzIwMDgtMDItMjkvIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiCiAgICB4bWxuczpwbHVzPSJodHRwOi8vbnMudXNlcGx1cy5vcmcvbGRmL3htcC8xLjAvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkUyRjFBQzkzNzUzNTExRTQ4QTkwRTdFRDUwRTU1MTZBIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmMzMGY2MGJkLTBlYTAtNDU4YS1iZjVkLTUzYzIzNTFhY2UwMCIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjllMzlkYmZlLTA5ZGEtNDYyNi04ZmUzLTRjZGVkNzIzY2M3OSIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iTGludXgiCiAgIEdJTVA6VGltZVN0YW1wPSIxNTg4NDg0NDExOTg4ODc5IgogICBHSU1QOlZlcnNpb249IjIuMTAuOCIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPGlwdGNFeHQ6TG9jYXRpb25DcmVhdGVkPgogICAgPHJkZjpCYWcvPgogICA8L2lwdGNFeHQ6TG9jYXRpb25DcmVhdGVkPgogICA8aXB0Y0V4dDpMb2NhdGlvblNob3duPgogICAgPHJkZjpCYWcvPgogICA8L2lwdGNFeHQ6TG9jYXRpb25TaG93bj4KICAgPGlwdGNFeHQ6QXJ0d29ya09yT2JqZWN0PgogICAgPHJkZjpCYWcvPgogICA8L2lwdGNFeHQ6QXJ0d29ya09yT2JqZWN0PgogICA8aXB0Y0V4dDpSZWdpc3RyeUlkPgogICAgPHJkZjpCYWcvPgogICA8L2lwdGNFeHQ6UmVnaXN0cnlJZD4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6Y2U5MDE2NGYtZGMzYS00ZDg2LWFiNDMtMzQ2ODk4NDExMmI1IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKExpbnV4KSIKICAgICAgc3RFdnQ6d2hlbj0iKzA1OjMwIi8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICAgPHhtcE1NOkRlcml2ZWRGcm9tCiAgICBzdFJlZjpkb2N1bWVudElEPSI2OUJCODkzQzc1RTJBODMyMDU4MTA4OTg4OEU1MTAxRSIKICAgIHN0UmVmOmluc3RhbmNlSUQ9IjY5QkI4OTNDNzVFMkE4MzIwNTgxMDg5ODg4RTUxMDFFIi8+CiAgIDxwbHVzOkltYWdlU3VwcGxpZXI+CiAgICA8cmRmOlNlcS8+CiAgIDwvcGx1czpJbWFnZVN1cHBsaWVyPgogICA8cGx1czpJbWFnZUNyZWF0b3I+CiAgICA8cmRmOlNlcS8+CiAgIDwvcGx1czpJbWFnZUNyZWF0b3I+CiAgIDxwbHVzOkNvcHlyaWdodE93bmVyPgogICAgPHJkZjpTZXEvPgogICA8L3BsdXM6Q29weXJpZ2h0T3duZXI+CiAgIDxwbHVzOkxpY2Vuc29yPgogICAgPHJkZjpTZXEvPgogICA8L3BsdXM6TGljZW5zb3I+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz7mbkekAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH5AUDBSgLVxBmYwAAIABJREFUeNrsvfmXXVeVJvjtvc+5970Xg0KDNdmSLNlYHsADYGNjwGbIJDspksoRqM7KzKrsytU51Frd/wH9Q/8BPayqytXV3ZVZQEKSCSRgwE4bG8/gUXi2ZcmapYiQFPN7956z9+4f7gvZSVnKlpElh7nf0g/SWlovXtx7vrPnb5O7o0WLFhca3D6CFi1aKrZo0aKlYosWLRVbtGjRUrFFi5aKLVq0aKnYokVLxRYtWrRUbNGipWKLFi1aKrZo0VKxRYsWLRVbtGip2KJFi5aKLVqsZIT2EbzdqE0LlpyqEBhEDtRmgYIpxwC4gjJgCs4o1KlcmlcKRoWLiCAwiGq3mtgIo2bsVLs7U2mGIHau7lMzMJvD1DxwNAUIzAavc7YQCzM4MYizmgh7jRiRsjJDhMzM3UUigGqgRUcAqCVhd2OmAGrPwplA7ejw2w2DMsgVJMg5kwQAQuzu6qbuJKF2nJjH5HGdnFw4WC1Wg6SqnTKuWzWyaU1n00W9taMYgwLsmkUIYDg7IeWqCOU5+6pm5nWQAmBVJXJm5IwQQlYszOf+gI4dXTx86GSVXEBj43Hzxas2bOp1OwjRmVhzZnKWaAYnA8wtBylythDae7+l4gVGNgNxAJA1BxaACIDNQzq1xWNzg1f2HXlp39Hjs4M6yyJ1GBKYxJXT/EhM2zZObN289qrLLh/pQVBZrZG6zgSBweTcRRnubpZFZEhMNyZOkMEg73r6pQcefPJnu/bse+3oUj8Ll8mSUF570eill66//vorPvqR9++8YnsZCJaJyAmmEJE2CGqp+A6iYs5ACAQQlGCmYI6J6qW6eG7P0q6Xpw6f7C8lM6EYo3Cq66QGEYnspv2AHAQf3fmeq3aOb1rFSBq4BJBQkxTnytaYGRERyCyxwOEOMcje/faNr3/3h99/ZPpYnTWKiAQbpEUuSrgwolWpiLpl66pf/fSHfue3fnXLFgAGqLkzBYDVwNz6py0V3wEuqho7A/CAbJ7NmbgcQJ98dt8Tzxw7NgsLXSrYvHbkaAQWp+AIaq5wZhKRsVRdf/XELTdcsiZGMoBQpwEVMULOkUlUd2FCQ8UqpRB7L7xw+H//y79/9OGfLcxRr1xfV6RQ4uzIJgJlzxJEOgXVaXrVKr/hhp1//Ae/fuNNVzCbQwmxriyWnHIqQmyPQpu2uZBwM2Y2NBkaIyJQuWS4bxc9+bOlmYVOObE6e846YO7ATCIRkRmSmjsxC0A5+3ym5/dNbdowNrZtHWcPATFGO3fGxglMgA3/WcTeocPpr/76zkcePLKwMFIWnSqn7LnT6ZiJGeVcxRglkllODubu7Fx+6MF9df8Op5EbP3SxAGYmwgTE0BrFfwatH3/+HjSDACeEBLz42snndz9T5fnuqFqe1v5kh1KPJSQa1LnOZkBgKhgFI3oOlnIZTi767v0zSwoKBCKACXru0kvmgDmYGaA64x/veeIf73x6aT4IjbgLSCVYnRZTtcDQXhk8V6lehOeUUpXM0atS99GfHvjq1+589dVpB5uZCOq6JrTOV0vFCx4DMMzNDESETGphdhE/e/7giQVXHjWMuY8U3TWg2K+WQpc4CBG5u5mpW1ZTsJEkcufukcn5E3OVM0Bw93MYghEoJQUAIjWdml645+4H+/2IMC3FovmiWSaSQspOZ8QdeSCRRgNGmLpBSg5MoTKec0zcdfdP7v3xwympSHBDEQs/d1dGS8UWbzlSDEJgTnB2isp4af/0gamBMRu7ogIl19rMRGLOJg5yJ3eiJo3iDgN5t6pS8Mkl1moxWIYjgy2Hc0dFL6LA1b1iLvfuPrl37zHjRcaY5RIemSKcslmy7AyIKZKzmtXuymDPIuhWeZG584PvvnDo8IxpU0mFqbQnoaXiBbeKDoAgZomEFyvsO3BUz96aOUUiocbCqmfNzGA5x4eBmeFshmNTUzNz88Sdoff6c2Hl6RFjTOZ79xx8+qnniKCeQdaetJaK7wAqUm6MnJMpMLugR6f7ic46nagIKWlgEYk+pKCD7JxZbzN3gN0JzjC4GoO7P8/Df46NSWtCTCnu23+MBObZocu1yhYtFS8kEhG5EzMbfGGQXUrjs37yErtU12vGur1ej4QlhKaX5Vx9S2FxNwBE7I7R0REKlM/+40NguBCK2ZmlaoAQBIC1WZuWiu8EuwjgVP3Wl3HWR5ytpGrrReNjvdCcbAaIz+EbZNWUUyIIOzZunti8aTUhg3z45/Uzw2c4Oe5OjJRSt9txd2pr+y0V3zEI7s4MM2NQr2BPfbazdizT0szaEWzfNN4Taojs7uf2DTJzEysy+WWXrv/ADZd7nn1zB/X0PzelBJiEfMmW9Z0uNTcRt3xsqfgOQASMyMlZgPGRsH5NGaw+20/pxnrn1rXb1nUEFZMDIAf8nL1BA1iEOXoy0zQ+wp/42A3bLhl7k7TNGY9NGTtq1bZtG3bs2AzDsHPd22JGS8ULDTcQkUOZo6bc69C2LRvl7Evem9avuvLyi1ePwXK/4QYz49z1LappygkAMQuBkG677bpf//TtZ/056kL24Vs/cO21O0FwM7TNlS0V3xFUZHVwzhGAiJRMV2zZuHWddKzmXDuxSW/gZaIoHMiNjJgkmykRh6ipDl5dfNHIr7xv4+bxUSUgrCJyQjYzP3eOX8FUhAiCizsXQGSkf/cnH/vC734uEsTQiR2tVURU1ZzYgyoxFwYyEDPnnIko0ODDN1/1G//yfd0Ocl0TBfcAtBnUfwbypS99qX0Kb3vSpomXGDkPWELsUizLqZNLOQ9cjYTJzTWTKwOeKxERKYGAVI9isPPizs1Xb9q6YXVZMhHcMhM11yjROZyQMiJqJgSIQEQiIiKXXT0RwtLhw/tPnpwlYiJIJCKFOQm5W051CCSsqkudkm68cfsf/tFvfPDGLYzMTAQmgXs+h1/13XlO2smMt90quroLMQhQG4DJUfbVH9/tu/fuf+3odOVAiGAnN5gGGYHTYDDgbJvWjl67Y901O8Y3rI4EDPtWCET0Njg1w0L88pEY/hAF5uZwz10/+/4djz7z3N6Ts4sxxqquO91Q15kphFDANddLmzZedMstH/rCf3/91e/dHCjBM1OpSiJkSIx2MqOl4oWlIpIpswgAQjZXgAhSkxw5Mbtn//F9R2emTyz1B+TG7p6DjxS8cVXn0o0Tl226aMNFI2XhZgNw1ywziLkhzDA5SW9PctJsWGNUnw/cdYTDR+affOrZhx7d9cJze06cXJib4xAC4Ez1lksuev8Hdt764Ws/8IFrxkYYyO6JnOERzCDLVkXutoehpeKFRTIjInEQEQjQlCWEvi5y6Bno5BKOn0zzSyknyo7eWDFS2JpxmehyQU4gBZL5KOspS2iqIOFzWVR8vfLZWMPmn0QER6rrUIjBs3HOPHUsHT8xmD4+k1Iqy2LN6rF1a0cmJkK3oyGoJZJAxOwKEBNBTVmMWqvYUvHCwpAYNOwoW/b5iAA3mIHcScBkRA53INROBYCUUWn2IpQEgaqLEARAM+RBRA44zuVwxuv0+6dmHYA5iJTIDDBjgihXKecgnUDigAAEc8tEBYCsBiAIA3A4kbc5wpaKFxiVa0FEMIAdUBADpO7UeICNwYQ7koEIBcEsqTghGNiyCzwKqyURadpZmeGAuRkQz3U65A2ENABmzARVEBuzqldEzmBgxN0xNKGAGzPgqholNBQ2t6biglTXsSzaw9BS8UKidkQC5coZzqwAgwjeOGwEM9Xm0BMRMZsHJsDVsxIXIIBg6iRDe2UGZhg8mwnTuZKZUlVmPuWd0nKnm6PKhsAlgc2MG+YneKiIxVSJQyM7QM7U3BGWWMibxgBjTRZj0RrFlopDZHUWvO7OOeAAAZQBJM0i0d1dESSYKgUyN4KZmYgQJOccQmgdrfP0vppapLuZMTktOwLw4lSM3Fhld5hBYCSAu5oREXNopLJWSg3ll8oqVmpOxExBVYmImTVnQmQhM5CAHGrOcGK2N3RONjP1ImLnNDZrcSY/GWaqzIGIkmY3CkGc3tgrYKfyWAAMnnMtjZYOoKbCTKCVIuD0S0TFulosyu6y90WAOYxAruLETMgGkAZ29wqWQBPEsKxmkCCNT2lu0paqzxMSGj0D4kbLAEPmpWH2q2k1omFrfKZo5kQk5GaZueGoAWVLxXcYrHll5mROYAqqvtAfeNWdnJ41A9iLUtauGRnpcQiAwryWwHACCRxJjQUtFc+TVXQlkmX9fwGQqjrGCLJGYkvdgOZ1mJslpdBkbBuT2pzvlePD/BJRUXNfAqlnEAHdkzPpiSdfevaZ3bt2vXzo4JEq5RDCxMTojh2bP/Sh6z7+iY+sXwWn5KgZwUzchYXMs1CrWHlebs5mRpKaBJLllACEWCq4SlgapCplAGUM3TKWEYEMgNUJYI4RaFYMYKVw8ZeIim61IxDzUh+PPX7wO//wwCMPvXj8xIA4g5kg2Y3Fc700sar3oRtv+IN/fdONH7pcKNVpsYgjbsLMqqnZ0NLibb86AcuIAlBOdR2KjoKPzyw9NVlOHT9xdOrEUlUTUa8s1q+dWLdm9bXrF9evmYgwTVUQBosZmFfMvfnLZBVxktE7flK//4PH/uarP3x1zwmRsUGtRQgkkrMlzb1eD6ZVf2lstHfte9f+yZ/+3odv2crIBDZj1yzBQS0VzxMVBQCyaTaKNcuByfzsK/ue3zNdpZRdJBZEpKkW5Chyyfruzh1br9y+ZqwAbMBmIUTCilna8UtERXMszOHLX7n7v/zV92ZOInbGllJfhEiTwmOMalDVKJEBTZkw+Oznbvn3//63t2zpaV0XRWFZOXgrqX6+QntlmFkiiHK5+1j10K69ew6eMCoMQcFKTEQBzq6wGl52Y3rv5Rs+eM0lG1YhAgyDE9HK8FDfjRkIr81RmxpqM4O5o26SNl/52re/8rU7TswpyljpQnSPKYKjcGFK5BQ4uLu6I4iX3fsefOL+B/Y6EAoxrzmQezt3d56QIA5nMjBPDfDky0dfOTDrNJa5MGZiBDKBOkyJVMp+1Jrjky/svu/pFyfnITCrp94gydNS8fwzkZrKLzXtKyAjcFa+554X/+HbDx05ukjcqVOOMYYiUDztq0q1zc8tPfnErpMzSwQys5Ye59dhA0BASBb2H5w6eHRKzbOf9i0UUqYaivK1gyeffvbg8dksxcQ5FBxpqXj2rxAMQKgZgSVzd4TJqcXvf2/X/v1VkDUxjLqTui1VS3UenPbVxlF4fPnlPXOzS41AC94wvtDi7UYkkDMoVKA9h6en5hap7Eo8bXTA6m5EYezkAp57bfrFA7OK0lfO/flutIrwJjogEncHmQFPP7Xnvh8/mTWCY9Ikkc0sFDGWndOmDTKAMHNyfmmpr+ohBGuam1ucpysVqqoW5gc4fHwhIZLEbHr695U4kHOQzvhsRc/sPTw9v5LuzXfnwaLl1S6NYVzq4/4Hn+nngQdXWyJO5J6TwaWqzqRExsxmZmbuBPBKSQC8axI3zOyMhX5e7KdQdLOZ6enZRdk5JasdyIJ90/Mv7TtG0lLxQprFRvSl2XlmDp85ubjr6T1GplYRm5syUVkUQiHIaSd3JBCRdzpFWZYhwCwTkWorInje3mPTj4ics6qLRDc6g+C/hCJ7Zhi0BlGWcvfBqcXcpm0uaNrG3BhDBW4CHZs6OX28r1mEu0HKnNTU3VBVVTOW8eZpmzRIebBp88Zer1yOEq3d/XDekHMNV3Owu8AtZVI7Q0JUEd1JiDsU4M5x7NjJND3bb6l4AWOMYbbTtZEww+z8vGkQGrUcLXEZupGjqwaGnH79S4hcFGHnzstWrVoFgAU555Yh5w0iAqJA6BZlt4xkKiJnkFTNFkCRMkoJWuugQr/CzHy9Un7fd2W1mgMT3NzdIQoNLLAcKJmbImbPRMYRViMpi0FRhyDZHAgiBEuOym00ln7zLdtGu+xZWSJzNtTsr58HIgERjAAkT4GFyOHmDuLgYG0bAt56wC8wcWB8FKtHw8wiL2odevC6Y2aNpIhZBimxGpnDogfNWNJkRVQEtzgYDN6Y9H4nR/vv1gwqNddqU10cGekV0dVSUYZm22GIbJYdFgKbcyg6CjWqk/brXHEMABMWPvXJW659305mYCh+IQA5FeACXDgV2ThlJPLMYClAYhA1cTSfAGlrH78AF0Fw17LgDWtXu9Yxljmx2YKgYh9AB4GslBA8ck2kNawumBgWyUsh6IA8rwgevmsdVDTaSDzkwfp1E1u3rXWylBJTEI6DfjLlsuiklFzqpWouu4XYC3E0hhE4mdm2S3qf/vSHNmwIbhlo1OaJEE2TaYIrkwXxGBCJA8jVs0OdiGW44MlOs/qlxf8PGAhkxFoAl25Z3+sQNMNjGbwoLIgRarfaUyJFwWUBJhgLwZxNPS/BU6coMRQQeqdnv9+VVBwe/yZiZPC6daO3fvi9QbKEbF6nlMqyLMuyThVgUigHjwWlVBO5uy4szq5aNfL5z99+0wcvZ0CtZhEnqBoASCNvNvR73Mmya7IgGskivS7x4IR2tvEXYqMZEznqiy8avXzLRUj9iFBVXtdQdxeWEIxhjTIQF44wUDUOREKaep3YGx1pe1Av7Bscboxp9hB2S9x2+/U7r9jqllxTlCInzjVMJYaRNBhhG001W7bAmuuZDRd1f/e3f/Vzn/3YqnHKuR8Cn7pZzZAQM2JGyM61kcE5kESG1rAKXpMnghI5EVrxjV/Eu3EoADYfiXjfezZtXlNStRDDOLir3s1e1CQubOLJa7WiBg8MkIKZCXn16rHeWG/FZDjelW+xidR9WOsngl15xYYv/qtPbLmkCDzb6SSyRZZqpMupniHqdzuh4BBAnpYu2977wz+8+U/+9IPr1o3AlYgIkrMBECFiLxUxu2QNngtWITXvZ1006YLLxg4SOZE7kLUNFn+B08ls7sIxuG3f1Lnhyk3rOplUxRBEBJKTZgcJjLKqkzDFAOe0ON+h+uKLRlb1znRC3lF4V6b3nIia5I07hNi8KrvxNz9zY72Q/+7vf7z71UmhSMYpI4ZR00EeDHLW1avGb7j+yt/8zVtvv31bb6QJ96npAWg0S92VAPJMzKBowCCjr14lVgMJjXSoJywOssTsIJC0ZvGtX6hAs7WOBdqlfM32NTrIjz53cGGQTMsy9kCBzAXNelZkMo7s/X6H0+WbV+/csmYE+ecO+Tu2i/hdOa+YgKieiQxeMMG9D8BonrH6yacP33Pvk08++fyre/f1qxrOvaJct7579TWX3HTztbfceP0lG9eRJ3h26hCRupmi8VE11yFwBQXKRcWBycXd+04cnFpcqplDZ/NY/9LN695zydp1Iwhokq6sBmnDxbfGRDWwE4llsJjavMvoYi0/fWnq+Zf2HD3e52KVUlRDEIJqlLhgsxxiUenFa+SjN15x5ZaxmE5SXP2mPHynxZArgIqNAm9KlVBgEXMjzo5EaBxIB4JmmCEUOKP2TB8IjrjUx9RU/+ix+YX5ZC5rx3Ri9ci69WNj48JNxd8IREanhPWHrTbLL29+wVY9+LPJXc/vXhhIRayWu+jmWMfcv3Lr5ltvunjLeE/6J1BOJLbYVhbPKY4a9h1efOGVI68dnl9IQCicSF3LLNBBL+Qdm1Zdt/Piyy4e7QUQElbIro4VQEV3z7mOUQBuZiPcnUhVhTgxqboSZFj0gzI6p6F0dnewMLEBqnBABEggbqTBvNlTzRCAjH+OimgEs5fq9NhLcz95bt/xuQUU4yaFeY4WXHLQunS9fHvnY9e/75IJduUsHtvUzTm+mytDnO/z4cm5vYcnj02dmF9aMDPrddevmdi6ad3WDes2TEgHgFWwTGFkRfxaK+DCJlCMMefMYsTB4I18kDBAxaC/2On24JyzSeAz/EZMAdxUOJRIg5h5BkziKJrGAFCzjtMdrv7fprTcyQlT/fj8a8enF5y7E4qYQU5MjmQ8Wo4en1moX5u9ZMPSxolxLBc5W5zTTEBm4tER7Ng+vnnL+KDOqmqeOVi30+mwBBBrypoiMUK5Un6vFUBF1VqkkFAoAHhKWlcapHSfH+2NFGWpORMaVWgzN5zGQU1qwtwMHJILyJgKuCpV5EzEPpz4ZiKnAHvD5sLhsgq4u792ePbY8T6kF2JIVXZqelmhztlQjq4ZZLx2cPa928ZXd+Erx0FaOeg1CXJy7wmN9gIQHKV5FQgEJQg4CkdkR14xj38FUJHDkgNVKp55YffjTzz5yst7T04vjo9ddOXObdffcM0Hb7is0bwE8sJCf2R0/HSfI2FYbzcDDESNoDuLNJX4oYeK15e3yCkPmZaXuWTDiZmFOisE9aAP9ViKkJJbJ8R60C/LTk3l5PTJpf7aNd0OubYKcefaQSViCLl4hg2lwd09xA4Ay27uzZiiMZhXTJPFinBQx5cW+e+//eS3vnXv7j37l/p1GVZpmrrrzv3r1z/+W7/1kS984fYNFxWDan50dNTttLXSUzrRRErh9W0Yqs1qbReh5T1KyJqFCf908lSd3K3OSUSMYaZRgru5GZQCA57UEoHrnFOqoILQOqjn2kuSJsnR1I2dmR3i7jAwg4TgTmyADVemr5C02Qr4lknrv/vWj//Df/zB1LQVI90MFbLaKg7h8NTCX//Xb5nO/cVf/E5RFGYD5ngGj+TnNgcq1OGBO2ik3s1pCBHm5RZS/rlPWBj0a0suwcnAlI2ISTiogpmdHcRKUEINFK13es5jxWxBmMCNuqKZMxN4uEEDZAQnkLm5mQMiK4OKK8B6735l4VvffOTEdNntbVtcYOfSyGLHE1WQMDMn3/7mYw//eD9bSd5zo3+Whw5W56Qwj0Qd9xpIzMZsgLm7+8+nW/5JljkIFYUxZ1AGJSejoIhG0UApW21em6sIQpnbDXDn3EsK2ak21I4MUQ7kjOQ2vDrdYQQjtiJQJ1Jnpfxe76CDop4NCYDl5vTXhpQdP3rgqd17T0Byf3BY2CM6MLbMhQZGDcHUjN15388GVJOcabT3VHs+AUIcJURiAYgLUAQCEIhk+L9oSFrzxow28SWSSakwM1eUiO4I7KKVywBcRS6MULoJQpEQUEurEHfuHbmCUTAVxKGJIAiIxAQmMJGQMHhZFnzl3ITvoG96KsAe6rWBzDAY2CuvvDoY1MwiIjEKYGZD19GN4NzvV6/t3Tc5OW0GanfLtFiZeGddGss+5Otfr9+vjhyehAucm6En8+zN2nfAnWIsmWVycnphYQlMaK1Qi5aKv/iXafrLTnGSmVNtmiWEwqxRxUwAmkl8eON/cBF7mokpEqSV8G7RUvEcBuYNFYlAjQCpOwEIITQlehExMxJ2INVZ1Zvkpzf9+S1atFT8Rb/Nsva2uzsa6UR53UgKNTto3YhImn5RW85uKtzM2j6zFi0Vz4k5pGVOnoobhYgaiqqqmQGcsxIJyIhdRMBD3W4iB1rJ4BYtFX8xNGbQzOB+apaMiJcFuc3MRCTGaGZuxAyzbKaqWmsCwMTtvqcWLRXPgUl0D8xwJHdmYjO4uwQ3JSJiBjzknGMBkKkhWE/YTPqQUeQAZJKIJvXjgAPmMG/+bpbd9VRayMxO/fPNr4ZmCw4pXN2d0DSSq/9TH5gctPwcjUqmxcwgCyqJrABlV1iG66mPHf4loVJUhtclN9zfSgJYtdFBN0cyr93V/a2MvqmbQX34yJq+zuYr+fLiEH89fHj9Z5i7Lj9Jg6eWVG8N78IqnKHvQxPbFCsZgLoG7i2HnX5K0FZVQyje3itGMgFDljkTDSPeKCUAM6gZEYksb6DD2e0CkFNaq76csxpuHzi7nrumrutw10ycmQiAWhLuLbcKunujB0uADepKRIJIk/r24UNtG/1aKp46+hSJhgY/O7SZq/DQWDMn0NBigjmchx1tZjVxGPZM0uvZKc19keHYlvtbF4ezRrsXr3+Ag931bFV1TFVECOQcTvkVwpLVWYZbK52c4AZ3R6cYaa4SXy4Fm8MNod0q0lJx+SRKzpmZREgAcxduzmpNoGa3lLk3M4ogebu9dKISzg5qsr/uzgxmFg4wBwzCzS7BUwmqs+WQAw5t7pdTzX1n+3KZcaqHqdlzzgKgoZaZqZkxMzETHATNdRM2MDXDKQZqbpmi5VVLxWHMGTgSAQ4GmOCWzbKEzhujOwBuID8Pz6BpRDURbhQhAQMUHs3hDgZIICLunnM6W4eZm14/4uXsMcHkLegHNJ4zYDwUxmIzMzibEDHTsDHRDe5shhCzm7llBxOxUKNp0qKl4ikj4QssJUCqrqohMhMxw+BN6pWIw/CsZjclvL2aC0RGZIA7avdGDUSIgvpiCAFgh7tLU7Z5C4GrDVXKh/23y0HbW8nhMcOhjtqg7gRq1oSogwBy8uXvzyJscOLAQBMrkpMb3MFtF3BLxQaZC3euK1+Yr2ZnF+bn52fn5xcW52OMve7IqlWr162ZGF/V7XWZuQan8DZT0d2J4FBVJZIgHXfkGh5H6uaME5jcbZgROVsaGS8BER6b1JA5ESuThrN0FBtJdRAMxCiNgjuqAao8mJ2dPX785PzcYr/fz9lEpCjKiTXrJybG161Z1e0gMDEnghEU6LW8aqkIAHteLZ57ds8Tjz+/++UDx6ZmFheqnLOZqVWRY683um7tqh2Xbbr+hsuuf/9l27avWj36NoeuJiQgcBDAeXEBe1+d3vPqoQOHlUU3bRy/6upLLt02UnQISATDWV4NOfcO7p9/6fl9B/adyNk2bBq94qqNW7auW7PqbK13Mxcm5LFKOD6lzz2z/8Xn9+167tjU1NTk5PRgULuhKdyKxLIXV68Z3bpl9dVXbb3++kt3Xrlp3dqOsHE7ofmupaIHkAIRYFBenqzPIppSUWB1IX3PB5nXHJmK9979o+/d+fjzz70y6LtwL9UUpGyiIHWgoBMzM8dnpnbvf/6u+763/dKNN9/ygc/+yxsv235prwA6z12EAAAgAElEQVQ74DUxmTtByNkJCmGCNCPFwz0Yp/maBKCCjaAZKvYIruHRvQ9wyolD7+DRxa9+9a4f3fuTI0cncxIx6ZRh08Wbf/VffPDzX/zI2tFuwNzpqGhQgpFHy2DxZIscejMz9N077vr+HT96+aVDORdE4lZt3Dj+kY/e9MXf+sIV1xSa50Lgqt8pu3AEhZIJca05x9BLtUtMTKRmwuooKuNX9ux78JEn77//6ReeObLUD65vZuW0Xlzg43MnX927+74H7l+/vrPzik23fvTaz/x3n1q91t1icBEhVxBznRGiMi5MJOlNhcadcap1hF/37IlAb8yZ2YUqtsuXvvSld1bShQzuICEyd15c9B/c+fCxY4tAcFIQAw5yclarithJ2UUwsXpsYmLiu/9wz1e+/N2DhxcXFnIMY0BpTsSspg5lFs2esgMi0ss1T07OvfD8/qcf2y/cXbd29fh4BJmrMUczMBGIDE2cZAA5UXa8tO/45FxyBIHZsGxiQNN85+ZCZB3g2ssn1owGQJjjoLKi6B46PPg//re/+f4djx45skjec/RyIs04Md1/5rnn5mfn3nvVdaO94nRVDR9qtcKcWIglnDhZf+2rP/y//5/79702SGl1tjVmq91Hp6fTy69MTU0e3rp9w4YNa91SjB1A3YmJQMk1EgpmMIM8EMQJjPLlV2a/883n//N/vP+733rmyAFVHU31aXO6DoaTSI+sM1gKRw7NP/v0oUce3q1aXrZja1Gy1iBh4ixidbJwgXanmyqT89DzN4eapZwrCWxQ80zkzACpITuML5B9WsEOKpMTuWrqux0+vPRXf/39Y0en2Vcnp7KcIAqDwYBYmEihImSuEI4hwkNWBFkdZHVK9bMvvnT0/zzw1NNXf/Hzv3bjBy4nBsxFztlqRAeKsljq4x++/dBddz21sCAsq1JiiaHJIpXl+Mzs1He+89Mrtl/7u799fVGc3uySO7SRF3Djx36y+xt/+6PpmQFJJEZOfThiIcJFbemuex5fv2V008W/M7EqAlBTpkBwx5LIKDzU9ZxEZi5TjiGEH9331De+fvejP9lbpR4J11ojWSzEVE5zaSZ1Z2dHIOcqxcXpen5x8sChv3nl1Zd+73c/fsV7LjGr4MYUi3DBKhwsRiCAmpZKZhEOwuYaWN5YjHXyCynev4L9ejdJKTFTCMEpTk0vVDlm6rBEB2dTMEkIYHGwgShk9YGiMqqyVpUOktfOPjq2fWpy5I7v7P1P/+HeRx89XNdQf3Nhjrf2mswrIhw8dPzOu36ctYxlCUEsyKBFT9TTwqDf7Y2dnEk/+P4DUydO+pn61hgwDg7g5Ax++MOfHjuaATGDagqRJCClWlUBVh7/x7sff/b5A0DpDmY2M3dim4CTey7iOHkPiIMB/u7rT/+v/8t377/vyPxCN2eucw4hxNCpKzlDvpWZidxRJV9yTihy35YmJ4tvfuPFv/xPD77w0nHi0q1ZwHzhGuKGbclMxEwCFzc2Dcudeqq5NssMYnq9P7G1imfz1aVrhqJkwJLllKwsS7WktgRwkCIW7M3gFDGcUs6E0ER8sWQ3c0/MNDtnnU7pXt3/8MPJjv3xH/+L2z5yvXnF56hULSxJ88u79x44MKU2XqVEbBKKuk7CEBFNrmoxjr/wwr49e/dt3jBxmougmRxjwEDh6LGZXbt2F3ENzECesroSAEGMHODIRFNT0y++ePCWm7dz02NkREwgZO2LeHYId46fXPqH7/z0//2/vjc/L8mJpXQiFgeyucdC3N78vtZUACBhkaCeWSBcZEvMujDAnXc+NqiP/w9/8mvXvW8becVkF0obmKiEuTYrGPj1FohU14ECMYsUTSyOZml7S8W3YNLNsmqSwCICwKFEWhZsBiYzM80mHAJHVRUaC4HNLGttOTsMsBC41xtTXwpCmtY+eP8xT492i43Xv39jyf7fuppv8SE7Duw/lnI5qKTbK837KWlZdN1qVy5iL+VZ5lD1MTtTu5/GT6IMj0RilpkxPTWzuFDVSozaCcJGtCwe6dmzGZemcnDfZFNRMVcJJdxBJBiFQxjHZ/JXv/LIX//VXbPzCq6JSxA7nDloMlXvlSMJ/dM4ftmdcs7uPux+MzJlEmI2p5F7796r9T1/+qefueG6iwdL6FygGocpOJCAADXUNux+4FB0smZPXkSYmVlmMmIndFsqnh0Gg6XeSBeQukqWEGMJM4BSbRgugyIRIYK7mmXikLO5ZQJEIjNg5uZZawo6qAeBRkOx9qlde7/+99/atvPzG0YnmjL3L3wWEAKWlpaEY5BOqiuDBpK6HnQCOyLMSDJDgHh8emZI+zchZJNGJiIyYHHQd7JaF4uiUM3OzkEc5uqeE3MIYp5tcWHgCmc1M5ZmqKLiUKixGX74g8e/8pU7T87VZa8cDOoQ2Lyq60rcYygEhWc6XRBjXgEAMTMFDssmm1zJXc367PGhR569aEN52eW/PzYKXKAMatO+59CsKtJhSJUwP5cPHj2wsLAUQli/ds2aNaPj4wWhn2ypoJaKZ4lON1ZV393LYtQTk0nOdSxik2BUTURO7DklwMoY1bNaZmERsZRTUuHILM3GuFhKTilwp6rpvntevvKKF//dH918jtI2NcAseXFpPoTxbFqWMQ1yWYjmQeBSLUms88C6sQgsp/8cpSZxyZIcZpZSJSE4RQURIasOg38mkQCrAqOMRa60HGHmUmuwMEswr5i7996952++/MDcHBedkYXFQacoVZk5lEUEJXcFahI/rTPgZRN/NptgLYMIgUNti2U5MuhXEklz987vPbd9y/3/+t/c3rlAZ808MzGcg0Q3HDho99/75IP3P7H74Oz8/CKZj42VO3Zs/PjHb/jIx67buLF7oc7zSqAiZbiAjMjdgyMRGVB60lLGU509E4dU6xIi1S4QEhGDupqpSygkdAZZg9SukbyjVd3t0lI/GbF5z32mkF4eGAEUlzL1FxN9+W/vumLnxR++dVsBgymMIaSoyM864CESc3EbC7Gr3negUfrPyoSOUW0cPHeJQ7KUQcvTRm9y+QAANUNeYBJwAYpm9bC59ZQFJzIzA5lbnVUCuTExpEhq0eocivD8K8e+8jf3vfraSRfTXEXueRKRPrxP3gEKluxilWZQSawM1zSIgdm5qqrR0fGBWV2nEApmpFyTAETZjLirZhLYEmIsFqvFr//dP1521Xs+/pFLNNdBCs2QmLIhcHSriN/ebie24DpAZDN56ukjf/mf//4njz3XrxP5GndnopMLM4eOvPbYkw89+Mh7/+jffvH66zYxagCEAgbinDUH6bRUPMN39zovFd1OzrWaxSh1UhEkrZusPRN6ZaGWFvvHYhlMo4iozQeR/sCSYmyEBoPjTLGZVCIiJmIOg8Hg2NHjd9zxo6uv/sL6NWXWFGJHMxDecatqz3wJNKIHaMZTXJ2UOXKM80v529+858mnn61rcEHMQc04BAOFUOYqC8e6yiFSFMChtrh2PW/fPrFu7Win05ubrV7dvX/6uJnVRRypMyRII7ZQlEWdzEyZGZGbcP3Qkak7vnfXtVf//ro1Aa5Er0fhdB62ywjISwfd/8DLf/mX337muf39xMLjdU7MAUSeC5JiYXHpoQf3TE9//c/+x1+59aPXwGu1HJdF/t3xdr/5FUxFIoWoolJkETGnlFKMRZdHFxfne0UI7Kx5fHRsYmRVSrqUZquqH+KIW3DmkdG4uDATC85ZT/VzEYWmOycnfeDHz/7G5w5ddPPlxM2IOpOzal4xxR5v9PLgbjTsDlACQLL7lSMP3v/8/Nyg7K1OqXIjd8/eB1AnE5FsNceCWZPOXbx27a/82qc+ettVV165bmxVECJTHDm09ODDz97zo4eeeGp3XVNRTKjmoohLi/0Qo3lmcWZxy2W3m3P908deePaZw7fddilowNIxE6JGTuFtv9ycBk7y0ivTf/uNe5/atS8rxaKbMsXgTOxOyUEoA3dn5/q7dk195av3rN+46T3vWcOc3Z2ImYrzcAOvYCqaCxGyJVAwC0zULUdSXZUhr56w99+w4aYPvWf7pRsuumitW5icPPHsC7t/tmvvrmcODioxhyFIsJwhEgnMzKqeszGDKIB4bp7u/dFT77vm0omxoFqJBIO455VzVZGZqaq7MzOgZiaMxUH6x7ueOHqkCmFUNamDjGIUZzMVd+fAqV/1yljXc1ddc/Gf/NtbP3bbh8dHo6EiLOWcO2XcsUN2bL/pgx/c8rVv3H3HDx6bmZnr9kbruh8LEDGU3E09a84sJXE5Obl0z9273nfdhjUTCjI4D9fkvf1zVY5Y1fK97zz+wP17gQ0Ss5kJRfcZdRWREN1QJY8IUYkfefjVHZc/9Od//tmRDptmIlledE0tFU/ziC2YWyg6blxXXhZFEbJpvW3rht/7vV//5Ceu3XxxETinVEnoMu349Kc/eOiIfvOb9333ew/v2Xss1YG9F7mjfhJwETBLSure9LqJWfjxjx//7Gc+ev11a9UGwmDisHJG8kSksYKvd645A3jx5UN33/2TxUU2FrNKJJBzo2SpqkXs5DyQgKQLO3du+Is//+Inb7s4iKSUyAuJZcGAuUHJ7eqdm/74jz5fxDVf+/rdVe1pQJ1Oxz0zs7kSmRMldUBc5aGHn/nN37lhzcQGN3N3AZ2H8w3AkV/dc/ie+x6sUsoO4VqtitKDBbVMBA5kZuYDhZsScvmje5687fbrb3r/FuKM8yU3v4K7bcibAXzK2crYyXXd7x+/9r1b/qf/+ZNf+Fcf3Lql0HpACEUcYbAmwKpN69Of/dkn//zPP33ZjnHPiyH6IM24e845paSamvn6BrXpoSOzzz570D3GWOa80q6q4UG3YZ7TEaRUxaOPvLD/0DRLASYREaEm75JrJYd5VjUhHRuxP/iDX//Uxy8PUuacA0uIBHd3cwJzIKnrPL91S/Fv/uhTH731ctjx0XFOttjo3JgB4KIomJk5hKJ75NjJF17cD5QEYVr+INjb/xzKBx946eD+RGGUgxBHoQ7UmTpCPXj0LG4sFDpFGaOAi4OHTjz60HOawcQEU337I8UVTUV2CCGngWqKBRMGl2we+fwXPnH77Td3IzRbGTtwpFSBksQkKCPHguxTt9/0+1/4jbHRmFLV6fSCxBAChjqruSlCqiYK5hZ+tuu1hUUQ2Dw3sc1KeT6qSuRvUGeLQJg5OXjsiVfdo4upap1TSrV5ElCkTlEEchNiEbrllms+9ckbmBLAIRRgzzYwSpDGkU+qZRG7ZtWGdeXnPvuJizeu9ezwgpmJiMCNb6yek9YGd+Dpp19eWhz6zssm622nYn8h/ezpV+BFnebB83W14O7CnnKF5XjVFZZNk2qtyauU+OmnX5mbH0ZCyyunWyqezipCGUrkReRqsNDr0Yc/cv2v/dpNRQBcQzCSrDoQESDmHC0pIJ5yr2Of+9zNH7vtSqdFp5xzJmpmHYZ/QE6MED2Z737lwPxcMgOHpmFqBT0xo2UuNi9aM6YmT7y256g7meVQCDNLIPcUArvCcmIhVe92ys985uOrVhGhaq4ndwrSYSrMhTiCAwtlTcI1oX/rLVddffWlKS/GglSTu4sIkzhhKH9DpPAXX9pzcqZStUaTjvl8UPHE8cXD+2ZyXYjEEEIRR8S6bKWEmngASkQaGzkQokBMEUZ88MDU1NSJnI2YmFlNf4mo6NCmA5Ca9RfeCJ/y8rwiu1Mzr+hO7ilzrejBuoalSJ2JMfnN3/joSGmMRmQlAEFChzkQEAOoTAYghhDqiS4+9ysfXb+q1IQmKG9qdXByQ7OpDwMhlAePTb3y2gGwB3a36i1vsH2DyDKdn4oIW2YaAcVMKkxq8wj2+FMnJ48vkUTzynI/gMmEUCSFB1NnUwqsGzZObN12WZ25nzrZNGnOlupc1blSTZory3U1AKS7lMsBF+jiqmsvdV9gHzRyVUP32JyGLTjGzIcOzb22f5YiwUuCkp+PxV8nlqanFwY1VSSo+4NIAxYdwODRLTRjpgZ4o3pCTKYhYGGue2JmWgKbCWDh7W8VWsFpGxFJlXIgFrGkV139nu07Lj7DCDlBQDA3mErAziu3X3b51mOPHzkTeRyDwWBycjKlzWUsmClXK8eB56GLSERwZ+Z+rfv2HXx97OOftvW5a9MkCAmTU3Nf/q/f7XWVqbK87U0/v5Bca2IxMOUcXnxxuqAdVncQpk/jMHu/Xx+fPml6UTODrebnwRYMFuu6rolECCQdb6TrJJxuCsOMstkgDRYH/WWJV7TFjDPaGXMzIyc3I0/vu+7yNWsLaHXaKfjGU6NG8N83X9J7z85LHnn8tTMJWDillCcnpxv3gVbUchxib4bTAZiBQ1FXun/fYTdyb2rr9Ib/PBTU0GxgmplN3/nuIzlVReBMD58mbYaq7nc6BRHVSUPoUCFaGZ1mokW4IAxmZxdECMpgNzsf6hudciSyMKlmMBWOZAT3fLqfHKQXuAqBCWJD6a0aLm2J/0woimhQgnR75fYdmxkg4dP74mIE+v/Ye7Ngu67rWmzMOdfae59zz+0AXPQgAYJ9T4rqKJGyLMmSG1mSbdmWuxc7tuNKVapS+ci3/5Kv/OQzqfglzkv3kue852c7Lj8/SbZ6WexEkQBIsEEPXNz+nnP23mvNOfOxzwUpmxc2+QCC5OOqU6zCLeLg3LPXXGvOMcccg5hjdEsSipsP7y1Kzu3Vsnd3Wl8bBinMzAnvLlNjZuoUwzvJ45yxvlFvkRkmIsjuDvJOsEDdnJyAoqyaxgjT5kVrK9ts2VKKQVa4e0opK4oA4m0zzrbNVcHLS6tmE7O+EATXHxHpVVVZsOrIPBYsRmBm9W1r1NwYl5mh/anKJjpg/DYcwu9i2EY1dTcjQaoyLCxMq9dXne8VONR0In5Btmfv/FX8GLWbFXLa2BiawQzvLmccd2fuNJlVBHAaj5rRsO4sK9H993UbQLh0pxBCttTmOmudrR3Ww4jwhq+6SebSZlGLsZgWrgxBYnn1ank4HHbScm5GXb1wndfc9GBh91yQVBaBKeasZtnJtj+/gul4ahD2LMxvJfP+NrgivZsRVHZL7Zb3MKoqMllO2yJdNnGk4olHI3RmdhDCVejdk6nH9Y3huGkJzMQ5v3sMxp271NTdQTDLo9FoY2OTiLbi8MdLJIOZMUsMAUCIVBQoKjOlN3yFyEQu7ICrZnc39abZdlo/BAY0FuITRG7rs13ntWPH1B13HuDQmLUT6szEhuCNVynM1B65ZWHnrpnIExGTtyOFefeGYpTAzJ2qr4g4EoHkapMTzAxhES4JkUBwFr76UIx1SsFvT1VzrSNRXnO92moquBu2a41SGwKrKlwsw7JbaqHZWd7wRV67jphr5hHRUEIrwV7z0vkHK+WaBXv3LrgroF00Cl93ZFKCPvzQHbOzRZvGKTUhCDNke0eR1I6r0j/0wft7VXR4V0S/DU//XRyKObcdBtM2CUBd1+ZKga9SOKmqw9XQ2TAOh+NU56skeO4eQuj3+yFMCMFdd/FdEosTZhmxmxkxlb2iqioiesPnnqwNUXI2NxEqIhVCkZyN0xu+xPrskT26CxBMJSdhmtr2tinj/PzM0VuPFEXovn/N7tefVybiH/rwg3fceWRqqtflye5q23OJY0G798x99CMPFwLXzghQ34amy7svFGlrgSUpqeeq6m8Ol9bXGrcAR+dl6K8LJzMzQ0POYgQTBwdJsIuLl9TqbWtFEUMOhJlp6pVsaDscdtsP5mCDEYLBCXLFmtzZkYMQQcxqYjfdMlcOkik5xJupHveYGicDMlE2pGRjRzZv3VpYAlQzCAaQ2zhbdk62PY5EFIXboCzaI2SHc+hVMwxygA3uoXVuwOTGUESO7bgQzIVCGlvOXLsEh0iywkiSS/LSJWSnti1ciYggqipg4UAUQdEhTnCCTYh3QsIGz6ZR0xd+7vF779uZMHIxMyF29rdB8KbZuxs/99lPDgbOvbFJbNtCfEa4NR0Tw4nBQsJtbomNef3nf+6zt95akYNVYESo3oZQfFfTwUmkM3LQepxeOPHqpz95t6dWuwYiy5aFeCcjbAHBwewAwyw3Lb368mXdFtOGQIhCzrnf73cup4a3RF8mApBS6pyYmNkU1oEWBiIiJqWsSt0AAEwUBFiUHoCcU4ziZim3ZShMwRIChzL23HEViTJVJVHDazaxVVVNDyYmk0RCrlkzkxWxJCdQztYasrajokC/rMnryKLqIRRbrJ22k4EREeYGZMkyMMneu5pKjInITbpmplMeTFf79u3+yZ989DOf/shgit1EOBpYREHpestPaWYO+NmfffiFl179X/74z+txPTMzOxwvWapiLAmS0jgGkcCEzOBPf/rDP/W5j/WnKKcmxLKbxeHrn6G+m0PRCWTuBkSW8vixM01LvSKU6NgzV8ZSzaAppRgCTEAOTkwyHuKVk5e1BRXbwTweAhFsYWHhtSYv2Vv5oEzuDrIrXktETkJqxkxwYyaDMpAy3DgEwMUdcMQQARCj5MJ0gkO2rY/GGc7MjG04WSGwMLF0f4UdWgTsnB+wmzoLBSAAuUNrNNXgJhSV5ZhzuOXI7b/1G5+fnS7I3cgI0pG8twQXyd1TyyLSUesAYyjI3L1RE5EQgnoOgacH/enpwcxMtWvXaGaqD8A8dGNbquas4Tq7o0oIm8PVqam53/vtL0GL/+N/+8vcqqBX9ilndede2XfXZjScnx3c/8C9X/n1Tx29ZWBotqLPADbPcp0bWe/mviILkZOZqgrRsedOP/XkSx/58C1wuE7AQBAAJuEixtS2RVFoTsSNe+/Jp156/rlXwLQtmObORINB//BNB3L2ItJbPTKc0AlekaNzHWcRMerwE3Z3kBK7gVeWN4mhOUsgN1PjGKRNSqxRWHOOpXedh431oTtZ1u3Oa7MMZLNk5F2S3Ktw9Og+4PtQOEVTF46d/5QRxCtTgLQI0rbrDz1y4PajU0IwuqLLyldsqtzAnF/PfGBMtLfJY86QCHek3BaxIEDVhfttY0XBItK2bVEEksBvhyIj9XuDnHTnnPzB7/3Erl3tv/rXXzt1anXcVEEqIWmbGhgduqn89Gfu+MIXP3HPnfvVavK2kL6rkYSOHoL3W/xXuWyIVERyMgDnzq391V/94L4HbhlURmGyMwCoOkEAxAIA1HNEWNlo/+brPzh/YbkazKc2b4PQiuto396Dhw8fpK2eor2lBpO5hRA6c/srke/uBO78HEDqTK5y8qVz47atSlZvRIRF3BGjOJCzhiJmW89KkMHp02dzti7p3T5HbUJkd4UT3IPg9tsPzgzi+joRcaPg2CWTGkIg77dpM8ZA4OXl5ePHnr3t1gdBY7IeTaBOA0HVmQMx+cRSlmkyBuwgN3UJ60ZO3ssWOBQA1BoRrmstu2fgKIpCVVnY4debw9SNa8XAcN+5Y+q3f/NLH/3QZ77+jSefeOrE6tJGPU5zc7P33Xf0I4/ecc89e3btigw4NEp0p4n/q5nwdT8y3tWhOLlViBCE2kTf+MZzj3z4+OOPHZ6qYrbGrS1CwUKAujHIU6pj0d+s87/76x987W+edinqdijbEN+EtE3jwzfv37lzSiRfwYzeAs5kZr1e78ofHejGQUChc7cHmRmp8gsvnH32uTMf/OAtptlyikFyVomBsGVITBLj4OSri08++bzmrlm3TWJGpKDBoE9Ehm6sxI4e2bN778zmxhK4T0bu5p5zzjGIMIMicdE2WYf8l3/+1MMP3nfzoTlmdGoAxM7USc5S94vEGIEM5KQNgBiiBIx84MQnX07f//7xzY3h7oXpg4dm77pr72wvA405w5g5iohZzt4Wcn0FUjWHWCCltRDYEbLbPfcPbr/7I+sbDw6HY6YwNTVVVrEqORDUFCQycaokpq6qp4lF7fuhuA1ITSAx7ciBCoonT6788//5T/cufOWOuw5UZc+JtoTQiJgdHAuuG3zzGy/8yf/97VOnh4OZ2brd3P40rfs9uv+BO4pyAjQTJn3zNx2LoNnZ2Rhjm7dGFhzuRCxmRCQOGJw5nL+4/Fd//eyRW27ZtbNyrbvjXFVJnBltgsTBygr+8s+ffOmlVUMx8T56w2ZPMikxPTsgYQJIxJEP7Ntx++0HXzh+1nXMEhwmIt1ua3XsUPNWCofTd7/39L/50/1f/uVPLMzOhMBOnHNDgYgwEfyHOxkzHGApQEV2bKzr88ef/+t//+1vfevYmbNrOVvgdPNNc5/6yUd/5cuf27t/likbd9OLRCTF9b9tWNRcY+ybO1PRL1E3WpZx93y02SlHAhswFjDATEbouSG5xlACcE9M3VfE74fitgihBDYFC8xykD4hPPPUyf/mv/3nv/7rX/rYx+7eMVeBLKckFJhJHRvD5q/+6tv/4l989UfPrfd6C03TuMh2W9k9zc9P33XnrQQ4zB0g6FsiagnTzMxMWZZJa1ULRCLBjDqVXmbODgJiqJpm9U/+1d8uLCx86QuP7N5VpaaNk1yu44tiPMJf/7un/+X/9e831tkpUMxusg1sE4qynJkZCLNrJ01fF2Xx8Afu/frXntnccIepalfEqpnauKpmmpQACKaGm/0/+h+/trmGX/nlD+3du6s/JRILhzkcnT6ek5maESimhOVlPPHEi9/77tN/+80Tp86dh5SGXaoamZ47nl5++QfrS/G/+C9/cWaOhRNIU8MxMjxc74Yay5hQZRUiMkogrUoBHFmZO1UkwcTY3JmhGVJExgSBF+asTZDrro96HUNxu04MbV/7GSk5EbrHY+5CnM1bob6iYYZ7VBuFEMyZGW6QoAAcIfkIDPjgmR8dO//f/fdf/fqdH/novXfcdtPCjhnLury8+vRLy9/9zlPf/87zq8tJZODYZCC4wAKRdvr0ZgwnBAcltuqxj97/4P2Vac1SdfCmxG03TtdPY0NmkEOvUIgJjeott7GDQLUAACAASURBVO6ZG/SGqxxk7Lah1ndO8JoJbkkQAGQdCk3X45U/+p/++NSpYz//85+87ei+AVkRilTrMKfTZy7+23/z9T//i28tLjYc+2YBXmaMI1VigR0OzZ5B0SBjbM6U4ejheTEwKywUcQbQxz724F/82+/+3fcvgAI4ZVOhwlKOYUqTBnSNxwYRmy390b/4+hNP/e1jn/jQ44994ODBnVWPI0vgGEJoU9aM0bg5fe7c9//u2De+8cSxY6dW18euOwQFO2XTQO4wY81Mf/qXX3/4Q0c/+9n7hEqQhBLqJtdffJEwABAm51V8rXcSAl4n/EMywZ+k6PrtvFWLxCBvh9vHO+hWZGLAqENb6LWCsKubDdaxt7awk20foeXbzp4dXV48+42/uVAV0qsKhrRte2l9sW3NtYhxyhBSatw1RDGkIEHVzSbgSk5tiDI7Hz/xiQ8PBqVT7o4WIld70xI37hpZBtN86+17Lyy+kJ2EY07tdnBF1psXL27+v39y7FvfPHPTwd2HDh6YHvSbOr3yysXz5y+ePXe5Sf2i3Nlq1lwTZ6GoqsycLAEqkbO3RFwgLuzuHzy0QAQ4d1+YK+3d2/upz37wmWf+93EuA0vSTOwuRlemY51ePzDx1FN84vjT//L/PLZv79xNh/bt2rWzV/ZE4qi+vHR5+cy58+fOXV5aGY5G5tQPsoO5TSl113LOWc2IJLU+Mv/q17/1qc/cXxC3SWN81wh2vT3reobipMNOrwdarrS8/5G/1xVU9Jp1RCdL1LllmtlVzlKXRMytehoqjUxIicSNGDsjwzuogqwjr4KcJZOwG0IRyMks9/qFa3P/A0cefuT2Dqjv+orC9BamuYmIQXOzfPf9e7/2t98zn07ZKJjYGzc0lUdhQG3Or5y9ePrCpfDk82ZmZgV6BjAFYh41NbOVFZsloB8LstySeIyxyU3SHApBig8/dMf+/XPYwhzMMpOUgsc/ft+f/dnXn3zqMnGPPQEmQVzfOPfmioc6Xr+0cn7p4jPHjptnqInEbDQR7AAzh1CV5qymDIQQkiraloiKEElCzjklvPzqhbrxKNbZDQnh6gjwf1TrOn4L5CBHV1zA0WkrXGU8zeFvAEGQTXYzM15n6nKV52e+JjIOhUowDsjI4zSsdTPryLw2r5OPzBtiI+4u2DJnk+CqqsZm3Iw35ufLL/3C4zvmYdoAUDUAWfNbaGZoznAqAh599L5DN+2AUyym6WohXbsld2cqiKs2c7YQy+mWNxJtKo+Mx6AEciJxl9TWqilZdqakyMoh9swwO4ifeOzhskju2tH1zDOYzDb3Hwhf/OKH5mc9jYfCBkopj35sM7yOMj4ej+FSVtMhDswq075R37xUq0BTEmaIS81IKWtu3XKTlEPoStAQQs7WjGvLDi7L3rSZJ3utF+o30NDwP55QBNPk1Q2pXvnjPxF03LpIO1WISYt8e0OJ1/qBxGJsjbZ18mRsEKIiBGZ3NudMpEA2yxOtXq9y8hBCSilIGTn2CvriFx77+GP3AdoFvgh3h8tbmCGVEIhIc7rnrps/+ROPMNQzXYVwx7mgVAav2HtIRUFT7NVoow2yQDab2h4wXcZZoanUsOVYltGRq6pw0GhsjClBiYxPPH7/A/ff6t5OdM1ee+RTZex/6pM/8fjHP9wrK9IQaVpoZms/8I/VvkC/LASujaZx0uSMIIimRIDmnOrGEzFiRCgoFiQi0iWoMUZ37yzoiiKYN/v37qqqUMXYHWgdaPR+EL7jasUrtVNXD3at745ppaohdJz6rdbc9vxc9oqIAhu7R4kOZQWDk0U3JRJhSGB3V01mFqiAFDlbURRtuxmofuzj9/zqL3+mV8A1E5Gqk5BbDiGEt6SG2h0lEvBLv/jZE89f/ua3jk8PBnX9xkx05paIWKQjEhFRjEzcNjWKomCjnBtn7sTaiDjnOmtLgpy5Vw3grs3K3Xcf+JVf/uTOeWGKnfuhw1miuxOrw3bvLn7tNz6xuHTpO99+rmmkV021mV53QNtrAWkwNeYQZOLcRiCCBxmZGYSZHICpmjmRh3JqPG6LUKq6ai7KKPA2bczO8McefaCqwDA18q3n+G5yIXlXI6ivn4KhSaP5H9m13bNxNyKEEAaDAdHQTInJzGnivrvtI8xeENzcAG8z3LljXYtw92HMPNcZMBYKoWAbg6UZt2VVSBzec+fCL/zixw/sL62zXyKBkwOqKXBI6U0nVKrKHITQptFtR6e/8PkPvvTiC+cuXpC4jbtwLFJK1jYiQgJ1gjo8xFib1QBiEQjSCQsQUYw9CV3RCCZr69W9e/2zP3XPww/thVunhO9scDCJu5EHcwfb/Q/s+/KXHxuNRs/+8HTbjLFNq10C1JIjgwTw7IBDVQMxEAiszl3FKIFEJGtmZg6SWyUSdmvSZlHK5z7zocc+dk9AcjORUtVZgqm+fy9e91BU+N+zle9yy7B9MJobOb8+xmIMs7OzIpd1a8DM/wEa9PffREaAgUFbE01CQhDTUaclQeCJv5JZalMZx65lEQdAfettC7/5zz736U/dT8iMAFUQRKDwEEO3m98CbEPkOTVBQEif++kPXF5e/V//+M8uvLEwGprEzCVzdICYXeFOIkKaARC5Z89u3Ri0maUWxG6EGEPTbMzPyRd+/iO/9pVPxphyMkYBKGBOMkkooMLkaFqMP/czD41rc/va8RMnf3xy87WLsc3uVBDDCNmUWUQikZu3RARighDBoRmachaGCHeWODGGNm0UpXz00Ue+8pWf3bmjBDaJ2NWYGJ2bwPur26V/+Id/+B/8Jo06tx0bwVtoTUxqQqTLa2tnF1deOnvppXOLl1bWNutGYkEcAsPTiBBBcDK1Fs5MxCRbkj5EFAioSiwuDb/zre+kNADNKBoJ2TQVEpQK1ZZ0XIneeesRUNisk4WSc2QXggcRIoNbIMCUvW9OTi6R1HPOmcBEAdwDudn6fXfu/8/+0y9/7jMPhpDhI6LoHLwby4MDnIla9eOnli6tJ0cQmHWlZOczRQS4uRBZBdx/69yOQQCEmQADG3M0RRnlrttvqWJ7/IXV4cYGszg4Z5UYnU1dAysTmEGdbzcyODlqkuTUOiWIAgp0ox7gQpuUqtiztp4d5N/8rZ/+7d/+4uxMwSwsoZvCYmIG0eRcMHMlkoC+Kd16ZP+hQ3sXL7x69vzQTcFoUxPL6IwmtUVVhKRE7mwdYZZA7maqREmEuwHKTrFXWJgk5VyUBcEC2HOaqsJnP/Ox//wPfv2+e/pMAApQpE5d6BqnYZMmWJf7EDmg8KwkV2hrNjHzAd4GJtvbH4rmCkhkgsEtcSgaxIvr7bdfjN/+0cp3j609ezq9eIGOn80nzuQT55TyZn9qMFUV3VYDeZtSEYvt3r/s84njr168NFTzEM3RmAboVJMvz8/N5Xrz3vsO/Ff/9Vf2H4rPP//MeNiSB2Z2hyoRSnhMmZlLFufA7t6mzAhlWTEFqBEaYO2jHz36+3/w+U9+8s4YzXLLXGBLnrDrqgAwUFK82VA0c2buxA6ZJatXFd12223TO9P65rnly4tukb3nVpiBXITJAFW4MZEEKYgELppLQgUvLUdCyVQSIlxSqqtC4Ou33Tb/u7/3+V/4hUd37nTQJlO1/UXNbp1cvhUFH9w/f9e9947a1dWV8+PRuAhTmmNKKkIOLagyIzeYEcCMCKfIRSehDgQy6eam2NU1hRg9w3MSGd5x19Rv/c4nfu23HrvlyNT1blmYNWbJSbspLsDdusALoE4XYwI9AKRJWfg9F4qdiYwTWeYQhybPvbrydyfOPf2j04vLq406cSExMoe2TZuj0fnF8xsbzez03MwUq46FQ5DiKhnn/Oys5t6pVy9curQIAoPdOHCIRW+8Nj5yaO+v/PJnfvpn77799pv7vdnL51fXNy+ojoIQUScoTp2fijvnBOKiiL0Ygua6rdeKQg/snfmNX/v5/+S3v/DggwcCa25TDD14pwt4DUKRqNuolHM3cYusWvXkjjtuuePW+2LoXzy/2NQts5qNi57lnGly+fjEOdndzDgY3FRbgsUSwo37kGWMVOzZMffZn/ro7/7ul3/qU/fMTEdXCHVHyRtW493YZCfenXNuY4w7d/Ye+cCDu+Z35taWLq00TVsVJQfKbZ28MTEp2NA1ozRrS2xCIZkajAQkRpxATYzKRpHs8M17vvTFT/3O7/zSTzz+wM65PnUu3NdzJQ7E0Sk4OBtlI+dIHBg2AR/crhD6iemd5lp7DUKRiIngqaEgmeRHLy9/60dnj51ZhahUwpEy2qSNUSNRSWyocvnyWBh7Fgb9snNVkJxUtjmlmDfvunf/zLxvDpfW1zdIA5M7Daen0kMP7//d3//0F770cOBRFfXuOw8fOjRo2ry8dGFcj5nFshKBxYmNCI4cI7m3Ka8EXjt4MD766G2//7s/+3M/85H9+wvTJnR1Dl0ZPromoTjpwbjDHczkyO4axPfunXnoA7fedc+B6Vlv29XRaD21Y0IkuHCIIYhE4SAswqzYFHZml6Bu47ZdnerrwYNzP/Mz9/7qr37sl7786J23z4o08GaSgG1T1nbOpxPVGwJLp6ef+1V7z70HH/rALXv2liGk1dWljbVxr5hOAWAhDlmZOMQQnVxiLNXINBAYCh0FGw0q2z3fu/+hud/6Z5/6nd/99OOP337k5pkiIKcNkUQor/O1CHaImQACBCIBsXeq51d6YzaZKn/n2UfTf7j6nTmYDKbgeOLc5teefOnl5TT0GGGmcAKHSESqKgRmNokYNTtC8/GHFj5634HopAkSt1Vf1jyWENtE5y/W3/3OyZMnL6TUlhUdPXrooQdvPbi/X5ZmqnBmkay2vMZf++ozzzxz8vnnT7/y8tmkrp6bZhxCQSRVVVVVOHRo4aEHbvnAB+744CO3zs8agJRSjCWAphmHyMIMiG/xbLp5xQweNf6vv3H8h2dGijJ6TsSAC7IjdA5qySJxnnX8+ucOH91TwSNRVjOmQCQdQ2DiKmFwV5bo4NEYi5f8Bz944aknj79w8szK8try8lrb5GSu2R1KRIgeOYYQ5mdnDuzbffPNe+6957Z77r398OFmeroC4JaZCM5QglylZ5yB0HX2zFpiZ+aUUhEr08QS1XhtDcePXfze9048++xLr5xZWV/frEdt22QicdeUGwmhJyKx6M9MD6b7O3fN3HbLvrvuOHzrkYO33l6UFWLRFW9bQrOU357OmU1Y3Z07gaaUQgivJ4SYQQ0h8HswFB0wTZC4MvKvfv/EEy8s5nJOKRaacWUwb6KQy3AbC1dS2nD1tn3y04/ffXCu5zkH2R5YdbStxchgjNvEYiBi5txSrxAzwFWEsNVzbL0lCinJubNLZ85dWlvdWF5e3hhuEmwwNbOwZ/eePXsOHdy7a0dwh5B7cmZ2VxJWdWZmQttaUeKahKKjZeKUrAv1K6xaYQGZQ3NOHMSNszGTDEd5cXHp/PkLy6vrw+F4NBrl3DLzYHq21+vNzMws7Nqxd/euwXQZBCEgIFuHKjsDnU6gpbaNRX+bo7M1ZZGwdfZ1SClbdneVCHNLmoJEULG+sbm+PD5//uKlC5c2N0abo2HbtkWv6vX7FKtqMNh9YN/c3NzsXH/HIAjlgkxAqdWiqAAzT2bGFHPiorzOtZmOIAXAGdx1OJmM0bnZddrHxsSd29w7ELm9BgcVwZy4cRw7vXTi3EZLU8FF23FNXBSF0GTzMVHHwyjZCLnoDZY206kLm7vner0Ay76triEhRlYFzHqRiSgljxRiUZsaEEQEsGwtETOKSAXAEv3o4V1HD+9qGnVHVQqRdSNOXUeSPLODiRENUPfsQAjsIHMUJV8rKpIpcZAQ2CznbDFGIhIRd+TkMcYYoqoLUwhISWcGmJ7adfTwHma4w8wBsCCpRhECOZRAExAVXeEjnUQAMxzqbrHYdqsxBZIuW7ZOAsONmAsO6k6AMKEMhaqLYG7Qm58ubzo0434ri2RVNUisas3jms9furS0unn67OlLi7ywY2rPbH/PjllCWxSFu+aciS1IAEJRXP+97NkzjS2MWxs1rar2yzA9VZlZUbA7mXkRnPA2jQLfiL6iO7GMWn/l/OXlYQ7VrOW2ErIgZim1TYxRGDlnhzC7AJujjbKaWxs2F5dHraZKwFdJ3R3ECJy9y3cpxOAgI6vcTZjUwMwiPZ/wWDuAIHfeglXBIMltChIFDFbAHZ3WmiB7hoVQMEVVz96dl8lxzTxNQyjatg0hMBOzEbm7qSpYQhSDkkOEXD2rxhgBBVOn0EOwINwFTMnRLRNzR5M3B1FwdyLWbNzBxu6gQISkebvJB1UXYZpQsTsxj8kEsBPg2slJwRPABG81ikx4xEoREWPghVOL33rez19abpSIA8F6Ybh/B995266PH47ETmIxRvfOnaJlUsL1HflbCTOnzucTpxfPLA5XN2p2zM9M7Zyfe+woduycqwIRbekQu5o5B3nvhWJmosUlfflsS8WU6ZjBmeGqACQW1umLcOxE7s2oV7KrcanLy5vBI5k767YM6cn3F4jDj/2EETqF6dezeSamLOiallcCPBRXrjj5McZPwJVhCxHqvpDOC6nj/ThpF+CTB0m6fa6/Xfiah4J9mDGFULhaS1IKDEJoyIp1TlMojGHsiZoeyklzjK+I1jGBQSB67Ru44kUJXJmifA2LiNsbQV7JzZi7X3Yyy0eYmLl2byKhmPxU1BVBMiDuG475508ufvV7p5ZqJhIJEZ7MdaT51ZXhhScWi3TkA/fMBVcYg9nAnl0kXqtbyLxxRDaoA4HZRsxxA/G5E8Onnj12fnWUqVSSKHzh0qXFixc2zqcHHzj64K0HKh8iO2TGQPLOk5a+FqHIMZmvrKw0OTsCEzEo+7YZAMGJKBvAXLc2btqpXnx7PJZvyEpgZcB7lGsORDwu1y76Kz/gy5sIsLCj2L9H9t4mvV3IDSBXRlvfISCfuxMFuLkFkcHLFzZ/eOzMZh2ICCRgmhDHjc20VXvuxVN7Fqojuysim9gdi1xDi8JOjhowEcoAcQDiK6c3vvvMyUvLGx56LqUayNkBD3R6OdXPnmFMfeDWOUGrBgl+hRL4ngpFB2fLl5fWzMypu0GcybfX0TaAjZgRsiKpXU0B8d2/YloWnoaTcATqSz/6u1M/+GZz/MlUrynaaNNTNx06eP+jM488Xs3tXUU1/0ZxeGU67Ab0uyiYwYnVAIkvn7380rkNi3scYxA7ulZP5yxs5v7q0vDlCyuHdu+LzmZOAiK+hi5ck+yDjIjNzUlGDZ45fuHiyBMPJFYOAZkRZ0DNi3L/mZXl509v3H5kbk4KVSdkwAnvuVBUwMCboxFLBNjVOvb+9qGrZrgyzxakAMzc+D3K0Nc4IwhqkPWLG0/9f/7X/8P8Kycqqsgb46afoy89kV54sl58pfexz/cPPvLOM08wdY5ERNhscW551ErFIVgmdyd4F4cdGdVhLQ/OL22M2n2zwcmtw4rpWlJb6LVc1aHgxY32lYsbxn1ENUPONXNgka6HYRzUq7MX1y8s1jN7qq6LwfSOQ1CvwRfkDnfPWbE10WtmVxtikmieBW7a9HtFVfLb4Ox1Izdy5qStM2zxpZe/9hfNy8d7hoSQHKMgqwMMy2Zx6ZXnn/jq2ae/AcY77dvIKQEwqAiy5aXRUIWavIkJgcUdujVHKkQxISyvb9bZwMQdS3UiRnrtvlIDQeAuxAAvLm8Mk+SUCMbQSBRJSRv2HNm9XQ+w0Wi0trYG78i9BHsvhqIAIGOmnDMmvr9Xq/y4E2a3OqBdmOvH0Bm7xvdqKMbAUThvLtZP/T/5pW8EZCqJ9EzPuadlGiE2cjhWBy6djt/9y/KVJ/7eOMsNrxsFzgFqLTyJSNOagYR14iLUeVVOTmWCwjAxHu+EUa4k2NewejUCmNypA182R2OPMbAHQAhROAjBFZ5g2osmbN0NoZo6gwdVeg+GIpMVRLPTUxMJbSdz8u1987KxIJC3M326ad9cgLq74T0rcDI0KIK3tn7y+QGpSthUDkWvllXiVoIl5IZVabi0dPrs0tl32uenK10R7+QvKqay5AIwISd2Jid3hnf0wEiTBgxeUwK4mp/hmw7E1wHjBASCTnTHXFXbrBnIzkaBJTohORpFcqlbGNw8A87vvNmsaxEAroXwzPTUFc0Ld+ftvT6SGjMH+Nx0tXuhx9BrnsC8o1bBKs1qUY+HFy/0PffaUV/d2wqY1iGXHiVQk4fBRtPjTVlZfcNb8cZCqHnClJJUK1Mp6Kfa4QqYdO5aW64+BBCUTC1nosmEqnnGtcNttiy5QTaZRGdBtgQwB+EQnWPjlNyVRJ2SBpe+h6o2cCxYyKGg92IoupOB9++fq0IdrETcZSySN1tGDaMYSIKpkyOAA5ALadz7RX7w0MKeShlG5PEdidl4pzS3Rez3f+R/JlG3aFGtFg/KnRe2QSCh1kbKolWYxMYTSo1hStncisLBcHVRaaJtN07x2j/vMMDMsqaMDIV1PwHsiv2j/4PTzczU7YruV+d5aBN5PXf3Fm3Ca/7mZqaeM5JTKEDiPQvG0VppOa1YSaDoLmZMRuzc1Y3GbiD1wNSRv40ghMLfvKr63zuS3LX7HdkRkA3IQRprauQcKkLn6OjkRpYKWCRiMwY8gM2jj/tkZMm9AZioYxpZttSadgOgyaE37kq4FsQ3YmjaMSjuuGnh6RfWmlwXhUNC0GhmBjbP3SNP1ABWgAsf37R//tDBPcLS0TsceK8iqElzDCV6A5marjm0oVDnnNZbWSxKTlaMgBCnM4L3Zst9+95QR2vC1QJU1eAiQhy6/r947uhDEAaLgxRutoVPwNyMYMwMc88txwJbcgaYsGgcQLCiG3Lu4pkDg7gjZdyYxPh1UmMAiGTi6JRBIDIXoZAZHKaaOJ16m7Kda612niQOJo4AKcQSAhkHCiwAzLJb3ppbL96tt6KBXeKgF48e3jc9xTEaxarWsrRUugbPBVGvKEPkDmLtNetH9gweuvPQnvkId0CIwo163m/DGhBzaqcGxZ4770M5w3UzS4Z2PEhga81WAkaFbQbkHTt27J2f2Q6hyVYDJiJBAryT3UbK5ojgEqEERfVOh0aZjWGd9ygxO0dHAEeEEp0OppGbWCbVzscRzOae3WpwcklqSa9pYvkWbsV/APkwwG0schQrSQNQkgXL0iRsbg/yGAucXN3UkYwcREIsYsZm3bkEkcgiuHHw2LWAbXIKua7Q3L1/8JHb5hfiUNcvlJQ4Zkedc5M1uam32cdtyH5kZ/Whuw8e2d8nN8sKFxDoPSxLa5xctJqT+3/Obv74KJeaMk/v8Dw3pmmUs+DZxTx78eCD+pHfwN5HtlOXJGabpJYON4IKWwymRK2jdWQAxMIxgAOc4bDO65szqDFrgUxI4ATOzBBQIBZxQpPqTlHfIrkQmE3IwPnGwWlXElS+MpbfsWQVUCebDJESg4J52JaQyM4MuqKaKeQBFrkTm/dOacRcsrF5sBuH5F+DBDVJJI4p1xJw150316jsxfNrtW5CqOwFiexsqbWss1O9/bsXPnb74PBNsxFKniWUbnCz93Ao1oRQlIDLoXuOfPrzdVxcOvF9rzf7RT9aE8fKFGZ2Hdjz4Q/s/NBDCNt7EFBQzQ4SZkCpAw3dg49AERyBoIZsIOLA3XkPcxAhIDNneIbnGoPAIiC3bKoixExVUdTZRSIRZXd2Dgw4cvJrla+9WQ+Vjt7+WunrBoCJyw6sYWSQomgzGivT9juZTFLrTG5gJxBItRV3F+78cJlCEPiNxvCvQShGpEkC1Wzu7g8ee2DP3p3lyVMXXji/Vtett8qkUwXvXZg6etPc7Uf2TpcSGObeuWeqW5Bg791orOSyY1ZbeH939dHPjvftXvvet9KJp08srYhhqjfdv/Xonns/VD7wSNvbeyHRTXFbWIhIhLvyz52EKYDQoKwz1jZ9fWzL62llY7w5bNqs/ars96t+L073ZWEmzE+FviBQqgAgwzKpcYggToo2m5RFrQ7zMjAzyBWeY4TjRl0UNpmn7eZdibsfCW+2WTP1WipUMRz5ZjILFaX0hu8ixEYUi/5YcWnNikjsRRW5ECWCmztUGGQZ7giMG/T7XgsOKrGCEaIEGLwUuu2muYP75u4aYW21blIugszOVDumqV+gAMRbQhAKDku5YWYguL9nhWlb9BrEgcANypg9fMdD83v5vnsxvAwjxKn6wKFq50GXKcr1TdHd+2+YoG7l8epwhRgHAzbHWFxcPnPh8kunLl1eqxNKcHSwu7tlEVFtC9H9O6YP7Z2+5cCum/ftLMhBlhUUSqewuKknTy8urY4vryyKyK652cMH9x3cOzUQYW7JGlwjHyXf5l7cTvltS9OEbauVaI6U8zj3z5w9f2bp3NJGk0Yt1JfqaGOWbVxfHVmdRll/ePLMqdOnAc7mvbKIrLt3ze9f2LF/YXbXACKwPL6B7cZrgqAauRsCETw3Eqhy7RVxZ6E6Q+CBAZq9CMqeYC2kzDmLFCAWESYyy/Rudnq8+iq0BEDIWYNQj1Hk2Z00fVNiKLTnxFTA0RrYEb3dTuiVHGZ5Qm6SUBtePb95/MUzT59psnmyWSoWALgaeSJyZw2xzGI1MFz3F5fXfng23XakePRmnp2dQuxttDh9cf2J4+dePLOi1Gf0ARw/s/b0C5t3HVl44K4DB3b0RIob/mC8m/IhpJQ2R8M/f9pOn19db5JxiOZR28TSFlM9G71xoivGEIS4WtebI4P0W0VgzuDjl1d7xy4e3b/jg/cdObg7Rim2NKnenaEIRLnCcg8VXvOsix0HWIAYCBCQQCpMnO265KHoKu/3wiJXIU6chGcVWay7TVw8WAYzU+NITkKIylKAag2tAF6DrESVwZkKI4tw5AxmsOSJCxTYxiAmRAeP1uzZly4+8eL5S6O2RR8ghsMadDYHnTiWlXMQmAAAIABJREFUR81GAHU1I4dLG/WlZ46nleKRew7fvGfm0vnFv33q1Jk1JprxprFCnJWKNFZ76uSrQzSf/eAtu4t1xyz9+OTM1b2fyJoownBrayajWCoFA8hpuFm3OTlJzpbNiZmZp4vQr2IInWrJhLDlYHaCZuOiBUeCa1tr+OpTp55/2Zw6FMsSRKVHjr6OfFu1eBY4kgL9zOhoqAZPBEEYZT52ZiPbiZ/+2O17puINHNd4z95F75ylmUJ39ngAl2PDZoPV1fGwaRxF2S/nBsWuPhed4iJ0YhrC7E5uAIO704p7CoyAV86sPfv84isXRist2hiD/yMHhL/GCWbAnjg1bHjx8jCcOLV6arGuZToQ9fpVasFM8OiITbbTZ5dfmN+18+7+mz0nJQ7q1IwMc0XPgGHGhctpaWV0fLnZ2NgYj5uUc52yg2OMIqEX446Z3sJ8f2G22D9f7RxQnwFrTcQ1CSk1WWJJXLx8bvP46fZabVoG5dwGjq3zmUurL716aced+yPdMLrv+6F43ZcEZB27I4RyU/25ly6cPLdy9tJyO84pc4yyMF/ccWjhgaM3zw0cumYy7w4ihhsxpOtekENNWV6+sPa9H50+dbapc6ESYwi+DVzxD/I8BhnAGzz/1MvrZy6Ph+OmpV4sKs+1mjJNGdyNYUJhanV9+MKpy/ccuXn2TepgWLNRTJehoLUWr546e/LM8vnF8fLKMIfZpE5ELBGIRmQJ7mlka6uX/VXoVEX7d/aPHpi/ed/s3h0DddEURagqSFPTEl9YvrzxFmg726wS7CwknE3W6/rMhbVH7jpAZDdK9Ob9UHwbSp1gRhxlo8azLy5///mL51ZTS1NSiTKz8+rl8Zml8+tN74N379k5GES4dTZLE1K1GYzAtRTHTm9+5/j68XOeeaqaLlNSa6jiNw5FI7C/Bq2RG5wBFFFM6fLKqCiKXoi5rUVUtFXqgdwIDsRQuNvltfHaKM/23iRs058aenj65Hh5aenVc5c2M5wqneqFZEzeSZK7k5upm6lLUWYpQLKW9Ozp+tmLi0cO+W1HBo8e0KrirAlSUFG1NVbXsmsPyNfmuSSXwI1q4jIWM8MabUYImal4PxTfo6FoSYIr5MXz57///MuLGzHFgssC7UZEEaVEKDbWxj86cXoQ8mMPH5jUS53HQ2faQ6KQldXm6WdOnD6fYpxiG1OzMQCrQXlbQX4jx1absmsGkMPajUKIEdzJTAkQBJCZNw6EANWc1M3zuMmj1LxZcN/ren2cnvtRs7qx3phQWSVPrm0qBt20gLkTEbMQMQNR25RrdY6hkBi92Txz8tT6hfN8+85HHritlJA1FSIiSP/E+/9N444TUmE3eXujmOLvey9f/wSVo6FYbfDi6Y0Ly5x5BzDVjHOi0kLcrNuRRprZfyn1n35l5fR6N0/HW3i+OjhD1ht889mlly/bCIXHPqTvXlqIXMWrtQ+6d/mxH1EhnLJlDo3BWbgsa6OWexJcNTkyC5kpMxO/lQGRBnNDH1xuaEhlqqbbMKUyFfu7pU0h5Zi1VCvVpGkxGtF4nFUhExdNNScuDdWwCV99ZvUbT10atqhEKG2WnOdmC5ZrF40B6laEEF2tXe+XHgVXmSh6PxTfA9eignxtPDy7slqzNJYjN4OiLs2nyPvUctpgHzPy+vrq8vKyul0RC2YQKIwNz720eOyVMxlUhIh6s7SmK6Da9E97gk5XZgcZAo7OkYsSgpTqbIliwRQAdutsrDiyBApkbzoapwotgwdo7NCqVIdUy3hNuGIq4dEtMAIjBC7K2IMROxgqZBwD9QZNmF7P1SiUf3fsxR++eKYBM4dIcmhhb//a3VktubpZVsr1oMgH9swQ7Ab2t98Pxeu/MhFoWOvyRhOreaaSQd6MFWVTG1OIUbKZS6jNFldWuntMTQEndoMvraannjuxgTQ2yd4H9bLnxJrjTAr7/ikp2OubZanJhYScs1sSNAHNVAFLm6k1phgokAcoXGHZNb1pOvhYNxqrE8Vs/TpFR68IkZASUqImc+tRXUypTV5nNEaVUyASIFsatfUGrC2KQD5YG9JzLy2eXhpnKUHp4J7i8O5rt2OZQihgHqH7d80cuWkh8D/Sp3k/FN/lK7oBeSOrz8A3nIemOYc5J2PxWqhBv7TkaLPsajbcIA51V3jUzAr60csXT68OTKeZmXkTPHYu3XvRU6EXxGpxh4si/v/svfuXZNd1Hvbtvc8591ZVv3u6e57AzAADYAYkAYIgTYrSMhXSspwojmIrspbsJHZ+cuz8EfovIq/lxEnWsn9wIq9YFmVJpCRS0YMUSQAECJJ4DQbAzGBmel79qqp7z9l754db3RiS07BJDoAeovbq1ehuVNVU3XO/sx9n7+9rnEjE2pKykw4rVjZl9STJKSqo4wFX1UgQItcEnzWPhKEGisWKo2FNlN3QcJUC8u4QZNdU/Z8MWtUWKMwqMvlGja3aG3Iq6CsRF65LkhzGxTJzCCEUZ8owdXcggCJzIIZaW3CbQv/Kevr+6+sZBB+vzsZfeOqBM0cWBtR6aQwUoXUekraj/bVxCCVLaFNyVkYjBDISp4oTgIidU2vVpz7y0Pxs7URA/qBuk2nZ5sAZEdxpwhcc4vrt8ZX1zQzjfU6fyXvFFEF7gbUpVSl1b9TvYRDrGHjU6HA03h5voxAksVQjBxGzm1khMCBusHuXI82FdtxsS2AO0ZTNrFgBrE49H2UhZyFlqJs7vYsvIEhIcTxsz7/19tXTayeXKjiOri78l5+eeeNiuHhjc32r1WEberyRJY/3bQgPFtWp5HEvNLO1uRciqgM7NleXlo6vPnRibfHooRQBK2OHUYhTKE6tg6KSCTOKqbKcf+vW5fUt433FX9qgFFPbZB2NFiKdOb526tSh5UP9fh9mUPVR6xevbrxyYf3yjdHWuGEInIyZvAWUQO6Me1fBz2UkISnLUEk4VlW0vBNYc27cjElyMQssvUFubdRqT+7uZ3PWEAJSfX1zY/3W+MGl2dK2sUqrC7Ywu3SWjo6dNftoqM+cv37tpev7nXG4UgjUi/Hpx45+9KEV5pbhAblfx6qqdhVtzTQLESR9UOs+heLBq/JA4QynYrZd5NVLt7ZG4F7Yj/+HSwlI0ejYoeqTjyw+9uDC3KBWQKyZuLoePzS/ePbw3HdfvfrMCy/d8LniSiRMTKbohhPuXcNXQCmahXp9Zi2bQXMfw8VBrz+oyARKNzd3tnLO48pK7KdZ1/aur1PFXrESYzVs45vXNp44PR9EAOdMgVKfWRks1KbwVi9Wnst+H4HdyUo77AU7skiCCM9iXAisjZM4MyAklQLm+KC4XaZQPHBmhkgEuIdwfb19+8bYQ/1uXjQtj5qdw4u9j5xbPfvQ3ECKw4sCXLEDaN2N2Vfm5PFHj7LY1757dWOYjdlF4No11xGi36M0aVQt5qwwT1Rme+HcySMPHVs4vDwIkpliVty41bx55fr33rh+8WarVDPuDsVAYeyj1pOSXLs52h6XpToA5hzJ0WmCOVpBslI0G/ZhcSuinCI1oI5GxDRwBAsoOMAO6k4UJzqQH9i6T6F48KDoQqxEDg+X17d3Gg2hlzXvd5f48NZc3H764RNPn+nPULEmM1d1d3hhheDMVsoWIKuDevbxtSs3tl59a2ezqIt0BDfkAOxekcyNtrfmB30bbq7OyVOPHH7q7LGZqIEKbAvSA6oj/er08uEjc+mbL1177cpVi3fvrMtNGwKyteDUZDStoXKHj6WVTr6MwDAHXISk7pgh7xLAe45egcAT2VU2Zy/METAQd4w5hcmJWXb1GKdQnBrgAmoBbXO4em1DiQn2LvovoZp7YG3+0QdP9IizFqr6BAAZHpkDLMAg1OvkonK2j51ZvXXrra1bUBdyEWKCuxbcI6rSVPVcSy3+kYePPnHu6EyClYJQQeYUoSklkg3q8NjplYZ7V26/sLUPFUYicYF6NrPhTpuzGYhIKlcGTTREzIQsZovZmn3u5VoqN6LiMONOPrIrBwNO7uog62alP9hlnx5mHDwkEhwZsLaxjc0hEbnluP9KOd46vpqOzgcxFTgBpYA8ghpDW5CdYYRGoUDqxYdPLM/P1EJMiJ0uE1NH6HhvbMDKo42Th/pPP3Z0Nih0JwUp6rmwOlIIUeB5sy/lkQdmzp4+tO+tSaRlLEIxxq7ljbmj1UhANAuOUJwVXth1fyB5digSxUhC6sVGQCFW9QJyMDmLk5iH1qTxabfNh9QKfC/DkU68MYq7wtG70eLmuHFXCdTSREfdAAM5EZETCryZi6tnT80XReHIEsUQAmCFUDFS4EiAMCqBAAEww+OPHunxhtgOS9WCnCDuQeFMAmJzIxBR+IlaT7YLxSo89tCxmYjEBEqdOnoIHAkCA2BSAWE+4skTK4u0QyW4iNKYwOoo1AinVlqigZdYMpzSdm4MWTrNaHcJRaFBeuIiGJe4/53MZJRVqKXWmSIPACPqwgEQdbzmxmSJvfrgfOMUigewgtpxq3POaupEAn83NfL5ucGglwIBfgdP4f7KTRVjplf168AT5v17TK9IpFUKg5keM9ydJ4PMk1TXdgU2urc6GPT6g/pORqlux1HVD9u6T6F48KDoRCwKNE0uxQjie9ITd7PlhZl+FYSNAbgaoO8qVhlg84N6tldTx1ZM5B3Z/Q8GyZMa0o/vFwVaJZqbrUXQvT4m09DdXkHoqJ+sABjMVINBr5N3ICJyJqI7kfke3/x3/ZpCcWodDIwAdkczzqpOJG7w/bnT+ylEIri6T1yKO71LWzN56SVUScj0zqpj94w97P3EfdECF9I6dd2cRkRu1h0YdCIaAIMIZAZj8SoKrLgb+0TR9U7a0qlXnNoHb6rqEzFRf5eVYmaCdQgG/WfQW1sRwa70nmNXJvFevW1hhjmTdzjcfefW/VvdyCLeIchxQM30HYU47zykT6E4tQNhRGBmm9zF/i4ZnRs59hzJbmL2Lojk4A5zInAna28TqEw8oeOncoxkPIEUnEgm8IN2HpccZnADYaKCCjKQCXHnz9nZfoZ1xaZQvJ+WhOFQAkLkTlvl3U8aRlkLeEJu3Tkcf9cTe+JxQVuKUUdm5XuSbHeUjn74hx8Lit0AbsezbwYQGYzIu/yQiHYLUcRgImdmkHVK4rsx9tQrTu2Dd4jo3EKnV7l7X+57a47bnIsBnQvlLrLrhGvu7kXBbbYmq/qdTviHPeBPzAfajZUQuEtZzX0PWt3nYuLdzwWb1HUmqsBEJN3Hpmmu+JPkNF3pOQPFHGooxYCCkicSYa5mNimbZ1iGWgOMso0ccEPJDfZXAvqZttCdJU6uows6CTJElHa+yin4CJXHSrA5SbEAhncVR0cAVTvrb+8MhYikFCdpKBMZCrs1ZiV3oaGjlAKYIaM0O2Na30GhULGltlDrLtGZxGCdTq2B1RUefvzySRFVKDkCCzNEyB2C2l0kpD06AXfwhPRbTEgLJ6o1aFPGDDEyOLFp5hCttCwpawF5F4JzR6nPQHEiRS33iHvqA70VfmorhhDFYWaFyIQDmEuxEKRo66SBmQgOApiY2QQc1XKgRI5cPKZKC8m0Ca9zR47OJaYUhUEwL86SdB+/eNNwZXu4MBerblbBLZdxkgDqEcG9EJxJiTsB+2gcL19eN3UWVrMYRJyLG334ipY/a15RYgZMCwlFJu7UnkMI7kxSEw02d6qtUXDUBdxqC9aSs3BFRCCwwA3ywc2JHcD4tAvPBr1qrl9FM3Jg/9HeW8Ny/vK1UZtZCGDhKsYehG2ipMvF4RCwKLgQNjPOX7xmCGDJpkpM8iGtlPyseUWgMU9BEoDS5pACwLdvj5977voL33n1zTdvjke6uDR7+uHVc48f+9hH15wdZO6acw4hiXDblpSmPvHOtI20aC+mw4tzF9c3nCpH2q+IyhQvX7y9fnR+8chi07QSEkIwl8q2nWJNARBoAZRYcykvX6TL17dBM2YGEjWnAHcFyfTi399QdCTTzrlZSFENf/3Xr/3xl7/+R3/8tatXNxz9GPq5jDiMT59e+MxnnvgHf+9XHjqzDGQW7c6WYqRctmOYma7HHWGqp4Ajy7Os10ii7k/PWciv3mhfe33nyMLiXD9NGHuJIR3di7ijmISYCnBrrM+9fGmYxRNcSwihZA/uIgKfXvX73St6CgG5DGMQR/XVP3vxX/7L//jNZ84zBm6HYqqLm4Gg8bVXmktvPfvG+Y1f+/Vf/PnPPjaoUyklcCL2GKaJyl75xiDCzE66stifq/xGLgbZz2dppKGm586vcyyfeHx1aRDZW5SMsGAwoDC5xNACb67nZ1+4cOHK0CSRA65E0p03CJlh6hXvdygaIAghqMrX//ql//1f/ce/+uaFmFag2UUbHasXZiauTNNwB1/9iwuKv5ybXfjMp06IOKAlawhpWjW484oys6EsL/SOHV7avLydifehgIEwXMLV7eHXX7o8Jjx+6vjq/KAXIeoi7GCHDxu9uD58/uVLL7x0sa1XI4vDojjcmSOZTqbZp3ZfQ5El55JjqDc38Pu/982//KuXUn912DYDzh1TgVAkoqLGECJyn/nKn7wwN0gnjv6D48f60BJCpY1LPV2OLvcTczCZa5mpq6NHll5Z3yGn/Y4WQztWS/35xZHu/NXz1159Iz94ePHwWjWzkIJU45Ftbo2vrG+8eun6+lh94aG+NZodmkPFrZUQeqRMnqd1m/seiqUQCSv4K3/26pe/8g2RWS+ayNQZeyVa78amzRnAOKX6T7/y/Mc+/sA//M3Px2ACSHXf78lkRIBRSW5KzM7esYbSj1Zl3s2Sm5pZiM6xAs6tpRdSu9H0hUoBCrOVHMgqDlpgXMGF2do8IgcJr+/cvPHqdbyKVXGFZ6PGqXUuLBUHzzukBEBJVEUAlAyirMFj61bTnQw3Hn0f4pn3wrpeub2r5Oa7Ux1Ek+8/ycH/ZKzlwGfC9+AwIwQWCltb5ZlvvbC5sQMQM79L41XX6Tsalj/4g69ceONml6KYTosGe9Gp3wFXW5gbnDl5LPpIvFjJAZ6CsKlbK+yuIyPrOmOc4MRwMQpG4bqGWxo3PTYelSI8CCiAIHB2kJsryB2to01V149NdwJjuhb3GRS7uYH19Y1nnn2xLUyIZtZ1G979VrMiIhJ63/n2my889zo8AeAwXfi9vUqIiOCBANdezY+fOX58MYqV1FFKFA2BA5NaE7uR4Y4ADexgo+Ae3eMm9bapHlLVSFUoOjGMYK5QZ6dAzu6e3bWUtpT2P9NpT+3gQhGuan71ys1r1zZjGhhYVUPYN/Q112zK6JnPfOOvXxmP4e5uZboYk8vJcAJstyHOy+EFevKhFWFjFDMzoEBas+JQhpN1/dwGGMQgDnGIcGROzIEgewBzdzfS4rt/5BBSCGnajfyzAEVidqMr1242Y4NzN/0pYd9XjlFUtcnOPPPyy29tbQ2dPowECvvm3gCRT7QpiDTnBD93cvXRU0eq4EKW6r4aZUTuDVr/US/GRmzEteZkOZkGV4YTOdg9oAqJnaAuHtzYlJgi/UjVYOoe70OvCLj7cDhWeDYFO5GXrO9S3hChkGIusrXT3N7cJLhInC5GZ9pNuzuKFkcQDl6apR595skTDx+bq6ix8TaDQohucHB3XrG7kD7xjrDoJVgRL/A9fRgA8HacQFAlhxCXYqVYMb5bVk9TQN5PUDRVZqnrPpjAu8Nv+/c05lwmz3PLWkbjobkRTRvf9hDQBZvOFIoDIQoowB6Yw9OPrD16bL5PbdQxl6xNQ6bkTM7ke9wsDlKQZomFg1LwzuOZuxoVExsfXp2ZGwToUNglgAJJoDvrNHsgnELxvgpQiUQwMztLRO6qmh0W475erutWzaUJgXPOEnlarPshJJqbu4NRFO6MjlG/vfHIsfnPPvXYQydWIgprUwtqZtplnyDv/GFhN3YbQVqOhcSYQUEoBFAAHV1bePzs6WOHl4BWfcykjqLaTjLJ6Vrcz1BMw9H2iaOHVuZnpZ3vxSRwt9i9uLubq7k6iqOA1DgW9cDCnufqmR7NBYrw5sBBYkLMIuQMEhCZaWCLJSdVoto01u0o5BGkHiE27hANHpswaF0hTuZjakwhKKkuKW+5BadxQVvlihEdKZiR7Yykgsy4bZV+7LkzInElQC+ACA5xBI8LAI4u4hefOvE3njg+M6Ch5YbFqHUyYgEl80qtb94DDaLmAAc4O1OQ4o37zokjs5//+LGzJ7Tdvkw+41YrghsLaSjVWHbYrUfWuCq0Crc9zCa4wjMMHoqGng8LKACuJsSdgdmJwKzuRasQKaRWyxjO6MZ2yLpdhrF7SEggeE8gxCFnEI2ZQTkxAWlsVhf3wJZbldmEDR1AtYGLo/g7LFpqKKkKUArggI7i3FxQxIdWspClQhbFOKW6UYPDcvgAdRT3dVE//UvkPOz3qpW1cOT44PK1W6pwdqIRLGCPPYF8995G0R2QmWdCs7Q8WFgemBv7AQ2E9miR9sK2cVV2pG2jMYw4uHt2izFJO7Z2HEI0L/2AAIJyjIkBgyaJdewPLZKw6Y70lMxKUXEPLGwSC/ULH+sv7J+RF3ipOR5biCufOPHw8cMvvPzma29eHnNs87hksKQoUcnNDIogAm8Yqu12XcqRhfqRB9fOnXlwMBO2FIYQJBYq5lkQuw7UjvrJzLph+sgIzEULSRQizaVK4dDS7MXbt7TEGMVMc3Z3Z2YWYnKQilivEnJICK5whoiYFuK732yLS4dw/pYZU2IvxVTdSy+SAkU1pb4UDOpekh5zN53CRKzqLAQnM5vpJ0Eee8MUmIIpXFWY+5AI2sleAfDcq6QObMWJyHHg+vzuARRj6AE0Nxc//okz3/jWSyGtjJoxkYXdZptdVutJx0PdC6UUKMHGjzx2bDATiPkgq3dM2B+6UJx4bXCoZ5ctg1S8UArCJWPYylzKwx0hiI4H/VSnSBJcJ2s+Pze3OD9z9XLDIZrQVt50rpiZpFYv6jly25tpB3P7V5JZCO6W2azm+OhqPDZ7cvORtb96G7dvbdzY2Bw2bS7mqhRJRBgBpgtzs2vLR44uDx5cnV2e5YqRGG/f2t7ZKuMinojgBEpSm3XkcWLqxMLOMVAVI8gYgIFh/RrLi3VAIUnjZkdSTL1gZmbW8SEzYrSdlaVDMTDAXdRF5O/SJzM3aGd6uc2NqpBRkspNczseAYgUYDoeH1qZna/rQC3EupvKzFikY6VcnOsvzvKlYV/dIxOCkVlkcTVrtOpV1OSFmbg4kwSFCKBg4J9BKIJHbdYq9T7/Sx/98lf+/MLrTUrJufFW7+De22Pgw3hUqliZ+WAufuazT8bUXVnwgT/ZEpATHZlf6PPlkY5jSqUgW66ThGA3dvJsNeNgtnxkeaVXRQBMcIdpuzjTe/jk8lvrb+20qOuZQuNkDiUyD8JNO4piJ9bmTh5Z+NFiSeeZG+PALGzEBndAZ3o825/5b9cwbma2RyvD0XiYm5yzAxK44phSXFiY61UgQ8UGZOS2pbS12Y5ayloiC9RKbijMAIWI4HADMdysl6peBHEE4AZmZtjxlcHhxd6VW22dega10mTLQh4lIasZlmf9zAOHKxEtWULqkhSi4HfrPSOiR44denXp7c2LQ5O+cGjNCUCkSubVxlTGCz2cfWh1toKpdl3xd1DakTAvz8ojJw7d+O6oaUZIJGLqORcwJEjQtqnhjzx4/NB8z6wVnrylg+YW78lkRq8bcTpz+tQXPvc3/8X3vqxeS+qBhg7eZfDjPSZMRhKIo/nkU2ef+MhDgcwOJJmDu/9o/VCITh+ZPbW2sPXWphEQ6iabGScrIdShku2Nmyuz/OhDR+uaNReODCd4iWgePTl3eX3ue2/ebEcauNqiUV33vDih5SBra8uPnHlA5O67NRFVRO5wB3FwMocXL+6IhkEV+1WyhWS+1zdnsnu44XBnKmACc4wErF8fZmOuYuevdsun7u4G7vI6szw3M9tLsG6m2ODCgB0/PP+xR47tPPPWluSmNZYkMoCrliKUB4PwkYePHFutGdYxszrUzfhu4ocEcvigljMnH14fvn1tp8kUi7GLFi/zbbF2e66Pc6dXzp6aDbCCrrMPgE02bhLAeoKzD629fevy21e2dlojGYQ0MLNiWQlVs3Py6Oqjp5dnKkZxyDuskAdro/+t3/qtn/aWpUzkqk2daGV19datzYsX33IfTXJz79J1n9wY5JFkNNo4cXT2n/3zX33kkUPCKswEIzpYbtEJ3Q7R5YqT4j6oqlpJvLF1Y2vzJhFRqoUluAuZle25iKfOHX3iocW+FGICkZMLEXnp1Wl2fgD1ZmeEpqFUohm1m/Nh6/SafPrsoSceHCS/CerfPU7OeVd5QkG+V/wQn/zqpuQWmQQq8JKbIESugVzg0Elnzq1Mf/XcpStbOfSimbJbSpV5x6qv7iTE7iWyPX567fSR2uFiIBgFKa41h8W5QWTe2LrozU5UksLctj0eHl7EuYeXnn705GwkchUJRGRehIM78d02GQJFu35sedCX0g5vtFs3Uik9WG251nZxVs49vPLxR48cmolexiHEbAwmdiNCwYSuB+aDQRpUW2LbeTQuDdC6a8M27KX2yZMrT3/05NHFqifGHMy7y3bg7rd74BUJyQ1wEPihU0u/+Rufv3XzxrPPvNxytykzOo7riQKSQzceONH/1V/9uZ//7MNVgqlCgqPQwR5d7ZykA42FY8dXPuXzve++/ua17a1GzTSQ9fj2zGx17uHTT390ZZ6hZRjCXHZT94oSqSTRU8vV7NMnTqz1b17fubxDpfHZauXUA7Mnj84uDTrNi2rfE9YAELlZpzPIzOyu2glHAaDdNgmDuVtJsT8p9tBupgnOWV97c+v67RYSi7cwp8IZORsqIiNyBzHIvVfF1ZWFgDYjOTIYBoEH2Hixrj/1sbW5B9YuXb5561Y7HFqV4upgfALsAAAey0lEQVRyfXStPn44LgJuDRERhd0w0Gj/Wn0DFokPP3Zkdm31wqVb16+3Gxuj2IvHF3z50PyJowsLNdhaOAHBYAxy79jEhZyhhaEJfOzEA/XCsZXj7ZtXhlvbjTPm59LyUv/jh9OhuUDWmIKl6uJbdz1o9xv99OdIBmcQPOcyjDE5es8+c+Xf/Osv/t4ff9sdbhEuu1BUwI6tyq/92t/5H/77LwxmNoSim5hGiS1wsAYWJ59r97RtwiQPEDZbDSL97e3m/KVrlzfGzWinorw4f/jQ2tKRlcGsNCgKUcesEgzwMaoAlJxD46EuCK2BtBWkOqKUHNiEq5w9hn0P1UfwLl+l7lTAupoYnMwnxOAEB8wIBgY0dMzfxCgOJRCwPS7//o+//+plbevU2Gafe2zc6oirQShunLNSFIE3y3P1b/ytxx8YbLeYSchwH1uKAs5jYneJ5KFtzZib3MYg/STII1j2WDsKczSLROjGrBh3GQ33yS1YtGFJbOylFAlxezv3+qEFBYYD0TQAgGRVikIAWwvAOAEQbUFmRDTOVNegMMrFnBITu0lgJSYfMSlQqwV1RAEhf1Dqwu8lFK3s6h9Mdr6mycPh8Hf/w7U/++rXXnn5wsatoarGxAuLMx/56KO//vcfeeoTH+0P2KlloqIa7q+pYfMufDV0Z+pdToTevdtliymTMMHzGMLKaWOIG5evbm0PKcjcwuyhlcWZCuStkBkqMxMnYgbgZiADuzkJBSgAVx0iVUMLzz3/1u89dxWAU9ctx9ZFtwCVIcVEnHKTK2k+cWblb3/69BwXmkpT3y9QnMgtuKv65MAXKMUQ+PLbN65euXHp4pXhcLy4NHv06Nqp0w9Gk14fag4UETID83212LtnUjYZTeo0LZDuUUNvx4NIzFpKCKEAL725+fxLb37nhrWNuaISPrw8eOzkyqljM6uLPDtJE2BmTujGlRUgmBh7k0PFznQj8/Ov3/rLZ17bGgNgJ+xCsVMPRTIoZZcULfSw9St/88xHHlhIHXPw1O4jKKITBrxz9hSNwwlBzQEIk7kRgZFU3azEGAHrnqWqIvcZzZH/cM5879yu00TdieX82+OvfuvlC1c3ttKMKSqJ0SFleyaM1xbDiSMLjxw/vjDXn+knhrnn7gDJ3JgKeQAFBV/dap555eK3z1+/vmmJKyfAu66Kjt6fnBBLKJLBHFt7ZCX+2t9+bK5SaJiyT903ZZu9AuMPDMW5k0e4m3sIEYDrrteQAnjXpKraRVV7El/3DQLpDuxNtrN71Dnt7gR2LyLx+o5/63uXXrq0TTNL0iAQMchcjfubWm9f09evjr51/sKRw8snjy2tztezvdSLFKWr3XBr4ca2v3zp2oW3b61vjLZHMfb63ox3dxG+Y0uGkiIks8I+OvvwsdmETvBpavdPBZXE3c3e0cTrYKkFe9z7ZgDtRTou0sVTYGairtPKcZ9uv7bbs0f36vWKkBCRwt94+/obb29amDOkQdpRt1zMiFmicu1OJdtwM9/evn7+/OU6NLM1z9WprmJg2djeGRsaCze28jhzSnXPQePtzD9AxN4JUMHJgpoFlHLiRO/MqQVygETZZDpVfL9A8YfK/Xu+sTvUnYgH7Tq9UgxUiJiJ9o59zexdpv4PXEz/Q7/zJMi/V/5DWKwoCxn8yvqN21vjen55o7mdS+MUhVLivhXLpYmRenXIOpe1qDdj7W8MHcMuaTQKh8ajzSqScEVBskclJzGayMD8aKbSeFvmavvE2VOzPYOLuhTKUyjeT1D8UYYid2XWO0CoahlACAJUdz5XVe+j6PTOss2dn/8e/wtOcHKCgd0FWhLnkqoYK82edSSgWBNL2RluCnoM4t2j7wIzMDF7RkpJqCVt2EMUztBShsa9d5rv9wIZRyhltuInHlo7szafoIAwMU/Lp/dXrtjhcM8BEjkR7/7GnZCfSDQrXVC6+yxz74JVzjm/y4jjgUWj31G5ulfhtbmJBCc3+NzC/GCQN0fbqVYrM+7q1kY2IjcFEIMMKAZ3L2rUCRqyB4IhixORFyaXGtYb5ywoKaEtMAJP2p8I5B0ee5SOL8989okH5tjIDZqJK8FUYOp+yhV3I9J3nBvf+avI3gPCDz7rHVd6P+GQ7vLjPUxzmVLbjlIVaudTh2a+P39545pmWmHZNs1wJSdxgRMKIofWx90ImsFBCMTu5gqIuRMVJqj7VmQCoFolbttsHPoFZF4oMAq5y0dW9NMff7DfgxDDq0mjFOzHHWpVa4iIabfrere1AxC3yRCoqxERCeA+lc2597ni1O6Vx01VZdoa9PDK4PSJtbdvv7Hd3CaqgiQRUrfWi8EUDpQq97vRDfJJQxwAJ7dSADDt0b2Zmbl7GyuuyADOGpx4OKrD+Oja3Cc/dubo4V4kODIhdr1q9ONT+QrLXjEIToDAhbrxG+9yFqIg76qkPIXi1A6AZfPAzsyacxCcO324zfbiaxc3GnUL2UQpOAlRiKxEIFMAxBMyDHO4q7szOUi6gQszA5OIiEjJWgxwgbE4qignjq0++bFTJ5ZjTVAbEbPQxFf9BOGpdjtC92QyuLq7mxNXRLzXEGJwOJtZDNOy0G7hbHoVDpS1DtNcB8A9q1Lo7WS8+P2Lf/HKte3tdtSSS82SrGTTEtiaFHbLZtZlf5OmC4t7Q88TNAJONCB3FxTnMlzu54+dXn7izNG15XmQOcygDAGCGYQnHvLH9eoACObu8G6b6LqTorsRd9JVNvmbg6maLvoUigfRCuBukaybNHQISNqCb1/FhbeuvX7xyu1hcY4Gdii7oZ1grOPa2yuOsscuImVmEWGeANJFSpt7ESePzX/0oUOPHJ9bCLCxSaLJ04nM4NDABOiP2zZtcALRrveDkXf9eAz33WZ2R3ffuYOnkdkUigcVihNuJmInkBvMTEIAdDzWyze2Xr10/fVLt65vjMeZnALiipmpT4BEECcQkWlmhhCbFy/FvDBIRNZo8+jxheMnFh48vrI80/MMslwlMe2GqbphFGXGbs/Gj40Vd3fk3eZWAOxwgjZZ4ZRCj4jNXAhgnxKTT6F4QM2sdKXmO84vzVQVyhIUYQRsDnH1tl6+ur1+c+fq5k5btG3boq5OADmYiByFydnNNAv7wsxg7dDy4tLCgwM6dqzuVxC3ilgAuJbShtibxJdku2UemOHH7r4wuJtBSZggrWJnJ4/H+crNtwDqV7OLc/Nzs706OdCojwItTRd9CsWDaG6FmM3YgS6oc1MRgjPcHS2xOqCIBdEc28NmOBzf3tze3t4Zjppxa20u7h5CSDH0qjjXr2b79cJMb25m0KsDkOGwbBwYKMWNZNA6ElpM+JCdmQAyl7vP3v8nPkALCm48HOLixdFzz77xta999+WXL26Ox6rK5IeWZp742KnPfe7JJ548sbiAKenxfQPF/d7fdAX3csuuUKPwyXmFuxM6SXUBMbqJd+J7es3adpxSXUrpJuO6G0lz4TQCBlfX23//u//fl77059/7/puqPXjlRGaILI5GpF1aks9/4VP/5H/6jSNrNbRJQeAhqyGUCIYyhKdQnELxvvKiuz/o7q++FykCtHu0QPfa/ZgZM+9+L8zcNLmqKgf+4s9f/Z1/95df+tIzbRYSdncRGRdNIbqT5TZGbcvG4kL6zM89/c//l7/36OklK2PhSkFgE3QUHDSF4tTuKyjewYJ1Jzi7hI/fy52rwyFgDgXEjNXxl3/xvd/+7X/7nReuq866REfLoqPRTkyzWpyZGRIYuYxyO5qbm/mH/+gX/tk//a9nei0xqzOI2Z2MPmxzkvdDDGB+96+p3eH9/A4jczIXQHbnKmkXtPd255109kABZFdnPPvsa//it7/0zLcuD0dUyJuyM25HTesisyxq3pg3ilGrY4mx6s+2GV/8D197/ttvEoeOCoK6KZcP3/LeD1BkuvvX1Cb+jkB+59xTpz6/lzbu2Xvkk83MAaF46XLzf//Ol7/5rdchs73ZefVGQun1Q0dAmXOOSVjgUBY31zY3xfXq9Z2vff2F3JKbMYi6SJqnUJza/ZcrdkCkjjT7na8fQOs7dm8DVHIIizup4StffeZP/vTbEoMWz1lFghlKaYXdMRZUXoQ9Re7BI5xiSMKBJL743ZdGQ3MLzKyWzcqHsBJwH3Q62D7BCk8LNz+MyTsulO8DvHun2+Jda1vnwpzfurjzR1/6+u1bxKBYzbTZ3YkleMlGFCgyWZtbIzBzzpmCpBRKaYH2xq3b4zHmZgWA+Rhg/vDpbd4XUJw69HcPbOgHSzh7Y8E/oJfUjW5MAtp7ZCKCrt8bePXV17/z/CupWrSyAyb1JqVInEtuhBK5qZYqJVUDUa9XmVnRhpgMhZnbVk0FZFGEwK4futmpAwTFAqCUwAEZLY09AahHY2xsb9za2NraHhlh0Kvn+tWh+cHcTM+sGwjK7i1RBQ/FXKQlfHjbi98l/iS6x0PABMsNYhyRsJfei8/faltp/EagGS2WQoTBLQpFB5SgYDBy1iqEUgxACr1SWuZBXdezixGh02CsOkmqqVf8wEzVquDIO86RY31jnF9/4+qlizvfvrzpYAOrw8pOL/Hq0tzq0uJTpwdHVjkgmoYkRGQuVryK07j1/bKY2MGu1DTtGxfealujmN7FhZoqCyG4FzOzZjyKKQjpgw8eY7mT3sHNPnTS4wcIikIOtEZjCr31HXzre1dffv3WrdtWYgV0ur8AyXBc3rq88faVW1fezI+cWn38oSNHlmq27GU7xjSdwHz/ohgvgQIhOJGBb9++nWLfpDIb3z3RKBZTKKVt8pgppDqxgsh7yZ9++iMp0Z3SXR/C7OMA3biBpZQcQr2Z+ZkX3/7mS1c3G5IwMN+aMOcaE7uwO3l2u7AjV1/cWN8Kn/zo6omVVPE8ObtDpl7x/clRidUg3MnUaFVHdy3NvjqZgUIpxQkp1OOm2DiLkKGceXjt6Y+fSwEllxgjyEspQdIUih+YuYJQKXqvvrn9nfM3NjNbJerjJBUzK9wMZgVOTg5CFet2p33l/CXk9fTxB06uLnkeCRO4nuLk/Viv3dTTDZHpgQcOqQ6F+/sdXzKHNrcSxZxFqsBSynavol/+5U8fPVoRTETMJi2zH8LrebDCOQ69W2N89/zVm9uKuiaMYa2PqgIFwESxk+wzLcU3SWLdK8ovvt2it4lq/th8L057U9+33N4tMhzOjF6fHz17YjDrOzvjfQPaUlJKTj4cDvu9OUErPPr85z7zy7/06SBQa4VTLibsIvIhrKAeoJicGAasbwwv37iVydULuScIxzqknsQaHLMiK4zqUM3NRetLluCNhZdfX3/5/FUHSNspSN7XVQPBQchnHzv6xBOn3Lf2feSE3UNTErMh+eYnPnHiH/+Pnz96pA+0TA5gb8LjwxjwH5y3YmiL604z2smNCdy94prbSDQiHzJGgUcx5hBawrbbtul2KTzKgfqDTQsvvbF55UYuPIXi+2RCUbUjxnCgfeyxo1/4ws8tL83s+3ihph3n3KSKYcOnnnrkf/6nv/7Ux4+bKpMRoWmajvXD3WnabfMB2thTj+HbmyOrSJKoabPp9Tws763mnf0kDVd98yqMfKzziFdvbj57YfPBpeU7C3HvJDZ3++PUfqpd3N0oG8BczCoh/Orf+YXhzWv/17/5+tX1TZFZ515uVRLBx6A2O6q6zqPhbMIv/Ve/+Gt//xfOPb4GjER6HY9sVQFA4Nh52ykUPzCrGKVYipWZcQhOHik1ZLRvGYC9uBs4BBS06uu3Njd2ZuYGaYqT9weMTAFkHaOcFp+Zpd/4zV+t55b/8A+/+sILF8ZtiqkPsGkboxTbnJ/tnfvUyS/8rU/+F597em21L7CDJv07hWK3y6qDZmbmGKRa1Di7GqnsH9FOtATB2dW5unZr49bO8hSK74+5EyAELqXEGEWg6nPz8o9+83NPP/Wx5557/bnnXnnj9WtNaynGmZmZh88sP/X02Sc+dnJpRaKAYWZMYJp2MB40KJpmkXqm31ua6a9vtxxqzYb9ieLNjDiCKRcTJenV2+Od7SZPF/X9gmJH9S0icXeGuKgqkZ09O3vu7Cf+7n/z5GiYzQxkVRUHdRVi1wBbCG5u5hYkTB3jgYOiSDDHoJaTRxc2vveG1TVTPVbb340SgG7YuyP/NLOOeHdq70cUI2aKrhNYdU83WuBsRYvroJbZvgBWtBUhYEwQcy/ZRKKIsJjDphn85HoeoPdCrKr9hMdOrsxXrbfbRO+2Usysqh1vihA0N1WQSqbhzvsVxRQVIdUMQISIRNVVvc0tB4lR3HPOTSlFKBACvAIiU0qpJpKSueTgOs0mDh4UzbqB9HJiJZ09tVxxsebddDadpLgRO8ECA1qW52bm6inr+/tkWggeQkjurqpEExrymIJ6MSsiFGMMITmCFlYvxRpF4xgTtyHmEI1lGsUcSK/IgS0P+8mfPPfwyuK8u09K23fPVSbjsaoZbpF8eX5utj/dZd8nS1Wlxax0p0RG5O5qVtyZKRCzwc0LYMwgBnEEV+QVUJsl92nj/kGFojsEAPdi0dWF3s+dO3Z0pUe+LcTkYIZCs2UARCSQYG0RGZcq1rNDaxb7+MiJGa7TXc8P7+Ghou9jH5x3auHQ0pptAyO3YsUBQ96AjwErQNmd8DfNKFvwMVDQjeEDcHUrP/7WCYkskQGIRICZA3Ng6oitmBGZ0q7YJgQIQPd/ZdJoytMJ8INYtiHqyPwmq/Xo6Tnnk8+9+Nr52+OSc5KqCqG0YIOAYJalqZNwo741Wqpx7uTaqSMzfcnvdUXuwLUKhKTeUhD4TJtBAR4wznSL52/c9BsbO8NRLmpBeH7Qn5utHuzxbF8M8OIxkABOPO1/+ODv/4PT8udA0TYKA97mHGO/Ba6ub371ZVx4662N7TFYHCQpOHQ8HvYHs1qKN6O1ud7ZU6tPnjmytgDPwyr2P2wFFGAMB7wHohFweX3z0tWNFy9c2toZD1s1Z3cyK70Y+r362NLg+OHl08cOrcyngJLbJoYAItA0tp9CcReKXZjEDLhPjqqItnN47cLb5y/duHx9dH2rbQwIFQWh4bhO5YHV3rnTKw+fWJ7vV6QOAB+yUbfG0F20xpsb2+WVN0YvvLa+fntLPYAELGBxJ3eHFrg58lzyMyeWPnrm8AOrg0rQRYrT1G0Kxd293axrzO8kAQGU0hJMQhhrGGasb5b1zfbm1minaSWG1cHi3ICPLvN8D4nM4bmwhA/f3q4jILqEt2/f+saLb7x4Yfv2KJaYogkJu6GYAiwiDDczCKgM+zw8sdz77JMPP3zikOZhigJMi89TKE7KIUrU0e/BDESTeXAqDSQ6uDWIAEBbWhFyxEhghzdjYqcoTnAQf8i6N0bNUKr+hevtN1648uLr17eshN7AqJJ2Z7LG7Hus9wyMLAShinLI2+dOr33246dXZlGRybSCMi3b7G4L0pbMkBCYd2cwzE2FiYzAtBtK1ZQYaJEdAURc1V3CZPAPoXBmVVVbBd99+eL3z9/O6PdqYzR5vB1T38wAI3Z31dJNH0mPs2U4p1bT62+uP7Ayd+zcIdExpD/FwwdoB+i+zZ5jiMzIObtaV2FnsoTISgGIMIICRqyAJiB4gbWg4t66tsEp6Hvu5A/aYcaOyXdeufHcy1d3yL2fhg1bG+rAuQRDdAumwS2KVEF6wjWTkYRM0avF22N5/eKN20OHTBtBp15x1xJFAMTMu0RFkwI7QUQAvCOUMfmP7D2GdtX46F42vhUgAJbzTpAKSEQwtJsb4xs3N24Pm+3ROISwND+3OKiXl+aZRAJMxyyAszsTBVPncO/PCe7EPWX91vkrY5bKYqtWhRwK2hjZ851c4D6Z8TWmWc87UXIxkn66eGtn2AB9mYJhCsUDHTLknGOsHbSx6S99d/3Zb33/mW++ceHixY2dcSfs0IvhxJHVj549+/N/88xDZ9aOHq3NiqqGIG07StV7O3ng8Lcu37q1OWqzRjeHMsEJavtqouXcMLMSFQcZm1lTshZImB5mTKF4IE3VRYxDbJW/8703f/+Lf/zlL/31xTdvx3Q4OySk7K6q4n7p6rVvv/j9f/fF7U/+jXO/8nc/+4uf+0QV2VFS1XO1944uyeHuvr5ZxhpDFDEqnh0ZCNl8PxJKYjiLOhxSTMnBMJq20U+heHB9Iot6Wzz9wR9+9//43/7gxe+er+r5VC222hrcFeokUlVBSm5atbI9+LOvXnrhhd97/fzwv/v1nzu0SKPRTq8avNdZ6+1tzZkQJsUZYaMgTPuKjTiZuRhHOIuVQc11JVONvCkUD7JXLB74i7//p//rb3/xjfMjpThsDS6RSdXcNAKey7gxhscYlVRRXb6y9a/+z/+32O1/8o9/aaYHYAT03odKEnXfmalTKCTaTzrdzKx7mFtEe3hhdqaOhnbqFj/4dGhqdzUJ4flnbv4///p7r30fJIssMecmSGrblllSCEIkRCmElCoiCtIfDofM6eYN/M6/ffb3f/cVt0HO7+EV7gZT5gecEtiNmUUCwNDuWGe/JSchJlNvNhZieXBtdpAwlYGfQvHgWlu2/uiPvvz88+edUtHWoTEGs7EkMVLVVgQhEKCtNq22zU7b78+EwFXVe/vK+h/+0Z9cvHgzxvIeQhFERIcXq14oWhotri7w4P6D3Hg/HHgHImJvB6GcPDx76vBSAISm8dEUigfVXn/Vv/H1iyVLqpx4DBRTZZRilVNdPDWZm8yKiqTv1E+pCFnT5JJhGl763oUXnr+oZfCevkkCPXh86dDiTJUCMxPEzF2N9pWlhJm5FkJZXuideXBtbakuufGpW5xC8cDaG2+/9tob617VrZqg5y33qoXsCFTIMpMyG7MRClkWZKVQMvUYItsc+eb/397Z9NZ1VWH4fdfa+5xzr5PU9o2DHZs6sZIGWlWkBSoQLVBERTuoVAoS/L6OWnXUEZ0jVShInUQFWqQKBaJaSqgTx4597957LQY3RgwwA4JbF61H5xeco+fsj/V1P9386FaBn4yB//I4XnxqbXU8mlqFuKf+MEnmmOjgGa7zCcROmrARooOWuj5O33/myStbk8YiORERV4xrm9PK9va2me3v7/ajzrx1vRxO91InflxCD5VkaQ2ESG5md+/erXWGdLJp1n2qWxfHO/tn68f7d3b3ivUibLPDhhmhIkKqm8NMQZI627m8sfz01ZWnNpcGgc4lpMV/OVQ8pWTJSZA7FXqrrc9S24Hi2BGO1UzEc981pFqTsM2bvpz8mbYM/eiZaxtpOPPHTz//2539w2oQOns3Pqo0c0tsmdYl+d6zW5vri+ur3UBDa7UhZXE2IkL8oeKpZLK4Yq2O+oVpqWxSSuu64T9uGrW5wawazE1S+9rqpO9PPLczeZGm51O3eGX50nL+5NbtW9v3/n7v4GA6MnirLqg5+2Rx2FqfbKxONpaX+g7KIjAIIQpqM0uxKIaKp5PLm19fW1v59K93BGNJuZZ9zbmZyzE3Ii7uBjeKMCsWFnj16kafTlzFms/BYRWacGH5zBPL33h6ht29truHg9nUzIZRfuJsf27AOFkSH0vxeV69KtgcDVCPvsCh4qnl0qXll354/eO33iVFZSGJNoO5ivx7FQXurXX9eFYOStm9em3r+rcuEyd+BmM9SGrMBhBF1dNCzpNF+BLdR/NovwDijWhwA0jJcIG5sTVvlJjt8+UTm5Jj6Yby8k+evf7cZt/Nmh1QCtlEjn1jKqZkK+ZWVy4Mr736nUtPLuHkYwQpjcC+oXMMnkeeMggVTZQsJODmMIAKds6hmjgAAkJhn6VXcD7eMAgVTye73/7u5pu/fHV1bUm01TYVdfDYa5jWSkqpTKfnl8+99rMf/fwXr5AztBNvuctSaElab00dhTygz7xNvYKGDGR3ZeO8uJomzIA4KnBUNQWjP4zv/eXCiO0eq5Y9VBnv3Mdv3r/x9jvv/+mTbcdgLiQAErlWIz13NC9mM9ooia9M8htvvvjrX718cXUEBz1+d0Go+Hi4zQ5n02FYqJAbv//ze+/99oMP/nD79n2VgdCuG0iptZhV81nuJKXZ889de/31H//0lefPjgE3pVmrokO8zCBUfAwVK5gA1GrN2T/YxYcf/uXG7z66efP2Z59tP3iwTyhoqly7eOHKla0fvLT+wgvfPH9hDJ8mJpiDTcW/gMqMIFT8/+bQ3AGQCrA2uqkI73z+cGfn3u79vel0KiJnzo4nk8XzK0usGEYAzL0K03xj+s82dkEQKv6XmO2J9HBxUwrA6l6ACo7MQdLMSAqlWXFY5qiWpqpU1HZoZl0etwqNgFEQKj4OrUIVOGrK+mhONQ1AKWU+wAzzSlyvSZPZTGTwJtWmOQMwh0Y2WRAq/g/WxWaFR33majOAqska5xLOB62mlI46mlspTVVFBLDaCkmVFHkUQaj4uCoe7VRhcBUFUB2Z89GOj3qfkjqf9GgO0IkG11apOl9Ia6gYhIpB8JUhws9BECoGQRAqBkGoGARBqBgEoWIQBKFiEISKQRCEikHwleAfCtejhoL/38MAAAAASUVORK5CYII=\"\n        },\n        \"$:/ipfs/image/ens\": {\n            \"title\": \"$:/ipfs/image/ens\",\n            \"modified\": \"20201224044634920\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $:/isAttachment $:/isEmbedded\",\n            \"type\": \"image/svg+xml\",\n            \"_license_uri\": \"https://raw.githubusercontent.com/ensdomains/ens-app/dev/LICENSE\",\n            \"_project_uri\": \"https://github.com/ensdomains/ens-app/\",\n            \"_source_uri\": \"https://github.com/ensdomains/ens-app/blob/dev/public/safari-pinned-tab.svg\",\n            \"text\": \"<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   version=\\\"1.0\\\"\\n   width=\\\"18\\\"\\n   height=\\\"18\\\"\\n   viewBox=\\\"0 0 128 128\\\"\\n   class=\\\"tc-image-button\\\"\\n   preserveAspectRatio=\\\"xMidYMid meet\\\"\\n   id=\\\"svg14\\\"\\n   sodipodi:docname=\\\"ens-small.svg\\\"\\n   inkscape:version=\\\"0.92.4 (5da689c313, 2019-01-14)\\\"\\n>\\n  <defs\\n     id=\\\"defs18\\\" />\\n  <sodipodi:namedview\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1\\\"\\n     objecttolerance=\\\"10\\\"\\n     gridtolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1020\\\"\\n     id=\\\"namedview16\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:zoom=\\\"12.361274\\\"\\n     inkscape:cx=\\\"41.295086\\\"\\n     inkscape:cy=\\\"21.734019\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"31\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"svg14\\\" />\\n  <metadata\\n     id=\\\"metadata2\\\">\\nCreated by potrace 1.11, written by Peter Selinger 2001-2013\\n<rdf:RDF>\\n  <cc:Work\\n     rdf:about=\\\"\\\">\\n    <dc:format>image/svg+xml</dc:format>\\n    <dc:type\\n       rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n    <dc:title></dc:title>\\n  </cc:Work>\\n</rdf:RDF>\\n</metadata>\\n  <g\\n     transform=\\\"matrix(0.08837363,0,0,-0.07925696,-8.0787259,127.6037)\\\"\\n     id=\\\"g12\\\"\\n     style=\\\"fill:#000000;stroke:none\\\">\\n    <path\\n       d=\\\"m 640,1519 c -69,-48 -173,-122 -231,-163 -94,-65 -110,-82 -134,-129 -30,-63 -37,-155 -15,-222 15,-49 61,-135 71,-135 6,0 437,704 447,731 7,19 -17,4 -138,-82 z\\\"\\n       id=\\\"path4\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       d=\\\"m 856,1598 c 4,-7 44,-67 89,-133 118,-175 286,-437 393,-615 93,-154 122,-224 125,-300 2,-55 17,-35 52,75 26,80 28,92 22,217 -7,185 -45,284 -149,387 -35,36 -520,381 -534,381 -3,0 -2,-6 2,-12 z\\\"\\n       id=\\\"path6\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       d=\\\"M 141,1068 C 97,969 87,913 93,776 98,649 106,607 146,523 163,485 224,403 254,378 291,346 772,9 776,12 c 2,2 -57,95 -131,206 -132,199 -320,496 -404,639 -48,81 -70,145 -73,210 -1,23 -3,43 -4,43 -2,0 -12,-19 -23,-42 z\\\"\\n       id=\\\"path8\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       d=\\\"M 1079,398 C 962,204 859,34 851,20 l -16,-25 30,21 c 306,211 436,304 461,331 51,53 72,165 49,254 -14,51 -63,149 -76,149 -4,0 -103,-159 -220,-352 z\\\"\\n       id=\\\"path10\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\"\n        },\n        \"$:/ipfs/image/ethereum\": {\n            \"title\": \"$:/ipfs/image/ethereum\",\n            \"caption\": \"ethereum (Brands)\",\n            \"modified\": \"20201224040451692\",\n            \"tags\": \"$:/tags/Image [[Font Awesome 5]] Brands $:/ipfs/core $:/isAttachment $:/isEmbedded\",\n            \"type\": \"image/svg+xml\",\n            \"_license_uri\": \"https://creativecommons.org/licenses/by/4.0\",\n            \"_project_uri\": \"https://fontawesome.com/\",\n            \"_source_uri\": \"http://fa5-free-svg.tiddlyspot.com/#%24%3A%2Fimages%2Ffa5%2Fbrands%2Fethereum\",\n            \"text\": \"<svg class=\\\"tc-image-ethereum tc-image-button\\\" width=\\\"22pt\\\" height=\\\"22pt\\\" viewBox=\\\"0 0 320 512\\\">\\n  <path d=\\\"M311.9 260.8L160 353.6 8 260.8 160 0l151.9 260.8zM160 383.4L8 290.6 160 512l152-221.4-152 92.8z\\\"/>\\n</svg>\"\n        },\n        \"$:/ipfs/image/ice\": {\n            \"title\": \"$:/ipfs/image/ice\",\n            \"modified\": \"20200811040053586\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $$:/isAttachment $:/isEmbedded\",\n            \"type\": \"image/svg+xml\",\n            \"_license_uri\": \"https://raw.githubusercontent.com/ipfs-inactive/logo/master/LICENSE\",\n            \"_project_uri\": \"https://github.com/ipfs-inactive/logo/\",\n            \"_source_uri\": \"https://github.com/ipfs-inactive/logo/blob/master/vector/ipfs-logo-vector-ice-text.svg\",\n            \"text\": \"<svg\\n  xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n  style=\\\"enable-background:new\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  height=\\\"512\\\"\\n  width=\\\"512\\\"\\n  version=\\\"1.1\\\"\\n  xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n  xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n  viewBox=\\\"0 0 512 512\\\"\\n>\\n  <defs>\\n    <linearGradient id=\\\"c\\\" y2=\\\"771.51\\\" gradientUnits=\\\"userSpaceOnUse\\\" y1=\\\"771.51\\\" x2=\\\"527.72\\\" x1=\\\"84.315\\\">\\n      <stop stop-color=\\\"#4a9ea1\\\" offset=\\\"0\\\"/>\\n    </linearGradient>\\n    <linearGradient id=\\\"d\\\" y2=\\\"771.48\\\" gradientUnits=\\\"userSpaceOnUse\\\" y1=\\\"771.48\\\" x2=\\\"512.36\\\" x1=\\\"99.675\\\">\\n      <stop stop-color=\\\"#63d3d7\\\" offset=\\\"0\\\"/>\\n    </linearGradient>\\n  </defs>\\n  <g>\\n    <g style=\\\"enable-background:new\\\" transform=\\\"translate(-50.017,-515.51)\\\">\\n      <path fill=\\\"url(#c)\\\" d=\\\"m84.315 899.51 221.7 128 221.7-128v-256l-221.7-127.99-221.7 128z\\\"/>\\n      <path fill=\\\"url(#d)\\\" d=\\\"m283.13 546.35-160.74 92.806c0.32126 2.8543 0.32125 5.7352 0 8.5894l160.75 92.806c13.554-10.001 32.043-10.001 45.597 0l160.75-92.807c-0.32126-2.8543-0.32293-5.7338-0.001-8.588l-160.74-92.806c-13.554 10.001-32.044 10.001-45.599 0zm221.79 127.03-160.92 93.84c1.884 16.739-7.3611 32.751-22.799 39.489l0.18062 184.58c2.6325 1.1489 5.1267 2.5886 7.438 4.294l160.75-92.805c-1.884-16.739 7.3611-32.752 22.799-39.49v-185.61c-2.6325-1.1489-5.1281-2.5886-7.4394-4.294zm-397.81 1.0315c-2.3112 1.7054-4.8054 3.1465-7.438 4.2954v185.61c15.438 6.7378 24.683 22.75 22.799 39.489l160.74 92.806c2.3112-1.7054 4.8069-3.1465 7.4394-4.2954v-185.61c-15.438-6.7378-24.683-22.75-22.799-39.489l-160.74-92.81z\\\"/>\\n    </g>\\n    <g style=\\\"enable-background:new\\\" transform=\\\"translate(0,-196.66)\\\">\\n      <path fill-opacity=\\\".25098\\\" d=\\\"m256 708.66 221.7-128v-256l-221.7 128v256z\\\"/>\\n      <path fill-opacity=\\\".039216\\\" d=\\\"m256 708.66v-256l-221.7-128v256l221.7 128z\\\"/>\\n      <path fill-opacity=\\\".13018\\\" d=\\\"m34.298 324.66 221.7 128 221.7-128-221.7-128-221.7 128z\\\"/>\\n    </g>\\n  </g>\\n  <g style=\\\"enable-background:new\\\" fill=\\\"#fff\\\">\\n    <path d=\\\"m103.09 186h-29.2v141.2h29.2v-141.2z\\\"/>\\n    <path d=\\\"m153.97 327.2v-51.8c7.2 0.6 14.4 0.6 20.4 0.6 41.6 0 53.6-20.6 53.6-46 0-30.8-22-44-56-44h-47.2v141.2h29.2zm15.8-71.8c-5.4 0-13.4 0-15.8-0.2v-48h18.2c17.6 0 27.6 8.4 27.6 23.8v0.4c0 12-4.4 24-30 24z\\\"/>\\n    <path d=\\\"m327.95 186h-88.6v141.2h29.2v-62.2h55.4v-21.2h-55.6v-36.4h57.6l2-21.4z\\\"/>\\n    <path d=\\\"m423.51 213.6 7.6-19.6c-11.4-8.2-26.8-11.2-46.2-11.2-28.2 0-51.4 13.2-51.4 40.2 0 24.2 17.8 33.8 35.6 39.6l17.8 6c12.2 4.2 22.2 8.2 22.2 21.4 0 12-10.4 16.8-26.2 16.8-16 0-33.2-4.8-43-11l-7.6 21.2c12.8 8.2 29 12.2 50.8 12.2 31 0 55-13.6 55-42.6 0-27-20.6-35.6-41.4-42.6l-19.4-6.4c-8.4-2.8-14.8-6.6-14.8-17.4 0-11 9-15.4 22.4-15.4 16.4 0 29.2 3 38.6 8.8z\\\"/>\\n  </g>\\n</svg>\"\n        },\n        \"$:/ipfs/image/ipfs\": {\n            \"title\": \"$:/ipfs/image/ipfs\",\n            \"modified\": \"20201224044634920\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $:/isAttachment $:/isEmbedded\",\n            \"type\": \"image/svg+xml\",\n            \"_license_uri\": \"https://raw.githubusercontent.com/ipfs-inactive/logo/master/LICENSE\",\n            \"_project_uri\": \"https://github.com/ipfs-inactive/logo/\",\n            \"_source_uri\": \"https://github.com/ipfs-inactive/logo/blob/master/vector/ipfs-logo-vector-black.svg\",\n            \"text\": \"<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   style=\\\"enable-background:new\\\"\\n   height=\\\"22\\\"\\n   width=\\\"22\\\"\\n   version=\\\"1.1\\\"\\n   viewBox=\\\"0 0 128 128\\\"\\n   class=\\\"tc-image-button\\\"\\n   id=\\\"svg24\\\"\\n   sodipodi:docname=\\\"ipfs-small.svg\\\"\\n   inkscape:version=\\\"0.92.4 (5da689c313, 2019-01-14)\\\"\\n>\\n  <metadata\\n     id=\\\"metadata28\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <sodipodi:namedview\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1\\\"\\n     objecttolerance=\\\"10\\\"\\n     gridtolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1020\\\"\\n     id=\\\"namedview26\\\"\\n     showgrid=\\\"false\\\"\\n     units=\\\"pt\\\"\\n     inkscape:zoom=\\\"5.2149125\\\"\\n     inkscape:cx=\\\"133.61143\\\"\\n     inkscape:cy=\\\"41.576599\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"31\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"svg24\\\" />\\n  <defs\\n     id=\\\"defs8\\\">\\n    <linearGradient\\n       id=\\\"b\\\"\\n       y2=\\\"771.51001\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       x2=\\\"527.71997\\\"\\n       y1=\\\"771.51001\\\"\\n       x1=\\\"84.315002\\\">\\n      <stop\\n         offset=\\\"0\\\"\\n         id=\\\"stop2\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"a\\\"\\n       y2=\\\"771.47998\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       x2=\\\"512.35999\\\"\\n       y1=\\\"771.47998\\\"\\n       x1=\\\"99.675003\\\">\\n      <stop\\n         stop-color=\\\"#d8d8d8\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop5\\\" />\\n    </linearGradient>\\n  </defs>\\n  <g\\n     transform=\\\"matrix(0.28867709,0,0,0.24999998,-24.339808,-128.87748)\\\"\\n     id=\\\"g14\\\">\\n    <path\\n       d=\\\"m 84.315,899.51 221.7,128 221.7,-128 v -256 l -221.7,-127.99 -221.7,128 z\\\"\\n       id=\\\"path10\\\"\\n       style=\\\"fill:url(#b)\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       d=\\\"m 283.13,546.35 -160.74,92.806 c 0.32126,2.8543 0.32125,5.7352 0,8.5894 l 160.75,92.806 c 13.554,-10.001 32.043,-10.001 45.597,0 l 160.75,-92.807 c -0.32126,-2.8543 -0.32293,-5.7338 -0.001,-8.588 l -160.74,-92.806 c -13.554,10.001 -32.044,10.001 -45.599,0 z M 504.92,673.38 344,767.22 c 1.884,16.739 -7.3611,32.751 -22.799,39.489 l 0.18062,184.58 c 2.6325,1.1489 5.1267,2.5886 7.438,4.294 l 160.75,-92.805 c -1.884,-16.739 7.3611,-32.752 22.799,-39.49 v -185.61 c -2.6325,-1.1489 -5.1281,-2.5886 -7.4394,-4.294 z m -397.81,1.0315 c -2.3112,1.7054 -4.8054,3.1465 -7.438,4.2954 v 185.61 c 15.438,6.7378 24.683,22.75 22.799,39.489 l 160.74,92.806 c 2.3112,-1.7054 4.8069,-3.1465 7.4394,-4.2954 v -185.61 c -15.438,-6.7378 -24.683,-22.75 -22.799,-39.489 l -160.74,-92.81 z\\\"\\n       id=\\\"path12\\\"\\n       style=\\\"fill:url(#a)\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n  <g\\n     transform=\\\"matrix(0.28867709,0,0,0.24999998,-9.9010468,-49.164992)\\\"\\n     id=\\\"g22\\\">\\n    <path\\n       d=\\\"m 256,708.66 221.7,-128 v -256 l -221.7,128 z\\\"\\n       id=\\\"path16\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill-opacity:0.25097997\\\" />\\n    <path\\n       d=\\\"m 256,708.66 v -256 l -221.7,-128 v 256 z\\\"\\n       id=\\\"path18\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill-opacity:0.03921599\\\" />\\n    <path\\n       d=\\\"m 34.298,324.66 221.7,128 221.7,-128 -221.7,-128 z\\\"\\n       id=\\\"path20\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill-opacity:0.13018003\\\" />\\n  </g>\\n</svg>\"\n        },\n        \"$:/ipfs/image/tiddlywiki\": {\n            \"title\": \"$:/ipfs/image/tiddlywiki\",\n            \"modified\": \"20200723080350311\",\n            \"_canonical_uri\": \"ipfs://bafkreihzzc42nwumjeaz4d6kxsbxa6vy5llnsvqtz3xjjwnjrhwkjy5loq\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $:/isAttachment $:/isIpfs\",\n            \"type\": \"image/svg+xml\"\n        },\n        \"$:/ipfs/images/user-cog\": {\n            \"title\": \"$:/ipfs/images/user-cog\",\n            \"caption\": \"user-cog (Solid)\",\n            \"modified\": \"20201224040451692\",\n            \"tags\": \"$:/tags/Image [[Font Awesome 5]] Solid $:/ipfs/core $:/isAttachment $:/isEmbedded\",\n            \"type\": \"image/svg+xml\",\n            \"_license_uri\": \"https://creativecommons.org/licenses/by/4.0\",\n            \"_project_uri\": \"https://fontawesome.com/\",\n            \"_source_uri\": \"http://fa5-free-svg.tiddlyspot.com/#%24%3A%2Fimages%2Ffa5%2Fsolid%2Fuser-cog\",\n            \"text\": \"<svg\\n  class=\\\"tc-image-user-cog tc-image-button\\\"\\n  width=\\\"22pt\\\"\\n  height=\\\"22pt\\\"\\n  viewBox=\\\"0 0 640 512\\\"\\n>\\n  <path d=\\\"M610.5 373.3c2.6-14.1 2.6-28.5 0-42.6l25.8-14.9c3-1.7 4.3-5.2 3.3-8.5-6.7-21.6-18.2-41.2-33.2-57.4-2.3-2.5-6-3.1-9-1.4l-25.8 14.9c-10.9-9.3-23.4-16.5-36.9-21.3v-29.8c0-3.4-2.4-6.4-5.7-7.1-22.3-5-45-4.8-66.2 0-3.3.7-5.7 3.7-5.7 7.1v29.8c-13.5 4.8-26 12-36.9 21.3l-25.8-14.9c-2.9-1.7-6.7-1.1-9 1.4-15 16.2-26.5 35.8-33.2 57.4-1 3.3.4 6.8 3.3 8.5l25.8 14.9c-2.6 14.1-2.6 28.5 0 42.6l-25.8 14.9c-3 1.7-4.3 5.2-3.3 8.5 6.7 21.6 18.2 41.1 33.2 57.4 2.3 2.5 6 3.1 9 1.4l25.8-14.9c10.9 9.3 23.4 16.5 36.9 21.3v29.8c0 3.4 2.4 6.4 5.7 7.1 22.3 5 45 4.8 66.2 0 3.3-.7 5.7-3.7 5.7-7.1v-29.8c13.5-4.8 26-12 36.9-21.3l25.8 14.9c2.9 1.7 6.7 1.1 9-1.4 15-16.2 26.5-35.8 33.2-57.4 1-3.3-.4-6.8-3.3-8.5l-25.8-14.9zM496 400.5c-26.8 0-48.5-21.8-48.5-48.5s21.8-48.5 48.5-48.5 48.5 21.8 48.5 48.5-21.7 48.5-48.5 48.5zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm201.2 226.5c-2.3-1.2-4.6-2.6-6.8-3.9l-7.9 4.6c-6 3.4-12.8 5.3-19.6 5.3-10.9 0-21.4-4.6-28.9-12.6-18.3-19.8-32.3-43.9-40.2-69.6-5.5-17.7 1.9-36.4 17.9-45.7l7.9-4.6c-.1-2.6-.1-5.2 0-7.8l-7.9-4.6c-16-9.2-23.4-28-17.9-45.7.9-2.9 2.2-5.8 3.2-8.7-3.8-.3-7.5-1.2-11.4-1.2h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c10.1 0 19.5-3.2 27.2-8.5-1.2-3.8-2-7.7-2-11.8v-9.2z\\\"/>\\n</svg>\"\n        },\n        \"$:/ipfs/logo/bluelight\": {\n            \"title\": \"$:/ipfs/logo/bluelight\",\n            \"modified\": \"20200804065100279\",\n            \"_canonical_uri\": \"ipfs://bafybeibi5ldguonidlwomjxwjehodpmypgex5qd2fe6f6yuka4dqvbzvpq\",\n            \"_import_uri\": \"ipfs://bafybeiejplubmcgpkaqwjc23ebo6vorv2p4cwlr7kkhm4cakgtneefjuc4\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $$:/isAttachment $:/isIpfs\",\n            \"type\": \"image/jpg\"\n        },\n        \"$:/ipfs/boot/bundle\": {\n            \"title\": \"$:/ipfs/boot/bundle\",\n            \"tags\": \"$:/ipfs/boot/modules\",\n            \"text\": \"\\\\rules only filteredtranscludeinline transcludeinline codeinline\\n\\n// boot modules\\n{{{ [is[system]type[application/javascript]ipfs-boot-modules[yes]] ||$:/core/templates/plain-text-tiddler}}}\\n\"\n        },\n        \"$:/boot/boot.js-build\": {\n            \"title\": \"$:/boot/boot.js-build\",\n            \"tags\": \"$:/ipfs/core\",\n            \"_name\": \"$:/boot/boot.js\",\n            \"_owner\": \"$:/boot/boot.js\",\n            \"_source_size\": \"126282\",\n            \"_source_uri\": \"ipfs://bafybeigvec4k6jd7mbfmv7aevvev76tuyzow52hcqksl77cze57ktnlrhi/$_boot_boot.js-0.4.0-beta-tw-v5.1.24-pre+build-210314370.json\",\n            \"_version\": \"0.4.0-beta-tw-v5.1.24-pre+build-210314370\"\n        },\n        \"$:/library/ipfs-modules.js-build\": {\n            \"title\": \"$:/library/ipfs-modules.js-build\",\n            \"tags\": \"$:/ipfs/core\",\n            \"_name\": \"$:/library/ipfs-modules.js\",\n            \"_owner\": \"$:/library/ipfs-modules.js\",\n            \"_source_size\": \"132974\",\n            \"_source_uri\": \"ipfs://bafybeih7fqrkhnjg4hhrnskxl3po6rxypxiacbfhv6y2nz4tmkcbo5hplq/$_library_ipfs-modules.js-1.0.0+build-210314370.json\",\n            \"_version\": \"1.0.0+build-210314370\"\n        },\n        \"$:/config/PreferredSaver\": {\n            \"title\": \"$:/config/PreferredSaver\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"$:/core/modules/savers/download.js\"\n        },\n        \"$:/config/encryption\": {\n            \"title\": \"$:/config/encryption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"standford\"\n        },\n        \"$:/ipfs/build/name\": {\n            \"title\": \"$:/ipfs/build/name\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"ipns://k51qzi5uqu5dmj8zym08576inkibqy8apl49xg888d1x0q5vhk1lt2uj6sp2wl\"\n        },\n        \"$:/ipfs/raw/build/name\": {\n            \"title\": \"$:/ipfs/raw/build/name\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"ipns://k51qzi5uqu5dh9giahc358e235iqoncw9lpyc6vrn1aqguruj2nncupmbv9355\"\n        },\n        \"$:/ipfs/saver/api\": {\n            \"title\": \"$:/ipfs/saver/api\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"$:/ipfs/saver/api/https/ipfs.infura.io/5001\"\n        },\n        \"$:/ipfs/saver/ens/domain\": {\n            \"title\": \"$:/ipfs/saver/ens/domain\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"\"\n        },\n        \"$:/ipfs/saver/eth-link/resolve\": {\n            \"title\": \"$:/ipfs/saver/eth-link/resolve\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"no\"\n        },\n        \"$:/ipfs/saver/export\": {\n            \"title\": \"$:/ipfs/saver/export\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"json\"\n        },\n        \"$:/ipfs/saver/gateway\": {\n            \"title\": \"$:/ipfs/saver/gateway\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"$:/ipfs/saver/gateway/https/dweb.link\"\n        },\n        \"$:/ipfs/saver/ipns/key\": {\n            \"title\": \"$:/ipfs/saver/ipns/key\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"\"\n        },\n        \"$:/ipfs/saver/ipns/name\": {\n            \"title\": \"$:/ipfs/saver/ipns/name\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"\"\n        },\n        \"$:/ipfs/saver/ipns/resolve\": {\n            \"title\": \"$:/ipfs/saver/ipns/resolve\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"no\"\n        },\n        \"$:/ipfs/saver/pin\": {\n            \"title\": \"$:/ipfs/saver/pin\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"yes\"\n        },\n        \"$:/ipfs/saver/policy\": {\n            \"title\": \"$:/ipfs/saver/policy\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"gateway\"\n        },\n        \"$:/ipfs/saver/protocol\": {\n            \"title\": \"$:/ipfs/saver/protocol\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"ipfs\"\n        },\n        \"$:/ipfs/saver/provider\": {\n            \"title\": \"$:/ipfs/saver/provider\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"http\"\n        },\n        \"$:/ipfs/saver/unpin\": {\n            \"title\": \"$:/ipfs/saver/unpin\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"no\"\n        },\n        \"$:/ipfs/saver/verbose\": {\n            \"title\": \"$:/ipfs/saver/verbose\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"yes\"\n        },\n        \"$:/language/Buttons/Ipfs/Export/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Export/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"export to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Export/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Export/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Export this tiddler to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Export/Attachment/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Export/Attachment/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"export attachment to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Export/Attachment/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Export/Attachment/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Export attachment to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Export/Content/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Export/Content/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"export content to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Export/Content/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Export/Content/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Export this tiddler content to IPFS\"\n        },\n        \"$:/language/Buttons/Ipns/Fetch/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Fetch/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"fetch from IPNS\"\n        },\n        \"$:/language/Buttons/Ipns/Fetch/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Fetch/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Fetch IPNS key\"\n        },\n        \"$:/language/Buttons/Ipns/Generate/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Generate/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"generate IPNS\"\n        },\n        \"$:/language/Buttons/Ipns/Generate/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Generate/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Generate IPNS key\"\n        },\n        \"$:/language/Buttons/Ipfs/Refresh/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Refresh/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"refresh\"\n        },\n        \"$:/language/Buttons/Ipfs/Refresh/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Refresh/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Perform a full refresh of the tiddler\"\n        },\n        \"$:/language/Buttons/Ipfs/Pin/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Pin/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"pin to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Pin/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Pin/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Pin this wiki to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Tiddler/Pin/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Tiddler/Pin/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"pin to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Tiddler/Pin/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Tiddler/Pin/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Pin tiddler resources to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Tiddler/Unpin/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Tiddler/Unpin/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"unpin from IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Tiddler/Unpin/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Tiddler/Unpin/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Unpin tiddler resources from IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Unpin/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Unpin/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"unpin from IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Unpin/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Unpin/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Unpin this wiki from IPFS\"\n        },\n        \"$:/language/Buttons/Console/Mobile/Caption\": {\n            \"title\": \"$:/language/Buttons/Console/Mobile/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"mobile console\"\n        },\n        \"$:/language/Buttons/Console/Mobile/Hint\": {\n            \"title\": \"$:/language/Buttons/Console/Mobile/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Load/Show/Hide Mobile Console\"\n        },\n        \"$:/language/Buttons/Console/Mobile/Hide\": {\n            \"title\": \"$:/language/Buttons/Console/Mobile/Hide\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Hide Mobile Console\"\n        },\n        \"$:/language/Buttons/Console/Mobile/Load\": {\n            \"title\": \"$:/language/Buttons/Console/Mobile/Load\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Load Mobile Console\"\n        },\n        \"$:/language/Buttons/Console/Mobile/Show\": {\n            \"title\": \"$:/language/Buttons/Console/Mobile/Show\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Show Mobile Console\"\n        },\n        \"$:/language/Buttons/Encryption/Hint\": {\n            \"title\": \"$:/language/Buttons/Encryption/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Set or clear a password or a public key for saving this wiki\"\n        },\n        \"$:/language/Buttons/Encryption/ClearPassword/Caption\": {\n            \"title\": \"$:/language/Buttons/Encryption/ClearPassword/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"clear password or public key\"\n        },\n        \"$:/language/Buttons/Encryption/ClearPassword/Hint\": {\n            \"title\": \"$:/language/Buttons/Encryption/ClearPassword/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Clear the password\"\n        },\n        \"$:/language/Buttons/Encryption/ClearEncryptionPublicKey/Hint\": {\n            \"title\": \"$:/language/Buttons/Encryption/ClearEncryptionPublicKey/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Clear the public encryption key\"\n        },\n        \"$:/language/Buttons/Encryption/SetPassword/Caption\": {\n            \"title\": \"$:/language/Buttons/Encryption/SetPassword/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"set password or public key\"\n        },\n        \"$:/language/Buttons/Encryption/SetPassword/Hint\": {\n            \"title\": \"$:/language/Buttons/Encryption/SetPassword/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Set a password for saving this wiki with Standford encryption\"\n        },\n        \"$:/language/Buttons/Encryption/SetEncryptionPublicKey/Hint\": {\n            \"title\": \"$:/language/Buttons/Encryption/SetEncryptionPublicKey/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Set a public encryption key for saving this wiki with Ethereum encryption\"\n        },\n        \"$:/language/Buttons/Ens/Manager/Open/Caption\": {\n            \"title\": \"$:/language/Buttons/Ens/Manager/Open/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"open ENS Manager\"\n        },\n        \"$:/language/Buttons/Ens/Manager/Open/Hint\": {\n            \"title\": \"$:/language/Buttons/Ens/Manager/Open/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Open ENS Domain Manager\"\n        },\n        \"$:/language/Buttons/Ens/Publish/Caption\": {\n            \"title\": \"$:/language/Buttons/Ens/Publish/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"publish to ENS\"\n        },\n        \"$:/language/Buttons/Ens/Publish/Hint\": {\n            \"title\": \"$:/language/Buttons/Ens/Publish/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Publish this wiki to ENS\"\n        },\n        \"$:/language/Buttons/Ens/Resolve/And/Open/Caption\": {\n            \"title\": \"$:/language/Buttons/Ens/Resolve/And/Open/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"open ENS Domain content\"\n        },\n        \"$:/language/Buttons/Ens/Resolve/And/Open/Hint\": {\n            \"title\": \"$:/language/Buttons/Ens/Resolve/And/Open/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Open resolved ENS Domain content\"\n        },\n        \"$:/language/Buttons/Ipns/Publish/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Publish/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"publish to IPNS\"\n        },\n        \"$:/language/Buttons/Ipns/Publish/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Publish/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Publish this wiki to IPNS\"\n        },\n        \"$:/language/Buttons/Ipns/Remove/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Remove/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"remove\"\n        },\n        \"$:/language/Buttons/Ipns/Remove/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Remove/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Remove IPNS name and IPNS key\"\n        },\n        \"$:/language/Buttons/Ipns/Rename/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Rename/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"rename\"\n        },\n        \"$:/language/Buttons/Ipns/Rename/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Rename/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Rename IPNS name\"\n        },\n        \"$:/language/Buttons/Ipns/Resolve/And/Open/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Resolve/And/Open/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"resolve and open\"\n        },\n        \"$:/language/Buttons/Ipns/Resolve/And/Open/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Resolve/And/Open/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Open resolved IPNS key\"\n        },\n        \"$:/language/Buttons/Ipns/Publish/To/Ens/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Publish/To/Ens/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"publish to ENS\"\n        },\n        \"$:/language/Buttons/Ipns/Publish/To/Ens/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Publish/To/Ens/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"publish IPNS key to ENS\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Caption\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPFS Saver\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"These settings are only used when saving to IPFS.\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Verbose\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Verbose\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Saver Verbose\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Url\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Url\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPFS Server URL\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/ApiUrl\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/ApiUrl\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"API\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/GatewayUrl\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/GatewayUrl\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Gateway\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Ens\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Ens\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"ENS\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/EnsDomain\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/EnsDomain\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"ENS domain\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Ipns\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Ipns\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPNS\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/IpnsName\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/IpnsName\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPNS name\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/IpnsKey\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/IpnsKey\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPNS key\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Resolved\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Resolved\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Resolved\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Global\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Global\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Global\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Verbose/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Verbose/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Verbose\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/IPNS/Resolve/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/IPNS/Resolve/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Resolve IPNS\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/ethLink/Resolve/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/ethLink/Resolve/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Resolve .eth.link\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Pin/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Pin/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Pin Current\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Unpin/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Unpin/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Unpin Previous\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Wait/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Wait/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Wait\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Policy\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Policy\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Relative URL Policy\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Policy/Origin/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Policy/Origin/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Origin\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Policy/Gateway/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Policy/Gateway/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Gateway\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Protocol\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Protocol\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Protocol\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Protocol/Ens/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Protocol/Ens/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"ENS\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Protocol/Ipfs/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Protocol/Ipfs/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPFS\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Protocol/Ipns/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Protocol/Ipns/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPNS\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Export\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Export\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Export\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Export/Static/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Export/Static/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Static\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Export/Json/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Export/Json/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"JSON\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Export/Tid/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Export/Tid/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"TID\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Provider\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Provider\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPFS Provider\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Provider/Default/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Provider/Default/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Default\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Provider/Window/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Provider/Window/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPFS Companion\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Provider/HTTP/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Provider/HTTP/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"HTTP Client\"\n        },\n        \"$:/language/ControlPanel/Basics/Version/Prompt\": {\n            \"title\": \"$:/language/ControlPanel/Basics/Version/Prompt\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"<b>~TiddlyWiki</b>:\"\n        },\n        \"$:/language/ControlPanel/Ipfs/Version/Prompt\": {\n            \"title\": \"$:/language/ControlPanel/Ipfs/Version/Prompt\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"<b>IPFS</b>:\"\n        },\n        \"$:/language/ControlPanel/Settings/Encryption/Caption\": {\n            \"title\": \"$:/language/ControlPanel/Settings/Encryption/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Encryption\"\n        },\n        \"$:/language/ControlPanel/Settings/Encryption/Standford/Description\": {\n            \"title\": \"$:/language/ControlPanel/Settings/Encryption/Standford/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Use Standford encryption\"\n        },\n        \"$:/language/ControlPanel/Settings/Encryption/Ethereum/Description\": {\n            \"title\": \"$:/language/ControlPanel/Settings/Encryption/Ethereum/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Use Ethereum public key\"\n        },\n        \"$:/language/ControlPanel/Settings/Encryption/Signature/Description\": {\n            \"title\": \"$:/language/ControlPanel/Settings/Encryption/Signature/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Sign Ethereum encrypted content\"\n        },\n        \"$:/language/ControlPanel/Settings/Compression/Caption\": {\n            \"title\": \"$:/language/ControlPanel/Settings/Compression/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Compression\"\n        },\n        \"$:/language/ControlPanel/Settings/Compression/Description\": {\n            \"title\": \"$:/language/ControlPanel/Settings/Compression/Description\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Use Content Compression\"\n        },\n        \"$:/language/ControlPanel/Settings/PreferredSaver/Caption\": {\n            \"title\": \"$:/language/ControlPanel/Settings/PreferredSaver/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Preferred Saver\"\n        },\n        \"$:/language/ControlPanel/Appearance/Hint\": {\n            \"title\": \"$:/language/ControlPanel/Appearance/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Ways to customise the appearance of your <b>~TiddlyWiki</b>.\"\n        },\n        \"$:/language/ControlPanel/Info/Hint\": {\n            \"title\": \"$:/language/ControlPanel/Info/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Information about this <b>~TiddlyWiki</b>\"\n        },\n        \"$:/language/ControlPanel/Saving/Hint\": {\n            \"title\": \"$:/language/ControlPanel/Saving/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Settings used for saving the entire <b>~TiddlyWiki</b> as a single file via a saver module.\"\n        },\n        \"$:/language/ControlPanel/Settings/Hint\": {\n            \"title\": \"$:/language/ControlPanel/Settings/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"These settings let you customise the behaviour of <b>~TiddlyWiki</b>.\"\n        },\n        \"$:/language/EditTemplate/Body/External/Hint\": {\n            \"title\": \"$:/language/EditTemplate/Body/External/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"This tiddler shows content stored outside of the main ~TiddlyWiki file.<br/>You can edit the tags and fields but cannot directly edit the content itself\"\n        },\n        \"$:/language/Export/Exported/Hint\": {\n            \"title\": \"$:/language/Export/Exported/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"The following tiddlers were exported:\"\n        },\n        \"$:/language/Export/Listing/Cancel/Caption\": {\n            \"title\": \"$:/language/Export/Listing/Cancel/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Cancel\"\n        },\n        \"$:/language/Export/Listing/Hint\": {\n            \"title\": \"$:/language/Export/Listing/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"These tiddlers are ready to be exported:\"\n        },\n        \"$:/language/Export/Listing/Export/Caption\": {\n            \"title\": \"$:/language/Export/Listing/Export/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Export All\"\n        },\n        \"$:/language/Export/Listing/Title/Caption\": {\n            \"title\": \"$:/language/Export/Listing/Title/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Title\"\n        },\n        \"$:/language/Import/Deleted/Hint\": {\n            \"title\": \"$:/language/Import/Deleted/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"The following tiddlers were deleted:\"\n        },\n        \"$:/language/Import/Listing/Hint\": {\n            \"title\": \"$:/language/Import/Listing/Hint\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"These tiddlers are ready to be imported:\"\n        },\n        \"$:/language/Import/Listing/ImportAll/Caption\": {\n            \"title\": \"$:/language/Import/Listing/ImportAll/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Import\"\n        },\n        \"$:/language/Import/Listing/DeleteAll/Caption\": {\n            \"title\": \"$:/language/Import/Listing/DeleteAll/Caption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Delete\"\n        },\n        \"$:/language/NetworkError/Fetch\": {\n            \"title\": \"$:/language/NetworkError/Fetch\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Network Error while loading...\"\n        },\n        \"$:/language/LazyLoadingWarning\": {\n            \"title\": \"$:/language/LazyLoadingWarning\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"<p>Trying to load external Tiddler content...</p>\"\n        },\n        \"$:/language/Encryption/ConfirmClearEncryptionPublicKey\": {\n            \"title\": \"$:/language/Encryption/ConfirmClearEncryptionPublicKey\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Do you wish to clear the encryption public key? This will remove the encryption applied when saving this wiki.\"\n        },\n        \"$:/ipfs/library/eruda\": {\n            \"title\": \"$:/ipfs/library/eruda\",\n            \"tags\": \"$:/ipfs/core\",\n            \"_license_uri\": \"https://raw.githubusercontent.com/liriliri/eruda/master/LICENSE\",\n            \"_project_uri\": \"https://github.com/liriliri/eruda\",\n            \"_source_uri\": \"https://cdn.jsdelivr.net/npm/eruda@2.4.1/eruda.min.js\",\n            \"_source_sri\": \"sha384-nc47C28fBcDZCcelSM4kJI1x5Th9e2tkG9AdZK/7sJcbkRNdd184sr51K0dW+FIK\"\n        },\n        \"$:/ipfs/library/eth-sig-util\": {\n            \"title\": \"$:/ipfs/library/eth-sig-util\",\n            \"tags\": \"$:/ipfs/core\",\n            \"_license_uri\": \"https://raw.githubusercontent.com/xmaysonnave/eth-sig-util/master/LICENSE\",\n            \"_project_uri\": \"https://github.com/xmaysonnave/eth-sig-util\",\n            \"_source_uri\": \"https://cdn.jsdelivr.net/gh/xmaysonnave/eth-sig-util@3.0.2/eth-sig-util.umd.min.js\",\n            \"_source_sri\": \"sha384-KPw7aDyLzgZUSvyhLPirerXfcDl5Hq55j21FNjhwxCYCZWga3pBRynL/cPs5phFN\"\n        },\n        \"$:/ipfs/library/ethers\": {\n            \"title\": \"$:/ipfs/library/ethers\",\n            \"tags\": \"$:/ipfs/core\",\n            \"_license_uri\": \"https://raw.githubusercontent.com/ethers-io/ethers.js/master/LICENSE.md\",\n            \"_project_uri\": \"https://github.com/ethers-io/ethers.js/\",\n            \"_source_uri\": \"https://cdn.jsdelivr.net/npm/ethers@5.0.32/dist/ethers.umd.min.js\",\n            \"_source_sri\": \"sha384-2l3Oe5AgG/8sQaff0Z5degPMoDwvJ0zkbLaAqtvXxLrw+EW9qOVrLOE3nr1rb9TT\"\n        },\n        \"$:/ipfs/library/ipfs-http-client\": {\n            \"title\": \"$:/ipfs/library/ipfs-http-client\",\n            \"tags\": \"$:/ipfs/core\",\n            \"_license_uri\": \"https://raw.githubusercontent.com/ipfs/js-ipfs/master/packages/ipfs-http-client/LICENSE-MIT\",\n            \"_project_uri\": \"https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs-http-client\",\n            \"_source_uri\": \"https://cdn.jsdelivr.net/npm/ipfs-http-client@49.0.4/dist/index.min.js\",\n            \"_source_sri\": \"sha384-6Gmrqo8vWsI+72SmltHfXOjBnfITGa0aUyuoAOOyHUKRZ4qqNWLD/xqYwj3euA7I\"\n        },\n        \"$:/ipfs/library/bundle\": {\n            \"title\": \"$:/ipfs/library/bundle\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"\\\\rules only filteredtranscludeinline transcludeinline codeinline\\n\\n// Ipfs Library modules\\n{{{ [is[system]type[application/javascript]ipfs-library-modules[yes]] ||$:/core/templates/plain-text-tiddler}}}\\n\"\n        },\n        \"$:/core/modules/commands/clearkeys.js\": {\n            \"title\": \"$:/core/modules/commands/clearkeys.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/clearkeys.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: command\\n\\nClear encryption public key for crypto operations\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  exports.info = {\\n    name: 'clearkeys',\\n    synchronous: true,\\n  }\\n\\n  var Command = function (params, commander, callback) {\\n    this.params = params\\n    this.commander = commander\\n    this.callback = callback\\n  }\\n\\n  Command.prototype.execute = function () {\\n    $tw.crypto.setEncryptionKey(null, null)\\n    return null\\n  }\\n\\n  exports.Command = Command\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/compress.js\": {\n            \"title\": \"$:/core/modules/commands/compress.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/compress.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: command\\n\\nSet compression state\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  exports.info = {\\n    name: 'compress',\\n    synchronous: true,\\n  }\\n\\n  var Command = function (params, commander, callback) {\\n    this.params = params\\n    this.commander = commander\\n    this.callback = callback\\n  }\\n\\n  Command.prototype.execute = function () {\\n    var compress = false\\n    if (this.params.length > 0) {\\n      compress = this.params[0] === 'yes'\\n    }\\n    $tw.compress.setCompressState(compress)\\n    return null\\n  }\\n\\n  exports.Command = Command\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/encryptionkeys.js\": {\n            \"title\": \"$:/core/modules/commands/encryptionkeys.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/encryptionkeys.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: command\\n\\nSave encryption public key for crypto operations\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  exports.info = {\\n    name: 'encryptionkeys',\\n    synchronous: true,\\n  }\\n\\n  var Command = function (params, commander, callback) {\\n    this.params = params\\n    this.commander = commander\\n    this.callback = callback\\n  }\\n\\n  Command.prototype.execute = function () {\\n    if (this.params.length < 1) {\\n      return 'Missing encryption public key'\\n    }\\n    if (this.params.length < 2) {\\n      return 'Missing private key'\\n    }\\n    $tw.crypto.setEncryptionKey(this.params[0], this.params[1])\\n    return null\\n  }\\n\\n  exports.Command = Command\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/encryptionpublickey.js\": {\n            \"title\": \"$:/core/modules/commands/encryptionpublickey.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/encryptionpublickey.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: command\\n\\nSave encryption public key for crypto operations\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  exports.info = {\\n    name: 'encryptionpublickey',\\n    synchronous: true,\\n  }\\n\\n  var Command = function (params, commander, callback) {\\n    this.params = params\\n    this.commander = commander\\n    this.callback = callback\\n  }\\n\\n  Command.prototype.execute = function () {\\n    if (this.params.length < 1) {\\n      return 'Missing encryption public key'\\n    }\\n    $tw.crypto.setEncryptionKey(this.params[0], null)\\n    return null\\n  }\\n\\n  exports.Command = Command\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/privatekey.js\": {\n            \"title\": \"$:/core/modules/commands/privatekey.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/privatekey.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: command\\n\\nSave encryption public key for crypto operations\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  exports.info = {\\n    name: 'privatekey',\\n    synchronous: true,\\n  }\\n\\n  var Command = function (params, commander, callback) {\\n    this.params = params\\n    this.commander = commander\\n    this.callback = callback\\n  }\\n\\n  Command.prototype.execute = function () {\\n    if (this.params.length < 1) {\\n      return 'Missing private key'\\n    }\\n    $tw.crypto.setEncryptionKey(null, this.params[0])\\n    return null\\n  }\\n\\n  exports.Command = Command\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"command\"\n        },\n        \"$:/plugins/ipfs/ipfs-deserializer.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-deserializer.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-deserializer.js\\ntype: application/javascript\\nmodule-type: tiddlerdeserializer\\n\\nFunctions to deserialise tiddlers from a block of text\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  /**\\n   * Utility function to parse an old-style tiddler DIV in a *.tid file. It looks like this:\\n   *\\n   * <div title=\\\"Title\\\" creator=\\\"JoeBloggs\\\" modifier=\\\"JoeBloggs\\\" created=\\\"201102111106\\\" modified=\\\"201102111310\\\" tags=\\\"myTag [[my long tag]]\\\">\\n   *   <pre>The text of the tiddler (without the expected HTML encoding).</pre>\\n   * </div>\\n   *\\n   * Note that the field attributes are HTML encoded, but that the body of the <PRE> tag is not encoded.\\n   *\\n   * When these tiddler DIVs are encountered within a TiddlyWiki HTML file then the body is encoded in the usual way.\\n   */\\n  var parseTiddlerDiv = function (text /* [,fields] */) {\\n    // Slot together the default results\\n    var result = {}\\n    if (arguments.length > 1) {\\n      for (var f = 1; f < arguments.length; f++) {\\n        var fields = arguments[f]\\n        for (var t in fields) {\\n          result[t] = fields[t]\\n        }\\n      }\\n    }\\n    // Parse the DIV body\\n    var startRegExp = /^\\\\s*<div\\\\s+([^>]*)>(\\\\s*<pre>)?/gi\\n    var endRegExp\\n    var match = startRegExp.exec(text)\\n    if (match) {\\n      // Old-style DIVs don't have the <pre> tag\\n      if (match[2]) {\\n        endRegExp = /<\\\\/pre>\\\\s*<\\\\/div>\\\\s*$/gi\\n      } else {\\n        endRegExp = /<\\\\/div>\\\\s*$/gi\\n      }\\n      var endMatch = endRegExp.exec(text)\\n      if (endMatch) {\\n        // Extract the text\\n        result.text = text.substring(match.index + match[0].length, endMatch.index)\\n        // Process the attributes\\n        var attrRegExp = /\\\\s*([^=\\\\s]+)\\\\s*=\\\\s*(?:\\\"([^\\\"]*)\\\"|'([^']*)')/gi\\n        var attrMatch\\n        do {\\n          attrMatch = attrRegExp.exec(match[1])\\n          if (attrMatch) {\\n            var name = attrMatch[1]\\n            var value = attrMatch[2] !== undefined ? attrMatch[2] : attrMatch[3]\\n            result[name] = value\\n          }\\n        } while (attrMatch)\\n        return result\\n      }\\n    }\\n    return undefined\\n  }\\n\\n  exports['application/json'] = function (text, fields) {\\n    const inflated = $tw.utils.inflate(text)\\n    if (inflated !== null) {\\n      return inflated\\n    }\\n    var incoming\\n    var results = []\\n    try {\\n      incoming = JSON.parse(text)\\n    } catch (e) {\\n      incoming = [\\n        {\\n          title: 'JSON error: ' + e,\\n          text: '',\\n        },\\n      ]\\n    }\\n    if (!$tw.utils.isArray(incoming)) {\\n      incoming = [incoming]\\n    }\\n    for (var t = 0; t < incoming.length; t++) {\\n      var incomingFields = incoming[t]\\n      var fields = {}\\n      for (var f in incomingFields) {\\n        if (typeof incomingFields[f] === 'string') {\\n          fields[f] = incomingFields[f]\\n        }\\n      }\\n      results.push(fields)\\n    }\\n    return results\\n  }\\n\\n  /**\\n   * Parse an HTML file into tiddlers. There are three possibilities:\\n   * A TiddlyWiki classic HTML file containing `text/x-tiddlywiki` tiddlers\\n   * A TiddlyWiki5 HTML file containing `text/vnd.tiddlywiki` tiddlers\\n   * An ordinary HTML file\\n   */\\n  exports['text/html'] = function (text, fields) {\\n    // Check if we've got a store area\\n    var storeAreaMarkerRegExp = /<div id=[\\\"']?storeArea['\\\"]?( style=[\\\"']?display:none;[\\\"']?)?>/gi\\n    var match = storeAreaMarkerRegExp.exec(text)\\n    if (match) {\\n      // If so, it's either a classic TiddlyWiki file or an unencrypted TW5 file\\n      // First read the normal tiddlers\\n      var results = deserializeTiddlyWikiFile(text, storeAreaMarkerRegExp.lastIndex, !!match[1], fields)\\n      // Then any system tiddlers\\n      var systemAreaMarkerRegExp = /<div id=[\\\"']?systemArea['\\\"]?( style=[\\\"']?display:none;[\\\"']?)?>/gi\\n      var sysMatch = systemAreaMarkerRegExp.exec(text)\\n      if (sysMatch) {\\n        results.push.apply(results, deserializeTiddlyWikiFile(text, systemAreaMarkerRegExp.lastIndex, !!sysMatch[1], fields))\\n      }\\n      return results\\n    } else {\\n      // Check whether this is a compressed TiddlyWiki file\\n      var compressedStoreArea = $tw.utils.extractCompressedStoreArea(text)\\n      if (compressedStoreArea) {\\n        return $tw.utils.inflate(compressedStoreArea)\\n      } else {\\n        // Check whether this is an encrypted TiddlyWiki file\\n        var encryptedStoreArea = $tw.utils.extractEncryptedStoreArea(text)\\n        if (encryptedStoreArea) {\\n          // If so, attempt to decrypt it using the current password\\n          return $tw.utils.decryptStoreArea(encryptedStoreArea)\\n        } else {\\n          // It's not a TiddlyWiki so we'll return the entire HTML file as a tiddler\\n          return deserializeHtmlFile(text, fields)\\n        }\\n      }\\n    }\\n  }\\n\\n  function deserializeHtmlFile (text, fields) {\\n    var result = {}\\n    $tw.utils.each(fields, function (value, name) {\\n      result[name] = value\\n    })\\n    result.text = text\\n    result.type = 'text/html'\\n    return [result]\\n  }\\n\\n  function deserializeTiddlyWikiFile (text, storeAreaEnd, isTiddlyWiki5, fields) {\\n    var results = []\\n    var endOfDivRegExp = /(<\\\\/div>\\\\s*)/gi\\n    var startPos = storeAreaEnd\\n    var defaultType = isTiddlyWiki5 ? undefined : 'text/x-tiddlywiki'\\n    endOfDivRegExp.lastIndex = startPos\\n    var match = endOfDivRegExp.exec(text)\\n    while (match) {\\n      var endPos = endOfDivRegExp.lastIndex\\n      var tiddlerFields = parseTiddlerDiv(text.substring(startPos, endPos), fields, { type: defaultType })\\n      if (!tiddlerFields) {\\n        break\\n      }\\n      $tw.utils.each(tiddlerFields, function (value, name) {\\n        if (typeof value === 'string') {\\n          tiddlerFields[name] = $tw.utils.htmlDecode(value)\\n        }\\n      })\\n      if (tiddlerFields.text !== null) {\\n        results.push(tiddlerFields)\\n      }\\n      startPos = endPos\\n      match = endOfDivRegExp.exec(text)\\n    }\\n    return results\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"tiddlerdeserializer\"\n        },\n        \"$:/plugins/ipfs/ipfs-filters.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-filters.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-filters.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: filteroperator\\n\\n\\n\\\\*/\\n;(function () {\\n  'use strict'\\n\\n  /**\\n   * Export our filter functions\\n   */\\n  exports.filenamify = function (source, operator, options) {\\n    var results = []\\n    var filenamify = $tw.node ? globalThis.filenamify || require('filenamify') : $tw.ipfs.filenamify\\n    source(function (tiddler, title) {\\n      results.push(filenamify(title, { replacement: '_' }))\\n    })\\n    return results\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/filters/savers.js\": {\n            \"title\": \"$:/core/modules/filters/savers.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/savers.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: filteroperator\\n\\nThis Filter operator return savers title\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n  Export our filter function\\n  */\\n  exports.savers = function (source, operator, options) {\\n    var results = []\\n    for (var i in $tw.saverHandler.savers) {\\n      results.push($tw.saverHandler.savers[i].title)\\n    }\\n    return results\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/plugins/ipfs/ens-action.js\": {\n            \"title\": \"$:/plugins/ipfs/ens-action.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ens-action.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nENS Action\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const ipfsKeyword = 'ipfs'\\n  const ipnsKeyword = 'ipns'\\n\\n  const name = 'ens-action'\\n\\n  var EnsAction = function () {\\n    this.once = false\\n  }\\n\\n  EnsAction.prototype.init = function () {\\n    // Init once\\n    if (this.once) {\\n      return\\n    }\\n    const self = this\\n    $tw.rootWidget.addEventListener('tm-ens-manager-open', function (event) {\\n      return self.handleOpenEnsManager(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ens-resolve-and-open', async function (event) {\\n      return await self.handleResolveEnsAndOpen(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ens-publish', async function (event) {\\n      return await self.handlePublishToEns(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipns-publish-to-ens', async function (event) {\\n      return await self.handlePublishIpnsToEns(event)\\n    })\\n    // Init once\\n    this.once = true\\n  }\\n\\n  EnsAction.prototype.handleOpenEnsManager = function (event) {\\n    var ensDomain = $tw.utils.getIpfsEnsDomain()\\n    if (ensDomain == null) {\\n      window.open('https://app.ens.domains', '_blank', 'noopener,noreferrer')\\n    } else {\\n      window.open(`https://app.ens.domains/name/${ensDomain}`, '_blank', 'noopener,noreferrer')\\n    }\\n    return true\\n  }\\n\\n  EnsAction.prototype.handleResolveEnsAndOpen = async function (event) {\\n    var ensDomain = $tw.utils.getIpfsEnsDomain()\\n    if (ensDomain == null) {\\n      $tw.utils.alert(name, 'Undefined ENS domain...')\\n      return false\\n    }\\n    try {\\n      $tw.ipfs.getLogger().info(`ENS domain: ${ensDomain}`)\\n      const { resolvedUrl } = await $tw.ipfs.resolveEns(ensDomain)\\n      if (resolvedUrl !== null) {\\n        window.open(resolvedUrl.href, '_blank', 'noopener,noreferrer')\\n      }\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    return true\\n  }\\n\\n  EnsAction.prototype.handlePublishToEns = async function (event) {\\n    var cid = null\\n    var ipnsKey = null\\n    const wiki = $tw.ipfs.getDocumentUrl()\\n    var ensDomain = $tw.utils.getIpfsEnsDomain()\\n    if (ensDomain == null) {\\n      $tw.utils.alert(name, 'Undefined ENS domain...')\\n      return false\\n    }\\n    try {\\n      var { cid, ipnsKey } = await $tw.ipfs.resolveUrl(false, false, wiki)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    if (cid == null && ipnsKey == null) {\\n      $tw.utils.alert(name, 'Undefined IPFS identifier...')\\n      return false\\n    }\\n    if (cid !== null) {\\n      return await this.publishToEns(ensDomain, ipfsKeyword, cid)\\n    }\\n    return await this.publishToEns(ensDomain, ipnsKeyword, ipnsKey)\\n  }\\n\\n  EnsAction.prototype.handlePublishIpnsToEns = async function (event) {\\n    var ipnsKey = null\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    var ensDomain = $tw.utils.getIpfsEnsDomain()\\n    if (ensDomain == null) {\\n      $tw.utils.alert(name, 'Undefined ENS domain...')\\n      return false\\n    }\\n    try {\\n      var { ipnsKey } = await $tw.ipfs.resolveUrl(true, false, `/${ipnsKeyword}/${ipnsName}`)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    return await this.publishToEns(ensDomain, ipnsKeyword, ipnsKey)\\n  }\\n\\n  EnsAction.prototype.publishToEns = async function (ensDomain, protocol, identifier) {\\n    var account = null\\n    var ensCid = null\\n    var ensIpnsKey = null\\n    var web3 = null\\n    try {\\n      var { account, web3 } = await $tw.ipfs.getEnabledWeb3Provider()\\n      var { cid: ensCid, ipnsKey: ensIpnsKey } = await $tw.ipfs.resolveUrl(false, true, ensDomain, null, web3)\\n      if (protocol === ipfsKeyword && identifier === ensCid) {\\n        $tw.utils.alert(name, 'The current resolved ENS domain content is up to date...')\\n        return false\\n      }\\n      if (protocol === ipnsKeyword && identifier === ensIpnsKey) {\\n        $tw.utils.alert(name, 'The current resolved ENS domain content is up to date...')\\n        return false\\n      }\\n      const isOwner = await $tw.ipfs.isOwner(ensDomain, web3, account)\\n      if (isOwner === false) {\\n        const err = new Error('Unauthorized Account...')\\n        err.name = 'OwnerError'\\n        throw err\\n      }\\n    } catch (error) {\\n      if (error.name !== 'OwnerError') {\\n        $tw.ipfs.getLogger().error(error)\\n      }\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    $tw.utils.alert(name, `Publishing to ENS: ${ensDomain}`)\\n    const ipfsPath = `/ipfs/${ensCid}`\\n    $tw.ipfs\\n      .requestToUnpin(ipfsPath)\\n      .then(unpin => {\\n        if (unpin) {\\n          $tw.ipfs.removeFromPinUnpin(ipfsPath)\\n        }\\n        $tw.ipfs\\n          .setContentHash(ensDomain, `/${protocol}/${identifier}`, web3, account)\\n          .then(data => {\\n            $tw.utils.alert(name, 'Successfully published to ENS...')\\n          })\\n          .catch(error => {\\n            if (error.name !== 'OwnerError' && error.name !== 'RejectedUserRequest' && error.name !== 'UnauthorizedUserAccount') {\\n              $tw.ipfs.getLogger().error(error)\\n            }\\n            $tw.utils.alert(name, error.message)\\n            $tw.ipfs.requestToPin(ipfsPath)\\n          })\\n      })\\n      .catch(error => {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      })\\n    return true\\n  }\\n\\n  exports.EnsAction = EnsAction\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/ens-wrapper.js\": {\n            \"title\": \"$:/plugins/ipfs/ens-wrapper.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ens-wrapper.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nENS Wrapper\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n  const name = 'ens-wrapper'\\n\\n  var EnsWrapper = function (ensLibrary) {\\n    this.ensLibrary = ensLibrary\\n  }\\n\\n  EnsWrapper.prototype.getContentHash = async function (domain, web3) {\\n    try {\\n      var { content, protocol } = await this.ensLibrary.getContentHash(domain, web3)\\n      if (content !== null && protocol !== null) {\\n        // Success\\n        return {\\n          content: content,\\n          protocol: protocol,\\n        }\\n      }\\n      $tw.utils.alert(name, 'Unassigned ENS domain content...')\\n      return {\\n        content: null,\\n        protocol: null,\\n      }\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      throw new Error('Unable to fetch ENS domain content...')\\n    }\\n  }\\n\\n  EnsWrapper.prototype.setContentHash = async function (domain, identifier, web3, account) {\\n    try {\\n      await this.ensLibrary.setContentHash(domain, identifier, web3, account)\\n    } catch (error) {\\n      if (error.name === 'OwnerError' || error.name === 'RejectedUserRequest' || error.name === 'UnauthorizedUserAccount') {\\n        throw error\\n      }\\n      $tw.ipfs.getLogger().error(error)\\n      throw new Error('Unable to set ENS domain content...')\\n    }\\n  }\\n\\n  exports.EnsWrapper = EnsWrapper\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/ipfs-action.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-action.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-action.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nIPFS Action\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const ipnsKeyword = 'ipns'\\n\\n  const name = 'ipfs-action'\\n\\n  var IpfsAction = function () {\\n    this.once = false\\n    this.console = false\\n    this.ipnsName = $tw.utils.getIpfsIpnsName()\\n    this.ipnsKey = $tw.utils.getIpfsIpnsKey()\\n  }\\n\\n  IpfsAction.prototype.init = function () {\\n    // Init once\\n    if (this.once) {\\n      return\\n    }\\n    const self = this\\n    // Widget\\n    $tw.rootWidget.addEventListener('tm-ipfs-export', async function (event) {\\n      return await self.handleExportToIpfs(event, false)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipfs-export-content', async function (event) {\\n      return await self.handleExportToIpfs(event, true)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipns-fetch', async function (event) {\\n      return await self.handleFetchIpnsKey(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipns-generate', async function (event) {\\n      return await self.handleGenerateIpnsKey(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-console-mobile', async function (event) {\\n      return await self.handleMobileConsole(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipfs-export-attachment', async function (event) {\\n      return await self.handleExportAttachmentToIpfs(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipns-publish', async function (event) {\\n      return await self.handlePublishToIpns(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipns-remove', async function (event) {\\n      return await self.handleRemoveIpnsKey(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipns-rename', async function (event) {\\n      return await self.handleRenameIpnsName(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipns-resolve-and-open', async function (event) {\\n      return await self.handleResolveIpnsKeyAndOpen(event)\\n    })\\n    // Init once\\n    this.once = true\\n  }\\n\\n  IpfsAction.prototype.handleExportToIpfs = async function (event, child) {\\n    var target = $tw.wiki.getTiddler(event.tiddlerTitle)\\n    if (target === undefined) {\\n      return false\\n    }\\n    const content = await this.exportTiddler(target, child)\\n    if (content === undefined || content == null) {\\n      return false\\n    }\\n    return await $tw.utils.exportToIpfs(target, content)\\n  }\\n\\n  IpfsAction.prototype.handleExportAttachmentToIpfs = async function (event) {\\n    const title = event.tiddlerTitle\\n    var tiddler = $tw.wiki.getTiddler(title)\\n    if (tiddler === undefined) {\\n      return false\\n    }\\n    var added = null\\n    // Do not process if _canonical_uri is set and the text field is empty\\n    const canonicalUri = tiddler.fields._canonical_uri\\n    if (canonicalUri !== undefined && canonicalUri !== null && canonicalUri.trim() !== '') {\\n      $tw.utils.alert(name, 'Attachment is already exported...')\\n      return false\\n    }\\n    if (tiddler.fields.text === undefined || tiddler.fields.text == null || tiddler.fields.text.trim() === '') {\\n      $tw.utils.alert(name, 'Empty attachment...')\\n      return false\\n    }\\n    try {\\n      const { info } = $tw.utils.getContentType(tiddler)\\n      const content = await $tw.ipfs.processContent(tiddler, tiddler.fields.text, info.encoding)\\n      var filename = $tw.ipfs.filenamify(title)\\n      if (filename.endsWith(info.extension) === false) {\\n        filename = `${filename}${info.extension}`\\n      }\\n      $tw.ipfs.getLogger().info(`Uploading attachment: ${content.length} bytes`)\\n      var { cid: added, path } = await $tw.ipfs.addAttachmentToIpfs(content, `/${filename}`)\\n      if (added !== null) {\\n        await $tw.ipfs.requestToPin(`/ipfs/${added}`)\\n      }\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    const addTags = ['$:/isAttachment', '$:/isIpfs']\\n    const removeTags = ['$:/isEmbedded']\\n    // Update\\n    tiddler = $tw.utils.updateTiddler({\\n      tiddler: tiddler,\\n      addTags: addTags,\\n      removeTags: removeTags,\\n      fields: [\\n        { key: 'text', value: '' },\\n        { key: '_canonical_uri', value: `${path}` },\\n      ],\\n    })\\n    $tw.wiki.addTiddler(tiddler)\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handleRenameIpnsName = async function (event) {\\n    var ipnsKey = null\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    if (this.ipnsName == null || this.ipnsName === ipnsName) {\\n      $tw.utils.alert(name, 'Nothing to rename....')\\n      return false\\n    }\\n    try {\\n      var { ipnsKey } = await $tw.ipfs.renameIpnsName(this.ipnsName, ipnsName)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/key')\\n    if (tiddler !== undefined && this.ipnsKey !== ipnsKey) {\\n      tiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: ipnsKey }],\\n      })\\n      $tw.wiki.addTiddler(tiddler)\\n    }\\n    this.ipnsKey = ipnsKey\\n    this.ipnsName = ipnsName\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handleGenerateIpnsKey = async function (event) {\\n    var ipnsKey = null\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    try {\\n      var ipnsKey = await $tw.ipfs.generateIpnsKey(ipnsName)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/key')\\n    if (tiddler !== undefined && this.ipnsKey !== ipnsKey) {\\n      tiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: ipnsKey }],\\n      })\\n      $tw.wiki.addTiddler(tiddler)\\n    }\\n    this.ipnsKey = ipnsKey\\n    this.ipnsName = ipnsName\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handleRemoveIpnsKey = async function (event) {\\n    var ipnsKey = null\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    try {\\n      var { ipnsKey } = await $tw.ipfs.getIpnsIdentifier(ipnsName)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    // Async\\n    $tw.ipfs\\n      .requestToUnpin(`/ipns/${ipnsKey}`)\\n      .then(unpin => {\\n        $tw.ipfs\\n          .removeIpnsKey(ipnsName)\\n          .then(data => {\\n            $tw.utils.alert(name, 'Succesfully removed IPNS key....')\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n            $tw.utils.alert(name, error.message)\\n          })\\n      })\\n      .catch(error => {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      })\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/name')\\n    if (tiddler !== undefined) {\\n      const updatedTiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: '' }],\\n      })\\n      $tw.wiki.addTiddler(updatedTiddler)\\n    }\\n    tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/key')\\n    if (tiddler !== undefined) {\\n      const updatedTiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: '' }],\\n      })\\n      $tw.wiki.addTiddler(updatedTiddler)\\n    }\\n    this.ipnsName = null\\n    this.ipnsKey = null\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handleFetchIpnsKey = async function (event) {\\n    var ipnsKey = null\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    try {\\n      var { ipnsKey } = await $tw.ipfs.getIpnsIdentifier(ipnsName)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/key')\\n    if (tiddler !== undefined && this.ipnsKey !== ipnsKey) {\\n      tiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: ipnsKey }],\\n      })\\n      $tw.wiki.addTiddler(tiddler)\\n      this.ipnsKey = ipnsKey\\n    }\\n    this.ipnsName = ipnsName\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handleResolveIpnsKeyAndOpen = async function (event) {\\n    var ipnsKey = null\\n    var resolvedUrl = null\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    try {\\n      var { ipnsKey, resolvedUrl } = await $tw.ipfs.resolveUrl(true, false, `${ipnsKeyword}://${ipnsName}`)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/key')\\n    if (tiddler !== undefined && this.ipnsKey !== ipnsKey) {\\n      tiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: ipnsKey }],\\n      })\\n      this.ipnsKey = ipnsKey\\n      $tw.wiki.addTiddler(tiddler)\\n    }\\n    this.ipnsName = ipnsName\\n    if (resolvedUrl !== null) {\\n      window.open(resolvedUrl.href, '_blank', 'noopener,noreferrer')\\n    }\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handleMobileConsole = async function (event) {\\n    // Show or Hide\\n    if (typeof window.eruda !== 'undefined') {\\n      if (this.console === false) {\\n        window.eruda.show()\\n        window.eruda.show('console')\\n        this.console = true\\n      } else {\\n        window.eruda.hide()\\n        this.console = false\\n      }\\n      $tw.rootWidget.refresh($tw.utils.getChangedTiddler('$:/core/ui/Buttons/ipfs/console/mobile'))\\n      return true\\n    }\\n    // Load library\\n    try {\\n      if (typeof globalThis.eruda === 'undefined') {\\n        await $tw.ipfs.loadErudaLibrary()\\n      }\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    const erudaContainer = window.document.createElement('div')\\n    window.document.body.appendChild(erudaContainer)\\n    window.eruda.init({\\n      container: erudaContainer,\\n      tool: ['console'],\\n      useShadowDom: true,\\n      autoScale: true,\\n    })\\n    // Inherit font\\n    erudaContainer.style.fontFamily = 'inherit'\\n    // Preserve user preference if any, default is 80\\n    if (window.eruda.get().config.get('displaySize') === 80) {\\n      window.eruda.get().config.set('displaySize', 40)\\n    }\\n    // Preserve user preference if any, default is 0.95\\n    if (window.eruda.get().config.get('transparency') === 0.95) {\\n      window.eruda.get().config.set('transparency', 1)\\n    }\\n    // Hide Eruda button\\n    if (window.eruda._shadowRoot !== undefined) {\\n      const btn = window.eruda._shadowRoot.querySelector('.eruda-entry-btn')\\n      if (btn !== undefined) {\\n        btn.style.display = 'none'\\n      }\\n    }\\n    // Init Logger\\n    const log = window.log.getLogger('eruda')\\n    if ($tw.utils.getIpfsVerbose()) {\\n      log.setLevel('info', false)\\n    } else {\\n      log.setLevel('warn', false)\\n    }\\n    // Log\\n    log.info('Mobile console has been loaded...')\\n    // Show\\n    window.eruda.show()\\n    window.eruda.show('console')\\n    this.console = true\\n    $tw.rootWidget.refresh($tw.utils.getChangedTiddler('$:/core/ui/Buttons/ipfs/console/mobile'))\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handlePublishToIpns = async function (event) {\\n    var cid = null\\n    var ipnsKey = null\\n    var wikiCid = null\\n    var wikiIpnsKey = null\\n    const wiki = $tw.ipfs.getDocumentUrl()\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    try {\\n      var { cid: wikiCid, ipnsKey: wikiIpnsKey } = await $tw.ipfs.resolveUrl(true, true, wiki)\\n      var { cid, ipnsKey } = await $tw.ipfs.resolveUrl(true, false, `${ipnsKeyword}://${ipnsName}`)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    if (wikiCid == null && wikiIpnsKey == null) {\\n      $tw.utils.alert(name, 'Undefined IPFS identifier...')\\n      return false\\n    }\\n    if (wikiIpnsKey !== null && wikiIpnsKey === ipnsKey) {\\n      $tw.utils.alert(name, 'Default IPNS key matches current IPNS key....')\\n      return false\\n    }\\n    $tw.utils.alert(name, 'Publishing IPNS name: ' + ipnsName)\\n    $tw.ipfs\\n      .publishIpnsName(wikiCid, ipnsKey, ipnsName)\\n      .then(data => {\\n        $tw.utils.alert(name, 'Successfully Published IPNS name: ' + ipnsName)\\n        $tw.ipfs.requestToUnpin(`/ipfs/${cid}`)\\n      })\\n      .catch(error => {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      })\\n    return true\\n  }\\n\\n  IpfsAction.prototype.exportTiddler = async function (target, child) {\\n    // Check\\n    if (target === undefined || target == null) {\\n      const error = new Error('Unknown Tiddler...')\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return null\\n    }\\n    const title = target.fields.title\\n    // Filter\\n    var exportFilter = `[[${target.fields.title}]]`\\n    // Child filters\\n    if (child) {\\n      // Links\\n      const linked = $tw.wiki.getTiddlerLinks(title)\\n      $tw.ipfs.getLogger().info(`Found ${linked.length} Tiddler link(s)...`)\\n      // Transcluded\\n      const transcluded = this.transcludeContent(title)\\n      $tw.ipfs.getLogger().info(`Found ${transcluded.length} transcluded Tiddler reference(s)...`)\\n      const filtered = linked.concat(transcluded)\\n      // Process filtered content\\n      for (var i = 0; i < filtered.length; i++) {\\n        if (exportFilter.includes(`[[${filtered[i]}]]`) === false) {\\n          exportFilter = `${exportFilter} [[${filtered[i]}]]`\\n        }\\n      }\\n    }\\n    var content\\n    var contentType = 'text/plain'\\n    if (child || $tw.utils.getIpfsExport() === 'json') {\\n      content = await $tw.utils.exportTiddlersAsJson($tw.wiki.filterTiddlers(exportFilter), target.fields._export_uri)\\n      if (content !== null) {\\n        const navigator = $tw.utils.locateNavigatorWidget($tw.pageWidgetNode)\\n        if (navigator) {\\n          navigator.dispatchEvent({\\n            target: target.fields.title,\\n            type: 'tm-ipfs-export-tiddlers',\\n            param: content,\\n          })\\n          return null\\n        }\\n      }\\n    } else if ($tw.utils.getIpfsExport() === 'static') {\\n      const options = {\\n        downloadType: contentType,\\n        method: 'download',\\n        template: '$:/core/templates/exporters/StaticRiver',\\n        variables: {\\n          exportFilter: exportFilter,\\n        },\\n      }\\n      content = $tw.wiki.renderTiddler(contentType, '$:/core/templates/exporters/StaticRiver', options)\\n    } else {\\n      const options = {\\n        downloadType: contentType,\\n        method: 'download',\\n        template: '$:/core/templates/exporters/TidFile',\\n        variables: {\\n          exportFilter: exportFilter,\\n        },\\n      }\\n      content = $tw.wiki.renderTiddler(contentType, '$:/core/templates/exporters/TidFile', options)\\n    }\\n    if (content) {\\n      return await $tw.ipfs.processContent(target, content, 'utf8')\\n    }\\n    return null\\n  }\\n\\n  IpfsAction.prototype.transcludeContent = function (title) {\\n    var tiddlers = []\\n    // Build a transclude widget\\n    var transclude = $tw.wiki.makeTranscludeWidget(title)\\n    // Build a fake document element\\n    const container = $tw.fakeDocument.createElement('div')\\n    // Transclude\\n    transclude.render(container, null)\\n    // Process children\\n    this.locateTiddlers(transclude, tiddlers)\\n    // Return\\n    return tiddlers\\n  }\\n\\n  IpfsAction.prototype.locateTiddlers = function (transclude, tiddlers) {\\n    // Children lookup\\n    for (var i = 0; i < transclude.children.length; i++) {\\n      // Current child\\n      const child = transclude.children[i]\\n      if (child.variables !== undefined && child.variables !== null) {\\n        // Locate Tiddler\\n        const currentTiddler = 'currentTiddler'\\n        const current = child.variables[currentTiddler]\\n        if (current !== undefined && current !== null && current.value !== undefined && current.value !== null) {\\n          if (tiddlers.indexOf(current.value) === -1) {\\n            tiddlers.push(current.value)\\n          }\\n        }\\n      }\\n      // Process children\\n      this.locateTiddlers(child, tiddlers)\\n    }\\n  }\\n\\n  exports.IpfsAction = IpfsAction\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/ipfs-bundle.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-bundle.js\",\n            \"text\": \"(function(f){if(typeof exports===\\\"object\\\"&&typeof module!==\\\"undefined\\\"){module.exports=f()}else if(typeof define===\\\"function\\\"&&define.amd){define([],f)}else{var g;if(typeof window!==\\\"undefined\\\"){g=window}else if(typeof global!==\\\"undefined\\\"){g=global}else if(typeof self!==\\\"undefined\\\"){g=self}else{g=this}g.IpfsBundle = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\\\"function\\\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\\\"Cannot find module '\\\"+i+\\\"'\\\");throw a.code=\\\"MODULE_NOT_FOUND\\\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\\\"function\\\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\\n/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-bundle.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nIPFS Bundle\\n\\n\\\\*/\\n'use strict';\\n\\nrequire(\\\"core-js/modules/es.typed-array.uint8-array.js\\\");\\n\\nrequire(\\\"core-js/modules/es.string.replace.js\\\");\\n\\nrequire(\\\"core-js/modules/web.url.js\\\");\\n\\nrequire(\\\"core-js/modules/web.dom-collections.iterator.js\\\");\\n\\nrequire(\\\"core-js/modules/web.url.to-json.js\\\");\\n\\nconst CID = require('cids');\\n\\nconst uint8ArrayFromString = require('uint8arrays/from-string');\\n\\nconst EnsLibrary = require('./ipfs-bundle/ens-library.js').EnsLibrary;\\n\\nconst EthereumLibrary = require('./ipfs-bundle/ethereum-library.js').EthereumLibrary;\\n\\nconst IpfsLibrary = require('./ipfs-bundle/ipfs-library.js').IpfsLibrary;\\n\\nconst IpfsLoader = require('./ipfs-bundle/ipfs-loader.js').IpfsLoader;\\n\\nconst IpfsUrl = require('./ipfs-bundle/ipfs-url.js').IpfsUrl;\\n\\nconst cidInspector = 'https://cid.ipfs.io/#';\\nconst libp2pKey = 'libp2p-key';\\nconst dagPb = 'dag-pb';\\n\\nvar IpfsBundle = function () {\\n  this.once = false;\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n\\n  this.name = 'ipfs-bundle';\\n};\\n\\nIpfsBundle.prototype.getLogger = function () {\\n  if (globalThis.log !== undefined && globalThis.log !== null) {\\n    const loggers = globalThis.log.getLoggers();\\n    var eruda = loggers.eruda;\\n\\n    if (eruda) {\\n      return eruda;\\n    }\\n\\n    var ipfs = loggers.ipfs;\\n\\n    if (ipfs) {\\n      return ipfs;\\n    }\\n  }\\n\\n  return console;\\n};\\n\\nIpfsBundle.prototype.init = function () {\\n  // Init once\\n  if (this.once) {\\n    return;\\n  }\\n\\n  this.ipfsLoader = new IpfsLoader(this);\\n  this.ethereumLibrary = new EthereumLibrary(this);\\n  this.ethereumLibrary.init();\\n  this.ensLibrary = new EnsLibrary(this);\\n  this.ipfsLibrary = new IpfsLibrary(this);\\n  this.ipfsUrl = new IpfsUrl(this); // Init once\\n\\n  this.once = true;\\n};\\n\\nIpfsBundle.prototype.filenamify = function (name, options) {\\n  return this.ipfsUrl.filenamify(name, options);\\n};\\n\\nIpfsBundle.prototype.getBase = function (base) {\\n  return this.ipfsUrl.getBase(base);\\n};\\n\\nIpfsBundle.prototype.getIpfsBaseUrl = function () {\\n  return this.ipfsUrl.getIpfsBaseUrl();\\n};\\n\\nIpfsBundle.prototype.normalizeUrl = function (value, base) {\\n  return this.ipfsUrl.normalizeUrl(value, base);\\n};\\n\\nIpfsBundle.prototype.getDocumentUrl = function () {\\n  return this.ipfsUrl.getDocumentUrl();\\n};\\n\\nIpfsBundle.prototype.getIpfsDefaultApiUrl = function () {\\n  return this.ipfsUrl.getIpfsDefaultApiUrl();\\n};\\n\\nIpfsBundle.prototype.getIpfsDefaultGatewayUrl = function () {\\n  return this.ipfsUrl.getIpfsDefaultGatewayUrl();\\n};\\n\\nIpfsBundle.prototype.getIpfsDefaultApi = function () {\\n  return this.ipfsUrl.getIpfsDefaultApi();\\n};\\n\\nIpfsBundle.prototype.getIpfsDefaultGateway = function () {\\n  return this.ipfsUrl.getIpfsDefaultGateway();\\n};\\n\\nIpfsBundle.prototype.getIpfsApiUrl = function () {\\n  return this.ipfsUrl.getIpfsApiUrl();\\n};\\n\\nIpfsBundle.prototype.getIpfsGatewayUrl = function () {\\n  return this.ipfsUrl.getIpfsGatewayUrl();\\n};\\n\\nIpfsBundle.prototype.getUrl = function (url, base) {\\n  return this.ipfsUrl.getUrl(url, base);\\n};\\n\\nIpfsBundle.prototype.getENSRegistry = function () {\\n  return this.ensLibrary.getENSRegistry();\\n};\\n\\nIpfsBundle.prototype.getBlockExplorerRegistry = function () {\\n  return this.ethereumLibrary.getBlockExplorerRegistry();\\n};\\n\\nIpfsBundle.prototype.getNetworkRegistry = function () {\\n  return this.ethereumLibrary.getNetworkRegistry();\\n};\\n\\nIpfsBundle.prototype.loadErudaLibrary = async function () {\\n  try {\\n    if (typeof globalThis.eruda === 'undefined') {\\n      await this.ipfsLoader.loadErudaLibrary();\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  }\\n\\n  if (typeof globalThis.eruda === 'undefined') {\\n    throw new Error('Unavailable Eruda library...');\\n  }\\n};\\n\\nIpfsBundle.prototype.loadEthSigUtilLibrary = async function () {\\n  try {\\n    if (typeof globalThis.sigUtil === 'undefined') {\\n      await this.ipfsLoader.loadEthSigUtilLibrary();\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  }\\n\\n  if (typeof globalThis.sigUtil === 'undefined') {\\n    throw new Error('Unavailable eth-sig-util library...');\\n  }\\n};\\n\\nIpfsBundle.prototype.loadEthersJsLibrary = async function () {\\n  try {\\n    if (typeof globalThis.ethers === 'undefined') {\\n      await this.ipfsLoader.loadEtherJsLibrary();\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  }\\n\\n  if (typeof globalThis.ethers === 'undefined') {\\n    throw new Error('Unavailable Ethereum library...');\\n  }\\n};\\n\\nIpfsBundle.prototype.loadIpfsHttpLibrary = async function () {\\n  try {\\n    if (typeof globalThis.IpfsHttpClient === 'undefined') {\\n      await this.ipfsLoader.loadIpfsHttpLibrary();\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  }\\n\\n  if (typeof globalThis.IpfsHttpClient === 'undefined') {\\n    throw new Error('Unavailable IPFS HTTP Client library...');\\n  }\\n};\\n\\nIpfsBundle.prototype.getPublicEncryptionKey = async function (provider) {\\n  try {\\n    return await this.ethereumLibrary.getPublicEncryptionKey(provider);\\n  } catch (error) {\\n    if (error.name === 'RejectedUserRequest') {\\n      throw error;\\n    }\\n\\n    this.getLogger().error(error);\\n    throw new Error('Unable to retrieve an Ethereum Public Encryption Key...');\\n  }\\n};\\n\\nIpfsBundle.prototype.personalRecover = async function (message, signature) {\\n  return await this.ethereumLibrary.personalRecover(message, signature);\\n};\\n\\nIpfsBundle.prototype.personalSign = async function (message, provider) {\\n  try {\\n    return await this.ethereumLibrary.personalSign(message, provider);\\n  } catch (error) {\\n    if (error.name === 'RejectedUserRequest') {\\n      throw error;\\n    }\\n\\n    this.getLogger().error(error);\\n    throw new Error('Unable to sign content...');\\n  }\\n};\\n\\nIpfsBundle.prototype.decrypt = async function (text, provider) {\\n  try {\\n    return await this.ethereumLibrary.decrypt(text, provider);\\n  } catch (error) {\\n    if (error.name === 'RejectedUserRequest') {\\n      throw error;\\n    }\\n\\n    this.getLogger().error(error);\\n    throw new Error('Unable to decrypt content...');\\n  }\\n};\\n\\nIpfsBundle.prototype.getBlockExplorerRegistry = function () {\\n  return this.ethereumLibrary.getBlockExplorerRegistry();\\n};\\n\\nIpfsBundle.prototype.getEnabledWeb3Provider = async function (provider) {\\n  return await this.ethereumLibrary.getEnabledWeb3Provider(provider);\\n};\\n\\nIpfsBundle.prototype.getWeb3Provider = async function (provider) {\\n  return await this.ethereumLibrary.getWeb3Provider(provider);\\n};\\n\\nIpfsBundle.prototype.isOwner = async function (domain, web3, account) {\\n  return await this.ensLibrary.isOwner(domain, web3, account);\\n};\\n/*\\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md\\n * https://eips.ethereum.org/EIPS/eip-1193\\n * https://docs.metamask.io/guide/ethereum-provider.html#methods-current-api\\n */\\n\\n\\nIpfsBundle.prototype.getEthereumProvider = async function () {\\n  return await this.ethereumLibrary.getEthereumProvider();\\n};\\n\\nIpfsBundle.prototype.getEnabledWeb3Provider = async function () {\\n  var account = null;\\n  var chainId = null;\\n  var web3 = null;\\n  const explorer = this.getBlockExplorerRegistry();\\n  const network = this.getNetworkRegistry();\\n  const provider = await this.getEthereumProvider();\\n\\n  try {\\n    var {\\n      account,\\n      chainId,\\n      web3\\n    } = await this.ethereumLibrary.getEnabledWeb3Provider(provider);\\n  } catch (error) {\\n    if (error.name === 'RejectedUserRequest') {\\n      throw error;\\n    }\\n\\n    this.getLogger().error(error);\\n    throw new Error('Unable to retrieve an enabled Ethereum Provider...');\\n  } // Log\\n\\n\\n  this.getLogger().info(`New Enabled Web3 provider:\\nChain: ${network[chainId]}\\nAccount: ${explorer[chainId]}/address/${account}`);\\n  return {\\n    account: account,\\n    chainId: chainId,\\n    provider: provider,\\n    web3: web3\\n  };\\n};\\n\\nIpfsBundle.prototype.getWeb3Provider = async function () {\\n  var chainId = null;\\n  var web3 = null;\\n  const network = this.getNetworkRegistry();\\n  const provider = await this.getEthereumProvider();\\n\\n  try {\\n    var {\\n      web3,\\n      chainId\\n    } = await this.ethereumLibrary.getWeb3Provider(provider);\\n  } catch (error) {\\n    this.getLogger().error(error);\\n    throw new Error('Unable to retrieve an Ethereum Provider...');\\n  } // Log\\n\\n\\n  this.getLogger().info(`New Web3 provider:\\n${network[chainId]}`);\\n  return {\\n    chainId: chainId,\\n    provider: provider,\\n    web3: web3\\n  };\\n};\\n\\nIpfsBundle.prototype.decode = function (b64) {\\n  return Base64Binary.decode(b64);\\n}; // https://stackoverflow.com/questions/21797299/convert-base64-string-to-arraybuffer/21797381\\n// https://github.com/danguer/blog-examples/blob/master/js/base64-binary.js\\n\\n/*\\n * Copyright (c) 2011, Daniel Guerrero\\n * All rights reserved.\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n * Redistributions of source code must retain the above copyright\\n * notice, this list of conditions and the following disclaimer.\\n * Redistributions in binary form must reproduce the above copyright\\n * notice, this list of conditions and the following disclaimer in the\\n * documentation and/or other materials provided with the distribution.\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\" AND\\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL DANIEL GUERRERO BE LIABLE FOR ANY\\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n/**\\n * Uses the new array typed in javascript to binary base64 encode/decode\\n * at the moment just decodes a binary base64 encoded\\n * into either an ArrayBuffer (decodeArrayBuffer)\\n * or into an Uint8Array (decode)\\n *\\n * References:\\n * https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer\\n * https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array\\n */\\n\\n\\nvar Base64Binary = {\\n  _keyStr: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\\n\\n  /* will return a  Uint8Array type */\\n  decodeArrayBuffer: function (input) {\\n    var bytes = input.length / 4 * 3;\\n    var ab = new ArrayBuffer(bytes);\\n    this.decode(input, ab);\\n    return ab;\\n  },\\n  removePaddingChars: function (input) {\\n    var lkey = this._keyStr.indexOf(input.charAt(input.length - 1));\\n\\n    if (lkey === 64) {\\n      return input.substring(0, input.length - 1);\\n    }\\n\\n    return input;\\n  },\\n  decode: function (input, ab) {\\n    //get last chars to see if are valid\\n    input = this.removePaddingChars(input);\\n    input = this.removePaddingChars(input);\\n    var bytes = parseInt(input.length / 4 * 3, 10);\\n    var ua;\\n    var chr1, chr2, chr3;\\n    var enc1, enc2, enc3, enc4;\\n    var i = 0;\\n    var j = 0;\\n    if (ab) ua = new Uint8Array(ab);else ua = new Uint8Array(bytes);\\n    /*eslint no-useless-escape:\\\"off\\\"*/\\n\\n    input = input.replace(/[^A-Za-z0-9\\\\+\\\\/\\\\=]/g, '');\\n\\n    for (i = 0; i < bytes; i += 3) {\\n      //get the 3 octects in 4 ascii chars\\n      enc1 = this._keyStr.indexOf(input.charAt(j++));\\n      enc2 = this._keyStr.indexOf(input.charAt(j++));\\n      enc3 = this._keyStr.indexOf(input.charAt(j++));\\n      enc4 = this._keyStr.indexOf(input.charAt(j++));\\n      chr1 = enc1 << 2 | enc2 >> 4;\\n      chr2 = (enc2 & 15) << 4 | enc3 >> 2;\\n      chr3 = (enc3 & 3) << 6 | enc4;\\n      ua[i] = chr1;\\n      if (enc3 !== 64) ua[i + 1] = chr2;\\n      if (enc4 !== 64) ua[i + 2] = chr3;\\n    }\\n\\n    return ua;\\n  }\\n};\\n\\nIpfsBundle.prototype.isJson = function (content) {\\n  return this.ipfsLoader.isJson(content);\\n};\\n\\nIpfsBundle.prototype.loadToBase64 = async function (url, password) {\\n  return await this.ipfsLoader.loadToBase64(url, password);\\n};\\n\\nIpfsBundle.prototype.loadToUtf8 = async function (url, password) {\\n  return await this.ipfsLoader.loadToUtf8(url, password);\\n};\\n\\nIpfsBundle.prototype.analyzePinType = function (type) {\\n  return this.ipfsLibrary.analyzePinType(type);\\n};\\n\\nIpfsBundle.prototype.addAll = async function (client, source, options) {\\n  return await this.ipfsLibrary.addAll(client, source, options);\\n};\\n\\nIpfsBundle.prototype.hasPin = async function (client, key, type, ipfsPath) {\\n  return await this.ipfsLibrary.hasPin(client, key, type, ipfsPath);\\n};\\n\\nIpfsBundle.prototype.dagGet = async function (client, cid, options) {\\n  return await this.ipfsLibrary.dagGet(client, cid, options);\\n};\\n\\nIpfsBundle.prototype.dagPut = async function (client, dagNode, options) {\\n  return await this.ipfsLibrary.dagPut(client, dagNode, options);\\n};\\n\\nIpfsBundle.prototype.dagResolve = async function (client, ipfsPath, timeout) {\\n  return await this.ipfsLibrary.dagResolve(client, ipfsPath, timeout);\\n};\\n\\nIpfsBundle.prototype.filesStat = async function (client, ipfsPath, timeout) {\\n  return await this.ipfsLibrary.filesStat(client, ipfsPath, timeout);\\n};\\n\\nIpfsBundle.prototype.get = async function (client, ipfsPath, timeout) {\\n  return await this.ipfsLibrary.get(client, ipfsPath, timeout);\\n};\\n\\nIpfsBundle.prototype.isIpfsDirectory = async function (client, cid, timeout) {\\n  return await this.ipfsLibrary.isIpfsDirectory(client, cid, timeout);\\n};\\n\\nIpfsBundle.prototype.ls = async function (client, ipfsPath) {\\n  return await this.ipfsLibrary.ls(client, ipfsPath);\\n};\\n\\nIpfsBundle.prototype.namePublish = async function (client, ipnsName, cid, options) {\\n  return await this.ipfsLibrary.namePublish(client, ipnsName, cid, options);\\n};\\n\\nIpfsBundle.prototype.nameResolve = async function (client, value, options) {\\n  return await this.ipfsLibrary.nameResolve(client, value, options);\\n};\\n\\nIpfsBundle.prototype.objectData = async function (client, cid, timeout) {\\n  return await this.ipfsLibrary.objectData(client, cid, timeout);\\n};\\n\\nIpfsBundle.prototype.objectStat = async function (client, cid, timeout) {\\n  return await this.ipfsLibrary.objectStat(client, cid, timeout);\\n};\\n\\nIpfsBundle.prototype.pinAdd = async function (client, cid, options) {\\n  return await this.ipfsLibrary.pinAdd(client, cid, options);\\n};\\n\\nIpfsBundle.prototype.pinRm = async function (client, cid, options) {\\n  return await this.ipfsLibrary.pinRm(client, cid, options);\\n};\\n\\nIpfsBundle.prototype.resolveIpfs = async function (client, value, timeout) {\\n  if (value === undefined || value == null || value.toString().trim() === '') {\\n    return {\\n      cid: null,\\n      remainderPath: ''\\n    };\\n  }\\n\\n  if (value instanceof URL === false) {\\n    try {\\n      value = this.getUrl(value);\\n    } catch (error) {\\n      return {\\n        cid: null,\\n        remainderPath: ''\\n      };\\n    }\\n  } // Pathname\\n\\n\\n  var ipfsPath = null;\\n  var {\\n    cid,\\n    ipnsIdentifier,\\n    path\\n  } = this.decodePathname(value.pathname);\\n\\n  if (cid !== null) {\\n    ipfsPath = `/ipfs/${cid}${path}`;\\n  } else if (ipnsIdentifier !== null) {\\n    ipfsPath = `/ipns/${ipnsIdentifier}${path}`;\\n  }\\n\\n  if (ipfsPath !== null) {\\n    var {\\n      cid,\\n      remainderPath\\n    } = await this.dagResolve(client, ipfsPath, timeout);\\n    return {\\n      cid: cid,\\n      remainderPath: remainderPath\\n    };\\n  } // Hostname\\n\\n\\n  var {\\n    cid,\\n    ipnsIdentifier,\\n    path\\n  } = this.decodeHostname(value.hostname);\\n\\n  if (cid !== null) {\\n    ipfsPath = `/ipfs/${cid}${path}`;\\n  } else if (ipnsIdentifier !== null) {\\n    ipfsPath = `/ipns/${ipnsIdentifier}${path}`;\\n  }\\n\\n  if (ipfsPath !== null) {\\n    var {\\n      cid,\\n      remainderPath\\n    } = await this.dagResolve(client, ipfsPath, timeout);\\n    return {\\n      cid: cid,\\n      remainderPath: remainderPath\\n    };\\n  }\\n\\n  return {\\n    cid: null,\\n    remainderPath: ''\\n  };\\n};\\n\\nIpfsBundle.prototype.resolveIpfsContainer = async function (client, value, timeout) {\\n  if (value === undefined || value == null || value.toString().trim() === '') {\\n    return null;\\n  }\\n\\n  if (value instanceof URL === false) {\\n    try {\\n      value = this.getUrl(value);\\n    } catch (error) {\\n      return null;\\n    }\\n  }\\n\\n  const self = this;\\n\\n  const resolveContainer = async function (client, ipfsPath, base, timeout) {\\n    const currentUrl = self.getUrl(ipfsPath, base);\\n    const {\\n      cid\\n    } = await self.resolveIpfs(client, currentUrl, timeout);\\n\\n    if (cid == null) {\\n      return null;\\n    }\\n\\n    if (await self.isIpfsDirectory(client, cid, timeout)) {\\n      return cid;\\n    }\\n\\n    var nextPath = '';\\n    const members = value.pathname.split('/');\\n\\n    for (var i = 0; i < members.length; i++) {\\n      if (members[i].trim() === '') {\\n        continue;\\n      }\\n\\n      if (i !== members.length - 1) {\\n        nextPath = `${nextPath}/${members[i]}`;\\n      }\\n    }\\n\\n    const nextUrl = self.getUrl(nextPath, base);\\n    const innerCid = await self.resolveIpfsContainer(client, nextUrl, timeout);\\n\\n    if (innerCid == null) {\\n      return cid;\\n    }\\n\\n    return innerCid;\\n  };\\n\\n  const base = this.getUrl(`${value.protocol}//${value.host}`); // Pathname\\n\\n  var ipfsPath = null;\\n  var {\\n    cid: innerCid,\\n    ipnsIdentifier,\\n    path\\n  } = this.decodePathname(value.pathname);\\n\\n  if (innerCid !== null) {\\n    ipfsPath = `/ipfs/${innerCid}${path}`;\\n  } else if (ipnsIdentifier !== null) {\\n    ipfsPath = `/ipns/${ipnsIdentifier}${path}`;\\n  }\\n\\n  if (ipfsPath !== null) {\\n    return await resolveContainer(client, ipfsPath, base, timeout);\\n  } // Hostname\\n\\n\\n  var {\\n    cid: innerCid,\\n    ipnsIdentifier,\\n    path\\n  } = this.decodeHostname(value.hostname);\\n\\n  if (innerCid !== null) {\\n    ipfsPath = `/ipfs/${innerCid}${path}`;\\n  } else if (ipnsIdentifier !== null) {\\n    ipfsPath = `/ipns/${ipnsIdentifier}${path}`;\\n  }\\n\\n  if (ipfsPath !== null) {\\n    return await resolveContainer(client, ipfsPath, base, timeout);\\n  }\\n\\n  return null;\\n};\\n\\nIpfsBundle.prototype.getIpfsIdentifier = function (value) {\\n  if (value === undefined || value == null) {\\n    return {\\n      cid: null,\\n      ipnsIdentifier: null,\\n      path: null\\n    };\\n  }\\n\\n  var cid = null;\\n  var hostname = null;\\n  var ipnsIdentifier = null;\\n  var path = null;\\n  var url = null;\\n\\n  if (value instanceof URL === false) {\\n    try {\\n      url = this.getUrl(value);\\n    } catch (error) {\\n      url = null;\\n    }\\n  } else {\\n    url = value;\\n  }\\n\\n  if (url !== null) {\\n    var {\\n      cid,\\n      hostname,\\n      ipnsIdentifier,\\n      path\\n    } = this.decodeUrl(url);\\n  } else {\\n    var {\\n      cid,\\n      hostname,\\n      ipnsIdentifier,\\n      path\\n    } = this.decodeHostname(value);\\n\\n    if (cid == null && ipnsIdentifier == null) {\\n      var {\\n        cid,\\n        ipnsIdentifier,\\n        path\\n      } = this.decodePathname(value);\\n    }\\n  }\\n\\n  return {\\n    cid: cid,\\n    hostname: hostname,\\n    ipnsIdentifier: ipnsIdentifier,\\n    path: path\\n  };\\n};\\n\\nIpfsBundle.prototype.decodeUrl = function (url) {\\n  url = url !== undefined && url !== null && url.toString().trim() !== '' ? url : null;\\n\\n  if (url instanceof URL === false) {\\n    return {\\n      cid: null,\\n      hostname: null,\\n      ipnsIdentifier: null,\\n      path: null\\n    };\\n  }\\n\\n  var cid = null;\\n  var hostname = null;\\n  var ipnsIdentifier = null;\\n  var protocol = null;\\n  var path = `${url.pathname}${url.search}${url.hash}`;\\n\\n  if (url.protocol === 'ipfs:' || url.protocol === 'ipns:') {\\n    if (url.hostname !== undefined && url.hostname !== null && url.hostname.trim() !== '') {\\n      if (url.protocol === 'ipns:') {\\n        ipnsIdentifier = url.hostname;\\n        protocol = 'ipns';\\n      } else if (url.protocol === 'ipfs:' && this.getCid(url.hostname) !== null) {\\n        cid = url.hostname;\\n        protocol = 'ipfs';\\n      }\\n    } else if (url.pathname !== undefined && url.pathname !== null && url.pathname.trim() !== '') {\\n      var pathname;\\n\\n      if (url.pathname.startsWith('//')) {\\n        pathname = `/${protocol}/${url.pathname.slice(2)}${url.search}${url.hash}`;\\n      } else {\\n        pathname = `/${protocol}/${url.pathname}${url.search}${url.hash}`;\\n      }\\n\\n      var {\\n        cid,\\n        ipnsIdentifier,\\n        path\\n      } = this.decodePathname(pathname);\\n    }\\n\\n    return {\\n      cid: cid,\\n      hostname: null,\\n      ipnsIdentifier: ipnsIdentifier,\\n      path: path\\n    };\\n  }\\n\\n  var {\\n    cid,\\n    hostname,\\n    ipnsIdentifier\\n  } = this.decodeHostname(url.hostname);\\n\\n  if (cid == null && ipnsIdentifier == null) {\\n    var {\\n      cid,\\n      ipnsIdentifier,\\n      path: innerPath\\n    } = this.decodePathname(url.pathname);\\n\\n    if (innerPath !== null) {\\n      path = `${innerPath}${url.search}${url.hash}`;\\n    }\\n  }\\n\\n  return {\\n    cid: cid,\\n    hostname: hostname,\\n    ipnsIdentifier: ipnsIdentifier,\\n    path: path\\n  };\\n};\\n\\nIpfsBundle.prototype.decodePathname = function (pathname) {\\n  pathname = pathname !== undefined && pathname !== null && pathname.trim() !== '' ? pathname.trim() : null;\\n\\n  if (pathname == null || pathname === '/') {\\n    return {\\n      cid: null,\\n      ipnsIdentifier: null,\\n      path: pathname\\n    };\\n  }\\n\\n  var identifier = null;\\n  var protocol = null;\\n  var path = ''; // Parse\\n\\n  const members = pathname.trim().split('/');\\n\\n  for (var i = 0; i < members.length; i++) {\\n    if (members[i].trim() === '') {\\n      continue;\\n    }\\n\\n    if (protocol == null) {\\n      protocol = members[i];\\n      continue;\\n    }\\n\\n    if (identifier == null) {\\n      identifier = members[i];\\n      continue;\\n    }\\n\\n    path = `${path}/${members[i]}`;\\n  }\\n\\n  if (pathname.slice(-1) === '/') {\\n    path = `${path}/`;\\n  }\\n\\n  if (protocol == null || identifier == null) {\\n    return {\\n      cid: null,\\n      ipnsIdentifier: null,\\n      path: pathname\\n    };\\n  }\\n\\n  var cid = null;\\n  var ipnsIdentifier = null;\\n\\n  if (protocol === 'ipns' || protocol === 'ipns:') {\\n    ipnsIdentifier = identifier;\\n  } else if ((protocol === 'ipfs' || protocol === 'ipfs:') && this.getCid(identifier) !== null) {\\n    cid = identifier;\\n  } else {\\n    protocol = null;\\n  }\\n\\n  return {\\n    cid: cid,\\n    ipnsIdentifier: ipnsIdentifier,\\n    path: protocol !== null ? path : pathname\\n  };\\n};\\n\\nIpfsBundle.prototype.decodeHostname = function (hostname) {\\n  hostname = hostname !== undefined && hostname !== null && hostname.trim() !== '' ? hostname.trim() : null;\\n\\n  if (hostname == null) {\\n    return {\\n      cid: null,\\n      hostname: null,\\n      ipnsIdentifier: null,\\n      path: '/'\\n    };\\n  }\\n\\n  var domain = null;\\n  var identifier = null;\\n  var protocol = null;\\n  var path = '/'; // Parse\\n\\n  const members = hostname.trim().split('.');\\n\\n  for (var i = 0; i < members.length; i++) {\\n    if (members[i].trim() === '') {\\n      continue;\\n    }\\n\\n    if (identifier == null) {\\n      identifier = members[i];\\n      continue;\\n    }\\n\\n    if (protocol == null) {\\n      protocol = members[i];\\n      continue;\\n    }\\n\\n    const search = members[i].split('/', 1);\\n\\n    if (search[0] !== members[i]) {\\n      if (domain) {\\n        domain = `${domain}.${search[0]}`;\\n      } else {\\n        domain = search[0];\\n      }\\n\\n      path = search[1];\\n    } else {\\n      if (domain) {\\n        domain = `${domain}.${members[i]}`;\\n      } else {\\n        domain = members[i];\\n      }\\n    }\\n  }\\n\\n  if (identifier == null || protocol == null) {\\n    return {\\n      cid: null,\\n      hostname: null,\\n      ipnsIdentifier: null,\\n      path: '/'\\n    };\\n  }\\n\\n  var cid = null;\\n  var ipnsIdentifier = null;\\n\\n  if (protocol === 'ipns' || protocol === 'ipns:') {\\n    ipnsIdentifier = identifier;\\n  } else if ((protocol === 'ipfs' || protocol === 'ipfs:') && this.getCid(identifier) !== null) {\\n    cid = identifier;\\n  }\\n\\n  if (cid == null && ipnsIdentifier == null) {\\n    if (domain == null) {\\n      domain = `${identifier}.${protocol}`;\\n    } else {\\n      domain = `${identifier}.${protocol}.${domain}`;\\n    }\\n  }\\n\\n  return {\\n    cid: cid,\\n    hostname: domain,\\n    ipnsIdentifier: ipnsIdentifier,\\n    path: path !== undefined && path !== null ? path : '/'\\n  };\\n};\\n\\nIpfsBundle.prototype.getCid = function (cid) {\\n  try {\\n    const newCid = new CID(cid);\\n\\n    if (CID.isCID(newCid)) {\\n      return newCid;\\n    }\\n  } catch (error) {// Ignore\\n  }\\n\\n  return null;\\n};\\n\\nIpfsBundle.prototype.cidToBase58CidV0 = function (cid, log) {\\n  return this.convertCidToBase58CidV0(cid, log);\\n};\\n\\nIpfsBundle.prototype.convertCidToBase58CidV0 = function (cid, log) {\\n  cid = new CID(cid.toString());\\n  const {\\n    codec: cidCodec\\n  } = cid.toJSON();\\n\\n  if (cid.version === 1) {\\n    const converted = new CID(0, dagPb, cid.multihash, 'base58btc'); // Log\\n\\n    if (log) {\\n      const {\\n        codec: convertedCodec\\n      } = converted.toJSON();\\n      this.getLogger().info(`Converted:\\n'${cidCodec}' \\\"cidv1\\\" (${cid.multibaseName}): ${cidInspector}${cid}\\nto '${convertedCodec}' \\\"cidv0\\\" (base58btc): ${cidInspector}${converted}`);\\n    }\\n\\n    return converted;\\n  } // Convert\\n\\n\\n  if (cidCodec !== dagPb || cid.multibaseName !== 'base58btc') {\\n    cid = this.convertCidToCid(cid, 0, dagPb, 'base58btc', log);\\n  }\\n\\n  return cid;\\n};\\n\\nIpfsBundle.prototype.cidToCidV1 = function (cid, protocol, log) {\\n  return this.convertCidToCidV1(cid, protocol, log);\\n};\\n\\nIpfsBundle.prototype.convertCidToCidV1 = function (cid, protocol, log) {\\n  cid = new CID(cid.toString());\\n  const {\\n    codec: cidCodec\\n  } = cid.toJSON();\\n  var codec = protocol !== undefined && protocol !== null ? protocol === 'ipns' ? libp2pKey : dagPb : dagPb;\\n  var multibaseName = codec === libp2pKey ? 'base36' : 'base32'; // Convert\\n\\n  if (cid.version === 0) {\\n    const converted = new CID(1, codec, cid.multihash, multibaseName);\\n\\n    if (log) {\\n      this.getLogger().info(`Converted:\\n'${cidCodec}' \\\"cidv0\\\" (${cid.multibaseName}): ${cidInspector}${cid}\\nto '${codec}' \\\"cidv1\\\" (${multibaseName}): ${cidInspector}${converted}`);\\n    }\\n\\n    return converted;\\n  } // Convert\\n\\n\\n  if (cidCodec !== codec || cid.multibaseName !== multibaseName) {\\n    cid = this.convertCidToCid(cid, 1, codec, multibaseName, log);\\n  }\\n\\n  return cid;\\n};\\n\\nIpfsBundle.prototype.cidToLibp2pKeyCidV1 = function (cid, multibaseName, log) {\\n  return this.convertCidToCid(cid, 1, 'libp2p-key', multibaseName, log);\\n};\\n\\nIpfsBundle.prototype.convertCidToCid = function (cid, version, codec, multibaseName, log) {\\n  cid = new CID(cid.toString());\\n  const {\\n    codec: cidCodec,\\n    version: cidVersion\\n  } = cid.toJSON();\\n\\n  if (cid.version === version && cidCodec === codec && cid.multibaseName === multibaseName) {\\n    return cid;\\n  }\\n\\n  const converted = new CID(version, codec, cid.multihash, multibaseName);\\n\\n  if (log) {\\n    const {\\n      codec: convertedCodec,\\n      version: convertedVersion\\n    } = converted.toJSON();\\n    this.getLogger().info(`Converted:\\n'${cidCodec}' \\\"cidv${cidVersion}\\\" (${cid.multibaseName}): ${cidInspector}${cid}\\nto '${convertedCodec}' \\\"cidv${convertedVersion}\\\" (${multibaseName}): ${cidInspector}${converted}`);\\n  }\\n\\n  return converted;\\n};\\n\\nIpfsBundle.prototype.Base64ToUint8Array = function (b64) {\\n  return Base64Binary.decode(b64);\\n}; // https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string\\n\\n\\nIpfsBundle.prototype.Uint8ArrayToBase64 = function (uint8) {\\n  var CHUNK_SIZE = 0x8000; //arbitrary number\\n\\n  var index = 0;\\n  var length = uint8.length;\\n  var str = '';\\n  var slice;\\n\\n  while (index < length) {\\n    slice = uint8.subarray(index, Math.min(index + CHUNK_SIZE, length));\\n    str += String.fromCharCode.apply(null, slice);\\n    index += CHUNK_SIZE;\\n  }\\n\\n  return btoa(str);\\n}; // String to uint array\\n\\n\\nIpfsBundle.prototype.StringToUint8Array = function (string) {\\n  return uint8ArrayFromString(string);\\n}; // http://www.onicos.com/staff/iz/amuse/javascript/expert/utf.txt\\n\\n/*\\n * utf.js - UTF-8 <=> UTF-16 convertion\\n *\\n * Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\\n * Version: 1.0\\n * LastModified: Dec 25 1999\\n * This library is free.  You can redistribute it and/or modify it.\\n */\\n\\n\\nIpfsBundle.prototype.Utf8ArrayToStr = function (array) {\\n  var c, char2, char3;\\n  var out = '';\\n  var len = array.length;\\n  var i = 0;\\n\\n  while (i < len) {\\n    c = array[i++];\\n\\n    switch (c >> 4) {\\n      case 0:\\n      case 1:\\n      case 2:\\n      case 3:\\n      case 4:\\n      case 5:\\n      case 6:\\n      case 7:\\n        // 0xxxxxxx\\n        out += String.fromCharCode(c);\\n        break;\\n\\n      case 12:\\n      case 13:\\n        // 110x xxxx   10xx xxxx\\n        char2 = array[i++];\\n        out += String.fromCharCode((c & 0x1f) << 6 | char2 & 0x3f);\\n        break;\\n\\n      case 14:\\n        // 1110 xxxx  10xx xxxx  10xx xxxx\\n        char2 = array[i++];\\n        char3 = array[i++];\\n        out += String.fromCharCode((c & 0x0f) << 12 | (char2 & 0x3f) << 6 | (char3 & 0x3f) << 0);\\n        break;\\n    }\\n  }\\n\\n  return out;\\n};\\n\\nIpfsBundle.prototype.deflate = function (str) {\\n  var tStart = new Date();\\n  var ua = globalThis.pako.deflate(str, {\\n    raw: false\\n  });\\n  var b64 = this.Uint8ArrayToBase64(ua);\\n  var tStop = new Date() - tStart;\\n  var ratio = Math.floor(b64.length * 100 / str.length);\\n  this.getLogger().info(`Deflate: ${tStop}ms, In: ${str.length} bytes, Out: ${b64.length} bytes, Ratio: ${ratio}%`);\\n  return b64;\\n};\\n\\nIpfsBundle.prototype.inflate = function (b64) {\\n  var tStart = new Date();\\n  var ua = this.decode(b64);\\n  var str = globalThis.pako.inflate(ua, {\\n    to: 'string'\\n  });\\n  var tStop = new Date() - tStart;\\n  var ratio = Math.floor(str.length * 100 / b64.length);\\n  this.getLogger().info(`Inflate: ${tStop}ms, In: ${b64.length} bytes, Out: ${str.length} bytes, Ratio: ${ratio}%`);\\n  return str;\\n};\\n\\nexports.IpfsBundle = IpfsBundle;\\n\\n},{\\\"./ipfs-bundle/ens-library.js\\\":2,\\\"./ipfs-bundle/ethereum-library.js\\\":3,\\\"./ipfs-bundle/ipfs-library.js\\\":4,\\\"./ipfs-bundle/ipfs-loader.js\\\":5,\\\"./ipfs-bundle/ipfs-url.js\\\":6,\\\"cids\\\":53,\\\"core-js/modules/es.string.replace.js\\\":169,\\\"core-js/modules/es.typed-array.uint8-array.js\\\":171,\\\"core-js/modules/web.dom-collections.iterator.js\\\":185,\\\"core-js/modules/web.url.js\\\":187,\\\"core-js/modules/web.url.to-json.js\\\":188,\\\"uint8arrays/from-string\\\":581}],2:[function(require,module,exports){\\n'use strict';\\n\\nrequire(\\\"core-js/modules/es.typed-array.from.js\\\");\\n\\nrequire(\\\"core-js/modules/es.typed-array.uint8-array.js\\\");\\n\\nconst basex = require('@multiformats/base-x');\\n\\nconst CID = require('cids');\\n\\nconst concat = require('uint8arrays').concat;\\n\\nconst fromString = require('uint8arrays').fromString;\\n\\nconst multiC = require('multicodec');\\n\\nconst multiH = require('multihashes');\\n/*eslint no-unused-vars:\\\"off\\\"*/\\n\\n\\nconst BASE58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\\nconst bs58 = basex(BASE58); // https://github.com/ensdomains/resolvers\\n\\nvar EnsLibrary = function (ipfsBundle) {\\n  this.ipfsBundle = ipfsBundle;\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n\\n  this.name = 'ens-library'; // https://docs.ens.domains/ens-deployments\\n  // https://github.com/ensdomains/ui/blob/master/src/ens.js\\n\\n  this.registry = {\\n    0x1: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\\n    0x3: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\\n    0x4: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\\n    0x5: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\\n  };\\n};\\n\\nEnsLibrary.prototype.getLogger = function () {\\n  return this.ipfsBundle.getLogger();\\n};\\n\\nEnsLibrary.prototype.getENSRegistry = function () {\\n  return this.registry;\\n};\\n\\nEnsLibrary.prototype.hexStringToUint8Array = function (hex) {\\n  const prefix = hex.slice(0, 2);\\n  const value = hex.slice(2);\\n  var res = '';\\n\\n  if (prefix === '0x') {\\n    res = value;\\n  } else {\\n    res = hex;\\n  }\\n\\n  return multiH.fromHexString(res);\\n};\\n\\nEnsLibrary.prototype.getCodec = function (hash) {\\n  const ua = this.hexStringToUint8Array(hash);\\n  return multiC.getCodec(ua);\\n};\\n\\nEnsLibrary.prototype.b58MultiHash = function (hash) {\\n  const ua = this.hexStringToUint8Array(hash);\\n  const value = multiC.rmPrefix(ua);\\n  const cid = new CID(value);\\n  return multiH.toB58String(cid.multihash);\\n}; // https://github.com/ensdomains/ui/blob/master/src/utils/contents.js\\n\\n\\nEnsLibrary.prototype.decodeContenthash = function (encoded) {\\n  var decoded = null;\\n  var protocol = null;\\n\\n  if (encoded.error) {\\n    throw new Error(encoded.error);\\n  }\\n\\n  if (encoded) {\\n    try {\\n      const codec = this.getCodec(encoded);\\n      decoded = this.b58MultiHash(encoded);\\n\\n      if (codec === 'ipfs-ns') {\\n        protocol = 'ipfs';\\n        decoded = this.ipfsBundle.cidToCidV1(decoded, protocol, true);\\n      } else if (codec === 'ipns-ns') {\\n        protocol = 'ipns';\\n        decoded = this.ipfsBundle.cidToCidV1(decoded, protocol, true);\\n      } else {\\n        throw new Error(`Unsupported ENS Content Hash codec: ${codec}`);\\n      }\\n\\n      decoded = decoded.toString();\\n    } catch (error) {\\n      this.getLogger().error(error);\\n    }\\n  }\\n\\n  return {\\n    decoded: decoded,\\n    protocol: protocol\\n  };\\n}; // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1577.md\\n// https://github.com/ensdomains/ui/blob/master/src/utils/contents.js\\n\\n\\nEnsLibrary.prototype.encodeContenthash = function (content) {\\n  var type = null;\\n  var text = null;\\n  var encoded = null;\\n  content = content === undefined || content == null || content.trim() === '' ? null : content.trim();\\n\\n  if (content == null) {\\n    return null;\\n  }\\n\\n  const matched = content.match(/^(ipfs|ipns|bzz|onion|onion3):\\\\/\\\\/(.*)/) || content.match(/\\\\/(ipfs)\\\\/(.*)/) || content.match(/\\\\/(ipns)\\\\/(.*)/);\\n\\n  if (matched) {\\n    type = matched[1];\\n    text = matched[2];\\n  } // https://stackoverflow.com/questions/39225161/convert-uint8array-into-hex-string-equivalent-in-node-js\\n\\n\\n  function i2hex(i) {\\n    return ('0' + i.toString(16)).slice(-2);\\n  }\\n\\n  if (type === 'ipfs') {\\n    encoded = this.ipfsBundle.cidToBase58CidV0(text, true);\\n    encoded = new CID(1, 'dag-pb', multiH.fromB58String(encoded.toString()));\\n    encoded = multiC.addPrefix('ipfs-ns', encoded.bytes);\\n    encoded = Array.from(encoded).map(i2hex).join('');\\n    encoded = `0x${encoded}`;\\n  } else if (type === 'ipns') {\\n    var ua = [Uint8Array.from([0, text.length]), fromString(text)];\\n    ua = concat(ua, 2 + text.length);\\n    encoded = bs58.encode(ua);\\n    encoded = new CID(1, 'dag-pb', multiH.fromB58String(encoded));\\n    encoded = multiC.addPrefix('ipns-ns', encoded.bytes);\\n    encoded = Array.from(encoded).map(i2hex).join('');\\n    encoded = `0x${encoded}`;\\n  } else {\\n    throw new Error(`Unsupported ENS Content Hash type: ${type}`);\\n  }\\n\\n  return {\\n    encoded: encoded\\n  };\\n};\\n\\nEnsLibrary.prototype.getRegistry = async function (web3) {\\n  if (web3 === undefined || web3 == null) {\\n    throw new Error('Undefined Web3 provider...');\\n  } // Retrieve network\\n\\n\\n  const network = await web3.getNetwork();\\n  const chainId = parseInt(network.chainId); // Retrieve an Ethereum ENS Registry address\\n\\n  var registry = null;\\n\\n  try {\\n    registry = this.registry[chainId];\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  }\\n\\n  if (registry === undefined || registry == null) {\\n    throw new Error(`Unsupported Ethereum network: ${chainId}`);\\n  } // Return registry address\\n\\n\\n  return {\\n    chainId: chainId,\\n    registry: registry\\n  };\\n};\\n\\nEnsLibrary.prototype.getResolver = async function (web3, registry, node) {\\n  if (web3 === undefined || web3 == null) {\\n    throw new Error('Undefined Web3 provider...');\\n  }\\n\\n  node = node === undefined || node == null || node.trim() === '' ? null : node.trim();\\n\\n  if (node == null) {\\n    throw new Error('Undefined ENS domain resolver...');\\n  }\\n\\n  registry = registry === undefined || registry == null || registry.trim() === '' ? null : registry.trim();\\n\\n  if (registry == null) {\\n    throw new Error('Undefined ENS registry address...');\\n  }\\n\\n  const abi = ['function resolver(bytes32 node) external view returns (address)'];\\n  const iface = new globalThis.ethers.utils.Interface(abi);\\n  const data = iface.encodeFunctionData('resolver', [node]);\\n  const result = await web3.call({\\n    to: registry,\\n    data: data\\n  });\\n\\n  if (result === undefined || result == null || result === '0x') {\\n    return null;\\n  }\\n\\n  try {\\n    const decoded = iface.decodeFunctionResult('resolver', result);\\n\\n    if (decoded !== undefined && decoded !== null && Array.isArray(decoded) && decoded.length > 0) {\\n      return decoded[0];\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  } // Return\\n\\n\\n  return null;\\n}; // https://eips.ethereum.org/EIPS/eip-165\\n\\n\\nEnsLibrary.prototype.checkEip165 = async function (web3, address) {\\n  if (web3 === undefined || web3 == null) {\\n    throw new Error('Undefined Web3 provider...');\\n  }\\n\\n  address = address === undefined || address == null || address.trim() === '' ? null : address.trim();\\n\\n  if (address == null) {\\n    throw new Error('Undefined Ethereum address...');\\n  }\\n\\n  var abi = ['function supportsInterface(bytes4 interfaceID) public pure returns(bool)'];\\n  var iface = new globalThis.ethers.utils.Interface(abi);\\n  var data = iface.encodeFunctionData('supportsInterface', ['0x01ffc9a7']);\\n  var result = await web3.call({\\n    to: address,\\n    data: data\\n  });\\n\\n  if (result === undefined || result == null || result === '0x') {\\n    return false;\\n  }\\n\\n  try {\\n    var decoded = iface.decodeFunctionResult('supportsInterface', result);\\n\\n    if (decoded !== undefined && decoded !== null && Array.isArray(decoded) && decoded.length > 0) {\\n      if (decoded[0] === false) {\\n        return false;\\n      }\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error);\\n    return false;\\n  }\\n\\n  data = iface.encodeFunctionData('supportsInterface', ['0xffffffff']);\\n  result = await web3.call({\\n    to: address,\\n    data: data\\n  });\\n\\n  if (result === undefined || result == null || result === '0x') {\\n    return false;\\n  }\\n\\n  try {\\n    var decoded = iface.decodeFunctionResult('supportsInterface', result);\\n\\n    if (decoded !== undefined && decoded !== null && Array.isArray(decoded) && decoded.length > 0) {\\n      // conform to spec\\n      if (decoded[0] === false) {\\n        return true;\\n      }\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  } // do not conform to spec\\n\\n\\n  return false;\\n}; // https://eips.ethereum.org/EIPS/eip-1577\\n\\n\\nEnsLibrary.prototype.checkEip1577 = async function (web3, address) {\\n  if (web3 === undefined || web3 == null) {\\n    throw new Error('Undefined Web3 provider...');\\n  }\\n\\n  address = address === undefined || address == null || address.trim() === '' ? null : address.trim();\\n\\n  if (address == null) {\\n    throw new Error('Undefined Ethereum address...');\\n  } // contenthash, true when interfaceID is 0xbc1c58d1\\n\\n\\n  var abi = ['function supportsInterface(bytes4 interfaceID) public pure returns(bool)'];\\n  var iface = new globalThis.ethers.utils.Interface(abi);\\n  var data = iface.encodeFunctionData('supportsInterface', ['0xbc1c58d1']);\\n  var result = await web3.call({\\n    to: address,\\n    data: data\\n  });\\n\\n  if (result === undefined || result == null || result === '0x') {\\n    return false;\\n  }\\n\\n  try {\\n    var decoded = iface.decodeFunctionResult('supportsInterface', result);\\n\\n    if (decoded !== undefined && decoded !== null && Array.isArray(decoded) && decoded.length > 0) {\\n      return decoded[0];\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  }\\n\\n  return false;\\n};\\n\\nEnsLibrary.prototype.getContentHash = async function (domain, web3) {\\n  domain = domain === undefined || domain == null || domain.trim() === '' ? null : domain.trim();\\n\\n  if (domain == null) {\\n    throw new Error('Undefined ENS domain...');\\n  }\\n\\n  if (web3 === undefined) {\\n    var {\\n      web3\\n    } = await this.ipfsBundle.getWeb3Provider();\\n  }\\n\\n  const explorer = this.ipfsBundle.getBlockExplorerRegistry(); // Resolve domain as namehash\\n\\n  const domainHash = globalThis.ethers.utils.namehash(domain); // Fetch ens registry address\\n\\n  const {\\n    chainId,\\n    registry\\n  } = await this.getRegistry(web3);\\n  this.getLogger().info(`ENS registry:\\n${explorer[chainId]}/address/${registry}`); // Fetch resolver address\\n\\n  var resolver = await this.getResolver(web3, registry, domainHash); // Check\\n\\n  if (resolver == null || /^0x0+$/.test(resolver) === true) {\\n    throw new Error('Undefined ENS domain resolver...');\\n  } // Log\\n\\n\\n  this.getLogger().info(`ENS domain resolver:\\n${explorer[chainId]}/address/${resolver}`); // Check if resolver is EIP165\\n\\n  const eip165 = await this.checkEip165(web3, resolver);\\n\\n  if (eip165 === false) {\\n    throw new Error('ENS domain resolver do not conform to EIP165...');\\n  } // Check if resolver is EIP1577\\n\\n\\n  const eip1577 = await this.checkEip1577(web3, resolver);\\n\\n  if (eip1577 === false) {\\n    throw new Error('ENS domain resolver do not conform to EIP1577...');\\n  } // Retrieve content hash\\n\\n\\n  this.getLogger().info('Retrieving ENS domain content...');\\n  const abi = ['function contenthash(bytes32 node) external view returns (bytes memory)'];\\n  const iface = new globalThis.ethers.utils.Interface(abi);\\n  const data = iface.encodeFunctionData('contenthash', [domainHash]);\\n  const result = await web3.call({\\n    to: resolver,\\n    data: data\\n  });\\n\\n  if (result === undefined || result == null || result === '0x') {\\n    return {\\n      content: null,\\n      protocol: null\\n    };\\n  }\\n\\n  var content = iface.decodeFunctionResult('contenthash', result);\\n\\n  if (content !== undefined && content !== null && Array.isArray(content) && content.length > 0) {\\n    var {\\n      decoded,\\n      protocol\\n    } = this.decodeContenthash(content[0]);\\n    return {\\n      content: decoded,\\n      protocol: protocol\\n    };\\n  }\\n\\n  return {\\n    content: null,\\n    protocol: null\\n  };\\n};\\n\\nEnsLibrary.prototype.isOwner = async function (domain, web3, account) {\\n  domain = domain === undefined || domain == null || domain.trim() === '' ? null : domain.trim();\\n\\n  if (domain == null) {\\n    throw new Error('Undefined ENS domain...');\\n  }\\n\\n  if (account === undefined || account == null || web3 === undefined || web3 == null) {\\n    var {\\n      account,\\n      web3\\n    } = await this.ipfsBundle.getEnabledWeb3Provider();\\n  }\\n\\n  const explorer = this.ipfsBundle.getBlockExplorerRegistry(); // Resolve domain as namehash\\n\\n  const domainHash = globalThis.ethers.utils.namehash(domain); // Fetch ens registry address\\n\\n  const {\\n    chainId,\\n    registry\\n  } = await this.getRegistry(web3);\\n  this.getLogger().info(`ENS registry:\\n${explorer[chainId]}/address/${registry}`);\\n  const abi = ['function owner(bytes32 node) public view returns(address)'];\\n  const iface = new globalThis.ethers.utils.Interface(abi);\\n  const data = iface.encodeFunctionData('owner', [domainHash]);\\n  const result = await web3.call({\\n    to: registry,\\n    data: data\\n  });\\n\\n  if (result === undefined || result == null || result === '0x') {\\n    return false;\\n  } // decode if applicable\\n\\n\\n  try {\\n    var decoded = iface.decodeFunctionResult('owner', result);\\n\\n    if (decoded !== undefined && decoded !== null && Array.isArray(decoded) && decoded.length > 0) {\\n      return decoded[0].toLowerCase() === account.toLowerCase();\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  }\\n\\n  return false;\\n};\\n\\nEnsLibrary.prototype.setContentHash = async function (domain, identifier, web3, account) {\\n  identifier = identifier !== undefined && identifier !== null && identifier.toString().trim() !== '' ? identifier.toString().trim() : null;\\n\\n  if (identifier == null) {\\n    throw new Error('Undefined IPFS identifier...');\\n  }\\n\\n  domain = domain !== undefined && domain !== null && domain.trim() !== '' ? domain.trim() : null;\\n\\n  if (domain == null) {\\n    throw new Error('Undefined ENS domain...');\\n  }\\n\\n  if (account === undefined || web3 === undefined) {\\n    var {\\n      account,\\n      web3\\n    } = await this.ipfsBundle.getEnabledWeb3Provider();\\n  }\\n\\n  const explorer = this.ipfsBundle.getBlockExplorerRegistry(); // Resolve domain as namehash\\n\\n  const domainHash = globalThis.ethers.utils.namehash(domain); // Fetch ens registry address\\n\\n  const {\\n    chainId,\\n    registry\\n  } = await this.getRegistry(web3);\\n  this.getLogger().info(`ENS registry:\\n${explorer[chainId]}/address/${registry}`);\\n  var resolver = await this.getResolver(web3, registry, domainHash);\\n\\n  if (resolver == null || /^0x0+$/.test(resolver) === true) {\\n    throw new Error('Undefined ENS resolver...');\\n  }\\n\\n  this.getLogger().info(`ENS domain resolver:\\n${explorer[chainId]}/address/${resolver}`); // Check if resolver is EIP165\\n\\n  const eip165 = await this.checkEip165(web3, resolver);\\n\\n  if (eip165 === false) {\\n    throw new Error('ENS resolver do not conform to EIP165...');\\n  } // Check if resolver is EIP1577\\n\\n\\n  const eip1577 = await this.checkEip1577(web3, resolver);\\n\\n  if (eip1577 === false) {\\n    throw new Error('ENS resolver do not conform to EIP1577...');\\n  } // Encode identifier\\n\\n\\n  const {\\n    encoded\\n  } = this.encodeContenthash(identifier); // Set Contenthash\\n\\n  this.getLogger().info('Processing ENS domain content...');\\n  const abi = ['function setContenthash(bytes32 node, bytes calldata hash)'];\\n  const iface = new globalThis.ethers.utils.Interface(abi);\\n  const data = iface.encodeFunctionData('setContenthash', [domainHash, encoded]);\\n\\n  try {\\n    const signer = web3.getSigner(account);\\n    const tx = await signer.sendTransaction({\\n      to: resolver,\\n      data: data\\n    });\\n    this.getLogger().info(`Processing Transaction:\\n${explorer[chainId]}/tx/${tx.hash}`); // Wait for transaction completion\\n\\n    await tx.wait();\\n    this.getLogger().info('Processed ENS domain content...');\\n  } catch (error) {\\n    // EIP 1193 user Rejected Request\\n    if (error.code === 4001) {\\n      const err = new Error('Rejected User Request...');\\n      err.name = 'RejectedUserRequest';\\n      throw err;\\n    }\\n\\n    if (error.code === 4100) {\\n      const err = new Error('Unauthorized User Account...');\\n      err.name = 'UnauthorizedUserAccount';\\n      throw err;\\n    }\\n\\n    throw error;\\n  }\\n};\\n\\nexports.EnsLibrary = EnsLibrary;\\n\\n},{\\\"@multiformats/base-x\\\":7,\\\"cids\\\":53,\\\"core-js/modules/es.typed-array.from.js\\\":170,\\\"core-js/modules/es.typed-array.uint8-array.js\\\":171,\\\"multicodec\\\":513,\\\"multihashes\\\":526,\\\"uint8arrays\\\":582}],3:[function(require,module,exports){\\n'use strict'; // https://github.com/ensdomains/resolvers\\n\\nvar EthereumLibrary = function (ipfsBundle) {\\n  this.ipfsBundle = ipfsBundle;\\n  this.name = 'ethereum-library';\\n  this.network = {\\n    0x1: 'Ethereum Main Network: \\\"Mainnet\\\", chainId: \\\"0x1\\\": \\\"1\\\"',\\n    0x2a: 'Ethereum Test Network (PoA): \\\"Kovan\\\", chainId: \\\"0x2a\\\": \\\"42\\\"',\\n    0x3: 'Ethereum Test Network (PoW): \\\"Ropsten\\\", chainId: \\\"0x3\\\": \\\"3\\\"',\\n    0x38: 'Binance Smart Chain Main Network (bsc-mainnet): \\\"0x38\\\": \\\"56\\\"',\\n    // https://bsc-dataseed.binance.org/\\n    0x4: 'Ethereum Test Network (PoA): \\\"Rinkeby\\\", chainId: \\\"0x4\\\": \\\"4\\\"',\\n    0x5: 'Ethereum Test Network (PoA): \\\"Goerli\\\", chainId: \\\"0x5\\\": \\\"5\\\"',\\n    0x61: 'Binance Smart Chain Test Network (bsc-testnet): \\\"0x61\\\": \\\"97\\\"',\\n    // https://data-seed-prebsc-1-s1.binance.org:8545/\\n    0x64: 'xDai Main Network: \\\"Mainnet\\\", chainId: \\\"0x64\\\": \\\"100\\\"' // https://rpc.xdaichain.com/\\n\\n  };\\n  this.explorer = {\\n    0x1: 'https://etherscan.io',\\n    0x2a: 'https://kovan.etherscan.io',\\n    0x3: 'https://ropsten.etherscan.io',\\n    0x38: 'https://bscscan.com',\\n    0x4: 'https://rinkeby.etherscan.io',\\n    0x5: 'https://goerli.etherscan.io',\\n    0x61: 'https://testnet.bscscan.com/',\\n    0x64: 'https://blockscout.com/poa/xdai'\\n  };\\n  this.once = false;\\n  this.provider = null;\\n};\\n\\nEthereumLibrary.prototype.getLogger = function () {\\n  return this.ipfsBundle.getLogger();\\n};\\n\\nEthereumLibrary.prototype.getEthereumProvider = async function () {\\n  if (this.provider == null) {\\n    this.provider = await this.detectEthereumProvider();\\n  }\\n\\n  return this.provider;\\n};\\n/*\\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md\\n * https://eips.ethereum.org/EIPS/eip-1193\\n * https://docs.metamask.io/guide/ethereum-provider.html#methods-current-api\\n */\\n\\n\\nEthereumLibrary.prototype.init = async function () {\\n  // Init once\\n  if (this.once) {\\n    return;\\n  }\\n\\n  const self = this;\\n\\n  try {\\n    const provider = await this.getEthereumProvider();\\n    const chainId = await this.getChainId(provider);\\n    this.getLogger().info(`Chain: ${this.network[chainId]}`); // Init Ethereum listener\\n\\n    provider.on('accountsChanged', accounts => {\\n      self.accounts(provider, accounts);\\n    });\\n    provider.on('chainChanged', chainId => {\\n      const id = parseInt(chainId, 16);\\n      self.getLogger().info(`Chain: ${self.network[id]}`);\\n    });\\n    provider.on('connect', chainId => {\\n      const id = parseInt(chainId, 16);\\n      self.getLogger().info(`Chain: ${self.network[id]}`);\\n    });\\n    provider.on('disconnect', (code, reason) => {\\n      self.disconnectedFromAllChains(code, reason);\\n    });\\n    provider.on('message', message => {\\n      self.providerMessage(message);\\n    });\\n  } catch (error) {\\n    if (error.name !== 'InstallMetamask') {\\n      this.getLogger().error(error);\\n      $tw.utils.alert(this.name, error.message);\\n    }\\n  } // Init once\\n\\n\\n  this.once = true;\\n};\\n\\nEthereumLibrary.prototype.getChainId = async function (provider) {\\n  if (provider === undefined || provider == null) {\\n    provider = await this.getEthereumProvider();\\n  }\\n\\n  var chainId = await provider.request({\\n    method: 'eth_chainId'\\n  });\\n  chainId = chainId !== undefined && chainId !== null && chainId.trim() !== '' ? chainId.trim() : null;\\n  return chainId !== null ? parseInt(chainId, 16) : null;\\n};\\n\\nEthereumLibrary.prototype.accounts = async function (provider, accounts) {\\n  if (accounts !== undefined && accounts !== null && Array.isArray(accounts) === true && accounts.length > 0) {\\n    try {\\n      const chainId = await this.getChainId(provider);\\n      this.getLogger().info(`Chain: ${this.network[chainId]}`);\\n      this.getLogger().info(`Ethereum account: ${this.explorer[chainId]}/address/${accounts[0]}`);\\n    } catch (error) {\\n      this.getLogger().error(error);\\n      $tw.utils.alert(this.name, error.message);\\n    }\\n  } else {\\n    this.getLogger().info('Unavailable Ethereum account...');\\n  }\\n};\\n\\nEthereumLibrary.prototype.disconnectedFromAllChains = function (code, reason) {\\n  this.getLogger().info(`Ethereum Provider is disconnected: ${reason}. Code: ${code}`);\\n};\\n\\nEthereumLibrary.prototype.providerMessage = function (message) {\\n  this.getLogger().info(`Ethereum Provider message: ${message}`);\\n};\\n\\nEthereumLibrary.prototype.getBlockExplorerRegistry = function () {\\n  return this.explorer;\\n};\\n\\nEthereumLibrary.prototype.getNetworkRegistry = function () {\\n  return this.network;\\n};\\n\\nEthereumLibrary.prototype.personalSign = async function (message, provider) {\\n  message = message !== undefined && message !== null && message.trim() !== '' ? message.trim() : null;\\n\\n  if (message == null) {\\n    throw new Error('Undefined Message....');\\n  }\\n\\n  try {\\n    if (provider === undefined || provider == null) {\\n      provider = await this.getEthereumProvider();\\n    }\\n\\n    const account = await this.getAccount(provider);\\n    const signature = await provider.request({\\n      method: 'personal_sign',\\n      params: [message, account]\\n    });\\n    return signature;\\n  } catch (error) {\\n    // EIP 1193 user Rejected Request\\n    if (error.code === 4001) {\\n      const err = new Error('Rejected User Request...');\\n      err.name = 'RejectedUserRequest';\\n      throw err;\\n    }\\n\\n    throw error;\\n  }\\n};\\n\\nEthereumLibrary.prototype.personalRecover = async function (message, signature) {\\n  message = message !== undefined && message !== null && message.trim() !== '' ? message.trim() : null;\\n\\n  if (message == null) {\\n    throw new Error('Undefined Message....');\\n  }\\n\\n  signature = signature !== undefined && signature !== null && signature.trim() !== '' ? signature.trim() : null;\\n\\n  if (signature == null) {\\n    throw new Error('Undefined Signature....');\\n  }\\n\\n  if (typeof globalThis.sigUtil === 'undefined') {\\n    await this.ipfsBundle.loadEthSigUtilLibrary();\\n  }\\n\\n  const msgParams = {\\n    data: message,\\n    sig: signature\\n  };\\n  const recovered = globalThis.sigUtil.recoverPersonalSignature(msgParams);\\n\\n  if (recovered === undefined || recovered == null) {\\n    const err = new Error('Unrecoverable signature...');\\n    err.name = 'UnrecoverableSignature';\\n    throw err;\\n  }\\n\\n  return recovered;\\n};\\n\\nEthereumLibrary.prototype.decrypt = async function (text, provider) {\\n  text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null;\\n\\n  if (text == null) {\\n    throw new Error('Undefined Text....');\\n  }\\n\\n  try {\\n    if (provider === undefined || provider == null) {\\n      provider = await this.getEthereumProvider();\\n    }\\n\\n    const account = await this.getAccount(provider);\\n    var tStart = new Date();\\n    const decryptedText = await provider.request({\\n      method: 'eth_decrypt',\\n      params: [text, account]\\n    });\\n\\n    if (decryptedText !== undefined || decryptedText !== null) {\\n      var tStop = new Date() - tStart;\\n      var ratio = Math.floor(decryptedText.length * 100 / text.length);\\n      this.getLogger().info(`Ethereum Decrypt: ${tStop}ms, In: ${text.length}, Out: ${decryptedText.length}, Ratio: ${ratio}%`);\\n    }\\n\\n    return decryptedText;\\n  } catch (error) {\\n    // EIP 1193 user Rejected Request\\n    if (error.code === 4001) {\\n      const err = new Error('Rejected User Request...');\\n      err.name = 'RejectedUserRequest';\\n      throw err;\\n    }\\n\\n    throw error;\\n  }\\n};\\n\\nEthereumLibrary.prototype.getPublicEncryptionKey = async function (provider, account) {\\n  try {\\n    if (provider === undefined || provider == null) {\\n      provider = await this.getEthereumProvider();\\n    }\\n\\n    if (account === undefined) {\\n      account = await this.getAccount(provider);\\n    }\\n\\n    const encryptionKey = await provider.request({\\n      method: 'eth_getEncryptionPublicKey',\\n      params: [account]\\n    });\\n    return encryptionKey;\\n  } catch (error) {\\n    // EIP 1193 user Rejected Request\\n    if (error.code === 4001) {\\n      const err = new Error('Rejected User Request...');\\n      err.name = 'RejectedUserRequest';\\n      throw err;\\n    }\\n\\n    throw error;\\n  }\\n};\\n/*\\n * https://eips.ethereum.org/EIPS/eip-1102\\n * https://eips.ethereum.org/EIPS/eip-1193\\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md\\n * https://eips.ethereum.org/EIPS/eip-2255\\n * https://docs.metamask.io/guide/ethereum-provider.html#methods-current-api\\n */\\n\\n\\nEthereumLibrary.prototype.detectEthereumProvider = async function () {\\n  var provider = null;\\n\\n  try {\\n    if (typeof globalThis.detectEthereumProvider === 'function') {\\n      provider = await globalThis.detectEthereumProvider({\\n        mustBeMetaMask: true\\n      });\\n\\n      if (provider !== undefined && provider !== null) {\\n        provider.autoRefreshOnNetworkChange = false;\\n      }\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  }\\n\\n  if (provider === undefined || provider == null) {\\n    const err = new Error('Please install ~MetaMask...');\\n    err.name = 'InstallMetamask';\\n    throw err;\\n  }\\n\\n  return provider;\\n};\\n\\nEthereumLibrary.prototype.checkAccountPermission = async function (provider) {\\n  if (provider === undefined || provider == null) {\\n    provider = await this.getEthereumProvider();\\n  }\\n\\n  if (typeof provider.request === 'function') {\\n    const permissions = await provider.request({\\n      method: 'wallet_getPermissions'\\n    });\\n    const accountsPermission = permissions.find(permission => permission.parentCapability === 'eth_accounts');\\n\\n    if (accountsPermission) {\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n};\\n\\nEthereumLibrary.prototype.requestAccountPermission = async function (provider) {\\n  if (provider === undefined || provider == null) {\\n    provider = await this.getEthereumProvider();\\n  }\\n\\n  if (typeof provider.request === 'function') {\\n    const permissions = await provider.request({\\n      method: 'wallet_requestPermissions',\\n      params: [{\\n        eth_accounts: {}\\n      }]\\n    });\\n    const accountsPermission = permissions.find(permission => permission.parentCapability === 'eth_accounts');\\n\\n    if (accountsPermission) {\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n};\\n/*\\n * https://docs.metamask.io/guide/provider-migration.html#migrating-to-the-new-provider-api\\n */\\n\\n\\nEthereumLibrary.prototype.getAccount = async function (provider) {\\n  if (provider === undefined || provider == null) {\\n    provider = await this.getEthereumProvider();\\n  }\\n\\n  try {\\n    var accounts = null;\\n    var permission = false; // Permission Attempt\\n\\n    try {\\n      permission = await this.checkAccountPermission(provider);\\n\\n      if (permission === false) {\\n        permission = await this.requestAccountPermission(provider);\\n      }\\n    } catch (error) {\\n      if (error.code === 4001) {\\n        throw error;\\n      }\\n\\n      this.getLogger().error(error);\\n    } // Request Accounts attempt\\n\\n\\n    try {\\n      if (permission === false || (await provider._metamask.isUnlocked()) === false) {\\n        // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1102.md\\n        accounts = await provider.request({\\n          method: 'eth_requestAccounts'\\n        });\\n      }\\n\\n      if (accounts === undefined || accounts == null || Array.isArray(accounts) === false || accounts.length === 0) {\\n        // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md\\n        accounts = await provider.request({\\n          method: 'eth_accounts'\\n        });\\n      }\\n    } catch (error) {\\n      if (error.code === 4001) {\\n        throw error;\\n      }\\n\\n      this.getLogger().error(error);\\n    } // Enable attempt\\n\\n\\n    if (accounts === undefined || accounts == null || Array.isArray(accounts) === false || accounts.length === 0) {\\n      if (typeof provider.enable === 'function') {\\n        accounts = await provider.enable();\\n      }\\n    }\\n\\n    if (accounts === undefined || accounts == null || Array.isArray(accounts) === false || accounts.length === 0) {\\n      throw new Error('Unable to retrieve any Ethereum accounts...');\\n    }\\n\\n    await this.accounts(provider, accounts);\\n    return accounts[0];\\n  } catch (error) {\\n    // EIP 1193 user Rejected Request\\n    if (error.code === 4001) {\\n      const err = new Error('Rejected User Request...');\\n      err.name = 'RejectedUserRequest';\\n      throw err;\\n    }\\n\\n    throw error;\\n  }\\n};\\n\\nEthereumLibrary.prototype.getEnabledWeb3Provider = async function (provider) {\\n  if (provider === undefined || provider == null) {\\n    provider = await this.getEthereumProvider();\\n  }\\n\\n  if (typeof globalThis.ethers === 'undefined') {\\n    await this.ipfsBundle.loadEthersJsLibrary();\\n  } // Enable provider\\n  // https://github.com/ethers-io/ethers.js/issues/433\\n\\n\\n  const account = await this.getAccount(provider); // Instantiate a Web3Provider\\n\\n  const web3 = new globalThis.ethers.providers.Web3Provider(provider, 'any'); // Retrieve current network\\n\\n  const network = await web3.getNetwork();\\n  const chainId = parseInt(network.chainId, 16);\\n  return {\\n    account: account,\\n    chainId: chainId,\\n    web3: web3\\n  };\\n};\\n\\nEthereumLibrary.prototype.getWeb3Provider = async function (provider) {\\n  if (provider === undefined || provider == null) {\\n    provider = await this.getEthereumProvider();\\n  }\\n\\n  if (typeof globalThis.ethers === 'undefined') {\\n    await this.ipfsBundle.loadEthersJsLibrary();\\n  } // Instantiate an ethers Web3Provider\\n\\n\\n  const web3 = new globalThis.ethers.providers.Web3Provider(provider, 'any'); // Retrieve current network\\n\\n  const network = await web3.getNetwork();\\n  const chainId = parseInt(network.chainId, 16);\\n  return {\\n    web3: web3,\\n    chainId: chainId\\n  };\\n};\\n\\nexports.EthereumLibrary = EthereumLibrary;\\n\\n},{}],4:[function(require,module,exports){\\n'use strict';\\n\\nrequire(\\\"core-js/modules/esnext.map.delete-all.js\\\");\\n\\nrequire(\\\"core-js/modules/esnext.map.every.js\\\");\\n\\nrequire(\\\"core-js/modules/esnext.map.filter.js\\\");\\n\\nrequire(\\\"core-js/modules/esnext.map.find.js\\\");\\n\\nrequire(\\\"core-js/modules/esnext.map.find-key.js\\\");\\n\\nrequire(\\\"core-js/modules/esnext.map.includes.js\\\");\\n\\nrequire(\\\"core-js/modules/esnext.map.key-of.js\\\");\\n\\nrequire(\\\"core-js/modules/esnext.map.map-keys.js\\\");\\n\\nrequire(\\\"core-js/modules/esnext.map.map-values.js\\\");\\n\\nrequire(\\\"core-js/modules/esnext.map.merge.js\\\");\\n\\nrequire(\\\"core-js/modules/esnext.map.reduce.js\\\");\\n\\nrequire(\\\"core-js/modules/esnext.map.some.js\\\");\\n\\nrequire(\\\"core-js/modules/esnext.map.update.js\\\");\\n\\nrequire(\\\"core-js/modules/web.dom-collections.iterator.js\\\");\\n\\nrequire(\\\"core-js/modules/web.url.js\\\");\\n\\nconst CID = require('cids');\\n\\nconst fromString = require('uint8arrays').fromString;\\n\\nconst dagDirectory = fromString('\\\\u0008\\\\u0001');\\n\\nconst getIpfs = require('ipfs-provider').getIpfs;\\n\\nconst Mutex = require('async-mutex').Mutex;\\n\\nconst providers = require('ipfs-provider').providers;\\n\\nconst {\\n  httpClient,\\n  windowIpfs\\n} = providers;\\n/*\\n * https://infura.io/docs\\n * https://cid.ipfs.io\\n * https://github.com/ipfs/js-ipfs/tree/master/docs/core-api\\n **/\\n\\nvar IpfsLibrary = function (ipfsBundle) {\\n  this.ipfsBundle = ipfsBundle;\\n  this.ipfsClients = new Map();\\n  this.mutex = new Mutex();\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n\\n  this.name = 'ipfs-library';\\n};\\n\\nIpfsLibrary.prototype.getLogger = function () {\\n  return this.ipfsBundle.getLogger();\\n};\\n\\nIpfsLibrary.prototype.add = async function (client, content, options) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  if (content === undefined || content == null) {\\n    throw new Error('Undefined content...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['add']\\n    });\\n  }\\n\\n  if (client === undefined || client.add === undefined) {\\n    throw new Error('Undefined IPFS add...');\\n  }\\n\\n  if (options === undefined || options == null) {\\n    options = {\\n      chunker: 'rabin-262144-524288-1048576',\\n      cidVersion: 0,\\n      hashAlg: 'sha2-256',\\n      pin: true,\\n      rawLeaves: false\\n    };\\n  } // 1 - https://github.com/ipfs/go-ipfs/issues/5683\\n  // default chunker: \\\"size-262144\\\"\\n  // chunker: \\\"rabin-262144-524288-1048576\\\"\\n  // 2 - TODO: small content generates an incnsistent cid when cidVersion: 1 is set.\\n  // Not a 'dag-pb' but a 'raw' multicodec instead\\n  // We generate a V0 and convert it to a V1\\n  // https://github.com/xmaysonnave/tiddlywiki-ipfs/issues/14\\n\\n\\n  const result = await client.add(content, options);\\n\\n  if (result === undefined || result == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  var cid = null;\\n\\n  if (result.cid !== undefined && result.cid !== null) {\\n    cid = result.cid;\\n  }\\n\\n  const mode = result.mode;\\n  const mtime = result.mtime;\\n  var path = null;\\n\\n  if (result.path !== undefined && result.path !== null) {\\n    path = result.path;\\n  }\\n\\n  var size = null;\\n\\n  if (result.size !== undefined && result.size !== null) {\\n    size = result.size;\\n  }\\n\\n  if (cid == null || path == null || size == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  const cidV1 = this.ipfsBundle.cidToCidV1(cid, 'ipfs', true);\\n  return {\\n    cid: cidV1,\\n    mode: mode,\\n    mtime: mtime,\\n    path: path,\\n    size: size\\n  };\\n};\\n\\nIpfsLibrary.prototype.addAll = async function (client, content, options) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  if (content === undefined || content == null) {\\n    throw new Error('Undefined content...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['addAll']\\n    });\\n  }\\n\\n  if (client === undefined || client.addAll === undefined) {\\n    throw new Error('Undefined IPFS addAll...');\\n  }\\n\\n  if (options === undefined || options == null) {\\n    options = {\\n      chunker: 'rabin-262144-524288-1048576',\\n      cidVersion: 0,\\n      hashAlg: 'sha2-256',\\n      pin: false,\\n      rawLeaves: false\\n    };\\n  }\\n\\n  const added = new Map();\\n\\n  for await (const result of client.addAll(content, options)) {\\n    if (result === undefined || result == null) {\\n      const err = new Error('IPFS returned an unknown result...');\\n      err.name = 'IPFSUnknownResult';\\n      throw err;\\n    }\\n\\n    var cid = null;\\n\\n    if (result.cid !== undefined && result.cid !== null) {\\n      cid = result.cid;\\n    }\\n\\n    var path = null;\\n\\n    if (result.path !== undefined && result.path !== null) {\\n      path = result.path;\\n    }\\n\\n    const mode = result.mode;\\n    const mtime = result.mtime;\\n    var size = null;\\n\\n    if (result.size !== undefined && result.size !== null) {\\n      size = result.size;\\n    }\\n\\n    if (cid == null || path == null || size == null) {\\n      const err = new Error('IPFS returned an unknown result...');\\n      err.name = 'IPFSUnknownResult';\\n      throw err;\\n    }\\n\\n    const cidV1 = this.ipfsBundle.cidToCidV1(cid);\\n    added.set(cidV1, {\\n      path: path,\\n      mode: mode,\\n      mtime: mtime,\\n      size: size\\n    });\\n  }\\n\\n  return added;\\n};\\n\\nIpfsLibrary.prototype.analyzePinType = function (type) {\\n  type = type !== undefined && type !== null && type.trim() !== '' ? type.trim() : null;\\n\\n  if (type == null) {\\n    return {\\n      parentCid: null,\\n      type: null\\n    };\\n  }\\n\\n  var res = type.split(' ');\\n\\n  if (res.length === 1) {\\n    return {\\n      parentCid: null,\\n      type: res[0]\\n    };\\n  }\\n\\n  if (res.length !== 3 && res.length !== 4) {\\n    throw new Error(`Unknown pin type: ${type}`);\\n  }\\n\\n  const index = res.length % 3;\\n\\n  if (res[index] !== 'indirect') {\\n    throw new Error(`Unknown pin type: ${type}`);\\n  }\\n\\n  if (res[index + 1] !== 'through') {\\n    throw new Error(`Unknown pin type: ${type}`);\\n  }\\n\\n  const parentCid = this.ipfsBundle.getCid(res[index + 2]);\\n\\n  if (parentCid == null) {\\n    throw new Error(`Unknown pin type: ${type}`);\\n  }\\n\\n  return {\\n    parentCid: parentCid,\\n    type: res[0]\\n  };\\n};\\n\\nIpfsLibrary.prototype.dagGet = async function (client, cid, options) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  cid = cid !== undefined && cid !== null && cid.toString().trim() !== '' ? new CID(cid.toString().trim()) : null;\\n\\n  if (cid == null) {\\n    throw new Error('Undefined IPFS identifier...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['dag']\\n    });\\n  }\\n\\n  if (client === undefined || client.dag === undefined || client.dag.get === undefined) {\\n    throw new Error('Undefined IPFS dag get...');\\n  }\\n\\n  if (options === undefined || options == null) {\\n    options = {\\n      localResolve: false\\n    };\\n  }\\n\\n  const result = await client.dag.get(cid, options);\\n\\n  if (result === undefined || result == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  return result;\\n}; // https://discuss.ipfs.io/t/what-is-the-data-in-object/5221\\n// https://github.com/ipfs/go-unixfs/blob/master/pb/unixfs.pb.go\\n\\n\\nIpfsLibrary.prototype.dagPut = async function (client, dagNode, options) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  if (dagNode === undefined || dagNode == null) {\\n    throw new Error('Undefined DAG node...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['dag']\\n    });\\n  }\\n\\n  if (client === undefined || client.dag === undefined || client.dag.put === undefined) {\\n    throw new Error('Undefined IPFS dag put...');\\n  }\\n\\n  if (options === undefined || options == null) {\\n    options = {\\n      format: 'dag-pb',\\n      hashAlg: 'sha2-256',\\n      pin: false\\n    };\\n  }\\n\\n  const result = await client.dag.put(dagNode, options);\\n\\n  if (result === undefined || result == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  const stat = await this.objectStat(client, result, options.timeout);\\n  const cidV1 = this.ipfsBundle.cidToCidV1(result);\\n  return {\\n    cid: `${cidV1}`,\\n    size: stat.CumulativeSize\\n  };\\n};\\n\\nIpfsLibrary.prototype.dagResolve = async function (client, ipfsPath, timeout) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  ipfsPath = ipfsPath !== undefined && ipfsPath !== null && ipfsPath.trim() !== '' ? ipfsPath.trim() : null;\\n\\n  if (ipfsPath == null) {\\n    throw new Error('Undefined IPFS path...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['dag']\\n    });\\n  }\\n\\n  if (client === undefined || client.dag === undefined || client.dag.resolve === undefined) {\\n    throw new Error('Undefined IPFS dag resolve...');\\n  }\\n\\n  timeout = timeout !== undefined && timeout !== null ? timeout : null;\\n  var result = null;\\n\\n  if (timeout == null) {\\n    result = await client.dag.resolve(ipfsPath);\\n  } else {\\n    result = await client.dag.resolve(ipfsPath, {\\n      timeout: timeout\\n    });\\n  }\\n\\n  if (result === undefined || result == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  var cid = null;\\n\\n  if (result.cid !== undefined && result.cid !== null) {\\n    cid = result.cid;\\n  }\\n\\n  var remainderPath = null;\\n\\n  if (result.remainderPath !== undefined && result.remainderPath !== null) {\\n    remainderPath = result.remainderPath;\\n  }\\n\\n  if (cid == null || remainderPath == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  const cidV1 = this.ipfsBundle.cidToCidV1(cid);\\n  return {\\n    cid: cidV1,\\n    remainderPath: remainderPath\\n  };\\n};\\n\\nIpfsLibrary.prototype.filesStat = async function (client, ipfsPath, timeout) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  ipfsPath = ipfsPath !== undefined && ipfsPath !== null && ipfsPath.trim() !== '' ? ipfsPath.trim() : null;\\n\\n  if (ipfsPath == null) {\\n    throw new Error('Undefined IPFS path...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['files']\\n    });\\n  }\\n\\n  if (client === undefined || client.files === undefined || client.files.stat === undefined) {\\n    throw new Error('Undefined IPFS files stat...');\\n  }\\n\\n  timeout = timeout !== undefined && timeout !== null ? timeout : null;\\n  var result = null;\\n\\n  if (timeout == null) {\\n    result = await client.files.stat(ipfsPath);\\n  } else {\\n    result = await client.files.stat(ipfsPath, {\\n      timeout: timeout\\n    });\\n  }\\n\\n  if (result === undefined || result == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  var cid = null;\\n\\n  if (result.cid !== undefined && result.cid !== null) {\\n    cid = result.cid;\\n  }\\n\\n  var blocks = null;\\n\\n  if (result.blocks !== undefined && result.blocks !== null) {\\n    blocks = result.blocks;\\n  }\\n\\n  var cumulativeSize = null;\\n\\n  if (result.cumulativeSize !== undefined && result.cumulativeSize !== null) {\\n    cumulativeSize = result.cumulativeSize;\\n  }\\n\\n  var local = null;\\n\\n  if (result.local !== undefined && result.local !== null) {\\n    local = result.local;\\n  }\\n\\n  var size = null;\\n\\n  if (result.size !== undefined && result.size !== null) {\\n    size = result.size;\\n  }\\n\\n  var sizeLocal = null;\\n\\n  if (result.sizeLocal !== undefined && result.sizeLocal !== null) {\\n    sizeLocal = result.sizeLocal;\\n  }\\n\\n  var type = null;\\n\\n  if (result.type !== undefined && result.type !== null) {\\n    type = result.type;\\n  }\\n\\n  var withLocality = null;\\n\\n  if (result.withLocality !== undefined && result.withLocality !== null) {\\n    withLocality = result.withLocality;\\n  }\\n\\n  if (cid == null || blocks == null || cumulativeSize == null || size == null || type == null || withLocality == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  if (withLocality) {\\n    if (local == null || sizeLocal == null) {\\n      const err = new Error('IPFS returned an unknown result...');\\n      err.name = 'IPFSUnknownResult';\\n      throw err;\\n    }\\n  }\\n\\n  const cidV1 = this.ipfsBundle.cidToCidV1(cid);\\n  return {\\n    cid: cidV1,\\n    blocks: blocks,\\n    cumulativeSize: cumulativeSize,\\n    local: local,\\n    size: size,\\n    sizeLocal: sizeLocal,\\n    type: type,\\n    withLocality: withLocality\\n  };\\n}; // https://github.com/ipfs/interface-js-ipfs-core/blob/master/SPEC/KEY.md#keygen\\n// https://github.com/libp2p/js-libp2p-crypto/issues/145\\n\\n\\nIpfsLibrary.prototype.genKey = async function (client, ipnsName) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  ipnsName = ipnsName !== undefined && ipnsName !== null && ipnsName.trim() !== '' ? ipnsName.trim() : null;\\n\\n  if (ipnsName == null) {\\n    throw new Error('Undefined IPNS name...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['key']\\n    });\\n  }\\n\\n  if (client === undefined || client.key === undefined || client.key.gen === undefined) {\\n    throw new Error('Undefined IPFS key gen...');\\n  }\\n\\n  const key = await client.key.gen(ipnsName, {\\n    type: 'ed25519'\\n  });\\n\\n  if (key === undefined || key == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  var keyId = null;\\n\\n  if (key.id !== undefined && key.id !== null) {\\n    keyId = key.id;\\n  }\\n\\n  if (keyId == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  return keyId;\\n};\\n\\nIpfsLibrary.prototype.get = async function (client, ipfsPath, timeout) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  ipfsPath = ipfsPath !== undefined && ipfsPath !== null && ipfsPath.trim() !== '' ? ipfsPath.trim() : null;\\n\\n  if (ipfsPath == null) {\\n    throw new Error('Undefined IPFS path...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['get']\\n    });\\n  }\\n\\n  if (client === undefined || client.get === undefined) {\\n    throw new Error('Undefined IPFS get...');\\n  }\\n\\n  timeout = timeout !== undefined && timeout !== null ? timeout : null;\\n  const content = [];\\n\\n  if (timeout == null) {\\n    for await (const file of client.get(ipfsPath)) {\\n      if (file.content === undefined || file.content == null) {\\n        const err = new Error('IPFS returned an unknown result...');\\n        err.name = 'IPFSUnknownResult';\\n        throw err;\\n      }\\n\\n      for await (const chunk of file.content) {\\n        content.push(chunk);\\n      }\\n    }\\n  } else {\\n    for await (const file of client.get(ipfsPath, {\\n      timeout: timeout\\n    })) {\\n      if (file.content === undefined || file.content == null) {\\n        const err = new Error('IPFS returned an unknown result...');\\n        err.name = 'IPFSUnknownResult';\\n        throw err;\\n      }\\n\\n      for await (const chunk of file.content) {\\n        content.push(chunk);\\n      }\\n    }\\n  }\\n\\n  return content;\\n}; // Default\\n\\n\\nIpfsLibrary.prototype.getDefaultIpfs = async function (apiUrl) {\\n  // IPFS Companion first\\n  try {\\n    const {\\n      ipfs,\\n      provider\\n    } = await this.getWindowIpfs();\\n\\n    if (ipfs !== null) {\\n      return {\\n        ipfs: ipfs,\\n        provider: provider\\n      };\\n    }\\n  } catch (error) {// IPFS Companion failed\\n  } // Load IpfsHttpClient\\n\\n\\n  try {\\n    const {\\n      ipfs,\\n      provider\\n    } = await this.getHttpIpfs(apiUrl);\\n\\n    if (ipfs !== null) {\\n      return {\\n        ipfs: ipfs,\\n        provider: provider\\n      };\\n    }\\n  } catch (error) {// IPFS HTTP client failed\\n  }\\n\\n  throw new Error('Unable to retrieve IPFS Companion and IPFS API URL...');\\n}; // ipfs-http-client\\n\\n\\nIpfsLibrary.prototype.getHttpIpfs = async function (apiUrl) {\\n  apiUrl = apiUrl !== undefined && apiUrl !== null && apiUrl.toString().trim() !== '' ? apiUrl : null;\\n\\n  if (apiUrl == null) {\\n    throw new Error('Undefined IPFS API URL...');\\n  }\\n\\n  if (apiUrl instanceof URL === false) {\\n    apiUrl = this.ipfsBundle.getUrl(apiUrl);\\n  }\\n\\n  const self = this;\\n\\n  try {\\n    // if (typeof globalThis.IpfsHttpClient === 'undefined') {\\n    //   await this.ipfsBundle.loadIpfsHttpLibrary()\\n    // }\\n    const client = this.ipfsClients.get(apiUrl.toString());\\n\\n    if (client !== undefined) {\\n      return {\\n        ipfs: client.ipfs,\\n        provider: client.provider\\n      };\\n    }\\n\\n    const {\\n      ipfs,\\n      provider\\n    } = await this.mutex.runExclusive(async () => {\\n      const protocol = apiUrl.protocol.slice(0, -1);\\n      var port = apiUrl.port;\\n\\n      if (port === undefined || port == null || port.trim() === '') {\\n        port = 443;\\n\\n        if (protocol === 'http') {\\n          port = 80;\\n        }\\n      }\\n\\n      const client = self.ipfsClients.get(apiUrl.toString());\\n\\n      if (client !== undefined) {\\n        return {\\n          ipfs: client.ipfs,\\n          provider: client.provider\\n        };\\n      }\\n\\n      const {\\n        ipfs,\\n        provider\\n      } = await getIpfs({\\n        providers: [httpClient({\\n          loadHttpClientModule: () => require('ipfs-http-client'),\\n          apiAddress: {\\n            protocol: protocol,\\n            host: apiUrl.hostname,\\n            port: port,\\n            timeout: 4 * 60 * 1000\\n          }\\n        })]\\n      });\\n      self.ipfsClients.set(apiUrl.toString(), {\\n        ipfs,\\n        provider\\n      });\\n      $tw.ipfs.getLogger().info(`New IPFS provider: \\\"${apiUrl}\\\"`);\\n      return {\\n        ipfs: ipfs,\\n        provider: provider\\n      };\\n    });\\n    return {\\n      ipfs: ipfs,\\n      provider: `${provider}, ${apiUrl}`\\n    };\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  }\\n}; // IPFS companion\\n\\n\\nIpfsLibrary.prototype.getWindowIpfs = async function () {\\n  try {\\n    this.getLogger().info('Processing connection to IPFS Companion...');\\n    const {\\n      ipfs,\\n      provider\\n    } = await getIpfs({\\n      providers: [windowIpfs()]\\n    });\\n    return {\\n      ipfs: ipfs,\\n      provider: provider\\n    };\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  }\\n\\n  throw new Error('Unreachable IPFS Companion...');\\n};\\n\\nIpfsLibrary.prototype.hasPin = async function (client, key, type, ipfsPath) {\\n  try {\\n    if (ipfsPath) {\\n      ipfsPath = `${key}${ipfsPath}`;\\n    } else {\\n      ipfsPath = key;\\n    }\\n\\n    for await (var {\\n      cid,\\n      type: fetchedType\\n    } of client.pin.ls({\\n      paths: [ipfsPath]\\n    })) {\\n      if (cid !== undefined && cid !== null) {\\n        var {\\n          type: fetchedType,\\n          parentCid\\n        } = this.analyzePinType(fetchedType);\\n        const cidV1 = this.ipfsBundle.cidToCidV1(cid);\\n        const parentCidV1 = parentCid !== null ? this.ipfsBundle.cidToCidV1(parentCid) : null;\\n\\n        if (type) {\\n          if (type === fetchedType) {\\n            return {\\n              cid: cidV1,\\n              parentCid: parentCidV1,\\n              type: type\\n            };\\n          }\\n        }\\n\\n        return {\\n          cid: cidV1,\\n          parentCid: parentCidV1,\\n          type: fetchedType\\n        };\\n      }\\n    }\\n  } catch (error) {// Ignore\\n  }\\n\\n  return {\\n    cid: '',\\n    parentCid: null,\\n    type: ''\\n  };\\n};\\n\\nIpfsLibrary.prototype.isIpfsDirectory = async function (client, cid, timeout) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  cid = cid !== undefined && cid !== null && cid.toString().trim() !== '' ? new CID(cid.toString().trim()) : null;\\n\\n  if (cid == null) {\\n    throw new Error('Undefined IPFS identifier...');\\n  }\\n\\n  timeout = timeout !== undefined && timeout !== null ? timeout : null;\\n  var stat = null;\\n\\n  if (timeout == null) {\\n    stat = await this.objectStat(client, cid);\\n  } else {\\n    stat = await this.objectStat(client, cid, timeout);\\n  }\\n\\n  if (stat.DataSize === 2) {\\n    var ua = null;\\n\\n    if (timeout == null) {\\n      ua = await this.objectData(client, cid);\\n    } else {\\n      ua = await this.objectData(client, cid, timeout);\\n    }\\n\\n    if (ua.byteLength !== dagDirectory.byteLength) return false;\\n    return ua.every((val, i) => val === dagDirectory[i]);\\n  }\\n\\n  return false;\\n};\\n\\nIpfsLibrary.prototype.keyList = async function (client) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['key']\\n    });\\n  }\\n\\n  if (client === undefined || client.key === undefined || client.key.list === undefined) {\\n    throw new Error('Undefined IPFS key list...');\\n  }\\n\\n  const result = await client.key.list();\\n\\n  if (result === undefined || result == null || Array.isArray(result) === false) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  return result;\\n};\\n\\nIpfsLibrary.prototype.keyRename = async function (client, oldIpnsName, newIpnsName) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  oldIpnsName = oldIpnsName !== undefined && oldIpnsName !== null || oldIpnsName.trim() !== '' ? oldIpnsName.trim() : null;\\n\\n  if (oldIpnsName == null) {\\n    throw new Error('Undefined Old IPNS name...');\\n  }\\n\\n  newIpnsName = newIpnsName !== undefined && newIpnsName !== null && newIpnsName.trim() !== '' ? newIpnsName.trim() : null;\\n\\n  if (newIpnsName == null) {\\n    throw new Error('Undefined New IPNS name...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['key']\\n    });\\n  }\\n\\n  if (client === undefined || client.key === undefined || client.key.rename === undefined) {\\n    throw new Error('Undefined IPFS key rename...');\\n  }\\n\\n  const key = await client.key.rename(oldIpnsName, newIpnsName);\\n\\n  if (key === undefined || key == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  var keyId = null;\\n\\n  if (key.id !== undefined && key.id !== null) {\\n    keyId = key.id;\\n  }\\n\\n  var was = null;\\n\\n  if (key.was !== undefined && key.was !== null) {\\n    was = key.was;\\n  }\\n\\n  var now = null;\\n\\n  if (key.now !== undefined && key.now !== null) {\\n    now = key.now;\\n  }\\n\\n  var overwrite = null;\\n\\n  if (key.overwrite !== undefined && key.overwrite !== null) {\\n    overwrite = key.overwrite;\\n  }\\n\\n  if (keyId == null || was == null || now == null || overwrite == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  return {\\n    keyId: keyId,\\n    was: was,\\n    now: now,\\n    overwrite: overwrite\\n  };\\n};\\n\\nIpfsLibrary.prototype.ls = async function (client, ipfsPath) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  ipfsPath = ipfsPath !== undefined && ipfsPath !== null && ipfsPath.trim() !== '' ? ipfsPath.trim() : null;\\n\\n  if (ipfsPath == null) {\\n    throw new Error('Undefined IPFS path...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['ls']\\n    });\\n  }\\n\\n  if (client === undefined || client.ls === undefined) {\\n    throw new Error('Undefined IPFS ls...');\\n  }\\n\\n  const content = new Map();\\n\\n  for await (const result of client.ls(ipfsPath)) {\\n    if (result === undefined || result == null) {\\n      const err = new Error('IPFS returned an unknown result...');\\n      err.name = 'IPFSUnknownResult';\\n      throw err;\\n    }\\n\\n    var cid = null;\\n\\n    if (result.cid !== undefined && result.cid !== null) {\\n      cid = result.cid;\\n    }\\n\\n    var depth = null;\\n\\n    if (result.depth !== undefined && result.depth !== null) {\\n      depth = result.depth;\\n    }\\n\\n    const mode = result.mode;\\n    const mtime = result.mtime;\\n    var name = null;\\n\\n    if (result.name !== undefined && result.name !== null) {\\n      name = result.name;\\n    }\\n\\n    var path = null;\\n\\n    if (result.path !== undefined && result.path !== null) {\\n      path = result.path;\\n    }\\n\\n    var size = null;\\n\\n    if (result.size !== undefined && result.size !== null) {\\n      size = result.size;\\n    }\\n\\n    var type = null;\\n\\n    if (result.type !== undefined && result.type !== null) {\\n      type = result.type;\\n    }\\n\\n    if (cid == null || depth == null || name == null || path == null || size == null || type == null) {\\n      const err = new Error('IPFS returned an unknown result...');\\n      err.name = 'IPFSUnknownResult';\\n      throw err;\\n    }\\n\\n    const cidV1 = this.ipfsBundle.cidToCidV1(cid);\\n    content.set(cidV1, {\\n      depth: depth,\\n      mode: mode,\\n      mtime: mtime,\\n      name: name,\\n      path: path,\\n      size: size,\\n      type: type\\n    });\\n  }\\n\\n  return content;\\n};\\n\\nIpfsLibrary.prototype.namePublish = async function (client, ipnsName, cid, options) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  ipnsName = ipnsName !== undefined && ipnsName !== null && ipnsName.trim() !== '' ? ipnsName.trim() : null;\\n\\n  if (ipnsName == null) {\\n    throw new Error('Undefined IPNS name...');\\n  }\\n\\n  cid = cid !== undefined && cid !== null && cid.toString().trim() !== '' ? new CID(cid.toString().trim()) : null;\\n\\n  if (cid == null) {\\n    throw new Error('Undefined IPFS identifier...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['name']\\n    });\\n  }\\n\\n  if (client === undefined || client.name === undefined || client.name.publish === undefined) {\\n    throw new Error('Undefined IPFS name publish...');\\n  }\\n\\n  if (options === undefined || options == null) {\\n    options = {\\n      resolve: false,\\n      key: ipnsName,\\n      allowOffline: false\\n    };\\n  }\\n\\n  const result = await client.name.publish(cid, options);\\n\\n  if (result === undefined || result == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  var name = null;\\n\\n  if (result.name !== undefined && result.name !== null) {\\n    name = result.name;\\n  }\\n\\n  var value = null;\\n\\n  if (result.value !== undefined && result.value !== null) {\\n    value = result.value;\\n  }\\n\\n  if (name == null || value == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  return {\\n    name: name,\\n    value: value\\n  };\\n};\\n\\nIpfsLibrary.prototype.nameResolve = async function (client, value, options) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  value = value !== undefined && value !== null && value.trim() !== '' ? value.trim() : null;\\n\\n  if (value == null) {\\n    throw new Error('Undefined IPNS address...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['name']\\n    });\\n  }\\n\\n  if (client === undefined || client.name === undefined || client.name.resolve === undefined) {\\n    throw new Error('Undefined IPFS name resolve...');\\n  }\\n\\n  if (options === undefined || options == null) {\\n    options = {\\n      nocache: false,\\n      recursive: true\\n    };\\n  }\\n\\n  const resolvedPaths = await client.name.resolve(value, options);\\n\\n  if (resolvedPaths === undefined || resolvedPaths == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  var lastPath = null; // https://gist.github.com/alanshaw/04b2ddc35a6fff25c040c011ac6acf26\\n\\n  for await (const path of resolvedPaths) {\\n    lastPath = path !== undefined || path !== null ? path : null;\\n  }\\n\\n  if (lastPath == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  return lastPath;\\n};\\n\\nIpfsLibrary.prototype.objectData = async function (client, cid, timeout) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  cid = cid !== undefined && cid !== null && cid.toString().trim() !== '' ? new CID(cid.toString().trim()) : null;\\n\\n  if (cid == null) {\\n    throw new Error('Undefined IPFS identifier...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['object']\\n    });\\n  }\\n\\n  if (client === undefined || client.object === undefined || client.object.data === undefined) {\\n    throw new Error('Undefined IPFS object data...');\\n  }\\n\\n  timeout = timeout !== undefined && timeout !== null ? timeout : null;\\n  var ua = null;\\n\\n  if (timeout == null) {\\n    ua = await client.object.data(cid);\\n  } else {\\n    ua = await client.object.data(cid, {\\n      timeout: timeout\\n    });\\n  }\\n\\n  if (ua === undefined || ua == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  return ua;\\n};\\n\\nIpfsLibrary.prototype.objectStat = async function (client, cid, timeout) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  cid = cid !== undefined && cid !== null && cid.toString().trim() !== '' ? new CID(cid.toString().trim()) : null;\\n\\n  if (cid == null) {\\n    throw new Error('Undefined IPFS identifier...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['object']\\n    });\\n  }\\n\\n  if (client === undefined || client.object === undefined || client.object.stat === undefined) {\\n    throw new Error('Undefined IPFS object stat...');\\n  }\\n\\n  timeout = timeout !== undefined && timeout !== null ? timeout : null;\\n  var stat = null;\\n\\n  if (timeout == null) {\\n    stat = await client.object.stat(cid);\\n  } else {\\n    stat = await client.object.stat(cid, {\\n      timeout: timeout\\n    });\\n  }\\n\\n  if (stat === undefined || stat == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  var Hash = null;\\n\\n  if (stat.Hash !== undefined && stat.Hash !== null) {\\n    Hash = stat.Hash;\\n  }\\n\\n  var NumLinks = null;\\n\\n  if (stat.NumLinks !== undefined && stat.NumLinks !== null) {\\n    NumLinks = stat.NumLinks;\\n  }\\n\\n  var BlockSize = null;\\n\\n  if (stat.BlockSize !== undefined && stat.BlockSize !== null) {\\n    BlockSize = stat.BlockSize;\\n  }\\n\\n  var LinksSize = null;\\n\\n  if (stat.LinksSize !== undefined && stat.LinksSize !== null) {\\n    LinksSize = stat.LinksSize;\\n  }\\n\\n  var DataSize = null;\\n\\n  if (stat.DataSize !== undefined && stat.DataSize !== null) {\\n    DataSize = stat.DataSize;\\n  }\\n\\n  var CumulativeSize = null;\\n\\n  if (stat.CumulativeSize !== undefined && stat.CumulativeSize !== null) {\\n    CumulativeSize = stat.CumulativeSize;\\n  }\\n\\n  if (Hash == null || NumLinks == null || BlockSize == null || LinksSize == null || DataSize == null || CumulativeSize == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  const cidV1 = this.ipfsBundle.cidToCidV1(Hash);\\n  return {\\n    Hash: cidV1,\\n    NumLinks: NumLinks,\\n    BlockSize: BlockSize,\\n    LinksSize: LinksSize,\\n    DataSize: DataSize,\\n    CumulativeSize: CumulativeSize\\n  };\\n};\\n\\nIpfsLibrary.prototype.pinAdd = async function (client, cid, options) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  cid = cid !== undefined && cid !== null && cid.toString().trim() !== '' ? new CID(cid.toString().trim()) : null;\\n\\n  if (cid == null) {\\n    throw new Error('Undefined IPFS identifier...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['pin']\\n    });\\n  }\\n\\n  if (client === undefined || client.pin === undefined || client.pin.add === undefined) {\\n    throw new Error('Undefined IPFS pin add...');\\n  }\\n\\n  if (options === undefined || options == null) {\\n    options = {\\n      recursive: true\\n    };\\n  }\\n\\n  const result = await client.pin.add(cid, options);\\n\\n  if (result === undefined || result == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  return this.ipfsBundle.cidToCidV1(result, 'ipfs', true);\\n};\\n\\nIpfsLibrary.prototype.pinRm = async function (client, cid, options) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  cid = cid !== undefined && cid !== null && cid.toString().trim() !== '' ? new CID(cid.toString().trim()) : null;\\n\\n  if (cid == null) {\\n    throw new Error('Undefined IPFS identifier...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['pin']\\n    });\\n  }\\n\\n  if (client === undefined || client.pin === undefined || client.pin.rm === undefined) {\\n    throw new Error('Undefined IPFS pin rm...');\\n  }\\n\\n  if (options === undefined || options == null) {\\n    options = {\\n      recursive: true\\n    };\\n  }\\n\\n  const result = await client.pin.rm(cid, options);\\n\\n  if (result === undefined || result == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  return this.ipfsBundle.cidToCidV1(result, 'ipfs', true);\\n};\\n\\nIpfsLibrary.prototype.rmKey = async function (client, ipnsName) {\\n  if (client === undefined || client == null) {\\n    throw new Error('Undefined IPFS provider...');\\n  }\\n\\n  ipnsName = ipnsName !== undefined && ipnsName !== null && ipnsName.trim() !== '' ? ipnsName.trim() : null;\\n\\n  if (ipnsName == null) {\\n    throw new Error('Undefined IPNS name...');\\n  }\\n\\n  if (client.enable) {\\n    client = await client.enable({\\n      commands: ['key']\\n    });\\n  }\\n\\n  if (client === undefined || client.key === undefined || client.key.rm === undefined) {\\n    throw new Error('Undefined IPFS key rm...');\\n  }\\n\\n  const key = await client.key.rm(ipnsName);\\n\\n  if (key === undefined || key == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  var keyId = null;\\n\\n  if (key.id !== undefined && key.id !== null) {\\n    keyId = key.id;\\n  }\\n\\n  if (keyId == null) {\\n    const err = new Error('IPFS returned an unknown result...');\\n    err.name = 'IPFSUnknownResult';\\n    throw err;\\n  }\\n\\n  return keyId;\\n};\\n\\nexports.IpfsLibrary = IpfsLibrary;\\n\\n},{\\\"async-mutex\\\":14,\\\"cids\\\":53,\\\"core-js/modules/esnext.map.delete-all.js\\\":172,\\\"core-js/modules/esnext.map.every.js\\\":173,\\\"core-js/modules/esnext.map.filter.js\\\":174,\\\"core-js/modules/esnext.map.find-key.js\\\":175,\\\"core-js/modules/esnext.map.find.js\\\":176,\\\"core-js/modules/esnext.map.includes.js\\\":177,\\\"core-js/modules/esnext.map.key-of.js\\\":178,\\\"core-js/modules/esnext.map.map-keys.js\\\":179,\\\"core-js/modules/esnext.map.map-values.js\\\":180,\\\"core-js/modules/esnext.map.merge.js\\\":181,\\\"core-js/modules/esnext.map.reduce.js\\\":182,\\\"core-js/modules/esnext.map.some.js\\\":183,\\\"core-js/modules/esnext.map.update.js\\\":184,\\\"core-js/modules/web.dom-collections.iterator.js\\\":185,\\\"core-js/modules/web.url.js\\\":187,\\\"ipfs-http-client\\\":323,\\\"ipfs-provider\\\":403,\\\"uint8arrays\\\":582}],5:[function(require,module,exports){\\n'use strict';\\n\\nrequire(\\\"core-js/modules/web.url.js\\\");\\n\\nrequire(\\\"core-js/modules/web.dom-collections.iterator.js\\\");\\n\\nrequire(\\\"core-js/modules/es.typed-array.uint8-array.js\\\");\\n\\nconst Mutex = require('async-mutex').Mutex;\\n\\nvar IpfsLoader = function (ipfsBundle) {\\n  this.ipfsBundle = ipfsBundle;\\n  this.mutex = new Mutex();\\n  this.name = 'ipfs-loader';\\n};\\n\\nIpfsLoader.prototype.getLogger = function () {\\n  return this.ipfsBundle.getLogger();\\n}; // https://github.com/liriliri/eruda\\n\\n\\nIpfsLoader.prototype.loadErudaLibrary = async function () {\\n  if (typeof globalThis.eruda === 'undefined') {\\n    await this.loadTiddlerLibrary('$:/ipfs/library/eruda', 'eruda', true);\\n  }\\n}; // https://github.com/ethers-io/ethers.js/\\n\\n\\nIpfsLoader.prototype.loadEtherJsLibrary = async function () {\\n  if (typeof globalThis.ethers === 'undefined') {\\n    await this.loadTiddlerLibrary('$:/ipfs/library/ethers', 'ethers', true);\\n  }\\n}; // https://github.com/xmaysonnave/eth-sig-util\\n\\n\\nIpfsLoader.prototype.loadEthSigUtilLibrary = async function () {\\n  if (typeof globalThis.sigUtil === 'undefined') {\\n    await this.loadTiddlerLibrary('$:/ipfs/library/eth-sig-util', 'sigUtil', true);\\n  }\\n}; // https://github.com/ipfs/js-ipfs-http-client\\n\\n\\nIpfsLoader.prototype.loadIpfsHttpLibrary = async function () {\\n  if (typeof globalThis.IpfsHttpClient === 'undefined') {\\n    await this.loadTiddlerLibrary('$:/ipfs/library/ipfs-http-client', 'IpfsHttpClient', true);\\n  }\\n};\\n/*eslint no-new:\\\"off\\\",no-new-func:\\\"off\\\"*/\\n\\n\\nIpfsLoader.prototype.supportDynamicImport = function () {\\n  try {\\n    new Function('import(\\\"\\\")');\\n    return true;\\n  } catch (error) {\\n    return false;\\n  }\\n}; // https://www.srihash.org/\\n\\n\\nIpfsLoader.prototype.loadTiddlerLibrary = async function (title, obj, isModule) {\\n  if (globalThis[obj] !== undefined && globalThis[obj] !== null) {\\n    return;\\n  }\\n\\n  const self = this;\\n  const tiddler = $tw.wiki.getTiddler(title);\\n\\n  if (tiddler === undefined || tiddler == null) {\\n    throw new Error(`Undefined Library: ${title}`);\\n  }\\n\\n  const sourceUri = tiddler.fields._source_uri;\\n  const sourceSri = tiddler.fields._source_sri;\\n  await this.mutex.runExclusive(async () => {\\n    if (globalThis[obj] === undefined || globalThis[obj] == null) {\\n      const loaded = await self.loadLibrary(title, sourceUri, sourceSri, isModule);\\n\\n      if (loaded !== undefined && loaded !== null && globalThis[obj] !== undefined && globalThis[obj] !== null) {\\n        self.getLogger().info(`Loaded ${title}:\\n ${sourceUri}`);\\n        return;\\n      }\\n\\n      throw new Error(`Unable to load Library: ${title}`);\\n    }\\n  });\\n}; // https://observablehq.com/@bryangingechen/dynamic-import-polyfill\\n\\n\\nIpfsLoader.prototype.loadLibrary = function (id, url, sri, isModule) {\\n  // Dynamic import\\n  // if (this.supportDynamicImport()) {\\n  //   try {\\n  //     return new Function(`return import(\\\"${url}\\\")`)();\\n  //   } catch (error) {\\n  //     // Ignore\\n  //   }\\n  // }\\n  const self = this;\\n  return new Promise((resolve, reject) => {\\n    // Process\\n    const script = globalThis.document.createElement('script'); // Functions\\n\\n    const cleanup = () => {\\n      try {\\n        delete globalThis[id];\\n        script.onerror = null;\\n        script.onload = null;\\n        script.remove();\\n        URL.revokeObjectURL(script.src);\\n        script.src = '';\\n      } catch (error) {\\n        self.getLogger().error(error);\\n      }\\n    };\\n\\n    script.onload = () => {\\n      resolve(globalThis[id]);\\n      cleanup();\\n    };\\n\\n    script.onerror = () => {\\n      reject(new Error(`Failed to load: ${url}`));\\n      cleanup();\\n    }; // Attributes\\n\\n\\n    if (isModule) {\\n      script.type = 'module';\\n    } else {\\n      script.type = 'text/javascript';\\n    }\\n\\n    script.id = id;\\n    script.async = false;\\n    script.defer = 'defer';\\n\\n    if (sri) {\\n      script.integrity = sri;\\n    }\\n\\n    script.crossOrigin = 'anonymous'; // URL\\n\\n    script.src = url; // Load\\n\\n    globalThis.document.head.appendChild(script);\\n  });\\n};\\n\\nIpfsLoader.prototype.isJson = function (content) {\\n  if (content !== undefined && content !== null && typeof content === 'string') {\\n    try {\\n      JSON.parse(content);\\n      return true;\\n    } catch (error) {// Ignore\\n    }\\n  }\\n\\n  return false;\\n};\\n\\nIpfsLoader.prototype.fetchUint8Array = async function (url) {\\n  var options = null;\\n\\n  try {\\n    options = await fetch(url, {\\n      method: 'options'\\n    });\\n  } catch (error) {// Ignore\\n  }\\n\\n  try {\\n    const response = await fetch(options && options.ok && options.url ? options.url : url);\\n\\n    if (response.ok) {\\n      const ab = await response.arrayBuffer();\\n      const ua = new Uint8Array(ab);\\n      this.getLogger().info(`[${response.status}] Loaded:\\n ${response.url}`);\\n      return ua;\\n    }\\n\\n    throw new Error(`[${response.status}] ${$tw.language.getString('NetworkError/Fetch')}`);\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  }\\n\\n  throw new Error(`${$tw.language.getString('NetworkError/Fetch')}`);\\n};\\n\\nIpfsLoader.prototype.xhrToJson = async function (url) {\\n  return await this.httpRequest(url, 'post', 'json');\\n};\\n\\nIpfsLoader.prototype.xhrToUint8Array = async function (url) {\\n  return await this.httpRequest(url, 'get', 'arraybuffer');\\n};\\n\\nIpfsLoader.prototype.httpRequest = function (url, method, responseType) {\\n  const self = this;\\n  const xhr = new XMLHttpRequest();\\n  return new Promise(function (resolve, reject) {\\n    xhr.responseType = responseType;\\n\\n    xhr.onreadystatechange = function () {\\n      if (xhr.readyState === 4 && xhr.status !== 0) {\\n        if (xhr.status >= 300) {\\n          reject(new Error($tw.language.getString('NetworkError/Fetch')));\\n          return;\\n        }\\n\\n        try {\\n          var result = null;\\n\\n          if (responseType === 'arraybuffer') {\\n            result = new Uint8Array(this.response);\\n          } else {\\n            result = this.response;\\n          }\\n\\n          self.getLogger().info(`[${xhr.status}] Loaded:\\n ${xhr.responseURL}`);\\n          resolve(result);\\n        } catch (error) {\\n          reject(error);\\n        }\\n      }\\n    };\\n\\n    xhr.onerror = function () {\\n      reject(new Error($tw.language.getString('NetworkError/Fetch')));\\n    };\\n\\n    try {\\n      xhr.open(method, url, true);\\n      xhr.send();\\n    } catch (error) {\\n      reject(error);\\n    }\\n  });\\n};\\n\\nIpfsLoader.prototype.checkMessage = async function (message, keccak256, signature) {\\n  message = message !== undefined && message !== null && message.trim() !== '' ? message.trim() : null;\\n\\n  if (message == null) {\\n    throw new Error('Undefined encrypted content...');\\n  }\\n\\n  if (keccak256) {\\n    const hash = $tw.crypto.keccak256(message);\\n\\n    if (keccak256 !== hash) {\\n      throw new Error('Tampered encrypted content, signature do not match...');\\n    }\\n  }\\n\\n  if (signature) {\\n    try {\\n      const recovered = await this.ipfsBundle.personalRecover(keccak256, signature);\\n      $tw.ipfs.getLogger().info(`Signed from: https://app.ens.domains/address/${recovered}`);\\n      $tw.utils.alert(this.name, `Signed from: <a class=\\\"tc-tiddlylink-external\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\" href=\\\"https://app.ens.domains/address/${recovered}\\\">${recovered}</a>`);\\n    } catch (error) {\\n      if (error.name === 'UnrecoverableSignature') {\\n        throw new Error(`Tampered encrypted content. ${error.message}`);\\n      }\\n\\n      throw error;\\n    }\\n  }\\n};\\n/**\\n * Load to Base64\\n */\\n\\n\\nIpfsLoader.prototype.loadToBase64 = async function (url, password) {\\n  url = url !== undefined && url !== null && url.toString().trim() !== '' ? url.toString().trim() : null;\\n\\n  if (url == null) {\\n    throw new Error('Undefined URL...');\\n  }\\n\\n  password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null;\\n  const ua = await this.fetchUint8Array(url);\\n\\n  if (ua.length === 0) {\\n    return '';\\n  }\\n\\n  var content = this.ipfsBundle.Utf8ArrayToStr(ua);\\n\\n  if (content.match(/{\\\"compressed\\\":/)) {\\n    const json = JSON.parse(content);\\n\\n    if (json.compressed.match(/{\\\"iv\\\":/)) {\\n      if (password == null && $tw.crypto.hasPassword() === false) {\\n        content = await this.decryptFromPasswordPrompt(json.compressed);\\n      } else {\\n        content = $tw.crypto.decrypt(json.compressed, password);\\n      }\\n\\n      content = this.ipfsBundle.inflate(content);\\n    } else if (json.compressed.match(/{\\\"version\\\":/)) {\\n      if (json.signature) {\\n        const signature = await this.ipfsBundle.decrypt(json.signature);\\n        await this.checkMessage(json.compressed, json.keccak256, signature);\\n      }\\n\\n      content = await this.ipfsBundle.decrypt(json.compressed);\\n      content = this.ipfsBundle.inflate(content);\\n    } else {\\n      content = this.ipfsBundle.inflate(json.compressed);\\n    }\\n  } else if (content.match(/{\\\"encrypted\\\":/)) {\\n    const json = JSON.parse(content);\\n\\n    if (json.signature) {\\n      const signature = await this.ipfsBundle.decrypt(json.signature);\\n      await this.checkMessage(json.encrypted, json.keccak256, signature);\\n    }\\n\\n    content = await this.ipfsBundle.decrypt(json.encrypted);\\n    content = btoa(content);\\n  } else if (content.match(/{\\\"iv\\\":/)) {\\n    if (password == null && $tw.crypto.hasPassword() === false) {\\n      content = await this.decryptFromPasswordPrompt(content);\\n    } else {\\n      content = $tw.crypto.decrypt(content, password);\\n    }\\n\\n    content = btoa(content);\\n  } else {\\n    content = this.ipfsBundle.Uint8ArrayToBase64(ua);\\n  }\\n\\n  return content;\\n};\\n/**\\n * Load to UTF-8\\n */\\n\\n\\nIpfsLoader.prototype.loadToUtf8 = async function (url, password) {\\n  url = url !== undefined && url !== null && url.toString().trim() !== '' ? url.toString().trim() : null;\\n\\n  if (url == null) {\\n    throw new Error('Undefined URL...');\\n  }\\n\\n  password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null;\\n  const ua = await this.fetchUint8Array(url);\\n\\n  if (ua.length === 0) {\\n    return '';\\n  }\\n\\n  var content = this.ipfsBundle.Utf8ArrayToStr(ua);\\n\\n  if (content.match(/{\\\"compressed\\\":/)) {\\n    const compressedStoreArea = $tw.utils.extractCompressedStoreArea(content);\\n\\n    if (compressedStoreArea) {\\n      content = compressedStoreArea;\\n    }\\n\\n    const json = JSON.parse(content);\\n\\n    if (json.compressed.match(/{\\\"iv\\\":/)) {\\n      if (password == null && $tw.crypto.hasPassword() === false) {\\n        content = await this.decryptFromPasswordPrompt(json.compressed);\\n      } else {\\n        content = $tw.crypto.decrypt(json.compressed, password);\\n      }\\n\\n      content = this.ipfsBundle.inflate(content);\\n    } else if (json.compressed.match(/{\\\"version\\\":/)) {\\n      if (json.signature) {\\n        const signature = await this.ipfsBundle.decrypt(json.signature);\\n        await this.checkMessage(json.compressed, json.keccak256, signature);\\n      }\\n\\n      content = await this.ipfsBundle.decrypt(json.compressed);\\n      content = this.ipfsBundle.inflate(content);\\n    } else {\\n      content = this.ipfsBundle.inflate(json.compressed);\\n    }\\n  } else if (content.match(/{\\\"encrypted\\\":/)) {\\n    const encryptedStoreArea = $tw.utils.extractEncryptedStoreArea(content);\\n\\n    if (encryptedStoreArea) {\\n      content = encryptedStoreArea;\\n    }\\n\\n    const json = JSON.parse(content);\\n\\n    if (json.signature) {\\n      const signature = await this.ipfsBundle.decrypt(json.signature);\\n      await this.checkMessage(json.encrypted, json.keccak256, signature);\\n    }\\n\\n    content = await this.ipfsBundle.decrypt(json.encrypted);\\n  } else if (content.match(/{\\\"iv\\\":/)) {\\n    const encryptedStoreArea = $tw.utils.extractEncryptedStoreArea(content);\\n\\n    if (encryptedStoreArea) {\\n      content = encryptedStoreArea;\\n    }\\n\\n    if (password == null && $tw.crypto.hasPassword() === false) {\\n      content = await this.decryptFromPasswordPrompt(content);\\n    } else {\\n      content = $tw.crypto.decrypt(content, password);\\n    }\\n  }\\n\\n  return content;\\n};\\n\\nIpfsLoader.prototype.decryptFromPasswordPrompt = function (encrypted) {\\n  return new Promise((resolve, reject) => {\\n    $tw.passwordPrompt.createPrompt({\\n      serviceName: 'Enter a password to decrypt the imported content!!',\\n      noUserName: true,\\n      canCancel: true,\\n      submitText: 'Decrypt',\\n      callback: function (data) {\\n        if (!data) {\\n          return false;\\n        } // Decrypt\\n\\n\\n        try {\\n          const content = $tw.crypto.decrypt(encrypted, data.password);\\n          resolve(content);\\n          return true;\\n        } catch (error) {\\n          reject(error);\\n        }\\n\\n        return false;\\n      }\\n    });\\n  });\\n};\\n\\nexports.IpfsLoader = IpfsLoader;\\n\\n},{\\\"async-mutex\\\":14,\\\"core-js/modules/es.typed-array.uint8-array.js\\\":171,\\\"core-js/modules/web.dom-collections.iterator.js\\\":185,\\\"core-js/modules/web.url.js\\\":187}],6:[function(require,module,exports){\\n'use strict';\\n\\nrequire(\\\"core-js/modules/web.url.js\\\");\\n\\nrequire(\\\"core-js/modules/web.dom-collections.iterator.js\\\");\\n\\nconst filenamify = require('filenamify');\\n\\nvar IpfsUrl = function (ipfsBundle) {\\n  this.ipfsBundle = ipfsBundle;\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n\\n  this.name = 'ipfs-url';\\n};\\n\\nIpfsUrl.prototype.getLogger = function () {\\n  return this.ipfsBundle.getLogger();\\n};\\n\\nIpfsUrl.prototype.filenamify = function (filename, options) {\\n  filename = filename !== undefined && filename !== null && filename.trim() !== '' ? filename.trim() : null;\\n\\n  if (filename === null) {\\n    throw new Error('Undefined filename...');\\n  }\\n\\n  if (options === undefined || options == null) {\\n    options = {\\n      replacement: '_'\\n    };\\n  }\\n\\n  return filenamify(filename, options);\\n};\\n\\nIpfsUrl.prototype.getIpfsDefaultApiUrl = function () {\\n  return new URL(this.getIpfsDefaultApi());\\n};\\n\\nIpfsUrl.prototype.getIpfsDefaultGatewayUrl = function () {\\n  return new URL(this.getIpfsDefaultGateway());\\n};\\n\\nIpfsUrl.prototype.getIpfsApiUrl = function () {\\n  try {\\n    return this.getUrl($tw.utils.getIpfsSaverApiUrl());\\n  } catch (error) {\\n    return this.getIpfsDefaultApiUrl();\\n  }\\n};\\n\\nIpfsUrl.prototype.getIpfsGatewayUrl = function () {\\n  try {\\n    return this.getUrl($tw.utils.getIpfsSaverGatewayUrl());\\n  } catch (error) {\\n    return this.getIpfsDefaultGatewayUrl();\\n  }\\n};\\n\\nIpfsUrl.prototype.getIpfsDefaultApi = function () {\\n  return 'https://ipfs.infura.io:5001';\\n};\\n\\nIpfsUrl.prototype.getIpfsDefaultGateway = function () {\\n  return 'https://dweb.link';\\n};\\n/**\\n * url.href;\\n * url.origin\\n * url.protocol;\\n * url.username;\\n * url.password;\\n * url.host;\\n * url.hostname;\\n * url.port;\\n * url.pathname;\\n * url.search;\\n * url.hash;\\n * https://jsdom.github.io/whatwg-url/\\n * https://github.com/stevenvachon/universal-url\\n * https://github.com/stevenvachon/universal-url-lite\\n * https://url.spec.whatwg.org/\\n */\\n\\n\\nIpfsUrl.prototype.getDocumentUrl = function () {\\n  try {\\n    return new URL(globalThis.location.href);\\n  } catch (error) {\\n    this.getLogger().error(error);\\n  }\\n\\n  throw new Error('Invalid current HTML Document URL...');\\n};\\n\\nIpfsUrl.prototype.getUrl = function (url, base) {\\n  try {\\n    if (url instanceof URL) {\\n      return new URL(url.href, base);\\n    }\\n\\n    return new URL(url, base);\\n  } catch (error) {// Ignore\\n  }\\n\\n  if (url) {\\n    throw new Error('Invalid URL...');\\n  }\\n\\n  throw new Error('Undefined URL...');\\n};\\n\\nIpfsUrl.prototype.getIpfsBaseUrl = function () {\\n  var base = this.getIpfsGatewayUrl();\\n\\n  try {\\n    if ($tw.utils.getIpfsUrlPolicy() === 'origin') {\\n      base = this.getDocumentUrl();\\n    }\\n  } catch (error) {\\n    base = this.getIpfsGatewayUrl();\\n  }\\n\\n  return this.getUrl(base);\\n};\\n\\nIpfsUrl.prototype.resolveProtocol = function (value, base) {\\n  value = value !== undefined && value !== null && value.toString().trim() !== '' ? value : null;\\n\\n  if (value instanceof URL === false) {\\n    return value;\\n  }\\n\\n  if (value.protocol !== 'ipfs:' && value.protocol !== 'ipns:') {\\n    return value;\\n  }\\n\\n  if (base === undefined || base == null) {\\n    base = this.getIpfsBaseUrl();\\n  }\\n\\n  var credential = '';\\n  var pathname = '/';\\n  const protocol = value.protocol.slice(0, -1);\\n\\n  if (value.hostname !== undefined && value.hostname !== null && value.hostname.trim() !== '') {\\n    if (value.pathname.startsWith('//')) {\\n      pathname = `/${protocol}/${value.hostname}/${value.pathname.slice(2)}`;\\n    } else {\\n      pathname = `/${protocol}/${value.hostname}${value.pathname}`;\\n    }\\n  } else if (value.pathname !== undefined && value.pathname !== null && value.pathname.trim() !== '') {\\n    if (value.pathname.startsWith('//')) {\\n      pathname = `/${protocol}/${value.pathname.slice(2)}`;\\n    } else {\\n      pathname = `/${protocol}${value.pathname}`;\\n    }\\n  }\\n\\n  if (value.username && value.password) {\\n    credential = `${value.username}:${value.password}@`;\\n  }\\n\\n  return this.getUrl(`${base.protocol}//${credential}${base.host}${pathname}${value.search}${value.hash}`);\\n};\\n\\nIpfsUrl.prototype.getBase = function (base) {\\n  base = base !== undefined && base !== null && base.toString().trim() !== '' ? base.toString().trim() : null;\\n\\n  if (base == null) {\\n    base = this.getIpfsBaseUrl();\\n  }\\n\\n  try {\\n    base = this.getUrl(base);\\n  } catch (error) {\\n    base = this.getIpfsBaseUrl();\\n  } // Resolve\\n\\n\\n  base = this.resolveProtocol(base); // Parse\\n\\n  var {\\n    cid,\\n    hostname,\\n    ipnsIdentifier\\n  } = this.ipfsBundle.decodeHostname(base.hostname);\\n\\n  if (hostname === undefined || hostname == null || hostname.trim() === '') {\\n    return {\\n      base: base,\\n      cid: null,\\n      ipnsIdentifier: null\\n    };\\n  }\\n\\n  var credential = '';\\n  const host = base.port ? `${hostname}:${base.port}` : hostname;\\n\\n  if (base.username && base.password) {\\n    credential = `${base.username}:${base.password}@`;\\n  }\\n\\n  const path = `${base.pathname}${base.search}${base.hash}`;\\n\\n  if (cid !== null || ipnsIdentifier !== null) {\\n    if (cid !== null) {\\n      base = this.getUrl(`${base.protocol}//${credential}${host}/ipfs/${cid}${path}`);\\n    } else {\\n      base = this.getUrl(`${base.protocol}//${credential}${host}/ipns/${ipnsIdentifier}${path}`);\\n    }\\n  } else {\\n    base = this.getUrl(`${base.protocol}//${credential}${host}${path}`);\\n  }\\n\\n  return {\\n    base: base,\\n    cid: cid,\\n    ipnsIdentifier: ipnsIdentifier\\n  };\\n};\\n\\nIpfsUrl.prototype.normalizeUrl = function (value, base) {\\n  value = value !== undefined && value !== null && value.toString().trim() !== '' ? value.toString().trim() : null;\\n\\n  if (value == null) {\\n    return null;\\n  }\\n\\n  var url = null;\\n  var {\\n    base\\n  } = this.getBase(base); // Text or URL\\n\\n  try {\\n    url = this.getUrl(value);\\n  } catch (error) {\\n    if (value.startsWith('/') === false && value.startsWith('./') === false && value.startsWith('../') === false) {\\n      var text = true;\\n\\n      try {\\n        url = this.getUrl(`https://${value}`);\\n\\n        if (url.hostname.endsWith('.eth') === false && url.hostname.endsWith('.eth.link') === false) {\\n          url = null;\\n        } else {\\n          text = false;\\n        }\\n      } catch (error) {// ignore\\n      }\\n\\n      if (text) {\\n        return null;\\n      }\\n    }\\n  }\\n\\n  if (url == null) {\\n    url = this.getUrl(value, base);\\n  } else if (url.protocol === 'ipfs:' || url.protocol === 'ipns:') {\\n    url = this.resolveProtocol(url, base);\\n  } else {\\n    var credential = '';\\n    var {\\n      base,\\n      cid,\\n      ipnsIdentifier\\n    } = this.getBase(url);\\n\\n    if (url.username && url.password) {\\n      credential = `${url.username}:${url.password}@`;\\n    }\\n\\n    if (cid == null && ipnsIdentifier == null) {\\n      url = this.getUrl(`${base.protocol}//${credential}${base.host}${url.pathname}${url.search}${url.hash}`);\\n    } else if (cid !== null) {\\n      url = this.getUrl(`${base.protocol}//${credential}${base.host}/ipfs/${cid}${url.pathname}${url.search}${url.hash}`);\\n    } else {\\n      url = this.getUrl(`${base.protocol}//${credential}${base.host}/ipns/${ipnsIdentifier}${url.pathname}${url.search}${url.hash}`);\\n    }\\n  }\\n\\n  if (url.hostname.endsWith('.eth.link')) {\\n    const hostname = url.hostname.substring(0, url.hostname.indexOf('.link'));\\n    const host = url.port ? `${hostname}:${url.port}` : hostname;\\n    var credential = '';\\n\\n    if (url.username && url.password) {\\n      credential = `${url.username}:${url.password}@`;\\n    }\\n\\n    url = this.getUrl(`${url.protocol}//${credential}${host}${url.pathname}${url.search}${url.hash}`);\\n  }\\n\\n  return url;\\n};\\n\\nexports.IpfsUrl = IpfsUrl;\\n\\n},{\\\"core-js/modules/web.dom-collections.iterator.js\\\":185,\\\"core-js/modules/web.url.js\\\":187,\\\"filenamify\\\":198}],7:[function(require,module,exports){\\n'use strict'\\n// base-x encoding / decoding\\n// Copyright (c) 2018 base-x contributors\\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\\n// Distributed under the MIT software license, see the accompanying\\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\\nfunction base (ALPHABET) {\\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\\n  var BASE_MAP = new Uint8Array(256)\\n  for (var j = 0; j < BASE_MAP.length; j++) {\\n    BASE_MAP[j] = 255\\n  }\\n  for (var i = 0; i < ALPHABET.length; i++) {\\n    var x = ALPHABET.charAt(i)\\n    var xc = x.charCodeAt(0)\\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\\n    BASE_MAP[xc] = i\\n  }\\n  var BASE = ALPHABET.length\\n  var LEADER = ALPHABET.charAt(0)\\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\\n  function encode (source) {\\n    if (source instanceof Uint8Array) {\\n    } else if (ArrayBuffer.isView(source)) {\\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\\n    } else if (Array.isArray(source)) {\\n      source = Uint8Array.from(source)\\n    }\\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\\n    if (source.length === 0) { return '' }\\n        // Skip & count leading zeroes.\\n    var zeroes = 0\\n    var length = 0\\n    var pbegin = 0\\n    var pend = source.length\\n    while (pbegin !== pend && source[pbegin] === 0) {\\n      pbegin++\\n      zeroes++\\n    }\\n        // Allocate enough space in big-endian base58 representation.\\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\\n    var b58 = new Uint8Array(size)\\n        // Process the bytes.\\n    while (pbegin !== pend) {\\n      var carry = source[pbegin]\\n            // Apply \\\"b58 = b58 * 256 + ch\\\".\\n      var i = 0\\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\\n        carry += (256 * b58[it1]) >>> 0\\n        b58[it1] = (carry % BASE) >>> 0\\n        carry = (carry / BASE) >>> 0\\n      }\\n      if (carry !== 0) { throw new Error('Non-zero carry') }\\n      length = i\\n      pbegin++\\n    }\\n        // Skip leading zeroes in base58 result.\\n    var it2 = size - length\\n    while (it2 !== size && b58[it2] === 0) {\\n      it2++\\n    }\\n        // Translate the result into a string.\\n    var str = LEADER.repeat(zeroes)\\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\\n    return str\\n  }\\n  function decodeUnsafe (source) {\\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\\n    if (source.length === 0) { return new Uint8Array() }\\n    var psz = 0\\n        // Skip leading spaces.\\n    if (source[psz] === ' ') { return }\\n        // Skip and count leading '1's.\\n    var zeroes = 0\\n    var length = 0\\n    while (source[psz] === LEADER) {\\n      zeroes++\\n      psz++\\n    }\\n        // Allocate enough space in big-endian base256 representation.\\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\\n    var b256 = new Uint8Array(size)\\n        // Process the characters.\\n    while (source[psz]) {\\n            // Decode character\\n      var carry = BASE_MAP[source.charCodeAt(psz)]\\n            // Invalid character\\n      if (carry === 255) { return }\\n      var i = 0\\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\\n        carry += (BASE * b256[it3]) >>> 0\\n        b256[it3] = (carry % 256) >>> 0\\n        carry = (carry / 256) >>> 0\\n      }\\n      if (carry !== 0) { throw new Error('Non-zero carry') }\\n      length = i\\n      psz++\\n    }\\n        // Skip trailing spaces.\\n    if (source[psz] === ' ') { return }\\n        // Skip leading zeroes in b256.\\n    var it4 = size - length\\n    while (it4 !== size && b256[it4] === 0) {\\n      it4++\\n    }\\n    var vch = new Uint8Array(zeroes + (size - it4))\\n    var j = zeroes\\n    while (it4 !== size) {\\n      vch[j++] = b256[it4++]\\n    }\\n    return vch\\n  }\\n  function decode (string) {\\n    var buffer = decodeUnsafe(string)\\n    if (buffer) { return buffer }\\n    throw new Error('Non-base' + BASE + ' character')\\n  }\\n  return {\\n    encode: encode,\\n    decodeUnsafe: decodeUnsafe,\\n    decode: decode\\n  }\\n}\\nmodule.exports = base\\n\\n},{}],8:[function(require,module,exports){\\n/*globals self, window */\\n\\\"use strict\\\"\\n\\n/*eslint-disable @mysticatea/prettier */\\nconst { AbortController, AbortSignal } =\\n    typeof self !== \\\"undefined\\\" ? self :\\n    typeof window !== \\\"undefined\\\" ? window :\\n    /* otherwise */ undefined\\n/*eslint-enable @mysticatea/prettier */\\n\\nmodule.exports = AbortController\\nmodule.exports.AbortSignal = AbortSignal\\nmodule.exports.default = AbortController\\n\\n},{}],9:[function(require,module,exports){\\nconst AbortController = require('native-abort-controller')\\n\\n/**\\n * Takes an array of AbortSignals and returns a single signal.\\n * If any signals are aborted, the returned signal will be aborted.\\n * @param {Array<AbortSignal>} signals\\n * @returns {AbortSignal}\\n */\\nfunction anySignal (signals) {\\n  const controller = new AbortController()\\n\\n  function onAbort () {\\n    controller.abort()\\n\\n    for (const signal of signals) {\\n      if (!signal || !signal.removeEventListener) continue\\n      signal.removeEventListener('abort', onAbort)\\n    }\\n  }\\n\\n  for (const signal of signals) {\\n    if (!signal || !signal.addEventListener) continue\\n    if (signal.aborted) {\\n      onAbort()\\n      break\\n    }\\n    signal.addEventListener('abort', onAbort)\\n  }\\n\\n  return controller.signal\\n}\\n\\nmodule.exports = anySignal\\nmodule.exports.anySignal = anySignal\\n\\n},{\\\"native-abort-controller\\\":10}],10:[function(require,module,exports){\\n'use strict'\\n\\nconst globalThis = require('globalthis')()\\n\\nif (globalThis.AbortController && globalThis.AbortSignal) {\\n  module.exports = class AbortController extends globalThis.AbortController {}\\n  module.exports.AbortSignal = globalThis.AbortSignal\\n  module.exports.default = module.exports\\n} else {\\n  module.exports = require('abort-controller')\\n}\\n\\n},{\\\"abort-controller\\\":8,\\\"globalthis\\\":200}],11:[function(require,module,exports){\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar tslib_1 = require(\\\"tslib\\\");\\nvar Semaphore_1 = require(\\\"./Semaphore\\\");\\nvar Mutex = /** @class */ (function () {\\n    function Mutex(cancelError) {\\n        this._semaphore = new Semaphore_1.default(1, cancelError);\\n    }\\n    Mutex.prototype.acquire = function () {\\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\\n            var _a, releaser;\\n            return tslib_1.__generator(this, function (_b) {\\n                switch (_b.label) {\\n                    case 0: return [4 /*yield*/, this._semaphore.acquire()];\\n                    case 1:\\n                        _a = _b.sent(), releaser = _a[1];\\n                        return [2 /*return*/, releaser];\\n                }\\n            });\\n        });\\n    };\\n    Mutex.prototype.runExclusive = function (callback) {\\n        return this._semaphore.runExclusive(function () { return callback(); });\\n    };\\n    Mutex.prototype.isLocked = function () {\\n        return this._semaphore.isLocked();\\n    };\\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\\n    Mutex.prototype.release = function () {\\n        this._semaphore.release();\\n    };\\n    Mutex.prototype.cancel = function () {\\n        return this._semaphore.cancel();\\n    };\\n    return Mutex;\\n}());\\nexports.default = Mutex;\\n\\n},{\\\"./Semaphore\\\":12,\\\"tslib\\\":17}],12:[function(require,module,exports){\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nvar tslib_1 = require(\\\"tslib\\\");\\nvar errors_1 = require(\\\"./errors\\\");\\nvar Semaphore = /** @class */ (function () {\\n    function Semaphore(_maxConcurrency, _cancelError) {\\n        if (_cancelError === void 0) { _cancelError = errors_1.E_CANCELED; }\\n        this._maxConcurrency = _maxConcurrency;\\n        this._cancelError = _cancelError;\\n        this._queue = [];\\n        if (_maxConcurrency <= 0) {\\n            throw new Error('semaphore must be initialized to a positive value');\\n        }\\n        this._value = _maxConcurrency;\\n    }\\n    Semaphore.prototype.acquire = function () {\\n        var _this = this;\\n        var locked = this.isLocked();\\n        var ticketPromise = new Promise(function (resolve, reject) {\\n            return _this._queue.push({ resolve: resolve, reject: reject });\\n        });\\n        if (!locked)\\n            this._dispatch();\\n        return ticketPromise;\\n    };\\n    Semaphore.prototype.runExclusive = function (callback) {\\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\\n            var _a, value, release;\\n            return tslib_1.__generator(this, function (_b) {\\n                switch (_b.label) {\\n                    case 0: return [4 /*yield*/, this.acquire()];\\n                    case 1:\\n                        _a = _b.sent(), value = _a[0], release = _a[1];\\n                        _b.label = 2;\\n                    case 2:\\n                        _b.trys.push([2, , 4, 5]);\\n                        return [4 /*yield*/, callback(value)];\\n                    case 3: return [2 /*return*/, _b.sent()];\\n                    case 4:\\n                        release();\\n                        return [7 /*endfinally*/];\\n                    case 5: return [2 /*return*/];\\n                }\\n            });\\n        });\\n    };\\n    Semaphore.prototype.isLocked = function () {\\n        return this._value <= 0;\\n    };\\n    /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\\n    Semaphore.prototype.release = function () {\\n        if (this._maxConcurrency > 1) {\\n            throw new Error('this method is unavailable on semaphores with concurrency > 1; use the scoped release returned by acquire instead');\\n        }\\n        if (this._currentReleaser) {\\n            var releaser = this._currentReleaser;\\n            this._currentReleaser = undefined;\\n            releaser();\\n        }\\n    };\\n    Semaphore.prototype.cancel = function () {\\n        var _this = this;\\n        this._queue.forEach(function (ticket) { return ticket.reject(_this._cancelError); });\\n        this._queue = [];\\n    };\\n    Semaphore.prototype._dispatch = function () {\\n        var _this = this;\\n        var nextTicket = this._queue.shift();\\n        if (!nextTicket)\\n            return;\\n        var released = false;\\n        this._currentReleaser = function () {\\n            if (released)\\n                return;\\n            released = true;\\n            _this._value++;\\n            _this._dispatch();\\n        };\\n        nextTicket.resolve([this._value--, this._currentReleaser]);\\n    };\\n    return Semaphore;\\n}());\\nexports.default = Semaphore;\\n\\n},{\\\"./errors\\\":13,\\\"tslib\\\":17}],13:[function(require,module,exports){\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.E_CANCELED = exports.E_ALREADY_LOCKED = exports.E_TIMEOUT = void 0;\\nexports.E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\\nexports.E_ALREADY_LOCKED = new Error('mutex already locked');\\nexports.E_CANCELED = new Error('request for lock canceled');\\n\\n},{}],14:[function(require,module,exports){\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.tryAcquire = exports.withTimeout = exports.Semaphore = exports.Mutex = void 0;\\nvar tslib_1 = require(\\\"tslib\\\");\\nvar Mutex_1 = require(\\\"./Mutex\\\");\\nObject.defineProperty(exports, \\\"Mutex\\\", { enumerable: true, get: function () { return Mutex_1.default; } });\\nvar Semaphore_1 = require(\\\"./Semaphore\\\");\\nObject.defineProperty(exports, \\\"Semaphore\\\", { enumerable: true, get: function () { return Semaphore_1.default; } });\\nvar withTimeout_1 = require(\\\"./withTimeout\\\");\\nObject.defineProperty(exports, \\\"withTimeout\\\", { enumerable: true, get: function () { return withTimeout_1.withTimeout; } });\\nvar tryAcquire_1 = require(\\\"./tryAcquire\\\");\\nObject.defineProperty(exports, \\\"tryAcquire\\\", { enumerable: true, get: function () { return tryAcquire_1.tryAcquire; } });\\ntslib_1.__exportStar(require(\\\"./errors\\\"), exports);\\n\\n},{\\\"./Mutex\\\":11,\\\"./Semaphore\\\":12,\\\"./errors\\\":13,\\\"./tryAcquire\\\":15,\\\"./withTimeout\\\":16,\\\"tslib\\\":17}],15:[function(require,module,exports){\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.tryAcquire = void 0;\\nvar errors_1 = require(\\\"./errors\\\");\\nvar withTimeout_1 = require(\\\"./withTimeout\\\");\\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\\nfunction tryAcquire(sync, alreadyAcquiredError) {\\n    if (alreadyAcquiredError === void 0) { alreadyAcquiredError = errors_1.E_ALREADY_LOCKED; }\\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\\n    return withTimeout_1.withTimeout(sync, 0, alreadyAcquiredError);\\n}\\nexports.tryAcquire = tryAcquire;\\n\\n},{\\\"./errors\\\":13,\\\"./withTimeout\\\":16}],16:[function(require,module,exports){\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.withTimeout = void 0;\\nvar tslib_1 = require(\\\"tslib\\\");\\nvar errors_1 = require(\\\"./errors\\\");\\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\\nfunction withTimeout(sync, timeout, timeoutError) {\\n    var _this = this;\\n    if (timeoutError === void 0) { timeoutError = errors_1.E_TIMEOUT; }\\n    return {\\n        acquire: function () {\\n            return new Promise(function (resolve, reject) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\\n                var isTimeout, handle, ticket, release, e_1;\\n                return tslib_1.__generator(this, function (_a) {\\n                    switch (_a.label) {\\n                        case 0:\\n                            isTimeout = false;\\n                            handle = setTimeout(function () {\\n                                isTimeout = true;\\n                                reject(timeoutError);\\n                            }, timeout);\\n                            _a.label = 1;\\n                        case 1:\\n                            _a.trys.push([1, 3, , 4]);\\n                            return [4 /*yield*/, sync.acquire()];\\n                        case 2:\\n                            ticket = _a.sent();\\n                            if (isTimeout) {\\n                                release = Array.isArray(ticket) ? ticket[1] : ticket;\\n                                release();\\n                            }\\n                            else {\\n                                clearTimeout(handle);\\n                                resolve(ticket);\\n                            }\\n                            return [3 /*break*/, 4];\\n                        case 3:\\n                            e_1 = _a.sent();\\n                            if (!isTimeout) {\\n                                clearTimeout(handle);\\n                                reject(e_1);\\n                            }\\n                            return [3 /*break*/, 4];\\n                        case 4: return [2 /*return*/];\\n                    }\\n                });\\n            }); });\\n        },\\n        runExclusive: function (callback) {\\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\\n                var release, ticket;\\n                return tslib_1.__generator(this, function (_a) {\\n                    switch (_a.label) {\\n                        case 0:\\n                            release = function () { return undefined; };\\n                            _a.label = 1;\\n                        case 1:\\n                            _a.trys.push([1, , 7, 8]);\\n                            return [4 /*yield*/, this.acquire()];\\n                        case 2:\\n                            ticket = _a.sent();\\n                            if (!Array.isArray(ticket)) return [3 /*break*/, 4];\\n                            release = ticket[1];\\n                            return [4 /*yield*/, callback(ticket[0])];\\n                        case 3: return [2 /*return*/, _a.sent()];\\n                        case 4:\\n                            release = ticket;\\n                            return [4 /*yield*/, callback()];\\n                        case 5: return [2 /*return*/, _a.sent()];\\n                        case 6: return [3 /*break*/, 8];\\n                        case 7:\\n                            release();\\n                            return [7 /*endfinally*/];\\n                        case 8: return [2 /*return*/];\\n                    }\\n                });\\n            });\\n        },\\n        /** @deprecated Deprecated in 0.3.0, will be removed in 0.4.0. Use runExclusive instead. */\\n        release: function () {\\n            sync.release();\\n        },\\n        cancel: function () {\\n            return sync.cancel();\\n        },\\n        isLocked: function () { return sync.isLocked(); },\\n    };\\n}\\nexports.withTimeout = withTimeout;\\n\\n},{\\\"./errors\\\":13,\\\"tslib\\\":17}],17:[function(require,module,exports){\\n(function (global){(function (){\\n/*! *****************************************************************************\\r\\nCopyright (c) Microsoft Corporation.\\r\\n\\r\\nPermission to use, copy, modify, and/or distribute this software for any\\r\\npurpose with or without fee is hereby granted.\\r\\n\\r\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\\r\\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\\r\\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\\r\\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\\r\\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\\r\\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\\r\\nPERFORMANCE OF THIS SOFTWARE.\\r\\n***************************************************************************** */\\r\\n/* global global, define, System, Reflect, Promise */\\r\\nvar __extends;\\r\\nvar __assign;\\r\\nvar __rest;\\r\\nvar __decorate;\\r\\nvar __param;\\r\\nvar __metadata;\\r\\nvar __awaiter;\\r\\nvar __generator;\\r\\nvar __exportStar;\\r\\nvar __values;\\r\\nvar __read;\\r\\nvar __spread;\\r\\nvar __spreadArrays;\\r\\nvar __spreadArray;\\r\\nvar __await;\\r\\nvar __asyncGenerator;\\r\\nvar __asyncDelegator;\\r\\nvar __asyncValues;\\r\\nvar __makeTemplateObject;\\r\\nvar __importStar;\\r\\nvar __importDefault;\\r\\nvar __classPrivateFieldGet;\\r\\nvar __classPrivateFieldSet;\\r\\nvar __createBinding;\\r\\n(function (factory) {\\r\\n    var root = typeof global === \\\"object\\\" ? global : typeof self === \\\"object\\\" ? self : typeof this === \\\"object\\\" ? this : {};\\r\\n    if (typeof define === \\\"function\\\" && define.amd) {\\r\\n        define(\\\"tslib\\\", [\\\"exports\\\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\\r\\n    }\\r\\n    else if (typeof module === \\\"object\\\" && typeof module.exports === \\\"object\\\") {\\r\\n        factory(createExporter(root, createExporter(module.exports)));\\r\\n    }\\r\\n    else {\\r\\n        factory(createExporter(root));\\r\\n    }\\r\\n    function createExporter(exports, previous) {\\r\\n        if (exports !== root) {\\r\\n            if (typeof Object.create === \\\"function\\\") {\\r\\n                Object.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n            }\\r\\n            else {\\r\\n                exports.__esModule = true;\\r\\n            }\\r\\n        }\\r\\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\\r\\n    }\\r\\n})\\r\\n(function (exporter) {\\r\\n    var extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\\r\\n\\r\\n    __extends = function (d, b) {\\r\\n        if (typeof b !== \\\"function\\\" && b !== null)\\r\\n            throw new TypeError(\\\"Class extends value \\\" + String(b) + \\\" is not a constructor or null\\\");\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n\\r\\n    __assign = Object.assign || function (t) {\\r\\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\\r\\n            s = arguments[i];\\r\\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\\r\\n        }\\r\\n        return t;\\r\\n    };\\r\\n\\r\\n    __rest = function (s, e) {\\r\\n        var t = {};\\r\\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\\r\\n            t[p] = s[p];\\r\\n        if (s != null && typeof Object.getOwnPropertySymbols === \\\"function\\\")\\r\\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\\r\\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\\r\\n                    t[p[i]] = s[p[i]];\\r\\n            }\\r\\n        return t;\\r\\n    };\\r\\n\\r\\n    __decorate = function (decorators, target, key, desc) {\\r\\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\\r\\n        if (typeof Reflect === \\\"object\\\" && typeof Reflect.decorate === \\\"function\\\") r = Reflect.decorate(decorators, target, key, desc);\\r\\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\\r\\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\\r\\n    };\\r\\n\\r\\n    __param = function (paramIndex, decorator) {\\r\\n        return function (target, key) { decorator(target, key, paramIndex); }\\r\\n    };\\r\\n\\r\\n    __metadata = function (metadataKey, metadataValue) {\\r\\n        if (typeof Reflect === \\\"object\\\" && typeof Reflect.metadata === \\\"function\\\") return Reflect.metadata(metadataKey, metadataValue);\\r\\n    };\\r\\n\\r\\n    __awaiter = function (thisArg, _arguments, P, generator) {\\r\\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\\r\\n        return new (P || (P = Promise))(function (resolve, reject) {\\r\\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\r\\n            function rejected(value) { try { step(generator[\\\"throw\\\"](value)); } catch (e) { reject(e); } }\\r\\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\\r\\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\\r\\n        });\\r\\n    };\\r\\n\\r\\n    __generator = function (thisArg, body) {\\r\\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\\r\\n        return g = { next: verb(0), \\\"throw\\\": verb(1), \\\"return\\\": verb(2) }, typeof Symbol === \\\"function\\\" && (g[Symbol.iterator] = function() { return this; }), g;\\r\\n        function verb(n) { return function (v) { return step([n, v]); }; }\\r\\n        function step(op) {\\r\\n            if (f) throw new TypeError(\\\"Generator is already executing.\\\");\\r\\n            while (_) try {\\r\\n                if (f = 1, y && (t = op[0] & 2 ? y[\\\"return\\\"] : op[0] ? y[\\\"throw\\\"] || ((t = y[\\\"return\\\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\\r\\n                if (y = 0, t) op = [op[0] & 2, t.value];\\r\\n                switch (op[0]) {\\r\\n                    case 0: case 1: t = op; break;\\r\\n                    case 4: _.label++; return { value: op[1], done: false };\\r\\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\\r\\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\\r\\n                    default:\\r\\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\\r\\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\\r\\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\\r\\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\\r\\n                        if (t[2]) _.ops.pop();\\r\\n                        _.trys.pop(); continue;\\r\\n                }\\r\\n                op = body.call(thisArg, _);\\r\\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\\r\\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\\r\\n        }\\r\\n    };\\r\\n\\r\\n    __exportStar = function(m, o) {\\r\\n        for (var p in m) if (p !== \\\"default\\\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\\r\\n    };\\r\\n\\r\\n    __createBinding = Object.create ? (function(o, m, k, k2) {\\r\\n        if (k2 === undefined) k2 = k;\\r\\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\\r\\n    }) : (function(o, m, k, k2) {\\r\\n        if (k2 === undefined) k2 = k;\\r\\n        o[k2] = m[k];\\r\\n    });\\r\\n\\r\\n    __values = function (o) {\\r\\n        var s = typeof Symbol === \\\"function\\\" && Symbol.iterator, m = s && o[s], i = 0;\\r\\n        if (m) return m.call(o);\\r\\n        if (o && typeof o.length === \\\"number\\\") return {\\r\\n            next: function () {\\r\\n                if (o && i >= o.length) o = void 0;\\r\\n                return { value: o && o[i++], done: !o };\\r\\n            }\\r\\n        };\\r\\n        throw new TypeError(s ? \\\"Object is not iterable.\\\" : \\\"Symbol.iterator is not defined.\\\");\\r\\n    };\\r\\n\\r\\n    __read = function (o, n) {\\r\\n        var m = typeof Symbol === \\\"function\\\" && o[Symbol.iterator];\\r\\n        if (!m) return o;\\r\\n        var i = m.call(o), r, ar = [], e;\\r\\n        try {\\r\\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\\r\\n        }\\r\\n        catch (error) { e = { error: error }; }\\r\\n        finally {\\r\\n            try {\\r\\n                if (r && !r.done && (m = i[\\\"return\\\"])) m.call(i);\\r\\n            }\\r\\n            finally { if (e) throw e.error; }\\r\\n        }\\r\\n        return ar;\\r\\n    };\\r\\n\\r\\n    /** @deprecated */\\r\\n    __spread = function () {\\r\\n        for (var ar = [], i = 0; i < arguments.length; i++)\\r\\n            ar = ar.concat(__read(arguments[i]));\\r\\n        return ar;\\r\\n    };\\r\\n\\r\\n    /** @deprecated */\\r\\n    __spreadArrays = function () {\\r\\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\\r\\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\\r\\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\\r\\n                r[k] = a[j];\\r\\n        return r;\\r\\n    };\\r\\n\\r\\n    __spreadArray = function (to, from) {\\r\\n        for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\\r\\n            to[j] = from[i];\\r\\n        return to;\\r\\n    };\\r\\n\\r\\n    __await = function (v) {\\r\\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\\r\\n    };\\r\\n\\r\\n    __asyncGenerator = function (thisArg, _arguments, generator) {\\r\\n        if (!Symbol.asyncIterator) throw new TypeError(\\\"Symbol.asyncIterator is not defined.\\\");\\r\\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\\r\\n        return i = {}, verb(\\\"next\\\"), verb(\\\"throw\\\"), verb(\\\"return\\\"), i[Symbol.asyncIterator] = function () { return this; }, i;\\r\\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\\r\\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\\r\\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\\r\\n        function fulfill(value) { resume(\\\"next\\\", value); }\\r\\n        function reject(value) { resume(\\\"throw\\\", value); }\\r\\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\\r\\n    };\\r\\n\\r\\n    __asyncDelegator = function (o) {\\r\\n        var i, p;\\r\\n        return i = {}, verb(\\\"next\\\"), verb(\\\"throw\\\", function (e) { throw e; }), verb(\\\"return\\\"), i[Symbol.iterator] = function () { return this; }, i;\\r\\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \\\"return\\\" } : f ? f(v) : v; } : f; }\\r\\n    };\\r\\n\\r\\n    __asyncValues = function (o) {\\r\\n        if (!Symbol.asyncIterator) throw new TypeError(\\\"Symbol.asyncIterator is not defined.\\\");\\r\\n        var m = o[Symbol.asyncIterator], i;\\r\\n        return m ? m.call(o) : (o = typeof __values === \\\"function\\\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\\\"next\\\"), verb(\\\"throw\\\"), verb(\\\"return\\\"), i[Symbol.asyncIterator] = function () { return this; }, i);\\r\\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\\r\\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\\r\\n    };\\r\\n\\r\\n    __makeTemplateObject = function (cooked, raw) {\\r\\n        if (Object.defineProperty) { Object.defineProperty(cooked, \\\"raw\\\", { value: raw }); } else { cooked.raw = raw; }\\r\\n        return cooked;\\r\\n    };\\r\\n\\r\\n    var __setModuleDefault = Object.create ? (function(o, v) {\\r\\n        Object.defineProperty(o, \\\"default\\\", { enumerable: true, value: v });\\r\\n    }) : function(o, v) {\\r\\n        o[\\\"default\\\"] = v;\\r\\n    };\\r\\n\\r\\n    __importStar = function (mod) {\\r\\n        if (mod && mod.__esModule) return mod;\\r\\n        var result = {};\\r\\n        if (mod != null) for (var k in mod) if (k !== \\\"default\\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\\r\\n        __setModuleDefault(result, mod);\\r\\n        return result;\\r\\n    };\\r\\n\\r\\n    __importDefault = function (mod) {\\r\\n        return (mod && mod.__esModule) ? mod : { \\\"default\\\": mod };\\r\\n    };\\r\\n\\r\\n    __classPrivateFieldGet = function (receiver, privateMap) {\\r\\n        if (!privateMap.has(receiver)) {\\r\\n            throw new TypeError(\\\"attempted to get private field on non-instance\\\");\\r\\n        }\\r\\n        return privateMap.get(receiver);\\r\\n    };\\r\\n\\r\\n    __classPrivateFieldSet = function (receiver, privateMap, value) {\\r\\n        if (!privateMap.has(receiver)) {\\r\\n            throw new TypeError(\\\"attempted to set private field on non-instance\\\");\\r\\n        }\\r\\n        privateMap.set(receiver, value);\\r\\n        return value;\\r\\n    };\\r\\n\\r\\n    exporter(\\\"__extends\\\", __extends);\\r\\n    exporter(\\\"__assign\\\", __assign);\\r\\n    exporter(\\\"__rest\\\", __rest);\\r\\n    exporter(\\\"__decorate\\\", __decorate);\\r\\n    exporter(\\\"__param\\\", __param);\\r\\n    exporter(\\\"__metadata\\\", __metadata);\\r\\n    exporter(\\\"__awaiter\\\", __awaiter);\\r\\n    exporter(\\\"__generator\\\", __generator);\\r\\n    exporter(\\\"__exportStar\\\", __exportStar);\\r\\n    exporter(\\\"__createBinding\\\", __createBinding);\\r\\n    exporter(\\\"__values\\\", __values);\\r\\n    exporter(\\\"__read\\\", __read);\\r\\n    exporter(\\\"__spread\\\", __spread);\\r\\n    exporter(\\\"__spreadArrays\\\", __spreadArrays);\\r\\n    exporter(\\\"__spreadArray\\\", __spreadArray);\\r\\n    exporter(\\\"__await\\\", __await);\\r\\n    exporter(\\\"__asyncGenerator\\\", __asyncGenerator);\\r\\n    exporter(\\\"__asyncDelegator\\\", __asyncDelegator);\\r\\n    exporter(\\\"__asyncValues\\\", __asyncValues);\\r\\n    exporter(\\\"__makeTemplateObject\\\", __makeTemplateObject);\\r\\n    exporter(\\\"__importStar\\\", __importStar);\\r\\n    exporter(\\\"__importDefault\\\", __importDefault);\\r\\n    exporter(\\\"__classPrivateFieldGet\\\", __classPrivateFieldGet);\\r\\n    exporter(\\\"__classPrivateFieldSet\\\", __classPrivateFieldSet);\\r\\n});\\r\\n\\n}).call(this)}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\n},{}],18:[function(require,module,exports){\\n'use strict'\\n\\nexports.byteLength = byteLength\\nexports.toByteArray = toByteArray\\nexports.fromByteArray = fromByteArray\\n\\nvar lookup = []\\nvar revLookup = []\\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\\n\\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\\nfor (var i = 0, len = code.length; i < len; ++i) {\\n  lookup[i] = code[i]\\n  revLookup[code.charCodeAt(i)] = i\\n}\\n\\n// Support decoding URL-safe base64 strings, as Node.js does.\\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\\nrevLookup['-'.charCodeAt(0)] = 62\\nrevLookup['_'.charCodeAt(0)] = 63\\n\\nfunction getLens (b64) {\\n  var len = b64.length\\n\\n  if (len % 4 > 0) {\\n    throw new Error('Invalid string. Length must be a multiple of 4')\\n  }\\n\\n  // Trim off extra bytes after placeholder bytes are found\\n  // See: https://github.com/beatgammit/base64-js/issues/42\\n  var validLen = b64.indexOf('=')\\n  if (validLen === -1) validLen = len\\n\\n  var placeHoldersLen = validLen === len\\n    ? 0\\n    : 4 - (validLen % 4)\\n\\n  return [validLen, placeHoldersLen]\\n}\\n\\n// base64 is 4/3 + up to two characters of the original data\\nfunction byteLength (b64) {\\n  var lens = getLens(b64)\\n  var validLen = lens[0]\\n  var placeHoldersLen = lens[1]\\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\\n}\\n\\nfunction _byteLength (b64, validLen, placeHoldersLen) {\\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\\n}\\n\\nfunction toByteArray (b64) {\\n  var tmp\\n  var lens = getLens(b64)\\n  var validLen = lens[0]\\n  var placeHoldersLen = lens[1]\\n\\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\\n\\n  var curByte = 0\\n\\n  // if there are placeholders, only get up to the last complete 4 chars\\n  var len = placeHoldersLen > 0\\n    ? validLen - 4\\n    : validLen\\n\\n  var i\\n  for (i = 0; i < len; i += 4) {\\n    tmp =\\n      (revLookup[b64.charCodeAt(i)] << 18) |\\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\\n      revLookup[b64.charCodeAt(i + 3)]\\n    arr[curByte++] = (tmp >> 16) & 0xFF\\n    arr[curByte++] = (tmp >> 8) & 0xFF\\n    arr[curByte++] = tmp & 0xFF\\n  }\\n\\n  if (placeHoldersLen === 2) {\\n    tmp =\\n      (revLookup[b64.charCodeAt(i)] << 2) |\\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\\n    arr[curByte++] = tmp & 0xFF\\n  }\\n\\n  if (placeHoldersLen === 1) {\\n    tmp =\\n      (revLookup[b64.charCodeAt(i)] << 10) |\\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\\n    arr[curByte++] = (tmp >> 8) & 0xFF\\n    arr[curByte++] = tmp & 0xFF\\n  }\\n\\n  return arr\\n}\\n\\nfunction tripletToBase64 (num) {\\n  return lookup[num >> 18 & 0x3F] +\\n    lookup[num >> 12 & 0x3F] +\\n    lookup[num >> 6 & 0x3F] +\\n    lookup[num & 0x3F]\\n}\\n\\nfunction encodeChunk (uint8, start, end) {\\n  var tmp\\n  var output = []\\n  for (var i = start; i < end; i += 3) {\\n    tmp =\\n      ((uint8[i] << 16) & 0xFF0000) +\\n      ((uint8[i + 1] << 8) & 0xFF00) +\\n      (uint8[i + 2] & 0xFF)\\n    output.push(tripletToBase64(tmp))\\n  }\\n  return output.join('')\\n}\\n\\nfunction fromByteArray (uint8) {\\n  var tmp\\n  var len = uint8.length\\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\\n  var parts = []\\n  var maxChunkLength = 16383 // must be multiple of 3\\n\\n  // go through the array every three bytes, we'll deal with trailing stuff later\\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\\n  }\\n\\n  // pad the end with zeros, but make sure to not forget the extra bytes\\n  if (extraBytes === 1) {\\n    tmp = uint8[len - 1]\\n    parts.push(\\n      lookup[tmp >> 2] +\\n      lookup[(tmp << 4) & 0x3F] +\\n      '=='\\n    )\\n  } else if (extraBytes === 2) {\\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\\n    parts.push(\\n      lookup[tmp >> 10] +\\n      lookup[(tmp >> 4) & 0x3F] +\\n      lookup[(tmp << 2) & 0x3F] +\\n      '='\\n    )\\n  }\\n\\n  return parts.join('')\\n}\\n\\n},{}],19:[function(require,module,exports){\\n;(function (globalObject) {\\r\\n  'use strict';\\r\\n\\r\\n/*\\r\\n *      bignumber.js v9.0.1\\r\\n *      A JavaScript library for arbitrary-precision arithmetic.\\r\\n *      https://github.com/MikeMcl/bignumber.js\\r\\n *      Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\\r\\n *      MIT Licensed.\\r\\n *\\r\\n *      BigNumber.prototype methods     |  BigNumber methods\\r\\n *                                      |\\r\\n *      absoluteValue            abs    |  clone\\r\\n *      comparedTo                      |  config               set\\r\\n *      decimalPlaces            dp     |      DECIMAL_PLACES\\r\\n *      dividedBy                div    |      ROUNDING_MODE\\r\\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\\r\\n *      exponentiatedBy          pow    |      RANGE\\r\\n *      integerValue                    |      CRYPTO\\r\\n *      isEqualTo                eq     |      MODULO_MODE\\r\\n *      isFinite                        |      POW_PRECISION\\r\\n *      isGreaterThan            gt     |      FORMAT\\r\\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\\r\\n *      isInteger                       |  isBigNumber\\r\\n *      isLessThan               lt     |  maximum              max\\r\\n *      isLessThanOrEqualTo      lte    |  minimum              min\\r\\n *      isNaN                           |  random\\r\\n *      isNegative                      |  sum\\r\\n *      isPositive                      |\\r\\n *      isZero                          |\\r\\n *      minus                           |\\r\\n *      modulo                   mod    |\\r\\n *      multipliedBy             times  |\\r\\n *      negated                         |\\r\\n *      plus                            |\\r\\n *      precision                sd     |\\r\\n *      shiftedBy                       |\\r\\n *      squareRoot               sqrt   |\\r\\n *      toExponential                   |\\r\\n *      toFixed                         |\\r\\n *      toFormat                        |\\r\\n *      toFraction                      |\\r\\n *      toJSON                          |\\r\\n *      toNumber                        |\\r\\n *      toPrecision                     |\\r\\n *      toString                        |\\r\\n *      valueOf                         |\\r\\n *\\r\\n */\\r\\n\\r\\n\\r\\n  var BigNumber,\\r\\n    isNumeric = /^-?(?:\\\\d+(?:\\\\.\\\\d*)?|\\\\.\\\\d+)(?:e[+-]?\\\\d+)?$/i,\\r\\n    mathceil = Math.ceil,\\r\\n    mathfloor = Math.floor,\\r\\n\\r\\n    bignumberError = '[BigNumber Error] ',\\r\\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\\r\\n\\r\\n    BASE = 1e14,\\r\\n    LOG_BASE = 14,\\r\\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\\r\\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\\r\\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\\r\\n    SQRT_BASE = 1e7,\\r\\n\\r\\n    // EDITABLE\\r\\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\\r\\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\\r\\n    MAX = 1E9;                                   // 0 to MAX_INT32\\r\\n\\r\\n\\r\\n  /*\\r\\n   * Create and return a BigNumber constructor.\\r\\n   */\\r\\n  function clone(configObject) {\\r\\n    var div, convertBase, parseNumeric,\\r\\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\\r\\n      ONE = new BigNumber(1),\\r\\n\\r\\n\\r\\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\\r\\n\\r\\n\\r\\n      // The default values below must be integers within the inclusive ranges stated.\\r\\n      // The values can also be changed at run-time using BigNumber.set.\\r\\n\\r\\n      // The maximum number of decimal places for operations involving division.\\r\\n      DECIMAL_PLACES = 20,                     // 0 to MAX\\r\\n\\r\\n      // The rounding mode used when rounding to the above decimal places, and when using\\r\\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\\r\\n      // UP         0 Away from zero.\\r\\n      // DOWN       1 Towards zero.\\r\\n      // CEIL       2 Towards +Infinity.\\r\\n      // FLOOR      3 Towards -Infinity.\\r\\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\\r\\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\\r\\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\\r\\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\\r\\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\\r\\n      ROUNDING_MODE = 4,                       // 0 to 8\\r\\n\\r\\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\\r\\n\\r\\n      // The exponent value at and beneath which toString returns exponential notation.\\r\\n      // Number type: -7\\r\\n      TO_EXP_NEG = -7,                         // 0 to -MAX\\r\\n\\r\\n      // The exponent value at and above which toString returns exponential notation.\\r\\n      // Number type: 21\\r\\n      TO_EXP_POS = 21,                         // 0 to MAX\\r\\n\\r\\n      // RANGE : [MIN_EXP, MAX_EXP]\\r\\n\\r\\n      // The minimum exponent value, beneath which underflow to zero occurs.\\r\\n      // Number type: -324  (5e-324)\\r\\n      MIN_EXP = -1e7,                          // -1 to -MAX\\r\\n\\r\\n      // The maximum exponent value, above which overflow to Infinity occurs.\\r\\n      // Number type:  308  (1.7976931348623157e+308)\\r\\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\\r\\n      MAX_EXP = 1e7,                           // 1 to MAX\\r\\n\\r\\n      // Whether to use cryptographically-secure random number generation, if available.\\r\\n      CRYPTO = false,                          // true or false\\r\\n\\r\\n      // The modulo mode used when calculating the modulus: a mod n.\\r\\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\\r\\n      // The remainder (r) is calculated as: r = a - n * q.\\r\\n      //\\r\\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\\r\\n      // DOWN      1 The remainder has the same sign as the dividend.\\r\\n      //             This modulo mode is commonly known as 'truncated division' and is\\r\\n      //             equivalent to (a % n) in JavaScript.\\r\\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\\r\\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\\r\\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\\r\\n      //             The remainder is always positive.\\r\\n      //\\r\\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\\r\\n      // modes are commonly used for the modulus operation.\\r\\n      // Although the other rounding modes can also be used, they may not give useful results.\\r\\n      MODULO_MODE = 1,                         // 0 to 9\\r\\n\\r\\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\\r\\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\\r\\n      POW_PRECISION = 0,                    // 0 to MAX\\r\\n\\r\\n      // The format specification used by the BigNumber.prototype.toFormat method.\\r\\n      FORMAT = {\\r\\n        prefix: '',\\r\\n        groupSize: 3,\\r\\n        secondaryGroupSize: 0,\\r\\n        groupSeparator: ',',\\r\\n        decimalSeparator: '.',\\r\\n        fractionGroupSize: 0,\\r\\n        fractionGroupSeparator: '\\\\xA0',      // non-breaking space\\r\\n        suffix: ''\\r\\n      },\\r\\n\\r\\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\\r\\n      // '-', '.', whitespace, or repeated character.\\r\\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\\r\\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\\r\\n\\r\\n\\r\\n    //------------------------------------------------------------------------------------------\\r\\n\\r\\n\\r\\n    // CONSTRUCTOR\\r\\n\\r\\n\\r\\n    /*\\r\\n     * The BigNumber constructor and exported function.\\r\\n     * Create and return a new instance of a BigNumber object.\\r\\n     *\\r\\n     * v {number|string|BigNumber} A numeric value.\\r\\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\\r\\n     */\\r\\n    function BigNumber(v, b) {\\r\\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\\r\\n        x = this;\\r\\n\\r\\n      // Enable constructor call without `new`.\\r\\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\\r\\n\\r\\n      if (b == null) {\\r\\n\\r\\n        if (v && v._isBigNumber === true) {\\r\\n          x.s = v.s;\\r\\n\\r\\n          if (!v.c || v.e > MAX_EXP) {\\r\\n            x.c = x.e = null;\\r\\n          } else if (v.e < MIN_EXP) {\\r\\n            x.c = [x.e = 0];\\r\\n          } else {\\r\\n            x.e = v.e;\\r\\n            x.c = v.c.slice();\\r\\n          }\\r\\n\\r\\n          return;\\r\\n        }\\r\\n\\r\\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\\r\\n\\r\\n          // Use `1 / n` to handle minus zero also.\\r\\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\\r\\n\\r\\n          // Fast path for integers, where n < 2147483648 (2**31).\\r\\n          if (v === ~~v) {\\r\\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\\r\\n\\r\\n            if (e > MAX_EXP) {\\r\\n              x.c = x.e = null;\\r\\n            } else {\\r\\n              x.e = e;\\r\\n              x.c = [v];\\r\\n            }\\r\\n\\r\\n            return;\\r\\n          }\\r\\n\\r\\n          str = String(v);\\r\\n        } else {\\r\\n\\r\\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\\r\\n\\r\\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\\r\\n        }\\r\\n\\r\\n        // Decimal point?\\r\\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\\r\\n\\r\\n        // Exponential form?\\r\\n        if ((i = str.search(/e/i)) > 0) {\\r\\n\\r\\n          // Determine exponent.\\r\\n          if (e < 0) e = i;\\r\\n          e += +str.slice(i + 1);\\r\\n          str = str.substring(0, i);\\r\\n        } else if (e < 0) {\\r\\n\\r\\n          // Integer.\\r\\n          e = str.length;\\r\\n        }\\r\\n\\r\\n      } else {\\r\\n\\r\\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\\r\\n        intCheck(b, 2, ALPHABET.length, 'Base');\\r\\n\\r\\n        // Allow exponential notation to be used with base 10 argument, while\\r\\n        // also rounding to DECIMAL_PLACES as with other bases.\\r\\n        if (b == 10) {\\r\\n          x = new BigNumber(v);\\r\\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\\r\\n        }\\r\\n\\r\\n        str = String(v);\\r\\n\\r\\n        if (isNum = typeof v == 'number') {\\r\\n\\r\\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\\r\\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\\r\\n\\r\\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\\r\\n\\r\\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\\r\\n          if (BigNumber.DEBUG && str.replace(/^0\\\\.0*|\\\\./, '').length > 15) {\\r\\n            throw Error\\r\\n             (tooManyDigits + v);\\r\\n          }\\r\\n        } else {\\r\\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\\r\\n        }\\r\\n\\r\\n        alphabet = ALPHABET.slice(0, b);\\r\\n        e = i = 0;\\r\\n\\r\\n        // Check that str is a valid base b number.\\r\\n        // Don't use RegExp, so alphabet can contain special characters.\\r\\n        for (len = str.length; i < len; i++) {\\r\\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\\r\\n            if (c == '.') {\\r\\n\\r\\n              // If '.' is not the first character and it has not be found before.\\r\\n              if (i > e) {\\r\\n                e = len;\\r\\n                continue;\\r\\n              }\\r\\n            } else if (!caseChanged) {\\r\\n\\r\\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\\r\\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\\r\\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\\r\\n                caseChanged = true;\\r\\n                i = -1;\\r\\n                e = 0;\\r\\n                continue;\\r\\n              }\\r\\n            }\\r\\n\\r\\n            return parseNumeric(x, String(v), isNum, b);\\r\\n          }\\r\\n        }\\r\\n\\r\\n        // Prevent later check for length on converted number.\\r\\n        isNum = false;\\r\\n        str = convertBase(str, b, 10, x.s);\\r\\n\\r\\n        // Decimal point?\\r\\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\\r\\n        else e = str.length;\\r\\n      }\\r\\n\\r\\n      // Determine leading zeros.\\r\\n      for (i = 0; str.charCodeAt(i) === 48; i++);\\r\\n\\r\\n      // Determine trailing zeros.\\r\\n      for (len = str.length; str.charCodeAt(--len) === 48;);\\r\\n\\r\\n      if (str = str.slice(i, ++len)) {\\r\\n        len -= i;\\r\\n\\r\\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\\r\\n        if (isNum && BigNumber.DEBUG &&\\r\\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\\r\\n            throw Error\\r\\n             (tooManyDigits + (x.s * v));\\r\\n        }\\r\\n\\r\\n         // Overflow?\\r\\n        if ((e = e - i - 1) > MAX_EXP) {\\r\\n\\r\\n          // Infinity.\\r\\n          x.c = x.e = null;\\r\\n\\r\\n        // Underflow?\\r\\n        } else if (e < MIN_EXP) {\\r\\n\\r\\n          // Zero.\\r\\n          x.c = [x.e = 0];\\r\\n        } else {\\r\\n          x.e = e;\\r\\n          x.c = [];\\r\\n\\r\\n          // Transform base\\r\\n\\r\\n          // e is the base 10 exponent.\\r\\n          // i is where to slice str to get the first element of the coefficient array.\\r\\n          i = (e + 1) % LOG_BASE;\\r\\n          if (e < 0) i += LOG_BASE;  // i < 1\\r\\n\\r\\n          if (i < len) {\\r\\n            if (i) x.c.push(+str.slice(0, i));\\r\\n\\r\\n            for (len -= LOG_BASE; i < len;) {\\r\\n              x.c.push(+str.slice(i, i += LOG_BASE));\\r\\n            }\\r\\n\\r\\n            i = LOG_BASE - (str = str.slice(i)).length;\\r\\n          } else {\\r\\n            i -= len;\\r\\n          }\\r\\n\\r\\n          for (; i--; str += '0');\\r\\n          x.c.push(+str);\\r\\n        }\\r\\n      } else {\\r\\n\\r\\n        // Zero.\\r\\n        x.c = [x.e = 0];\\r\\n      }\\r\\n    }\\r\\n\\r\\n\\r\\n    // CONSTRUCTOR PROPERTIES\\r\\n\\r\\n\\r\\n    BigNumber.clone = clone;\\r\\n\\r\\n    BigNumber.ROUND_UP = 0;\\r\\n    BigNumber.ROUND_DOWN = 1;\\r\\n    BigNumber.ROUND_CEIL = 2;\\r\\n    BigNumber.ROUND_FLOOR = 3;\\r\\n    BigNumber.ROUND_HALF_UP = 4;\\r\\n    BigNumber.ROUND_HALF_DOWN = 5;\\r\\n    BigNumber.ROUND_HALF_EVEN = 6;\\r\\n    BigNumber.ROUND_HALF_CEIL = 7;\\r\\n    BigNumber.ROUND_HALF_FLOOR = 8;\\r\\n    BigNumber.EUCLID = 9;\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Configure infrequently-changing library-wide settings.\\r\\n     *\\r\\n     * Accept an object with the following optional properties (if the value of a property is\\r\\n     * a number, it must be an integer within the inclusive range stated):\\r\\n     *\\r\\n     *   DECIMAL_PLACES   {number}           0 to MAX\\r\\n     *   ROUNDING_MODE    {number}           0 to 8\\r\\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\\r\\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\\r\\n     *   CRYPTO           {boolean}          true or false\\r\\n     *   MODULO_MODE      {number}           0 to 9\\r\\n     *   POW_PRECISION       {number}           0 to MAX\\r\\n     *   ALPHABET         {string}           A string of two or more unique characters which does\\r\\n     *                                       not contain '.'.\\r\\n     *   FORMAT           {object}           An object with some of the following properties:\\r\\n     *     prefix                 {string}\\r\\n     *     groupSize              {number}\\r\\n     *     secondaryGroupSize     {number}\\r\\n     *     groupSeparator         {string}\\r\\n     *     decimalSeparator       {string}\\r\\n     *     fractionGroupSize      {number}\\r\\n     *     fractionGroupSeparator {string}\\r\\n     *     suffix                 {string}\\r\\n     *\\r\\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\\r\\n     *\\r\\n     * E.g.\\r\\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\\r\\n     *\\r\\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\\r\\n     *\\r\\n     * Return an object with the properties current values.\\r\\n     */\\r\\n    BigNumber.config = BigNumber.set = function (obj) {\\r\\n      var p, v;\\r\\n\\r\\n      if (obj != null) {\\r\\n\\r\\n        if (typeof obj == 'object') {\\r\\n\\r\\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\\r\\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\\r\\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\\r\\n            v = obj[p];\\r\\n            intCheck(v, 0, MAX, p);\\r\\n            DECIMAL_PLACES = v;\\r\\n          }\\r\\n\\r\\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\\r\\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\\r\\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\\r\\n            v = obj[p];\\r\\n            intCheck(v, 0, 8, p);\\r\\n            ROUNDING_MODE = v;\\r\\n          }\\r\\n\\r\\n          // EXPONENTIAL_AT {number|number[]}\\r\\n          // Integer, -MAX to MAX inclusive or\\r\\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\\r\\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\\r\\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\\r\\n            v = obj[p];\\r\\n            if (v && v.pop) {\\r\\n              intCheck(v[0], -MAX, 0, p);\\r\\n              intCheck(v[1], 0, MAX, p);\\r\\n              TO_EXP_NEG = v[0];\\r\\n              TO_EXP_POS = v[1];\\r\\n            } else {\\r\\n              intCheck(v, -MAX, MAX, p);\\r\\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\\r\\n            }\\r\\n          }\\r\\n\\r\\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\\r\\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\\r\\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\\r\\n          if (obj.hasOwnProperty(p = 'RANGE')) {\\r\\n            v = obj[p];\\r\\n            if (v && v.pop) {\\r\\n              intCheck(v[0], -MAX, -1, p);\\r\\n              intCheck(v[1], 1, MAX, p);\\r\\n              MIN_EXP = v[0];\\r\\n              MAX_EXP = v[1];\\r\\n            } else {\\r\\n              intCheck(v, -MAX, MAX, p);\\r\\n              if (v) {\\r\\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\\r\\n              } else {\\r\\n                throw Error\\r\\n                 (bignumberError + p + ' cannot be zero: ' + v);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n\\r\\n          // CRYPTO {boolean} true or false.\\r\\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\\r\\n          // '[BigNumber Error] crypto unavailable'\\r\\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\\r\\n            v = obj[p];\\r\\n            if (v === !!v) {\\r\\n              if (v) {\\r\\n                if (typeof crypto != 'undefined' && crypto &&\\r\\n                 (crypto.getRandomValues || crypto.randomBytes)) {\\r\\n                  CRYPTO = v;\\r\\n                } else {\\r\\n                  CRYPTO = !v;\\r\\n                  throw Error\\r\\n                   (bignumberError + 'crypto unavailable');\\r\\n                }\\r\\n              } else {\\r\\n                CRYPTO = v;\\r\\n              }\\r\\n            } else {\\r\\n              throw Error\\r\\n               (bignumberError + p + ' not true or false: ' + v);\\r\\n            }\\r\\n          }\\r\\n\\r\\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\\r\\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\\r\\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\\r\\n            v = obj[p];\\r\\n            intCheck(v, 0, 9, p);\\r\\n            MODULO_MODE = v;\\r\\n          }\\r\\n\\r\\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\\r\\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\\r\\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\\r\\n            v = obj[p];\\r\\n            intCheck(v, 0, MAX, p);\\r\\n            POW_PRECISION = v;\\r\\n          }\\r\\n\\r\\n          // FORMAT {object}\\r\\n          // '[BigNumber Error] FORMAT not an object: {v}'\\r\\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\\r\\n            v = obj[p];\\r\\n            if (typeof v == 'object') FORMAT = v;\\r\\n            else throw Error\\r\\n             (bignumberError + p + ' not an object: ' + v);\\r\\n          }\\r\\n\\r\\n          // ALPHABET {string}\\r\\n          // '[BigNumber Error] ALPHABET invalid: {v}'\\r\\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\\r\\n            v = obj[p];\\r\\n\\r\\n            // Disallow if less than two characters,\\r\\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\\r\\n            if (typeof v == 'string' && !/^.?$|[+\\\\-.\\\\s]|(.).*\\\\1/.test(v)) {\\r\\n              ALPHABET = v;\\r\\n            } else {\\r\\n              throw Error\\r\\n               (bignumberError + p + ' invalid: ' + v);\\r\\n            }\\r\\n          }\\r\\n\\r\\n        } else {\\r\\n\\r\\n          // '[BigNumber Error] Object expected: {v}'\\r\\n          throw Error\\r\\n           (bignumberError + 'Object expected: ' + obj);\\r\\n        }\\r\\n      }\\r\\n\\r\\n      return {\\r\\n        DECIMAL_PLACES: DECIMAL_PLACES,\\r\\n        ROUNDING_MODE: ROUNDING_MODE,\\r\\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\\r\\n        RANGE: [MIN_EXP, MAX_EXP],\\r\\n        CRYPTO: CRYPTO,\\r\\n        MODULO_MODE: MODULO_MODE,\\r\\n        POW_PRECISION: POW_PRECISION,\\r\\n        FORMAT: FORMAT,\\r\\n        ALPHABET: ALPHABET\\r\\n      };\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return true if v is a BigNumber instance, otherwise return false.\\r\\n     *\\r\\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\\r\\n     *\\r\\n     * v {any}\\r\\n     *\\r\\n     * '[BigNumber Error] Invalid BigNumber: {v}'\\r\\n     */\\r\\n    BigNumber.isBigNumber = function (v) {\\r\\n      if (!v || v._isBigNumber !== true) return false;\\r\\n      if (!BigNumber.DEBUG) return true;\\r\\n\\r\\n      var i, n,\\r\\n        c = v.c,\\r\\n        e = v.e,\\r\\n        s = v.s;\\r\\n\\r\\n      out: if ({}.toString.call(c) == '[object Array]') {\\r\\n\\r\\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\\r\\n\\r\\n          // If the first element is zero, the BigNumber value must be zero.\\r\\n          if (c[0] === 0) {\\r\\n            if (e === 0 && c.length === 1) return true;\\r\\n            break out;\\r\\n          }\\r\\n\\r\\n          // Calculate number of digits that c[0] should have, based on the exponent.\\r\\n          i = (e + 1) % LOG_BASE;\\r\\n          if (i < 1) i += LOG_BASE;\\r\\n\\r\\n          // Calculate number of digits of c[0].\\r\\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\\r\\n          if (String(c[0]).length == i) {\\r\\n\\r\\n            for (i = 0; i < c.length; i++) {\\r\\n              n = c[i];\\r\\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\\r\\n            }\\r\\n\\r\\n            // Last element cannot be zero, unless it is the only element.\\r\\n            if (n !== 0) return true;\\r\\n          }\\r\\n        }\\r\\n\\r\\n      // Infinity/NaN\\r\\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\\r\\n        return true;\\r\\n      }\\r\\n\\r\\n      throw Error\\r\\n        (bignumberError + 'Invalid BigNumber: ' + v);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a new BigNumber whose value is the maximum of the arguments.\\r\\n     *\\r\\n     * arguments {number|string|BigNumber}\\r\\n     */\\r\\n    BigNumber.maximum = BigNumber.max = function () {\\r\\n      return maxOrMin(arguments, P.lt);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a new BigNumber whose value is the minimum of the arguments.\\r\\n     *\\r\\n     * arguments {number|string|BigNumber}\\r\\n     */\\r\\n    BigNumber.minimum = BigNumber.min = function () {\\r\\n      return maxOrMin(arguments, P.gt);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\\r\\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\\r\\n     * zeros are produced).\\r\\n     *\\r\\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\\r\\n     *\\r\\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\\r\\n     * '[BigNumber Error] crypto unavailable'\\r\\n     */\\r\\n    BigNumber.random = (function () {\\r\\n      var pow2_53 = 0x20000000000000;\\r\\n\\r\\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\\r\\n      // Check if Math.random() produces more than 32 bits of randomness.\\r\\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\\r\\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\\r\\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\\r\\n       ? function () { return mathfloor(Math.random() * pow2_53); }\\r\\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\\r\\n         (Math.random() * 0x800000 | 0); };\\r\\n\\r\\n      return function (dp) {\\r\\n        var a, b, e, k, v,\\r\\n          i = 0,\\r\\n          c = [],\\r\\n          rand = new BigNumber(ONE);\\r\\n\\r\\n        if (dp == null) dp = DECIMAL_PLACES;\\r\\n        else intCheck(dp, 0, MAX);\\r\\n\\r\\n        k = mathceil(dp / LOG_BASE);\\r\\n\\r\\n        if (CRYPTO) {\\r\\n\\r\\n          // Browsers supporting crypto.getRandomValues.\\r\\n          if (crypto.getRandomValues) {\\r\\n\\r\\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\\r\\n\\r\\n            for (; i < k;) {\\r\\n\\r\\n              // 53 bits:\\r\\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\\r\\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\\r\\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\\r\\n              //                                     11111 11111111 11111111\\r\\n              // 0x20000 is 2^21.\\r\\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\\r\\n\\r\\n              // Rejection sampling:\\r\\n              // 0 <= v < 9007199254740992\\r\\n              // Probability that v >= 9e15, is\\r\\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\\r\\n              if (v >= 9e15) {\\r\\n                b = crypto.getRandomValues(new Uint32Array(2));\\r\\n                a[i] = b[0];\\r\\n                a[i + 1] = b[1];\\r\\n              } else {\\r\\n\\r\\n                // 0 <= v <= 8999999999999999\\r\\n                // 0 <= (v % 1e14) <= 99999999999999\\r\\n                c.push(v % 1e14);\\r\\n                i += 2;\\r\\n              }\\r\\n            }\\r\\n            i = k / 2;\\r\\n\\r\\n          // Node.js supporting crypto.randomBytes.\\r\\n          } else if (crypto.randomBytes) {\\r\\n\\r\\n            // buffer\\r\\n            a = crypto.randomBytes(k *= 7);\\r\\n\\r\\n            for (; i < k;) {\\r\\n\\r\\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\\r\\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\\r\\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\\r\\n              // 0 <= v < 9007199254740992\\r\\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\\r\\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\\r\\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\\r\\n\\r\\n              if (v >= 9e15) {\\r\\n                crypto.randomBytes(7).copy(a, i);\\r\\n              } else {\\r\\n\\r\\n                // 0 <= (v % 1e14) <= 99999999999999\\r\\n                c.push(v % 1e14);\\r\\n                i += 7;\\r\\n              }\\r\\n            }\\r\\n            i = k / 7;\\r\\n          } else {\\r\\n            CRYPTO = false;\\r\\n            throw Error\\r\\n             (bignumberError + 'crypto unavailable');\\r\\n          }\\r\\n        }\\r\\n\\r\\n        // Use Math.random.\\r\\n        if (!CRYPTO) {\\r\\n\\r\\n          for (; i < k;) {\\r\\n            v = random53bitInt();\\r\\n            if (v < 9e15) c[i++] = v % 1e14;\\r\\n          }\\r\\n        }\\r\\n\\r\\n        k = c[--i];\\r\\n        dp %= LOG_BASE;\\r\\n\\r\\n        // Convert trailing digits to zeros according to dp.\\r\\n        if (k && dp) {\\r\\n          v = POWS_TEN[LOG_BASE - dp];\\r\\n          c[i] = mathfloor(k / v) * v;\\r\\n        }\\r\\n\\r\\n        // Remove trailing elements which are zero.\\r\\n        for (; c[i] === 0; c.pop(), i--);\\r\\n\\r\\n        // Zero?\\r\\n        if (i < 0) {\\r\\n          c = [e = 0];\\r\\n        } else {\\r\\n\\r\\n          // Remove leading elements which are zero and adjust exponent accordingly.\\r\\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\\r\\n\\r\\n          // Count the digits of the first element of c to determine leading zeros, and...\\r\\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\\r\\n\\r\\n          // adjust the exponent accordingly.\\r\\n          if (i < LOG_BASE) e -= LOG_BASE - i;\\r\\n        }\\r\\n\\r\\n        rand.e = e;\\r\\n        rand.c = c;\\r\\n        return rand;\\r\\n      };\\r\\n    })();\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a BigNumber whose value is the sum of the arguments.\\r\\n     *\\r\\n     * arguments {number|string|BigNumber}\\r\\n     */\\r\\n    BigNumber.sum = function () {\\r\\n      var i = 1,\\r\\n        args = arguments,\\r\\n        sum = new BigNumber(args[0]);\\r\\n      for (; i < args.length;) sum = sum.plus(args[i++]);\\r\\n      return sum;\\r\\n    };\\r\\n\\r\\n\\r\\n    // PRIVATE FUNCTIONS\\r\\n\\r\\n\\r\\n    // Called by BigNumber and BigNumber.prototype.toString.\\r\\n    convertBase = (function () {\\r\\n      var decimal = '0123456789';\\r\\n\\r\\n      /*\\r\\n       * Convert string of baseIn to an array of numbers of baseOut.\\r\\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\\r\\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\\r\\n       */\\r\\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\\r\\n        var j,\\r\\n          arr = [0],\\r\\n          arrL,\\r\\n          i = 0,\\r\\n          len = str.length;\\r\\n\\r\\n        for (; i < len;) {\\r\\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\\r\\n\\r\\n          arr[0] += alphabet.indexOf(str.charAt(i++));\\r\\n\\r\\n          for (j = 0; j < arr.length; j++) {\\r\\n\\r\\n            if (arr[j] > baseOut - 1) {\\r\\n              if (arr[j + 1] == null) arr[j + 1] = 0;\\r\\n              arr[j + 1] += arr[j] / baseOut | 0;\\r\\n              arr[j] %= baseOut;\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n\\r\\n        return arr.reverse();\\r\\n      }\\r\\n\\r\\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\\r\\n      // If the caller is toString, we are converting from base 10 to baseOut.\\r\\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\\r\\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\\r\\n        var alphabet, d, e, k, r, x, xc, y,\\r\\n          i = str.indexOf('.'),\\r\\n          dp = DECIMAL_PLACES,\\r\\n          rm = ROUNDING_MODE;\\r\\n\\r\\n        // Non-integer.\\r\\n        if (i >= 0) {\\r\\n          k = POW_PRECISION;\\r\\n\\r\\n          // Unlimited precision.\\r\\n          POW_PRECISION = 0;\\r\\n          str = str.replace('.', '');\\r\\n          y = new BigNumber(baseIn);\\r\\n          x = y.pow(str.length - i);\\r\\n          POW_PRECISION = k;\\r\\n\\r\\n          // Convert str as if an integer, then restore the fraction part by dividing the\\r\\n          // result by its base raised to a power.\\r\\n\\r\\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\\r\\n           10, baseOut, decimal);\\r\\n          y.e = y.c.length;\\r\\n        }\\r\\n\\r\\n        // Convert the number as integer.\\r\\n\\r\\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\\r\\n         ? (alphabet = ALPHABET, decimal)\\r\\n         : (alphabet = decimal, ALPHABET));\\r\\n\\r\\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\\r\\n        e = k = xc.length;\\r\\n\\r\\n        // Remove trailing zeros.\\r\\n        for (; xc[--k] == 0; xc.pop());\\r\\n\\r\\n        // Zero?\\r\\n        if (!xc[0]) return alphabet.charAt(0);\\r\\n\\r\\n        // Does str represent an integer? If so, no need for the division.\\r\\n        if (i < 0) {\\r\\n          --e;\\r\\n        } else {\\r\\n          x.c = xc;\\r\\n          x.e = e;\\r\\n\\r\\n          // The sign is needed for correct rounding.\\r\\n          x.s = sign;\\r\\n          x = div(x, y, dp, rm, baseOut);\\r\\n          xc = x.c;\\r\\n          r = x.r;\\r\\n          e = x.e;\\r\\n        }\\r\\n\\r\\n        // xc now represents str converted to baseOut.\\r\\n\\r\\n        // THe index of the rounding digit.\\r\\n        d = e + dp + 1;\\r\\n\\r\\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\\r\\n        i = xc[d];\\r\\n\\r\\n        // Look at the rounding digits and mode to determine whether to round up.\\r\\n\\r\\n        k = baseOut / 2;\\r\\n        r = r || d < 0 || xc[d + 1] != null;\\r\\n\\r\\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\\r\\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\\r\\n               rm == (x.s < 0 ? 8 : 7));\\r\\n\\r\\n        // If the index of the rounding digit is not greater than zero, or xc represents\\r\\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\\r\\n        // such as 0.00001.\\r\\n        if (d < 1 || !xc[0]) {\\r\\n\\r\\n          // 1^-dp or 0\\r\\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\\r\\n        } else {\\r\\n\\r\\n          // Truncate xc to the required number of decimal places.\\r\\n          xc.length = d;\\r\\n\\r\\n          // Round up?\\r\\n          if (r) {\\r\\n\\r\\n            // Rounding up may mean the previous digit has to be rounded up and so on.\\r\\n            for (--baseOut; ++xc[--d] > baseOut;) {\\r\\n              xc[d] = 0;\\r\\n\\r\\n              if (!d) {\\r\\n                ++e;\\r\\n                xc = [1].concat(xc);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n\\r\\n          // Determine trailing zeros.\\r\\n          for (k = xc.length; !xc[--k];);\\r\\n\\r\\n          // E.g. [4, 11, 15] becomes 4bf.\\r\\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\\r\\n\\r\\n          // Add leading zeros, decimal point and trailing zeros as required.\\r\\n          str = toFixedPoint(str, e, alphabet.charAt(0));\\r\\n        }\\r\\n\\r\\n        // The caller will add the sign.\\r\\n        return str;\\r\\n      };\\r\\n    })();\\r\\n\\r\\n\\r\\n    // Perform division in the specified base. Called by div and convertBase.\\r\\n    div = (function () {\\r\\n\\r\\n      // Assume non-zero x and k.\\r\\n      function multiply(x, k, base) {\\r\\n        var m, temp, xlo, xhi,\\r\\n          carry = 0,\\r\\n          i = x.length,\\r\\n          klo = k % SQRT_BASE,\\r\\n          khi = k / SQRT_BASE | 0;\\r\\n\\r\\n        for (x = x.slice(); i--;) {\\r\\n          xlo = x[i] % SQRT_BASE;\\r\\n          xhi = x[i] / SQRT_BASE | 0;\\r\\n          m = khi * xlo + xhi * klo;\\r\\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\\r\\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\\r\\n          x[i] = temp % base;\\r\\n        }\\r\\n\\r\\n        if (carry) x = [carry].concat(x);\\r\\n\\r\\n        return x;\\r\\n      }\\r\\n\\r\\n      function compare(a, b, aL, bL) {\\r\\n        var i, cmp;\\r\\n\\r\\n        if (aL != bL) {\\r\\n          cmp = aL > bL ? 1 : -1;\\r\\n        } else {\\r\\n\\r\\n          for (i = cmp = 0; i < aL; i++) {\\r\\n\\r\\n            if (a[i] != b[i]) {\\r\\n              cmp = a[i] > b[i] ? 1 : -1;\\r\\n              break;\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n\\r\\n        return cmp;\\r\\n      }\\r\\n\\r\\n      function subtract(a, b, aL, base) {\\r\\n        var i = 0;\\r\\n\\r\\n        // Subtract b from a.\\r\\n        for (; aL--;) {\\r\\n          a[aL] -= i;\\r\\n          i = a[aL] < b[aL] ? 1 : 0;\\r\\n          a[aL] = i * base + a[aL] - b[aL];\\r\\n        }\\r\\n\\r\\n        // Remove leading zeros.\\r\\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\\r\\n      }\\r\\n\\r\\n      // x: dividend, y: divisor.\\r\\n      return function (x, y, dp, rm, base) {\\r\\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\\r\\n          yL, yz,\\r\\n          s = x.s == y.s ? 1 : -1,\\r\\n          xc = x.c,\\r\\n          yc = y.c;\\r\\n\\r\\n        // Either NaN, Infinity or 0?\\r\\n        if (!xc || !xc[0] || !yc || !yc[0]) {\\r\\n\\r\\n          return new BigNumber(\\r\\n\\r\\n           // Return NaN if either NaN, or both Infinity or 0.\\r\\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\\r\\n\\r\\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\\r\\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\\r\\n         );\\r\\n        }\\r\\n\\r\\n        q = new BigNumber(s);\\r\\n        qc = q.c = [];\\r\\n        e = x.e - y.e;\\r\\n        s = dp + e + 1;\\r\\n\\r\\n        if (!base) {\\r\\n          base = BASE;\\r\\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\\r\\n          s = s / LOG_BASE | 0;\\r\\n        }\\r\\n\\r\\n        // Result exponent may be one less then the current value of e.\\r\\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\\r\\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\\r\\n\\r\\n        if (yc[i] > (xc[i] || 0)) e--;\\r\\n\\r\\n        if (s < 0) {\\r\\n          qc.push(1);\\r\\n          more = true;\\r\\n        } else {\\r\\n          xL = xc.length;\\r\\n          yL = yc.length;\\r\\n          i = 0;\\r\\n          s += 2;\\r\\n\\r\\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\\r\\n\\r\\n          n = mathfloor(base / (yc[0] + 1));\\r\\n\\r\\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\\r\\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\\r\\n          if (n > 1) {\\r\\n            yc = multiply(yc, n, base);\\r\\n            xc = multiply(xc, n, base);\\r\\n            yL = yc.length;\\r\\n            xL = xc.length;\\r\\n          }\\r\\n\\r\\n          xi = yL;\\r\\n          rem = xc.slice(0, yL);\\r\\n          remL = rem.length;\\r\\n\\r\\n          // Add zeros to make remainder as long as divisor.\\r\\n          for (; remL < yL; rem[remL++] = 0);\\r\\n          yz = yc.slice();\\r\\n          yz = [0].concat(yz);\\r\\n          yc0 = yc[0];\\r\\n          if (yc[1] >= base / 2) yc0++;\\r\\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\\r\\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\\r\\n\\r\\n          do {\\r\\n            n = 0;\\r\\n\\r\\n            // Compare divisor and remainder.\\r\\n            cmp = compare(yc, rem, yL, remL);\\r\\n\\r\\n            // If divisor < remainder.\\r\\n            if (cmp < 0) {\\r\\n\\r\\n              // Calculate trial digit, n.\\r\\n\\r\\n              rem0 = rem[0];\\r\\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\\r\\n\\r\\n              // n is how many times the divisor goes into the current remainder.\\r\\n              n = mathfloor(rem0 / yc0);\\r\\n\\r\\n              //  Algorithm:\\r\\n              //  product = divisor multiplied by trial digit (n).\\r\\n              //  Compare product and remainder.\\r\\n              //  If product is greater than remainder:\\r\\n              //    Subtract divisor from product, decrement trial digit.\\r\\n              //  Subtract product from remainder.\\r\\n              //  If product was less than remainder at the last compare:\\r\\n              //    Compare new remainder and divisor.\\r\\n              //    If remainder is greater than divisor:\\r\\n              //      Subtract divisor from remainder, increment trial digit.\\r\\n\\r\\n              if (n > 1) {\\r\\n\\r\\n                // n may be > base only when base is 3.\\r\\n                if (n >= base) n = base - 1;\\r\\n\\r\\n                // product = divisor * trial digit.\\r\\n                prod = multiply(yc, n, base);\\r\\n                prodL = prod.length;\\r\\n                remL = rem.length;\\r\\n\\r\\n                // Compare product and remainder.\\r\\n                // If product > remainder then trial digit n too high.\\r\\n                // n is 1 too high about 5% of the time, and is not known to have\\r\\n                // ever been more than 1 too high.\\r\\n                while (compare(prod, rem, prodL, remL) == 1) {\\r\\n                  n--;\\r\\n\\r\\n                  // Subtract divisor from product.\\r\\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\\r\\n                  prodL = prod.length;\\r\\n                  cmp = 1;\\r\\n                }\\r\\n              } else {\\r\\n\\r\\n                // n is 0 or 1, cmp is -1.\\r\\n                // If n is 0, there is no need to compare yc and rem again below,\\r\\n                // so change cmp to 1 to avoid it.\\r\\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\\r\\n                if (n == 0) {\\r\\n\\r\\n                  // divisor < remainder, so n must be at least 1.\\r\\n                  cmp = n = 1;\\r\\n                }\\r\\n\\r\\n                // product = divisor\\r\\n                prod = yc.slice();\\r\\n                prodL = prod.length;\\r\\n              }\\r\\n\\r\\n              if (prodL < remL) prod = [0].concat(prod);\\r\\n\\r\\n              // Subtract product from remainder.\\r\\n              subtract(rem, prod, remL, base);\\r\\n              remL = rem.length;\\r\\n\\r\\n               // If product was < remainder.\\r\\n              if (cmp == -1) {\\r\\n\\r\\n                // Compare divisor and new remainder.\\r\\n                // If divisor < new remainder, subtract divisor from remainder.\\r\\n                // Trial digit n too low.\\r\\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\\r\\n                while (compare(yc, rem, yL, remL) < 1) {\\r\\n                  n++;\\r\\n\\r\\n                  // Subtract divisor from remainder.\\r\\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\\r\\n                  remL = rem.length;\\r\\n                }\\r\\n              }\\r\\n            } else if (cmp === 0) {\\r\\n              n++;\\r\\n              rem = [0];\\r\\n            } // else cmp === 1 and n will be 0\\r\\n\\r\\n            // Add the next digit, n, to the result array.\\r\\n            qc[i++] = n;\\r\\n\\r\\n            // Update the remainder.\\r\\n            if (rem[0]) {\\r\\n              rem[remL++] = xc[xi] || 0;\\r\\n            } else {\\r\\n              rem = [xc[xi]];\\r\\n              remL = 1;\\r\\n            }\\r\\n          } while ((xi++ < xL || rem[0] != null) && s--);\\r\\n\\r\\n          more = rem[0] != null;\\r\\n\\r\\n          // Leading zero?\\r\\n          if (!qc[0]) qc.splice(0, 1);\\r\\n        }\\r\\n\\r\\n        if (base == BASE) {\\r\\n\\r\\n          // To calculate q.e, first get the number of digits of qc[0].\\r\\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\\r\\n\\r\\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\\r\\n\\r\\n        // Caller is convertBase.\\r\\n        } else {\\r\\n          q.e = e;\\r\\n          q.r = +more;\\r\\n        }\\r\\n\\r\\n        return q;\\r\\n      };\\r\\n    })();\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\\r\\n     * notation rounded to the specified decimal places or significant digits.\\r\\n     *\\r\\n     * n: a BigNumber.\\r\\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\\r\\n     * rm: the rounding mode.\\r\\n     * id: 1 (toExponential) or 2 (toPrecision).\\r\\n     */\\r\\n    function format(n, i, rm, id) {\\r\\n      var c0, e, ne, len, str;\\r\\n\\r\\n      if (rm == null) rm = ROUNDING_MODE;\\r\\n      else intCheck(rm, 0, 8);\\r\\n\\r\\n      if (!n.c) return n.toString();\\r\\n\\r\\n      c0 = n.c[0];\\r\\n      ne = n.e;\\r\\n\\r\\n      if (i == null) {\\r\\n        str = coeffToString(n.c);\\r\\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\\r\\n         ? toExponential(str, ne)\\r\\n         : toFixedPoint(str, ne, '0');\\r\\n      } else {\\r\\n        n = round(new BigNumber(n), i, rm);\\r\\n\\r\\n        // n.e may have changed if the value was rounded up.\\r\\n        e = n.e;\\r\\n\\r\\n        str = coeffToString(n.c);\\r\\n        len = str.length;\\r\\n\\r\\n        // toPrecision returns exponential notation if the number of significant digits\\r\\n        // specified is less than the number of digits necessary to represent the integer\\r\\n        // part of the value in fixed-point notation.\\r\\n\\r\\n        // Exponential notation.\\r\\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\\r\\n\\r\\n          // Append zeros?\\r\\n          for (; len < i; str += '0', len++);\\r\\n          str = toExponential(str, e);\\r\\n\\r\\n        // Fixed-point notation.\\r\\n        } else {\\r\\n          i -= ne;\\r\\n          str = toFixedPoint(str, e, '0');\\r\\n\\r\\n          // Append zeros?\\r\\n          if (e + 1 > len) {\\r\\n            if (--i > 0) for (str += '.'; i--; str += '0');\\r\\n          } else {\\r\\n            i += e - len;\\r\\n            if (i > 0) {\\r\\n              if (e + 1 == len) str += '.';\\r\\n              for (; i--; str += '0');\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n\\r\\n      return n.s < 0 && c0 ? '-' + str : str;\\r\\n    }\\r\\n\\r\\n\\r\\n    // Handle BigNumber.max and BigNumber.min.\\r\\n    function maxOrMin(args, method) {\\r\\n      var n,\\r\\n        i = 1,\\r\\n        m = new BigNumber(args[0]);\\r\\n\\r\\n      for (; i < args.length; i++) {\\r\\n        n = new BigNumber(args[i]);\\r\\n\\r\\n        // If any number is NaN, return NaN.\\r\\n        if (!n.s) {\\r\\n          m = n;\\r\\n          break;\\r\\n        } else if (method.call(m, n)) {\\r\\n          m = n;\\r\\n        }\\r\\n      }\\r\\n\\r\\n      return m;\\r\\n    }\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\\r\\n     * Called by minus, plus and times.\\r\\n     */\\r\\n    function normalise(n, c, e) {\\r\\n      var i = 1,\\r\\n        j = c.length;\\r\\n\\r\\n       // Remove trailing zeros.\\r\\n      for (; !c[--j]; c.pop());\\r\\n\\r\\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\\r\\n      for (j = c[0]; j >= 10; j /= 10, i++);\\r\\n\\r\\n      // Overflow?\\r\\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\\r\\n\\r\\n        // Infinity.\\r\\n        n.c = n.e = null;\\r\\n\\r\\n      // Underflow?\\r\\n      } else if (e < MIN_EXP) {\\r\\n\\r\\n        // Zero.\\r\\n        n.c = [n.e = 0];\\r\\n      } else {\\r\\n        n.e = e;\\r\\n        n.c = c;\\r\\n      }\\r\\n\\r\\n      return n;\\r\\n    }\\r\\n\\r\\n\\r\\n    // Handle values that fail the validity test in BigNumber.\\r\\n    parseNumeric = (function () {\\r\\n      var basePrefix = /^(-?)0([xbo])(?=\\\\w[\\\\w.]*$)/i,\\r\\n        dotAfter = /^([^.]+)\\\\.$/,\\r\\n        dotBefore = /^\\\\.([^.]+)$/,\\r\\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\\r\\n        whitespaceOrPlus = /^\\\\s*\\\\+(?=[\\\\w.])|^\\\\s+|\\\\s+$/g;\\r\\n\\r\\n      return function (x, str, isNum, b) {\\r\\n        var base,\\r\\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\\r\\n\\r\\n        // No exception on ±Infinity or NaN.\\r\\n        if (isInfinityOrNaN.test(s)) {\\r\\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\\r\\n        } else {\\r\\n          if (!isNum) {\\r\\n\\r\\n            // basePrefix = /^(-?)0([xbo])(?=\\\\w[\\\\w.]*$)/i\\r\\n            s = s.replace(basePrefix, function (m, p1, p2) {\\r\\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\\r\\n              return !b || b == base ? p1 : m;\\r\\n            });\\r\\n\\r\\n            if (b) {\\r\\n              base = b;\\r\\n\\r\\n              // E.g. '1.' to '1', '.1' to '0.1'\\r\\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\\r\\n            }\\r\\n\\r\\n            if (str != s) return new BigNumber(s, base);\\r\\n          }\\r\\n\\r\\n          // '[BigNumber Error] Not a number: {n}'\\r\\n          // '[BigNumber Error] Not a base {b} number: {n}'\\r\\n          if (BigNumber.DEBUG) {\\r\\n            throw Error\\r\\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\\r\\n          }\\r\\n\\r\\n          // NaN\\r\\n          x.s = null;\\r\\n        }\\r\\n\\r\\n        x.c = x.e = null;\\r\\n      }\\r\\n    })();\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\\r\\n     * If r is truthy, it is known that there are more digits after the rounding digit.\\r\\n     */\\r\\n    function round(x, sd, rm, r) {\\r\\n      var d, i, j, k, n, ni, rd,\\r\\n        xc = x.c,\\r\\n        pows10 = POWS_TEN;\\r\\n\\r\\n      // if x is not Infinity or NaN...\\r\\n      if (xc) {\\r\\n\\r\\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\\r\\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\\r\\n        // ni is the index of n within x.c.\\r\\n        // d is the number of digits of n.\\r\\n        // i is the index of rd within n including leading zeros.\\r\\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\\r\\n        out: {\\r\\n\\r\\n          // Get the number of digits of the first element of xc.\\r\\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\\r\\n          i = sd - d;\\r\\n\\r\\n          // If the rounding digit is in the first element of xc...\\r\\n          if (i < 0) {\\r\\n            i += LOG_BASE;\\r\\n            j = sd;\\r\\n            n = xc[ni = 0];\\r\\n\\r\\n            // Get the rounding digit at index j of n.\\r\\n            rd = n / pows10[d - j - 1] % 10 | 0;\\r\\n          } else {\\r\\n            ni = mathceil((i + 1) / LOG_BASE);\\r\\n\\r\\n            if (ni >= xc.length) {\\r\\n\\r\\n              if (r) {\\r\\n\\r\\n                // Needed by sqrt.\\r\\n                for (; xc.length <= ni; xc.push(0));\\r\\n                n = rd = 0;\\r\\n                d = 1;\\r\\n                i %= LOG_BASE;\\r\\n                j = i - LOG_BASE + 1;\\r\\n              } else {\\r\\n                break out;\\r\\n              }\\r\\n            } else {\\r\\n              n = k = xc[ni];\\r\\n\\r\\n              // Get the number of digits of n.\\r\\n              for (d = 1; k >= 10; k /= 10, d++);\\r\\n\\r\\n              // Get the index of rd within n.\\r\\n              i %= LOG_BASE;\\r\\n\\r\\n              // Get the index of rd within n, adjusted for leading zeros.\\r\\n              // The number of leading zeros of n is given by LOG_BASE - d.\\r\\n              j = i - LOG_BASE + d;\\r\\n\\r\\n              // Get the rounding digit at index j of n.\\r\\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\\r\\n            }\\r\\n          }\\r\\n\\r\\n          r = r || sd < 0 ||\\r\\n\\r\\n          // Are there any non-zero digits after the rounding digit?\\r\\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\\r\\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\\r\\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\\r\\n\\r\\n          r = rm < 4\\r\\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\\r\\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\\r\\n\\r\\n            // Check whether the digit to the left of the rounding digit is odd.\\r\\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\\r\\n             rm == (x.s < 0 ? 8 : 7));\\r\\n\\r\\n          if (sd < 1 || !xc[0]) {\\r\\n            xc.length = 0;\\r\\n\\r\\n            if (r) {\\r\\n\\r\\n              // Convert sd to decimal places.\\r\\n              sd -= x.e + 1;\\r\\n\\r\\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\\r\\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\\r\\n              x.e = -sd || 0;\\r\\n            } else {\\r\\n\\r\\n              // Zero.\\r\\n              xc[0] = x.e = 0;\\r\\n            }\\r\\n\\r\\n            return x;\\r\\n          }\\r\\n\\r\\n          // Remove excess digits.\\r\\n          if (i == 0) {\\r\\n            xc.length = ni;\\r\\n            k = 1;\\r\\n            ni--;\\r\\n          } else {\\r\\n            xc.length = ni + 1;\\r\\n            k = pows10[LOG_BASE - i];\\r\\n\\r\\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\\r\\n            // j > 0 means i > number of leading zeros of n.\\r\\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\\r\\n          }\\r\\n\\r\\n          // Round up?\\r\\n          if (r) {\\r\\n\\r\\n            for (; ;) {\\r\\n\\r\\n              // If the digit to be rounded up is in the first element of xc...\\r\\n              if (ni == 0) {\\r\\n\\r\\n                // i will be the length of xc[0] before k is added.\\r\\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\\r\\n                j = xc[0] += k;\\r\\n                for (k = 1; j >= 10; j /= 10, k++);\\r\\n\\r\\n                // if i != k the length has increased.\\r\\n                if (i != k) {\\r\\n                  x.e++;\\r\\n                  if (xc[0] == BASE) xc[0] = 1;\\r\\n                }\\r\\n\\r\\n                break;\\r\\n              } else {\\r\\n                xc[ni] += k;\\r\\n                if (xc[ni] != BASE) break;\\r\\n                xc[ni--] = 0;\\r\\n                k = 1;\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n\\r\\n          // Remove trailing zeros.\\r\\n          for (i = xc.length; xc[--i] === 0; xc.pop());\\r\\n        }\\r\\n\\r\\n        // Overflow? Infinity.\\r\\n        if (x.e > MAX_EXP) {\\r\\n          x.c = x.e = null;\\r\\n\\r\\n        // Underflow? Zero.\\r\\n        } else if (x.e < MIN_EXP) {\\r\\n          x.c = [x.e = 0];\\r\\n        }\\r\\n      }\\r\\n\\r\\n      return x;\\r\\n    }\\r\\n\\r\\n\\r\\n    function valueOf(n) {\\r\\n      var str,\\r\\n        e = n.e;\\r\\n\\r\\n      if (e === null) return n.toString();\\r\\n\\r\\n      str = coeffToString(n.c);\\r\\n\\r\\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\\r\\n        ? toExponential(str, e)\\r\\n        : toFixedPoint(str, e, '0');\\r\\n\\r\\n      return n.s < 0 ? '-' + str : str;\\r\\n    }\\r\\n\\r\\n\\r\\n    // PROTOTYPE/INSTANCE METHODS\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\\r\\n     */\\r\\n    P.absoluteValue = P.abs = function () {\\r\\n      var x = new BigNumber(this);\\r\\n      if (x.s < 0) x.s = 1;\\r\\n      return x;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return\\r\\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\\r\\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\\r\\n     *   0 if they have the same value,\\r\\n     *   or null if the value of either is NaN.\\r\\n     */\\r\\n    P.comparedTo = function (y, b) {\\r\\n      return compare(this, new BigNumber(y, b));\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * If dp is undefined or null or true or false, return the number of decimal places of the\\r\\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\\r\\n     *\\r\\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\\r\\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\\r\\n     * ROUNDING_MODE if rm is omitted.\\r\\n     *\\r\\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\\r\\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\\r\\n     *\\r\\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\\r\\n     */\\r\\n    P.decimalPlaces = P.dp = function (dp, rm) {\\r\\n      var c, n, v,\\r\\n        x = this;\\r\\n\\r\\n      if (dp != null) {\\r\\n        intCheck(dp, 0, MAX);\\r\\n        if (rm == null) rm = ROUNDING_MODE;\\r\\n        else intCheck(rm, 0, 8);\\r\\n\\r\\n        return round(new BigNumber(x), dp + x.e + 1, rm);\\r\\n      }\\r\\n\\r\\n      if (!(c = x.c)) return null;\\r\\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\\r\\n\\r\\n      // Subtract the number of trailing zeros of the last number.\\r\\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\\r\\n      if (n < 0) n = 0;\\r\\n\\r\\n      return n;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     *  n / 0 = I\\r\\n     *  n / N = N\\r\\n     *  n / I = 0\\r\\n     *  0 / n = 0\\r\\n     *  0 / 0 = N\\r\\n     *  0 / N = N\\r\\n     *  0 / I = 0\\r\\n     *  N / n = N\\r\\n     *  N / 0 = N\\r\\n     *  N / N = N\\r\\n     *  N / I = N\\r\\n     *  I / n = I\\r\\n     *  I / 0 = I\\r\\n     *  I / N = N\\r\\n     *  I / I = N\\r\\n     *\\r\\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\\r\\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\\r\\n     */\\r\\n    P.dividedBy = P.div = function (y, b) {\\r\\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\\r\\n     * BigNumber by the value of BigNumber(y, b).\\r\\n     */\\r\\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\\r\\n      return div(this, new BigNumber(y, b), 0, 1);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\\r\\n     *\\r\\n     * If m is present, return the result modulo m.\\r\\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\\r\\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\\r\\n     *\\r\\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\\r\\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\\r\\n     *\\r\\n     * n {number|string|BigNumber} The exponent. An integer.\\r\\n     * [m] {number|string|BigNumber} The modulus.\\r\\n     *\\r\\n     * '[BigNumber Error] Exponent not an integer: {n}'\\r\\n     */\\r\\n    P.exponentiatedBy = P.pow = function (n, m) {\\r\\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\\r\\n        x = this;\\r\\n\\r\\n      n = new BigNumber(n);\\r\\n\\r\\n      // Allow NaN and ±Infinity, but not other non-integers.\\r\\n      if (n.c && !n.isInteger()) {\\r\\n        throw Error\\r\\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\\r\\n      }\\r\\n\\r\\n      if (m != null) m = new BigNumber(m);\\r\\n\\r\\n      // Exponent of MAX_SAFE_INTEGER is 15.\\r\\n      nIsBig = n.e > 14;\\r\\n\\r\\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\\r\\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\\r\\n\\r\\n        // The sign of the result of pow when x is negative depends on the evenness of n.\\r\\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\\r\\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\\r\\n        return m ? y.mod(m) : y;\\r\\n      }\\r\\n\\r\\n      nIsNeg = n.s < 0;\\r\\n\\r\\n      if (m) {\\r\\n\\r\\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\\r\\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\\r\\n\\r\\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\\r\\n\\r\\n        if (isModExp) x = x.mod(m);\\r\\n\\r\\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\\r\\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\\r\\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\\r\\n        // [1, 240000000]\\r\\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\\r\\n        // [80000000000000]  [99999750000000]\\r\\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\\r\\n\\r\\n        // If x is negative and n is odd, k = -0, else k = 0.\\r\\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\\r\\n\\r\\n        // If x >= 1, k = ±Infinity.\\r\\n        if (x.e > -1) k = 1 / k;\\r\\n\\r\\n        // If n is negative return ±0, else return ±Infinity.\\r\\n        return new BigNumber(nIsNeg ? 1 / k : k);\\r\\n\\r\\n      } else if (POW_PRECISION) {\\r\\n\\r\\n        // Truncating each coefficient array to a length of k after each multiplication\\r\\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\\r\\n        // i.e. there will be a minimum of 28 guard digits retained.\\r\\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\\r\\n      }\\r\\n\\r\\n      if (nIsBig) {\\r\\n        half = new BigNumber(0.5);\\r\\n        if (nIsNeg) n.s = 1;\\r\\n        nIsOdd = isOdd(n);\\r\\n      } else {\\r\\n        i = Math.abs(+valueOf(n));\\r\\n        nIsOdd = i % 2;\\r\\n      }\\r\\n\\r\\n      y = new BigNumber(ONE);\\r\\n\\r\\n      // Performs 54 loop iterations for n of 9007199254740991.\\r\\n      for (; ;) {\\r\\n\\r\\n        if (nIsOdd) {\\r\\n          y = y.times(x);\\r\\n          if (!y.c) break;\\r\\n\\r\\n          if (k) {\\r\\n            if (y.c.length > k) y.c.length = k;\\r\\n          } else if (isModExp) {\\r\\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\\r\\n          }\\r\\n        }\\r\\n\\r\\n        if (i) {\\r\\n          i = mathfloor(i / 2);\\r\\n          if (i === 0) break;\\r\\n          nIsOdd = i % 2;\\r\\n        } else {\\r\\n          n = n.times(half);\\r\\n          round(n, n.e + 1, 1);\\r\\n\\r\\n          if (n.e > 14) {\\r\\n            nIsOdd = isOdd(n);\\r\\n          } else {\\r\\n            i = +valueOf(n);\\r\\n            if (i === 0) break;\\r\\n            nIsOdd = i % 2;\\r\\n          }\\r\\n        }\\r\\n\\r\\n        x = x.times(x);\\r\\n\\r\\n        if (k) {\\r\\n          if (x.c && x.c.length > k) x.c.length = k;\\r\\n        } else if (isModExp) {\\r\\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\\r\\n        }\\r\\n      }\\r\\n\\r\\n      if (isModExp) return y;\\r\\n      if (nIsNeg) y = ONE.div(y);\\r\\n\\r\\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\\r\\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\\r\\n     *\\r\\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\\r\\n     *\\r\\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\\r\\n     */\\r\\n    P.integerValue = function (rm) {\\r\\n      var n = new BigNumber(this);\\r\\n      if (rm == null) rm = ROUNDING_MODE;\\r\\n      else intCheck(rm, 0, 8);\\r\\n      return round(n, n.e + 1, rm);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\\r\\n     * otherwise return false.\\r\\n     */\\r\\n    P.isEqualTo = P.eq = function (y, b) {\\r\\n      return compare(this, new BigNumber(y, b)) === 0;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\\r\\n     */\\r\\n    P.isFinite = function () {\\r\\n      return !!this.c;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\\r\\n     * otherwise return false.\\r\\n     */\\r\\n    P.isGreaterThan = P.gt = function (y, b) {\\r\\n      return compare(this, new BigNumber(y, b)) > 0;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return true if the value of this BigNumber is greater than or equal to the value of\\r\\n     * BigNumber(y, b), otherwise return false.\\r\\n     */\\r\\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\\r\\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\\r\\n\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\\r\\n     */\\r\\n    P.isInteger = function () {\\r\\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\\r\\n     * otherwise return false.\\r\\n     */\\r\\n    P.isLessThan = P.lt = function (y, b) {\\r\\n      return compare(this, new BigNumber(y, b)) < 0;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return true if the value of this BigNumber is less than or equal to the value of\\r\\n     * BigNumber(y, b), otherwise return false.\\r\\n     */\\r\\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\\r\\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\\r\\n     */\\r\\n    P.isNaN = function () {\\r\\n      return !this.s;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return true if the value of this BigNumber is negative, otherwise return false.\\r\\n     */\\r\\n    P.isNegative = function () {\\r\\n      return this.s < 0;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return true if the value of this BigNumber is positive, otherwise return false.\\r\\n     */\\r\\n    P.isPositive = function () {\\r\\n      return this.s > 0;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\\r\\n     */\\r\\n    P.isZero = function () {\\r\\n      return !!this.c && this.c[0] == 0;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     *  n - 0 = n\\r\\n     *  n - N = N\\r\\n     *  n - I = -I\\r\\n     *  0 - n = -n\\r\\n     *  0 - 0 = 0\\r\\n     *  0 - N = N\\r\\n     *  0 - I = -I\\r\\n     *  N - n = N\\r\\n     *  N - 0 = N\\r\\n     *  N - N = N\\r\\n     *  N - I = N\\r\\n     *  I - n = I\\r\\n     *  I - 0 = I\\r\\n     *  I - N = N\\r\\n     *  I - I = N\\r\\n     *\\r\\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\\r\\n     * BigNumber(y, b).\\r\\n     */\\r\\n    P.minus = function (y, b) {\\r\\n      var i, j, t, xLTy,\\r\\n        x = this,\\r\\n        a = x.s;\\r\\n\\r\\n      y = new BigNumber(y, b);\\r\\n      b = y.s;\\r\\n\\r\\n      // Either NaN?\\r\\n      if (!a || !b) return new BigNumber(NaN);\\r\\n\\r\\n      // Signs differ?\\r\\n      if (a != b) {\\r\\n        y.s = -b;\\r\\n        return x.plus(y);\\r\\n      }\\r\\n\\r\\n      var xe = x.e / LOG_BASE,\\r\\n        ye = y.e / LOG_BASE,\\r\\n        xc = x.c,\\r\\n        yc = y.c;\\r\\n\\r\\n      if (!xe || !ye) {\\r\\n\\r\\n        // Either Infinity?\\r\\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\\r\\n\\r\\n        // Either zero?\\r\\n        if (!xc[0] || !yc[0]) {\\r\\n\\r\\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\\r\\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\\r\\n\\r\\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\\r\\n           ROUNDING_MODE == 3 ? -0 : 0);\\r\\n        }\\r\\n      }\\r\\n\\r\\n      xe = bitFloor(xe);\\r\\n      ye = bitFloor(ye);\\r\\n      xc = xc.slice();\\r\\n\\r\\n      // Determine which is the bigger number.\\r\\n      if (a = xe - ye) {\\r\\n\\r\\n        if (xLTy = a < 0) {\\r\\n          a = -a;\\r\\n          t = xc;\\r\\n        } else {\\r\\n          ye = xe;\\r\\n          t = yc;\\r\\n        }\\r\\n\\r\\n        t.reverse();\\r\\n\\r\\n        // Prepend zeros to equalise exponents.\\r\\n        for (b = a; b--; t.push(0));\\r\\n        t.reverse();\\r\\n      } else {\\r\\n\\r\\n        // Exponents equal. Check digit by digit.\\r\\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\\r\\n\\r\\n        for (a = b = 0; b < j; b++) {\\r\\n\\r\\n          if (xc[b] != yc[b]) {\\r\\n            xLTy = xc[b] < yc[b];\\r\\n            break;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n\\r\\n      // x < y? Point xc to the array of the bigger number.\\r\\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\\r\\n\\r\\n      b = (j = yc.length) - (i = xc.length);\\r\\n\\r\\n      // Append zeros to xc if shorter.\\r\\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\\r\\n      if (b > 0) for (; b--; xc[i++] = 0);\\r\\n      b = BASE - 1;\\r\\n\\r\\n      // Subtract yc from xc.\\r\\n      for (; j > a;) {\\r\\n\\r\\n        if (xc[--j] < yc[j]) {\\r\\n          for (i = j; i && !xc[--i]; xc[i] = b);\\r\\n          --xc[i];\\r\\n          xc[j] += BASE;\\r\\n        }\\r\\n\\r\\n        xc[j] -= yc[j];\\r\\n      }\\r\\n\\r\\n      // Remove leading zeros and adjust exponent accordingly.\\r\\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\\r\\n\\r\\n      // Zero?\\r\\n      if (!xc[0]) {\\r\\n\\r\\n        // Following IEEE 754 (2008) 6.3,\\r\\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\\r\\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\\r\\n        y.c = [y.e = 0];\\r\\n        return y;\\r\\n      }\\r\\n\\r\\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\\r\\n      // for finite x and y.\\r\\n      return normalise(y, xc, ye);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     *   n % 0 =  N\\r\\n     *   n % N =  N\\r\\n     *   n % I =  n\\r\\n     *   0 % n =  0\\r\\n     *  -0 % n = -0\\r\\n     *   0 % 0 =  N\\r\\n     *   0 % N =  N\\r\\n     *   0 % I =  0\\r\\n     *   N % n =  N\\r\\n     *   N % 0 =  N\\r\\n     *   N % N =  N\\r\\n     *   N % I =  N\\r\\n     *   I % n =  N\\r\\n     *   I % 0 =  N\\r\\n     *   I % N =  N\\r\\n     *   I % I =  N\\r\\n     *\\r\\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\\r\\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\\r\\n     */\\r\\n    P.modulo = P.mod = function (y, b) {\\r\\n      var q, s,\\r\\n        x = this;\\r\\n\\r\\n      y = new BigNumber(y, b);\\r\\n\\r\\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\\r\\n      if (!x.c || !y.s || y.c && !y.c[0]) {\\r\\n        return new BigNumber(NaN);\\r\\n\\r\\n      // Return x if y is Infinity or x is zero.\\r\\n      } else if (!y.c || x.c && !x.c[0]) {\\r\\n        return new BigNumber(x);\\r\\n      }\\r\\n\\r\\n      if (MODULO_MODE == 9) {\\r\\n\\r\\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\\r\\n        // r = x - qy    where  0 <= r < abs(y)\\r\\n        s = y.s;\\r\\n        y.s = 1;\\r\\n        q = div(x, y, 0, 3);\\r\\n        y.s = s;\\r\\n        q.s *= s;\\r\\n      } else {\\r\\n        q = div(x, y, 0, MODULO_MODE);\\r\\n      }\\r\\n\\r\\n      y = x.minus(q.times(y));\\r\\n\\r\\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\\r\\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\\r\\n\\r\\n      return y;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     *  n * 0 = 0\\r\\n     *  n * N = N\\r\\n     *  n * I = I\\r\\n     *  0 * n = 0\\r\\n     *  0 * 0 = 0\\r\\n     *  0 * N = N\\r\\n     *  0 * I = N\\r\\n     *  N * n = N\\r\\n     *  N * 0 = N\\r\\n     *  N * N = N\\r\\n     *  N * I = N\\r\\n     *  I * n = I\\r\\n     *  I * 0 = N\\r\\n     *  I * N = N\\r\\n     *  I * I = I\\r\\n     *\\r\\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\\r\\n     * of BigNumber(y, b).\\r\\n     */\\r\\n    P.multipliedBy = P.times = function (y, b) {\\r\\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\\r\\n        base, sqrtBase,\\r\\n        x = this,\\r\\n        xc = x.c,\\r\\n        yc = (y = new BigNumber(y, b)).c;\\r\\n\\r\\n      // Either NaN, ±Infinity or ±0?\\r\\n      if (!xc || !yc || !xc[0] || !yc[0]) {\\r\\n\\r\\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\\r\\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\\r\\n          y.c = y.e = y.s = null;\\r\\n        } else {\\r\\n          y.s *= x.s;\\r\\n\\r\\n          // Return ±Infinity if either is ±Infinity.\\r\\n          if (!xc || !yc) {\\r\\n            y.c = y.e = null;\\r\\n\\r\\n          // Return ±0 if either is ±0.\\r\\n          } else {\\r\\n            y.c = [0];\\r\\n            y.e = 0;\\r\\n          }\\r\\n        }\\r\\n\\r\\n        return y;\\r\\n      }\\r\\n\\r\\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\\r\\n      y.s *= x.s;\\r\\n      xcL = xc.length;\\r\\n      ycL = yc.length;\\r\\n\\r\\n      // Ensure xc points to longer array and xcL to its length.\\r\\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\\r\\n\\r\\n      // Initialise the result array with zeros.\\r\\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\\r\\n\\r\\n      base = BASE;\\r\\n      sqrtBase = SQRT_BASE;\\r\\n\\r\\n      for (i = ycL; --i >= 0;) {\\r\\n        c = 0;\\r\\n        ylo = yc[i] % sqrtBase;\\r\\n        yhi = yc[i] / sqrtBase | 0;\\r\\n\\r\\n        for (k = xcL, j = i + k; j > i;) {\\r\\n          xlo = xc[--k] % sqrtBase;\\r\\n          xhi = xc[k] / sqrtBase | 0;\\r\\n          m = yhi * xlo + xhi * ylo;\\r\\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\\r\\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\\r\\n          zc[j--] = xlo % base;\\r\\n        }\\r\\n\\r\\n        zc[j] = c;\\r\\n      }\\r\\n\\r\\n      if (c) {\\r\\n        ++e;\\r\\n      } else {\\r\\n        zc.splice(0, 1);\\r\\n      }\\r\\n\\r\\n      return normalise(y, zc, e);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\\r\\n     * i.e. multiplied by -1.\\r\\n     */\\r\\n    P.negated = function () {\\r\\n      var x = new BigNumber(this);\\r\\n      x.s = -x.s || null;\\r\\n      return x;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     *  n + 0 = n\\r\\n     *  n + N = N\\r\\n     *  n + I = I\\r\\n     *  0 + n = n\\r\\n     *  0 + 0 = 0\\r\\n     *  0 + N = N\\r\\n     *  0 + I = I\\r\\n     *  N + n = N\\r\\n     *  N + 0 = N\\r\\n     *  N + N = N\\r\\n     *  N + I = N\\r\\n     *  I + n = I\\r\\n     *  I + 0 = I\\r\\n     *  I + N = N\\r\\n     *  I + I = I\\r\\n     *\\r\\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\\r\\n     * BigNumber(y, b).\\r\\n     */\\r\\n    P.plus = function (y, b) {\\r\\n      var t,\\r\\n        x = this,\\r\\n        a = x.s;\\r\\n\\r\\n      y = new BigNumber(y, b);\\r\\n      b = y.s;\\r\\n\\r\\n      // Either NaN?\\r\\n      if (!a || !b) return new BigNumber(NaN);\\r\\n\\r\\n      // Signs differ?\\r\\n       if (a != b) {\\r\\n        y.s = -b;\\r\\n        return x.minus(y);\\r\\n      }\\r\\n\\r\\n      var xe = x.e / LOG_BASE,\\r\\n        ye = y.e / LOG_BASE,\\r\\n        xc = x.c,\\r\\n        yc = y.c;\\r\\n\\r\\n      if (!xe || !ye) {\\r\\n\\r\\n        // Return ±Infinity if either ±Infinity.\\r\\n        if (!xc || !yc) return new BigNumber(a / 0);\\r\\n\\r\\n        // Either zero?\\r\\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\\r\\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\\r\\n      }\\r\\n\\r\\n      xe = bitFloor(xe);\\r\\n      ye = bitFloor(ye);\\r\\n      xc = xc.slice();\\r\\n\\r\\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\\r\\n      if (a = xe - ye) {\\r\\n        if (a > 0) {\\r\\n          ye = xe;\\r\\n          t = yc;\\r\\n        } else {\\r\\n          a = -a;\\r\\n          t = xc;\\r\\n        }\\r\\n\\r\\n        t.reverse();\\r\\n        for (; a--; t.push(0));\\r\\n        t.reverse();\\r\\n      }\\r\\n\\r\\n      a = xc.length;\\r\\n      b = yc.length;\\r\\n\\r\\n      // Point xc to the longer array, and b to the shorter length.\\r\\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\\r\\n\\r\\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\\r\\n      for (a = 0; b;) {\\r\\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\\r\\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\\r\\n      }\\r\\n\\r\\n      if (a) {\\r\\n        xc = [a].concat(xc);\\r\\n        ++ye;\\r\\n      }\\r\\n\\r\\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\\r\\n      // ye = MAX_EXP + 1 possible\\r\\n      return normalise(y, xc, ye);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * If sd is undefined or null or true or false, return the number of significant digits of\\r\\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\\r\\n     * If sd is true include integer-part trailing zeros in the count.\\r\\n     *\\r\\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\\r\\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\\r\\n     * ROUNDING_MODE if rm is omitted.\\r\\n     *\\r\\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\\r\\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\\r\\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\\r\\n     *\\r\\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\\r\\n     */\\r\\n    P.precision = P.sd = function (sd, rm) {\\r\\n      var c, n, v,\\r\\n        x = this;\\r\\n\\r\\n      if (sd != null && sd !== !!sd) {\\r\\n        intCheck(sd, 1, MAX);\\r\\n        if (rm == null) rm = ROUNDING_MODE;\\r\\n        else intCheck(rm, 0, 8);\\r\\n\\r\\n        return round(new BigNumber(x), sd, rm);\\r\\n      }\\r\\n\\r\\n      if (!(c = x.c)) return null;\\r\\n      v = c.length - 1;\\r\\n      n = v * LOG_BASE + 1;\\r\\n\\r\\n      if (v = c[v]) {\\r\\n\\r\\n        // Subtract the number of trailing zeros of the last element.\\r\\n        for (; v % 10 == 0; v /= 10, n--);\\r\\n\\r\\n        // Add the number of digits of the first element.\\r\\n        for (v = c[0]; v >= 10; v /= 10, n++);\\r\\n      }\\r\\n\\r\\n      if (sd && x.e + 1 > n) n = x.e + 1;\\r\\n\\r\\n      return n;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\\r\\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\\r\\n     *\\r\\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\\r\\n     *\\r\\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\\r\\n     */\\r\\n    P.shiftedBy = function (k) {\\r\\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\\r\\n      return this.times('1e' + k);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     *  sqrt(-n) =  N\\r\\n     *  sqrt(N) =  N\\r\\n     *  sqrt(-I) =  N\\r\\n     *  sqrt(I) =  I\\r\\n     *  sqrt(0) =  0\\r\\n     *  sqrt(-0) = -0\\r\\n     *\\r\\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\\r\\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\\r\\n     */\\r\\n    P.squareRoot = P.sqrt = function () {\\r\\n      var m, n, r, rep, t,\\r\\n        x = this,\\r\\n        c = x.c,\\r\\n        s = x.s,\\r\\n        e = x.e,\\r\\n        dp = DECIMAL_PLACES + 4,\\r\\n        half = new BigNumber('0.5');\\r\\n\\r\\n      // Negative/NaN/Infinity/zero?\\r\\n      if (s !== 1 || !c || !c[0]) {\\r\\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\\r\\n      }\\r\\n\\r\\n      // Initial estimate.\\r\\n      s = Math.sqrt(+valueOf(x));\\r\\n\\r\\n      // Math.sqrt underflow/overflow?\\r\\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\\r\\n      if (s == 0 || s == 1 / 0) {\\r\\n        n = coeffToString(c);\\r\\n        if ((n.length + e) % 2 == 0) n += '0';\\r\\n        s = Math.sqrt(+n);\\r\\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\\r\\n\\r\\n        if (s == 1 / 0) {\\r\\n          n = '5e' + e;\\r\\n        } else {\\r\\n          n = s.toExponential();\\r\\n          n = n.slice(0, n.indexOf('e') + 1) + e;\\r\\n        }\\r\\n\\r\\n        r = new BigNumber(n);\\r\\n      } else {\\r\\n        r = new BigNumber(s + '');\\r\\n      }\\r\\n\\r\\n      // Check for zero.\\r\\n      // r could be zero if MIN_EXP is changed after the this value was created.\\r\\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\\r\\n      // coeffToString to throw.\\r\\n      if (r.c[0]) {\\r\\n        e = r.e;\\r\\n        s = e + dp;\\r\\n        if (s < 3) s = 0;\\r\\n\\r\\n        // Newton-Raphson iteration.\\r\\n        for (; ;) {\\r\\n          t = r;\\r\\n          r = half.times(t.plus(div(x, t, dp, 1)));\\r\\n\\r\\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\\r\\n\\r\\n            // The exponent of r may here be one less than the final result exponent,\\r\\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\\r\\n            // are indexed correctly.\\r\\n            if (r.e < e) --s;\\r\\n            n = n.slice(s - 3, s + 1);\\r\\n\\r\\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\\r\\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\\r\\n            // iteration.\\r\\n            if (n == '9999' || !rep && n == '4999') {\\r\\n\\r\\n              // On the first iteration only, check to see if rounding up gives the\\r\\n              // exact result as the nines may infinitely repeat.\\r\\n              if (!rep) {\\r\\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\\r\\n\\r\\n                if (t.times(t).eq(x)) {\\r\\n                  r = t;\\r\\n                  break;\\r\\n                }\\r\\n              }\\r\\n\\r\\n              dp += 4;\\r\\n              s += 4;\\r\\n              rep = 1;\\r\\n            } else {\\r\\n\\r\\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\\r\\n              // result. If not, then there are further digits and m will be truthy.\\r\\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\\r\\n\\r\\n                // Truncate to the first rounding digit.\\r\\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\\r\\n                m = !r.times(r).eq(x);\\r\\n              }\\r\\n\\r\\n              break;\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n\\r\\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a string representing the value of this BigNumber in exponential notation and\\r\\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\\r\\n     *\\r\\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\\r\\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\\r\\n     *\\r\\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\\r\\n     */\\r\\n    P.toExponential = function (dp, rm) {\\r\\n      if (dp != null) {\\r\\n        intCheck(dp, 0, MAX);\\r\\n        dp++;\\r\\n      }\\r\\n      return format(this, dp, rm, 1);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\\r\\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\\r\\n     *\\r\\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\\r\\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\\r\\n     *\\r\\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\\r\\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\\r\\n     *\\r\\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\\r\\n     */\\r\\n    P.toFixed = function (dp, rm) {\\r\\n      if (dp != null) {\\r\\n        intCheck(dp, 0, MAX);\\r\\n        dp = dp + this.e + 1;\\r\\n      }\\r\\n      return format(this, dp, rm);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\\r\\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\\r\\n     * of the format or FORMAT object (see BigNumber.set).\\r\\n     *\\r\\n     * The formatting object may contain some or all of the properties shown below.\\r\\n     *\\r\\n     * FORMAT = {\\r\\n     *   prefix: '',\\r\\n     *   groupSize: 3,\\r\\n     *   secondaryGroupSize: 0,\\r\\n     *   groupSeparator: ',',\\r\\n     *   decimalSeparator: '.',\\r\\n     *   fractionGroupSize: 0,\\r\\n     *   fractionGroupSeparator: '\\\\xA0',      // non-breaking space\\r\\n     *   suffix: ''\\r\\n     * };\\r\\n     *\\r\\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\\r\\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\\r\\n     * [format] {object} Formatting options. See FORMAT pbject above.\\r\\n     *\\r\\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\\r\\n     * '[BigNumber Error] Argument not an object: {format}'\\r\\n     */\\r\\n    P.toFormat = function (dp, rm, format) {\\r\\n      var str,\\r\\n        x = this;\\r\\n\\r\\n      if (format == null) {\\r\\n        if (dp != null && rm && typeof rm == 'object') {\\r\\n          format = rm;\\r\\n          rm = null;\\r\\n        } else if (dp && typeof dp == 'object') {\\r\\n          format = dp;\\r\\n          dp = rm = null;\\r\\n        } else {\\r\\n          format = FORMAT;\\r\\n        }\\r\\n      } else if (typeof format != 'object') {\\r\\n        throw Error\\r\\n          (bignumberError + 'Argument not an object: ' + format);\\r\\n      }\\r\\n\\r\\n      str = x.toFixed(dp, rm);\\r\\n\\r\\n      if (x.c) {\\r\\n        var i,\\r\\n          arr = str.split('.'),\\r\\n          g1 = +format.groupSize,\\r\\n          g2 = +format.secondaryGroupSize,\\r\\n          groupSeparator = format.groupSeparator || '',\\r\\n          intPart = arr[0],\\r\\n          fractionPart = arr[1],\\r\\n          isNeg = x.s < 0,\\r\\n          intDigits = isNeg ? intPart.slice(1) : intPart,\\r\\n          len = intDigits.length;\\r\\n\\r\\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\\r\\n\\r\\n        if (g1 > 0 && len > 0) {\\r\\n          i = len % g1 || g1;\\r\\n          intPart = intDigits.substr(0, i);\\r\\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\\r\\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\\r\\n          if (isNeg) intPart = '-' + intPart;\\r\\n        }\\r\\n\\r\\n        str = fractionPart\\r\\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\\r\\n          ? fractionPart.replace(new RegExp('\\\\\\\\d{' + g2 + '}\\\\\\\\B', 'g'),\\r\\n           '$&' + (format.fractionGroupSeparator || ''))\\r\\n          : fractionPart)\\r\\n         : intPart;\\r\\n      }\\r\\n\\r\\n      return (format.prefix || '') + str + (format.suffix || '');\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\\r\\n     * fraction with an integer numerator and an integer denominator.\\r\\n     * The denominator will be a positive non-zero value less than or equal to the specified\\r\\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\\r\\n     * the lowest value necessary to represent the number exactly.\\r\\n     *\\r\\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\\r\\n     *\\r\\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\\r\\n     */\\r\\n    P.toFraction = function (md) {\\r\\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\\r\\n        x = this,\\r\\n        xc = x.c;\\r\\n\\r\\n      if (md != null) {\\r\\n        n = new BigNumber(md);\\r\\n\\r\\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\\r\\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\\r\\n          throw Error\\r\\n            (bignumberError + 'Argument ' +\\r\\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\\r\\n        }\\r\\n      }\\r\\n\\r\\n      if (!xc) return new BigNumber(x);\\r\\n\\r\\n      d = new BigNumber(ONE);\\r\\n      n1 = d0 = new BigNumber(ONE);\\r\\n      d1 = n0 = new BigNumber(ONE);\\r\\n      s = coeffToString(xc);\\r\\n\\r\\n      // Determine initial denominator.\\r\\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\\r\\n      e = d.e = s.length - x.e - 1;\\r\\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\\r\\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\\r\\n\\r\\n      exp = MAX_EXP;\\r\\n      MAX_EXP = 1 / 0;\\r\\n      n = new BigNumber(s);\\r\\n\\r\\n      // n0 = d1 = 0\\r\\n      n0.c[0] = 0;\\r\\n\\r\\n      for (; ;)  {\\r\\n        q = div(n, d, 0, 1);\\r\\n        d2 = d0.plus(q.times(d1));\\r\\n        if (d2.comparedTo(md) == 1) break;\\r\\n        d0 = d1;\\r\\n        d1 = d2;\\r\\n        n1 = n0.plus(q.times(d2 = n1));\\r\\n        n0 = d2;\\r\\n        d = n.minus(q.times(d2 = d));\\r\\n        n = d2;\\r\\n      }\\r\\n\\r\\n      d2 = div(md.minus(d0), d1, 0, 1);\\r\\n      n0 = n0.plus(d2.times(n1));\\r\\n      d0 = d0.plus(d2.times(d1));\\r\\n      n0.s = n1.s = x.s;\\r\\n      e = e * 2;\\r\\n\\r\\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\\r\\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\\r\\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\\r\\n\\r\\n      MAX_EXP = exp;\\r\\n\\r\\n      return r;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return the value of this BigNumber converted to a number primitive.\\r\\n     */\\r\\n    P.toNumber = function () {\\r\\n      return +valueOf(this);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\\r\\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\\r\\n     * necessary to represent the integer part of the value in fixed-point notation, then use\\r\\n     * exponential notation.\\r\\n     *\\r\\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\\r\\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\\r\\n     *\\r\\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\\r\\n     */\\r\\n    P.toPrecision = function (sd, rm) {\\r\\n      if (sd != null) intCheck(sd, 1, MAX);\\r\\n      return format(this, sd, rm, 2);\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\\r\\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\\r\\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\\r\\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\\r\\n     * TO_EXP_NEG, return exponential notation.\\r\\n     *\\r\\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\\r\\n     *\\r\\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\\r\\n     */\\r\\n    P.toString = function (b) {\\r\\n      var str,\\r\\n        n = this,\\r\\n        s = n.s,\\r\\n        e = n.e;\\r\\n\\r\\n      // Infinity or NaN?\\r\\n      if (e === null) {\\r\\n        if (s) {\\r\\n          str = 'Infinity';\\r\\n          if (s < 0) str = '-' + str;\\r\\n        } else {\\r\\n          str = 'NaN';\\r\\n        }\\r\\n      } else {\\r\\n        if (b == null) {\\r\\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\\r\\n           ? toExponential(coeffToString(n.c), e)\\r\\n           : toFixedPoint(coeffToString(n.c), e, '0');\\r\\n        } else if (b === 10) {\\r\\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\\r\\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\\r\\n        } else {\\r\\n          intCheck(b, 2, ALPHABET.length, 'Base');\\r\\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\\r\\n        }\\r\\n\\r\\n        if (s < 0 && n.c[0]) str = '-' + str;\\r\\n      }\\r\\n\\r\\n      return str;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\r\\n     * Return as toString, but do not accept a base argument, and include the minus sign for\\r\\n     * negative zero.\\r\\n     */\\r\\n    P.valueOf = P.toJSON = function () {\\r\\n      return valueOf(this);\\r\\n    };\\r\\n\\r\\n\\r\\n    P._isBigNumber = true;\\r\\n\\r\\n    if (configObject != null) BigNumber.set(configObject);\\r\\n\\r\\n    return BigNumber;\\r\\n  }\\r\\n\\r\\n\\r\\n  // PRIVATE HELPER FUNCTIONS\\r\\n\\r\\n  // These functions don't need access to variables,\\r\\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\\r\\n\\r\\n\\r\\n  function bitFloor(n) {\\r\\n    var i = n | 0;\\r\\n    return n > 0 || n === i ? i : i - 1;\\r\\n  }\\r\\n\\r\\n\\r\\n  // Return a coefficient array as a string of base 10 digits.\\r\\n  function coeffToString(a) {\\r\\n    var s, z,\\r\\n      i = 1,\\r\\n      j = a.length,\\r\\n      r = a[0] + '';\\r\\n\\r\\n    for (; i < j;) {\\r\\n      s = a[i++] + '';\\r\\n      z = LOG_BASE - s.length;\\r\\n      for (; z--; s = '0' + s);\\r\\n      r += s;\\r\\n    }\\r\\n\\r\\n    // Determine trailing zeros.\\r\\n    for (j = r.length; r.charCodeAt(--j) === 48;);\\r\\n\\r\\n    return r.slice(0, j + 1 || 1);\\r\\n  }\\r\\n\\r\\n\\r\\n  // Compare the value of BigNumbers x and y.\\r\\n  function compare(x, y) {\\r\\n    var a, b,\\r\\n      xc = x.c,\\r\\n      yc = y.c,\\r\\n      i = x.s,\\r\\n      j = y.s,\\r\\n      k = x.e,\\r\\n      l = y.e;\\r\\n\\r\\n    // Either NaN?\\r\\n    if (!i || !j) return null;\\r\\n\\r\\n    a = xc && !xc[0];\\r\\n    b = yc && !yc[0];\\r\\n\\r\\n    // Either zero?\\r\\n    if (a || b) return a ? b ? 0 : -j : i;\\r\\n\\r\\n    // Signs differ?\\r\\n    if (i != j) return i;\\r\\n\\r\\n    a = i < 0;\\r\\n    b = k == l;\\r\\n\\r\\n    // Either Infinity?\\r\\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\\r\\n\\r\\n    // Compare exponents.\\r\\n    if (!b) return k > l ^ a ? 1 : -1;\\r\\n\\r\\n    j = (k = xc.length) < (l = yc.length) ? k : l;\\r\\n\\r\\n    // Compare digit by digit.\\r\\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\\r\\n\\r\\n    // Compare lengths.\\r\\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\\r\\n  }\\r\\n\\r\\n\\r\\n  /*\\r\\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\\r\\n   */\\r\\n  function intCheck(n, min, max, name) {\\r\\n    if (n < min || n > max || n !== mathfloor(n)) {\\r\\n      throw Error\\r\\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\\r\\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\\r\\n         : ' not a primitive number: ') + String(n));\\r\\n    }\\r\\n  }\\r\\n\\r\\n\\r\\n  // Assumes finite n.\\r\\n  function isOdd(n) {\\r\\n    var k = n.c.length - 1;\\r\\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\\r\\n  }\\r\\n\\r\\n\\r\\n  function toExponential(str, e) {\\r\\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\\r\\n     (e < 0 ? 'e' : 'e+') + e;\\r\\n  }\\r\\n\\r\\n\\r\\n  function toFixedPoint(str, e, z) {\\r\\n    var len, zs;\\r\\n\\r\\n    // Negative exponent?\\r\\n    if (e < 0) {\\r\\n\\r\\n      // Prepend zeros.\\r\\n      for (zs = z + '.'; ++e; zs += z);\\r\\n      str = zs + str;\\r\\n\\r\\n    // Positive exponent\\r\\n    } else {\\r\\n      len = str.length;\\r\\n\\r\\n      // Append zeros.\\r\\n      if (++e > len) {\\r\\n        for (zs = z, e -= len; --e; zs += z);\\r\\n        str += zs;\\r\\n      } else if (e < len) {\\r\\n        str = str.slice(0, e) + '.' + str.slice(e);\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return str;\\r\\n  }\\r\\n\\r\\n\\r\\n  // EXPORT\\r\\n\\r\\n\\r\\n  BigNumber = clone();\\r\\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\\r\\n\\r\\n  // AMD.\\r\\n  if (typeof define == 'function' && define.amd) {\\r\\n    define(function () { return BigNumber; });\\r\\n\\r\\n  // Node.js and other environments that support module.exports.\\r\\n  } else if (typeof module != 'undefined' && module.exports) {\\r\\n    module.exports = BigNumber;\\r\\n\\r\\n  // Browser.\\r\\n  } else {\\r\\n    if (!globalObject) {\\r\\n      globalObject = typeof self != 'undefined' && self ? self : window;\\r\\n    }\\r\\n\\r\\n    globalObject.BigNumber = BigNumber;\\r\\n  }\\r\\n})(this);\\r\\n\\n},{}],20:[function(require,module,exports){\\n'use strict'\\n\\nconst { Buffer } = require('buffer')\\nconst symbol = Symbol.for('BufferList')\\n\\nfunction BufferList (buf) {\\n  if (!(this instanceof BufferList)) {\\n    return new BufferList(buf)\\n  }\\n\\n  BufferList._init.call(this, buf)\\n}\\n\\nBufferList._init = function _init (buf) {\\n  Object.defineProperty(this, symbol, { value: true })\\n\\n  this._bufs = []\\n  this.length = 0\\n\\n  if (buf) {\\n    this.append(buf)\\n  }\\n}\\n\\nBufferList.prototype._new = function _new (buf) {\\n  return new BufferList(buf)\\n}\\n\\nBufferList.prototype._offset = function _offset (offset) {\\n  if (offset === 0) {\\n    return [0, 0]\\n  }\\n\\n  let tot = 0\\n\\n  for (let i = 0; i < this._bufs.length; i++) {\\n    const _t = tot + this._bufs[i].length\\n    if (offset < _t || i === this._bufs.length - 1) {\\n      return [i, offset - tot]\\n    }\\n    tot = _t\\n  }\\n}\\n\\nBufferList.prototype._reverseOffset = function (blOffset) {\\n  const bufferId = blOffset[0]\\n  let offset = blOffset[1]\\n\\n  for (let i = 0; i < bufferId; i++) {\\n    offset += this._bufs[i].length\\n  }\\n\\n  return offset\\n}\\n\\nBufferList.prototype.get = function get (index) {\\n  if (index > this.length || index < 0) {\\n    return undefined\\n  }\\n\\n  const offset = this._offset(index)\\n\\n  return this._bufs[offset[0]][offset[1]]\\n}\\n\\nBufferList.prototype.slice = function slice (start, end) {\\n  if (typeof start === 'number' && start < 0) {\\n    start += this.length\\n  }\\n\\n  if (typeof end === 'number' && end < 0) {\\n    end += this.length\\n  }\\n\\n  return this.copy(null, 0, start, end)\\n}\\n\\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\\n  if (typeof srcStart !== 'number' || srcStart < 0) {\\n    srcStart = 0\\n  }\\n\\n  if (typeof srcEnd !== 'number' || srcEnd > this.length) {\\n    srcEnd = this.length\\n  }\\n\\n  if (srcStart >= this.length) {\\n    return dst || Buffer.alloc(0)\\n  }\\n\\n  if (srcEnd <= 0) {\\n    return dst || Buffer.alloc(0)\\n  }\\n\\n  const copy = !!dst\\n  const off = this._offset(srcStart)\\n  const len = srcEnd - srcStart\\n  let bytes = len\\n  let bufoff = (copy && dstStart) || 0\\n  let start = off[1]\\n\\n  // copy/slice everything\\n  if (srcStart === 0 && srcEnd === this.length) {\\n    if (!copy) {\\n      // slice, but full concat if multiple buffers\\n      return this._bufs.length === 1\\n        ? this._bufs[0]\\n        : Buffer.concat(this._bufs, this.length)\\n    }\\n\\n    // copy, need to copy individual buffers\\n    for (let i = 0; i < this._bufs.length; i++) {\\n      this._bufs[i].copy(dst, bufoff)\\n      bufoff += this._bufs[i].length\\n    }\\n\\n    return dst\\n  }\\n\\n  // easy, cheap case where it's a subset of one of the buffers\\n  if (bytes <= this._bufs[off[0]].length - start) {\\n    return copy\\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\\n      : this._bufs[off[0]].slice(start, start + bytes)\\n  }\\n\\n  if (!copy) {\\n    // a slice, we need something to copy in to\\n    dst = Buffer.allocUnsafe(len)\\n  }\\n\\n  for (let i = off[0]; i < this._bufs.length; i++) {\\n    const l = this._bufs[i].length - start\\n\\n    if (bytes > l) {\\n      this._bufs[i].copy(dst, bufoff, start)\\n      bufoff += l\\n    } else {\\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\\n      bufoff += l\\n      break\\n    }\\n\\n    bytes -= l\\n\\n    if (start) {\\n      start = 0\\n    }\\n  }\\n\\n  // safeguard so that we don't return uninitialized memory\\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\\n\\n  return dst\\n}\\n\\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\\n  start = start || 0\\n  end = typeof end !== 'number' ? this.length : end\\n\\n  if (start < 0) {\\n    start += this.length\\n  }\\n\\n  if (end < 0) {\\n    end += this.length\\n  }\\n\\n  if (start === end) {\\n    return this._new()\\n  }\\n\\n  const startOffset = this._offset(start)\\n  const endOffset = this._offset(end)\\n  const buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\\n\\n  if (endOffset[1] === 0) {\\n    buffers.pop()\\n  } else {\\n    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1])\\n  }\\n\\n  if (startOffset[1] !== 0) {\\n    buffers[0] = buffers[0].slice(startOffset[1])\\n  }\\n\\n  return this._new(buffers)\\n}\\n\\nBufferList.prototype.toString = function toString (encoding, start, end) {\\n  return this.slice(start, end).toString(encoding)\\n}\\n\\nBufferList.prototype.consume = function consume (bytes) {\\n  // first, normalize the argument, in accordance with how Buffer does it\\n  bytes = Math.trunc(bytes)\\n  // do nothing if not a positive number\\n  if (Number.isNaN(bytes) || bytes <= 0) return this\\n\\n  while (this._bufs.length) {\\n    if (bytes >= this._bufs[0].length) {\\n      bytes -= this._bufs[0].length\\n      this.length -= this._bufs[0].length\\n      this._bufs.shift()\\n    } else {\\n      this._bufs[0] = this._bufs[0].slice(bytes)\\n      this.length -= bytes\\n      break\\n    }\\n  }\\n\\n  return this\\n}\\n\\nBufferList.prototype.duplicate = function duplicate () {\\n  const copy = this._new()\\n\\n  for (let i = 0; i < this._bufs.length; i++) {\\n    copy.append(this._bufs[i])\\n  }\\n\\n  return copy\\n}\\n\\nBufferList.prototype.append = function append (buf) {\\n  if (buf == null) {\\n    return this\\n  }\\n\\n  if (buf.buffer) {\\n    // append a view of the underlying ArrayBuffer\\n    this._appendBuffer(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength))\\n  } else if (Array.isArray(buf)) {\\n    for (let i = 0; i < buf.length; i++) {\\n      this.append(buf[i])\\n    }\\n  } else if (this._isBufferList(buf)) {\\n    // unwrap argument into individual BufferLists\\n    for (let i = 0; i < buf._bufs.length; i++) {\\n      this.append(buf._bufs[i])\\n    }\\n  } else {\\n    // coerce number arguments to strings, since Buffer(number) does\\n    // uninitialized memory allocation\\n    if (typeof buf === 'number') {\\n      buf = buf.toString()\\n    }\\n\\n    this._appendBuffer(Buffer.from(buf))\\n  }\\n\\n  return this\\n}\\n\\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\\n  this._bufs.push(buf)\\n  this.length += buf.length\\n}\\n\\nBufferList.prototype.indexOf = function (search, offset, encoding) {\\n  if (encoding === undefined && typeof offset === 'string') {\\n    encoding = offset\\n    offset = undefined\\n  }\\n\\n  if (typeof search === 'function' || Array.isArray(search)) {\\n    throw new TypeError('The \\\"value\\\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\\n  } else if (typeof search === 'number') {\\n    search = Buffer.from([search])\\n  } else if (typeof search === 'string') {\\n    search = Buffer.from(search, encoding)\\n  } else if (this._isBufferList(search)) {\\n    search = search.slice()\\n  } else if (Array.isArray(search.buffer)) {\\n    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength)\\n  } else if (!Buffer.isBuffer(search)) {\\n    search = Buffer.from(search)\\n  }\\n\\n  offset = Number(offset || 0)\\n\\n  if (isNaN(offset)) {\\n    offset = 0\\n  }\\n\\n  if (offset < 0) {\\n    offset = this.length + offset\\n  }\\n\\n  if (offset < 0) {\\n    offset = 0\\n  }\\n\\n  if (search.length === 0) {\\n    return offset > this.length ? this.length : offset\\n  }\\n\\n  const blOffset = this._offset(offset)\\n  let blIndex = blOffset[0] // index of which internal buffer we're working on\\n  let buffOffset = blOffset[1] // offset of the internal buffer we're working on\\n\\n  // scan over each buffer\\n  for (; blIndex < this._bufs.length; blIndex++) {\\n    const buff = this._bufs[blIndex]\\n\\n    while (buffOffset < buff.length) {\\n      const availableWindow = buff.length - buffOffset\\n\\n      if (availableWindow >= search.length) {\\n        const nativeSearchResult = buff.indexOf(search, buffOffset)\\n\\n        if (nativeSearchResult !== -1) {\\n          return this._reverseOffset([blIndex, nativeSearchResult])\\n        }\\n\\n        buffOffset = buff.length - search.length + 1 // end of native search window\\n      } else {\\n        const revOffset = this._reverseOffset([blIndex, buffOffset])\\n\\n        if (this._match(revOffset, search)) {\\n          return revOffset\\n        }\\n\\n        buffOffset++\\n      }\\n    }\\n\\n    buffOffset = 0\\n  }\\n\\n  return -1\\n}\\n\\nBufferList.prototype._match = function (offset, search) {\\n  if (this.length - offset < search.length) {\\n    return false\\n  }\\n\\n  for (let searchOffset = 0; searchOffset < search.length; searchOffset++) {\\n    if (this.get(offset + searchOffset) !== search[searchOffset]) {\\n      return false\\n    }\\n  }\\n  return true\\n}\\n\\n;(function () {\\n  const methods = {\\n    readDoubleBE: 8,\\n    readDoubleLE: 8,\\n    readFloatBE: 4,\\n    readFloatLE: 4,\\n    readInt32BE: 4,\\n    readInt32LE: 4,\\n    readUInt32BE: 4,\\n    readUInt32LE: 4,\\n    readInt16BE: 2,\\n    readInt16LE: 2,\\n    readUInt16BE: 2,\\n    readUInt16LE: 2,\\n    readInt8: 1,\\n    readUInt8: 1,\\n    readIntBE: null,\\n    readIntLE: null,\\n    readUIntBE: null,\\n    readUIntLE: null\\n  }\\n\\n  for (const m in methods) {\\n    (function (m) {\\n      if (methods[m] === null) {\\n        BufferList.prototype[m] = function (offset, byteLength) {\\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\\n        }\\n      } else {\\n        BufferList.prototype[m] = function (offset) {\\n          return this.slice(offset, offset + methods[m])[m](0)\\n        }\\n      }\\n    }(m))\\n  }\\n}())\\n\\n// Used internally by the class and also as an indicator of this object being\\n// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser\\n// environment because there could be multiple different copies of the\\n// BufferList class and some `BufferList`s might be `BufferList`s.\\nBufferList.prototype._isBufferList = function _isBufferList (b) {\\n  return b instanceof BufferList || BufferList.isBufferList(b)\\n}\\n\\nBufferList.isBufferList = function isBufferList (b) {\\n  return b != null && b[symbol]\\n}\\n\\nmodule.exports = BufferList\\n\\n},{\\\"buffer\\\":39}],21:[function(require,module,exports){\\n// Blake2B in pure Javascript\\n// Adapted from the reference implementation in RFC7693\\n// Ported to Javascript by DC - https://github.com/dcposch\\n\\nvar util = require('./util')\\n\\n// 64-bit unsigned addition\\n// Sets v[a,a+1] += v[b,b+1]\\n// v should be a Uint32Array\\nfunction ADD64AA (v, a, b) {\\n  var o0 = v[a] + v[b]\\n  var o1 = v[a + 1] + v[b + 1]\\n  if (o0 >= 0x100000000) {\\n    o1++\\n  }\\n  v[a] = o0\\n  v[a + 1] = o1\\n}\\n\\n// 64-bit unsigned addition\\n// Sets v[a,a+1] += b\\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\\nfunction ADD64AC (v, a, b0, b1) {\\n  var o0 = v[a] + b0\\n  if (b0 < 0) {\\n    o0 += 0x100000000\\n  }\\n  var o1 = v[a + 1] + b1\\n  if (o0 >= 0x100000000) {\\n    o1++\\n  }\\n  v[a] = o0\\n  v[a + 1] = o1\\n}\\n\\n// Little-endian byte access\\nfunction B2B_GET32 (arr, i) {\\n  return (arr[i] ^\\n  (arr[i + 1] << 8) ^\\n  (arr[i + 2] << 16) ^\\n  (arr[i + 3] << 24))\\n}\\n\\n// G Mixing function\\n// The ROTRs are inlined for speed\\nfunction B2B_G (a, b, c, d, ix, iy) {\\n  var x0 = m[ix]\\n  var x1 = m[ix + 1]\\n  var y0 = m[iy]\\n  var y1 = m[iy + 1]\\n\\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\\n\\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\\n  var xor0 = v[d] ^ v[a]\\n  var xor1 = v[d + 1] ^ v[a + 1]\\n  v[d] = xor1\\n  v[d + 1] = xor0\\n\\n  ADD64AA(v, c, d)\\n\\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\\n  xor0 = v[b] ^ v[c]\\n  xor1 = v[b + 1] ^ v[c + 1]\\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\\n\\n  ADD64AA(v, a, b)\\n  ADD64AC(v, a, y0, y1)\\n\\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\\n  xor0 = v[d] ^ v[a]\\n  xor1 = v[d + 1] ^ v[a + 1]\\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\\n\\n  ADD64AA(v, c, d)\\n\\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\\n  xor0 = v[b] ^ v[c]\\n  xor1 = v[b + 1] ^ v[c + 1]\\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\\n}\\n\\n// Initialization Vector\\nvar BLAKE2B_IV32 = new Uint32Array([\\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\\n])\\n\\nvar SIGMA8 = [\\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\\n]\\n\\n// These are offsets into a uint64 buffer.\\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\\n// because this is Javascript and we don't have uint64s\\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\\n\\n// Compression function. 'last' flag indicates last block.\\n// Note we're representing 16 uint64s as 32 uint32s\\nvar v = new Uint32Array(32)\\nvar m = new Uint32Array(32)\\nfunction blake2bCompress (ctx, last) {\\n  var i = 0\\n\\n  // init work variables\\n  for (i = 0; i < 16; i++) {\\n    v[i] = ctx.h[i]\\n    v[i + 16] = BLAKE2B_IV32[i]\\n  }\\n\\n  // low 64 bits of offset\\n  v[24] = v[24] ^ ctx.t\\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\\n  // high 64 bits not supported, offset may not be higher than 2**53-1\\n\\n  // last block flag set ?\\n  if (last) {\\n    v[28] = ~v[28]\\n    v[29] = ~v[29]\\n  }\\n\\n  // get little-endian words\\n  for (i = 0; i < 32; i++) {\\n    m[i] = B2B_GET32(ctx.b, 4 * i)\\n  }\\n\\n  // twelve rounds of mixing\\n  // uncomment the DebugPrint calls to log the computation\\n  // and match the RFC sample documentation\\n  // util.debugPrint('          m[16]', m, 64)\\n  for (i = 0; i < 12; i++) {\\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\\n  }\\n  // util.debugPrint('   (i=12) v[16]', v, 64)\\n\\n  for (i = 0; i < 16; i++) {\\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\\n  }\\n  // util.debugPrint('h[8]', ctx.h, 64)\\n}\\n\\n// Creates a BLAKE2b hashing context\\n// Requires an output length between 1 and 64 bytes\\n// Takes an optional Uint8Array key\\nfunction blake2bInit (outlen, key) {\\n  if (outlen === 0 || outlen > 64) {\\n    throw new Error('Illegal output length, expected 0 < length <= 64')\\n  }\\n  if (key && key.length > 64) {\\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\\n  }\\n\\n  // state, 'param block'\\n  var ctx = {\\n    b: new Uint8Array(128),\\n    h: new Uint32Array(16),\\n    t: 0, // input count\\n    c: 0, // pointer within buffer\\n    outlen: outlen // output length in bytes\\n  }\\n\\n  // initialize hash state\\n  for (var i = 0; i < 16; i++) {\\n    ctx.h[i] = BLAKE2B_IV32[i]\\n  }\\n  var keylen = key ? key.length : 0\\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\\n\\n  // key the hash, if applicable\\n  if (key) {\\n    blake2bUpdate(ctx, key)\\n    // at the end\\n    ctx.c = 128\\n  }\\n\\n  return ctx\\n}\\n\\n// Updates a BLAKE2b streaming hash\\n// Requires hash context and Uint8Array (byte array)\\nfunction blake2bUpdate (ctx, input) {\\n  for (var i = 0; i < input.length; i++) {\\n    if (ctx.c === 128) { // buffer full ?\\n      ctx.t += ctx.c // add counters\\n      blake2bCompress(ctx, false) // compress (not last)\\n      ctx.c = 0 // counter to zero\\n    }\\n    ctx.b[ctx.c++] = input[i]\\n  }\\n}\\n\\n// Completes a BLAKE2b streaming hash\\n// Returns a Uint8Array containing the message digest\\nfunction blake2bFinal (ctx) {\\n  ctx.t += ctx.c // mark last block offset\\n\\n  while (ctx.c < 128) { // fill up with zeros\\n    ctx.b[ctx.c++] = 0\\n  }\\n  blake2bCompress(ctx, true) // final block flag = 1\\n\\n  // little endian convert and store\\n  var out = new Uint8Array(ctx.outlen)\\n  for (var i = 0; i < ctx.outlen; i++) {\\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\\n  }\\n  return out\\n}\\n\\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\\n//\\n// Returns a n-byte Uint8Array\\n//\\n// Parameters:\\n// - input - the input bytes, as a string, Buffer or Uint8Array\\n// - key - optional key Uint8Array, up to 64 bytes\\n// - outlen - optional output length in bytes, default 64\\nfunction blake2b (input, key, outlen) {\\n  // preprocess inputs\\n  outlen = outlen || 64\\n  input = util.normalizeInput(input)\\n\\n  // do the math\\n  var ctx = blake2bInit(outlen, key)\\n  blake2bUpdate(ctx, input)\\n  return blake2bFinal(ctx)\\n}\\n\\n// Computes the BLAKE2B hash of a string or byte array\\n//\\n// Returns an n-byte hash in hex, all lowercase\\n//\\n// Parameters:\\n// - input - the input bytes, as a string, Buffer, or Uint8Array\\n// - key - optional key Uint8Array, up to 64 bytes\\n// - outlen - optional output length in bytes, default 64\\nfunction blake2bHex (input, key, outlen) {\\n  var output = blake2b(input, key, outlen)\\n  return util.toHex(output)\\n}\\n\\nmodule.exports = {\\n  blake2b: blake2b,\\n  blake2bHex: blake2bHex,\\n  blake2bInit: blake2bInit,\\n  blake2bUpdate: blake2bUpdate,\\n  blake2bFinal: blake2bFinal\\n}\\n\\n},{\\\"./util\\\":24}],22:[function(require,module,exports){\\n// BLAKE2s hash function in pure Javascript\\n// Adapted from the reference implementation in RFC7693\\n// Ported to Javascript by DC - https://github.com/dcposch\\n\\nvar util = require('./util')\\n\\n// Little-endian byte access.\\n// Expects a Uint8Array and an index\\n// Returns the little-endian uint32 at v[i..i+3]\\nfunction B2S_GET32 (v, i) {\\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\\n}\\n\\n// Mixing function G.\\nfunction B2S_G (a, b, c, d, x, y) {\\n  v[a] = v[a] + v[b] + x\\n  v[d] = ROTR32(v[d] ^ v[a], 16)\\n  v[c] = v[c] + v[d]\\n  v[b] = ROTR32(v[b] ^ v[c], 12)\\n  v[a] = v[a] + v[b] + y\\n  v[d] = ROTR32(v[d] ^ v[a], 8)\\n  v[c] = v[c] + v[d]\\n  v[b] = ROTR32(v[b] ^ v[c], 7)\\n}\\n\\n// 32-bit right rotation\\n// x should be a uint32\\n// y must be between 1 and 31, inclusive\\nfunction ROTR32 (x, y) {\\n  return (x >>> y) ^ (x << (32 - y))\\n}\\n\\n// Initialization Vector.\\nvar BLAKE2S_IV = new Uint32Array([\\n  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\\n  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])\\n\\nvar SIGMA = new Uint8Array([\\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])\\n\\n// Compression function. \\\"last\\\" flag indicates last block\\nvar v = new Uint32Array(16)\\nvar m = new Uint32Array(16)\\nfunction blake2sCompress (ctx, last) {\\n  var i = 0\\n  for (i = 0; i < 8; i++) { // init work variables\\n    v[i] = ctx.h[i]\\n    v[i + 8] = BLAKE2S_IV[i]\\n  }\\n\\n  v[12] ^= ctx.t // low 32 bits of offset\\n  v[13] ^= (ctx.t / 0x100000000) // high 32 bits\\n  if (last) { // last block flag set ?\\n    v[14] = ~v[14]\\n  }\\n\\n  for (i = 0; i < 16; i++) { // get little-endian words\\n    m[i] = B2S_GET32(ctx.b, 4 * i)\\n  }\\n\\n  // ten rounds of mixing\\n  // uncomment the DebugPrint calls to log the computation\\n  // and match the RFC sample documentation\\n  // util.debugPrint('          m[16]', m, 32)\\n  for (i = 0; i < 10; i++) {\\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\\n  }\\n  // util.debugPrint('   (i=10) v[16]', v, 32)\\n\\n  for (i = 0; i < 8; i++) {\\n    ctx.h[i] ^= v[i] ^ v[i + 8]\\n  }\\n  // util.debugPrint('h[8]', ctx.h, 32)\\n}\\n\\n// Creates a BLAKE2s hashing context\\n// Requires an output length between 1 and 32 bytes\\n// Takes an optional Uint8Array key\\nfunction blake2sInit (outlen, key) {\\n  if (!(outlen > 0 && outlen <= 32)) {\\n    throw new Error('Incorrect output length, should be in [1, 32]')\\n  }\\n  var keylen = key ? key.length : 0\\n  if (key && !(keylen > 0 && keylen <= 32)) {\\n    throw new Error('Incorrect key length, should be in [1, 32]')\\n  }\\n\\n  var ctx = {\\n    h: new Uint32Array(BLAKE2S_IV), // hash state\\n    b: new Uint32Array(64), // input block\\n    c: 0, // pointer within block\\n    t: 0, // input count\\n    outlen: outlen // output length in bytes\\n  }\\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\\n\\n  if (keylen > 0) {\\n    blake2sUpdate(ctx, key)\\n    ctx.c = 64 // at the end\\n  }\\n\\n  return ctx\\n}\\n\\n// Updates a BLAKE2s streaming hash\\n// Requires hash context and Uint8Array (byte array)\\nfunction blake2sUpdate (ctx, input) {\\n  for (var i = 0; i < input.length; i++) {\\n    if (ctx.c === 64) { // buffer full ?\\n      ctx.t += ctx.c // add counters\\n      blake2sCompress(ctx, false) // compress (not last)\\n      ctx.c = 0 // counter to zero\\n    }\\n    ctx.b[ctx.c++] = input[i]\\n  }\\n}\\n\\n// Completes a BLAKE2s streaming hash\\n// Returns a Uint8Array containing the message digest\\nfunction blake2sFinal (ctx) {\\n  ctx.t += ctx.c // mark last block offset\\n  while (ctx.c < 64) { // fill up with zeros\\n    ctx.b[ctx.c++] = 0\\n  }\\n  blake2sCompress(ctx, true) // final block flag = 1\\n\\n  // little endian convert and store\\n  var out = new Uint8Array(ctx.outlen)\\n  for (var i = 0; i < ctx.outlen; i++) {\\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF\\n  }\\n  return out\\n}\\n\\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\\n//\\n// Returns a n-byte Uint8Array\\n//\\n// Parameters:\\n// - input - the input bytes, as a string, Buffer, or Uint8Array\\n// - key - optional key Uint8Array, up to 32 bytes\\n// - outlen - optional output length in bytes, default 64\\nfunction blake2s (input, key, outlen) {\\n  // preprocess inputs\\n  outlen = outlen || 32\\n  input = util.normalizeInput(input)\\n\\n  // do the math\\n  var ctx = blake2sInit(outlen, key)\\n  blake2sUpdate(ctx, input)\\n  return blake2sFinal(ctx)\\n}\\n\\n// Computes the BLAKE2S hash of a string or byte array\\n//\\n// Returns an n-byte hash in hex, all lowercase\\n//\\n// Parameters:\\n// - input - the input bytes, as a string, Buffer, or Uint8Array\\n// - key - optional key Uint8Array, up to 32 bytes\\n// - outlen - optional output length in bytes, default 64\\nfunction blake2sHex (input, key, outlen) {\\n  var output = blake2s(input, key, outlen)\\n  return util.toHex(output)\\n}\\n\\nmodule.exports = {\\n  blake2s: blake2s,\\n  blake2sHex: blake2sHex,\\n  blake2sInit: blake2sInit,\\n  blake2sUpdate: blake2sUpdate,\\n  blake2sFinal: blake2sFinal\\n}\\n\\n},{\\\"./util\\\":24}],23:[function(require,module,exports){\\nvar b2b = require('./blake2b')\\nvar b2s = require('./blake2s')\\n\\nmodule.exports = {\\n  blake2b: b2b.blake2b,\\n  blake2bHex: b2b.blake2bHex,\\n  blake2bInit: b2b.blake2bInit,\\n  blake2bUpdate: b2b.blake2bUpdate,\\n  blake2bFinal: b2b.blake2bFinal,\\n  blake2s: b2s.blake2s,\\n  blake2sHex: b2s.blake2sHex,\\n  blake2sInit: b2s.blake2sInit,\\n  blake2sUpdate: b2s.blake2sUpdate,\\n  blake2sFinal: b2s.blake2sFinal\\n}\\n\\n},{\\\"./blake2b\\\":21,\\\"./blake2s\\\":22}],24:[function(require,module,exports){\\n(function (Buffer){(function (){\\nvar ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\\n\\n// For convenience, let people hash a string, not just a Uint8Array\\nfunction normalizeInput (input) {\\n  var ret\\n  if (input instanceof Uint8Array) {\\n    ret = input\\n  } else if (input instanceof Buffer) {\\n    ret = new Uint8Array(input)\\n  } else if (typeof (input) === 'string') {\\n    ret = new Uint8Array(Buffer.from(input, 'utf8'))\\n  } else {\\n    throw new Error(ERROR_MSG_INPUT)\\n  }\\n  return ret\\n}\\n\\n// Converts a Uint8Array to a hexadecimal string\\n// For example, toHex([255, 0, 255]) returns \\\"ff00ff\\\"\\nfunction toHex (bytes) {\\n  return Array.prototype.map.call(bytes, function (n) {\\n    return (n < 16 ? '0' : '') + n.toString(16)\\n  }).join('')\\n}\\n\\n// Converts any value in [0...2^32-1] to an 8-character hex string\\nfunction uint32ToHex (val) {\\n  return (0x100000000 + val).toString(16).substring(1)\\n}\\n\\n// For debugging: prints out hash state in the same format as the RFC\\n// sample computation exactly, so that you can diff\\nfunction debugPrint (label, arr, size) {\\n  var msg = '\\\\n' + label + ' = '\\n  for (var i = 0; i < arr.length; i += 2) {\\n    if (size === 32) {\\n      msg += uint32ToHex(arr[i]).toUpperCase()\\n      msg += ' '\\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\\n    } else if (size === 64) {\\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\\n      msg += uint32ToHex(arr[i]).toUpperCase()\\n    } else throw new Error('Invalid size ' + size)\\n    if (i % 6 === 4) {\\n      msg += '\\\\n' + new Array(label.length + 4).join(' ')\\n    } else if (i < arr.length - 2) {\\n      msg += ' '\\n    }\\n  }\\n  console.log(msg)\\n}\\n\\n// For performance testing: generates N bytes of input, hashes M times\\n// Measures and prints MB/second hash performance each time\\nfunction testSpeed (hashFn, N, M) {\\n  var startMs = new Date().getTime()\\n\\n  var input = new Uint8Array(N)\\n  for (var i = 0; i < N; i++) {\\n    input[i] = i % 256\\n  }\\n  var genMs = new Date().getTime()\\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\\n  startMs = genMs\\n\\n  for (i = 0; i < M; i++) {\\n    var hashHex = hashFn(input)\\n    var hashMs = new Date().getTime()\\n    var ms = hashMs - startMs\\n    startMs = hashMs\\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\\n    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')\\n  }\\n}\\n\\nmodule.exports = {\\n  normalizeInput: normalizeInput,\\n  toHex: toHex,\\n  debugPrint: debugPrint,\\n  testSpeed: testSpeed\\n}\\n\\n}).call(this)}).call(this,require(\\\"buffer\\\").Buffer)\\n},{\\\"buffer\\\":39}],25:[function(require,module,exports){\\n'use strict';\\n\\nconst {\\n    URLWithLegacySupport,\\n    format,\\n    URLSearchParams,\\n    defaultBase\\n} = require('./src/url');\\nconst relative = require('./src/relative');\\n\\nmodule.exports = {\\n    URL: URLWithLegacySupport,\\n    URLSearchParams,\\n    format,\\n    relative,\\n    defaultBase\\n};\\n\\n},{\\\"./src/relative\\\":26,\\\"./src/url\\\":27}],26:[function(require,module,exports){\\n'use strict';\\n\\nconst { URLWithLegacySupport, format } = require('./url');\\n\\nmodule.exports = (url, location = {}, protocolMap = {}, defaultProtocol) => {\\n    let protocol = location.protocol ?\\n        location.protocol.replace(':', '') :\\n        'http';\\n\\n    // Check protocol map\\n    protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':';\\n    let urlParsed;\\n\\n    try {\\n        urlParsed = new URLWithLegacySupport(url);\\n    } catch (err) {\\n        urlParsed = {};\\n    }\\n\\n    const base = Object.assign({}, location, {\\n        protocol: protocol || urlParsed.protocol,\\n        host: location.host || urlParsed.host\\n    });\\n\\n    return new URLWithLegacySupport(url, format(base)).toString();\\n};\\n\\n},{\\\"./url\\\":27}],27:[function(require,module,exports){\\n'use strict';\\n\\nconst defaultBase = self.location ?\\n    self.location.protocol + '//' + self.location.host :\\n    '';\\nconst URL = self.URL;\\n\\nclass URLWithLegacySupport {\\n    constructor(url = '', base = defaultBase) {\\n        this.super = new URL(url, base);\\n        this.path = this.pathname + this.search;\\n        this.auth =\\n            this.username && this.password ?\\n                this.username + ':' + this.password :\\n                null;\\n\\n        this.query =\\n            this.search && this.search.startsWith('?') ?\\n                this.search.slice(1) :\\n                null;\\n    }\\n\\n    get hash() {\\n        return this.super.hash;\\n    }\\n    get host() {\\n        return this.super.host;\\n    }\\n    get hostname() {\\n        return this.super.hostname;\\n    }\\n    get href() {\\n        return this.super.href;\\n    }\\n    get origin() {\\n        return this.super.origin;\\n    }\\n    get password() {\\n        return this.super.password;\\n    }\\n    get pathname() {\\n        return this.super.pathname;\\n    }\\n    get port() {\\n        return this.super.port;\\n    }\\n    get protocol() {\\n        return this.super.protocol;\\n    }\\n    get search() {\\n        return this.super.search;\\n    }\\n    get searchParams() {\\n        return this.super.searchParams;\\n    }\\n    get username() {\\n        return this.super.username;\\n    }\\n\\n    set hash(hash) {\\n        this.super.hash = hash;\\n    }\\n    set host(host) {\\n        this.super.host = host;\\n    }\\n    set hostname(hostname) {\\n        this.super.hostname = hostname;\\n    }\\n    set href(href) {\\n        this.super.href = href;\\n    }\\n    set origin(origin) {\\n        this.super.origin = origin;\\n    }\\n    set password(password) {\\n        this.super.password = password;\\n    }\\n    set pathname(pathname) {\\n        this.super.pathname = pathname;\\n    }\\n    set port(port) {\\n        this.super.port = port;\\n    }\\n    set protocol(protocol) {\\n        this.super.protocol = protocol;\\n    }\\n    set search(search) {\\n        this.super.search = search;\\n    }\\n    set searchParams(searchParams) {\\n        this.super.searchParams = searchParams;\\n    }\\n    set username(username) {\\n        this.super.username = username;\\n    }\\n\\n    createObjectURL(o) {\\n        return this.super.createObjectURL(o);\\n    }\\n    revokeObjectURL(o) {\\n        this.super.revokeObjectURL(o);\\n    }\\n    toJSON() {\\n        return this.super.toJSON();\\n    }\\n    toString() {\\n        return this.super.toString();\\n    }\\n    format() {\\n        return this.toString();\\n    }\\n}\\n\\nfunction format(obj) {\\n    if (typeof obj === 'string') {\\n        const url = new URL(obj);\\n\\n        return url.toString();\\n    }\\n\\n    if (!(obj instanceof URL)) {\\n        const userPass =\\n            obj.username && obj.password ?\\n                `${obj.username}:${obj.password}@` :\\n                '';\\n        const auth = obj.auth ? obj.auth + '@' : '';\\n        const port = obj.port ? ':' + obj.port : '';\\n        const protocol = obj.protocol ? obj.protocol + '//' : '';\\n        const host = obj.host || '';\\n        const hostname = obj.hostname || '';\\n        const search = obj.search || (obj.query ? '?' + obj.query : '');\\n        const hash = obj.hash || '';\\n        const pathname = obj.pathname || '';\\n        const path = obj.path || pathname + search;\\n\\n        return `${protocol}${userPass || auth}${host ||\\n            hostname + port}${path}${hash}`;\\n    }\\n}\\n\\nmodule.exports = {\\n    URLWithLegacySupport,\\n    URLSearchParams: self.URLSearchParams,\\n    defaultBase,\\n    format\\n};\\n\\n},{}],28:[function(require,module,exports){\\n'use strict'\\n\\nconst Bignumber = require('bignumber.js').BigNumber\\n\\nexports.MT = {\\n  POS_INT: 0,\\n  NEG_INT: 1,\\n  BYTE_STRING: 2,\\n  UTF8_STRING: 3,\\n  ARRAY: 4,\\n  MAP: 5,\\n  TAG: 6,\\n  SIMPLE_FLOAT: 7\\n}\\n\\nexports.TAG = {\\n  DATE_STRING: 0,\\n  DATE_EPOCH: 1,\\n  POS_BIGINT: 2,\\n  NEG_BIGINT: 3,\\n  DECIMAL_FRAC: 4,\\n  BIGFLOAT: 5,\\n  BASE64URL_EXPECTED: 21,\\n  BASE64_EXPECTED: 22,\\n  BASE16_EXPECTED: 23,\\n  CBOR: 24,\\n  URI: 32,\\n  BASE64URL: 33,\\n  BASE64: 34,\\n  REGEXP: 35,\\n  MIME: 36\\n}\\n\\nexports.NUMBYTES = {\\n  ZERO: 0,\\n  ONE: 24,\\n  TWO: 25,\\n  FOUR: 26,\\n  EIGHT: 27,\\n  INDEFINITE: 31\\n}\\n\\nexports.SIMPLE = {\\n  FALSE: 20,\\n  TRUE: 21,\\n  NULL: 22,\\n  UNDEFINED: 23\\n}\\n\\nexports.SYMS = {\\n  NULL: Symbol('null'),\\n  UNDEFINED: Symbol('undef'),\\n  PARENT: Symbol('parent'),\\n  BREAK: Symbol('break'),\\n  STREAM: Symbol('stream')\\n}\\n\\nexports.SHIFT32 = Math.pow(2, 32)\\nexports.SHIFT16 = Math.pow(2, 16)\\n\\nexports.MAX_SAFE_HIGH = 0x1fffff\\nexports.NEG_ONE = new Bignumber(-1)\\nexports.TEN = new Bignumber(10)\\nexports.TWO = new Bignumber(2)\\n\\nexports.PARENT = {\\n  ARRAY: 0,\\n  OBJECT: 1,\\n  MAP: 2,\\n  TAG: 3,\\n  BYTE_STRING: 4,\\n  UTF8_STRING: 5\\n}\\n\\n},{\\\"bignumber.js\\\":19}],29:[function(require,module,exports){\\n/* eslint-disable */\\n\\nmodule.exports = function decodeAsm (stdlib, foreign, buffer) {\\n  'use asm'\\n\\n  // -- Imports\\n\\n  var heap = new stdlib.Uint8Array(buffer)\\n  // var log = foreign.log\\n  var pushInt = foreign.pushInt\\n  var pushInt32 = foreign.pushInt32\\n  var pushInt32Neg = foreign.pushInt32Neg\\n  var pushInt64 = foreign.pushInt64\\n  var pushInt64Neg = foreign.pushInt64Neg\\n  var pushFloat = foreign.pushFloat\\n  var pushFloatSingle = foreign.pushFloatSingle\\n  var pushFloatDouble = foreign.pushFloatDouble\\n  var pushTrue = foreign.pushTrue\\n  var pushFalse = foreign.pushFalse\\n  var pushUndefined = foreign.pushUndefined\\n  var pushNull = foreign.pushNull\\n  var pushInfinity = foreign.pushInfinity\\n  var pushInfinityNeg = foreign.pushInfinityNeg\\n  var pushNaN = foreign.pushNaN\\n  var pushNaNNeg = foreign.pushNaNNeg\\n\\n  var pushArrayStart = foreign.pushArrayStart\\n  var pushArrayStartFixed = foreign.pushArrayStartFixed\\n  var pushArrayStartFixed32 = foreign.pushArrayStartFixed32\\n  var pushArrayStartFixed64 = foreign.pushArrayStartFixed64\\n  var pushObjectStart = foreign.pushObjectStart\\n  var pushObjectStartFixed = foreign.pushObjectStartFixed\\n  var pushObjectStartFixed32 = foreign.pushObjectStartFixed32\\n  var pushObjectStartFixed64 = foreign.pushObjectStartFixed64\\n\\n  var pushByteString = foreign.pushByteString\\n  var pushByteStringStart = foreign.pushByteStringStart\\n  var pushUtf8String = foreign.pushUtf8String\\n  var pushUtf8StringStart = foreign.pushUtf8StringStart\\n\\n  var pushSimpleUnassigned = foreign.pushSimpleUnassigned\\n\\n  var pushTagStart = foreign.pushTagStart\\n  var pushTagStart4 = foreign.pushTagStart4\\n  var pushTagStart8 = foreign.pushTagStart8\\n  var pushTagUnassigned = foreign.pushTagUnassigned\\n\\n  var pushBreak = foreign.pushBreak\\n\\n  var pow = stdlib.Math.pow\\n\\n  // -- Constants\\n\\n\\n  // -- Mutable Variables\\n\\n  var offset = 0\\n  var inputLength = 0\\n  var code = 0\\n\\n  // Decode a cbor string represented as Uint8Array\\n  // which is allocated on the heap from 0 to inputLength\\n  //\\n  // input - Int\\n  //\\n  // Returns Code - Int,\\n  // Success = 0\\n  // Error > 0\\n  function parse (input) {\\n    input = input | 0\\n\\n    offset = 0\\n    inputLength = input\\n\\n    while ((offset | 0) < (inputLength | 0)) {\\n      code = jumpTable[heap[offset] & 255](heap[offset] | 0) | 0\\n\\n      if ((code | 0) > 0) {\\n        break\\n      }\\n    }\\n\\n    return code | 0\\n  }\\n\\n  // -- Helper Function\\n\\n  function checkOffset (n) {\\n    n = n | 0\\n\\n    if ((((offset | 0) + (n | 0)) | 0) < (inputLength | 0)) {\\n      return 0\\n    }\\n\\n    return 1\\n  }\\n\\n  function readUInt16 (n) {\\n    n = n | 0\\n\\n    return (\\n      (heap[n | 0] << 8) | heap[(n + 1) | 0]\\n    ) | 0\\n  }\\n\\n  function readUInt32 (n) {\\n    n = n | 0\\n\\n    return (\\n      (heap[n | 0] << 24) | (heap[(n + 1) | 0] << 16) | (heap[(n + 2) | 0] << 8) | heap[(n + 3) | 0]\\n    ) | 0\\n  }\\n\\n  // -- Initial Byte Handlers\\n\\n  function INT_P (octet) {\\n    octet = octet | 0\\n\\n    pushInt(octet | 0)\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  function UINT_P_8 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(1) | 0) {\\n      return 1\\n    }\\n\\n    pushInt(heap[(offset + 1) | 0] | 0)\\n\\n    offset = (offset + 2) | 0\\n\\n    return 0\\n  }\\n\\n  function UINT_P_16 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(2) | 0) {\\n      return 1\\n    }\\n\\n    pushInt(\\n      readUInt16((offset + 1) | 0) | 0\\n    )\\n\\n    offset = (offset + 3) | 0\\n\\n    return 0\\n  }\\n\\n  function UINT_P_32 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(4) | 0) {\\n      return 1\\n    }\\n\\n    pushInt32(\\n      readUInt16((offset + 1) | 0) | 0,\\n      readUInt16((offset + 3) | 0) | 0\\n    )\\n\\n    offset = (offset + 5) | 0\\n\\n    return 0\\n  }\\n\\n  function UINT_P_64 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(8) | 0) {\\n      return 1\\n    }\\n\\n    pushInt64(\\n      readUInt16((offset + 1) | 0) | 0,\\n      readUInt16((offset + 3) | 0) | 0,\\n      readUInt16((offset + 5) | 0) | 0,\\n      readUInt16((offset + 7) | 0) | 0\\n    )\\n\\n    offset = (offset + 9) | 0\\n\\n    return 0\\n  }\\n\\n  function INT_N (octet) {\\n    octet = octet | 0\\n\\n    pushInt((-1 - ((octet - 32) | 0)) | 0)\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  function UINT_N_8 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(1) | 0) {\\n      return 1\\n    }\\n\\n    pushInt(\\n      (-1 - (heap[(offset + 1) | 0] | 0)) | 0\\n    )\\n\\n    offset = (offset + 2) | 0\\n\\n    return 0\\n  }\\n\\n  function UINT_N_16 (octet) {\\n    octet = octet | 0\\n\\n    var val = 0\\n\\n    if (checkOffset(2) | 0) {\\n      return 1\\n    }\\n\\n    val = readUInt16((offset + 1) | 0) | 0\\n    pushInt((-1 - (val | 0)) | 0)\\n\\n    offset = (offset + 3) | 0\\n\\n    return 0\\n  }\\n\\n  function UINT_N_32 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(4) | 0) {\\n      return 1\\n    }\\n\\n    pushInt32Neg(\\n      readUInt16((offset + 1) | 0) | 0,\\n      readUInt16((offset + 3) | 0) | 0\\n    )\\n\\n    offset = (offset + 5) | 0\\n\\n    return 0\\n  }\\n\\n  function UINT_N_64 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(8) | 0) {\\n      return 1\\n    }\\n\\n    pushInt64Neg(\\n      readUInt16((offset + 1) | 0) | 0,\\n      readUInt16((offset + 3) | 0) | 0,\\n      readUInt16((offset + 5) | 0) | 0,\\n      readUInt16((offset + 7) | 0) | 0\\n    )\\n\\n    offset = (offset + 9) | 0\\n\\n    return 0\\n  }\\n\\n  function BYTE_STRING (octet) {\\n    octet = octet | 0\\n\\n    var start = 0\\n    var end = 0\\n    var step = 0\\n\\n    step = (octet - 64) | 0\\n    if (checkOffset(step | 0) | 0) {\\n      return 1\\n    }\\n\\n    start = (offset + 1) | 0\\n    end = (((offset + 1) | 0) + (step | 0)) | 0\\n\\n    pushByteString(start | 0, end | 0)\\n\\n    offset = end | 0\\n\\n    return 0\\n  }\\n\\n  function BYTE_STRING_8 (octet) {\\n    octet = octet | 0\\n\\n    var start = 0\\n    var end = 0\\n    var length = 0\\n\\n    if (checkOffset(1) | 0) {\\n      return 1\\n    }\\n\\n    length = heap[(offset + 1) | 0] | 0\\n    start = (offset + 2) | 0\\n    end = (((offset + 2) | 0) + (length | 0)) | 0\\n\\n    if (checkOffset((length + 1) | 0) | 0) {\\n      return 1\\n    }\\n\\n    pushByteString(start | 0, end | 0)\\n\\n    offset = end | 0\\n\\n    return 0\\n  }\\n\\n  function BYTE_STRING_16 (octet) {\\n    octet = octet | 0\\n\\n    var start = 0\\n    var end = 0\\n    var length = 0\\n\\n    if (checkOffset(2) | 0) {\\n      return 1\\n    }\\n\\n    length = readUInt16((offset + 1) | 0) | 0\\n    start = (offset + 3) | 0\\n    end = (((offset + 3) | 0) + (length | 0)) | 0\\n\\n\\n    if (checkOffset((length + 2) | 0) | 0) {\\n      return 1\\n    }\\n\\n    pushByteString(start | 0, end | 0)\\n\\n    offset = end | 0\\n\\n    return 0\\n  }\\n\\n  function BYTE_STRING_32 (octet) {\\n    octet = octet | 0\\n\\n    var start = 0\\n    var end = 0\\n    var length = 0\\n\\n    if (checkOffset(4) | 0) {\\n      return 1\\n    }\\n\\n    length = readUInt32((offset + 1) | 0) | 0\\n    start = (offset + 5) | 0\\n    end = (((offset + 5) | 0) + (length | 0)) | 0\\n\\n\\n    if (checkOffset((length + 4) | 0) | 0) {\\n      return 1\\n    }\\n\\n    pushByteString(start | 0, end | 0)\\n\\n    offset = end | 0\\n\\n    return 0\\n  }\\n\\n  function BYTE_STRING_64 (octet) {\\n    // NOT IMPLEMENTED\\n    octet = octet | 0\\n\\n    return 1\\n  }\\n\\n  function BYTE_STRING_BREAK (octet) {\\n    octet = octet | 0\\n\\n    pushByteStringStart()\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  function UTF8_STRING (octet) {\\n    octet = octet | 0\\n\\n    var start = 0\\n    var end = 0\\n    var step = 0\\n\\n    step = (octet - 96) | 0\\n\\n    if (checkOffset(step | 0) | 0) {\\n      return 1\\n    }\\n\\n    start = (offset + 1) | 0\\n    end = (((offset + 1) | 0) + (step | 0)) | 0\\n\\n    pushUtf8String(start | 0, end | 0)\\n\\n    offset = end | 0\\n\\n    return 0\\n  }\\n\\n  function UTF8_STRING_8 (octet) {\\n    octet = octet | 0\\n\\n    var start = 0\\n    var end = 0\\n    var length = 0\\n\\n    if (checkOffset(1) | 0) {\\n      return 1\\n    }\\n\\n    length = heap[(offset + 1) | 0] | 0\\n    start = (offset + 2) | 0\\n    end = (((offset + 2) | 0) + (length | 0)) | 0\\n\\n    if (checkOffset((length + 1) | 0) | 0) {\\n      return 1\\n    }\\n\\n    pushUtf8String(start | 0, end | 0)\\n\\n    offset = end | 0\\n\\n    return 0\\n  }\\n\\n  function UTF8_STRING_16 (octet) {\\n    octet = octet | 0\\n\\n    var start = 0\\n    var end = 0\\n    var length = 0\\n\\n    if (checkOffset(2) | 0) {\\n      return 1\\n    }\\n\\n    length = readUInt16((offset + 1) | 0) | 0\\n    start = (offset + 3) | 0\\n    end = (((offset + 3) | 0) + (length | 0)) | 0\\n\\n    if (checkOffset((length + 2) | 0) | 0) {\\n      return 1\\n    }\\n\\n    pushUtf8String(start | 0, end | 0)\\n\\n    offset = end | 0\\n\\n    return 0\\n  }\\n\\n  function UTF8_STRING_32 (octet) {\\n    octet = octet | 0\\n\\n    var start = 0\\n    var end = 0\\n    var length = 0\\n\\n    if (checkOffset(4) | 0) {\\n      return 1\\n    }\\n\\n    length = readUInt32((offset + 1) | 0) | 0\\n    start = (offset + 5) | 0\\n    end = (((offset + 5) | 0) + (length | 0)) | 0\\n\\n    if (checkOffset((length + 4) | 0) | 0) {\\n      return 1\\n    }\\n\\n    pushUtf8String(start | 0, end | 0)\\n\\n    offset = end | 0\\n\\n    return 0\\n  }\\n\\n  function UTF8_STRING_64 (octet) {\\n    // NOT IMPLEMENTED\\n    octet = octet | 0\\n\\n    return 1\\n  }\\n\\n  function UTF8_STRING_BREAK (octet) {\\n    octet = octet | 0\\n\\n    pushUtf8StringStart()\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  function ARRAY (octet) {\\n    octet = octet | 0\\n\\n    pushArrayStartFixed((octet - 128) | 0)\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  function ARRAY_8 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(1) | 0) {\\n      return 1\\n    }\\n\\n    pushArrayStartFixed(heap[(offset + 1) | 0] | 0)\\n\\n    offset = (offset + 2) | 0\\n\\n    return 0\\n  }\\n\\n  function ARRAY_16 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(2) | 0) {\\n      return 1\\n    }\\n\\n    pushArrayStartFixed(\\n      readUInt16((offset + 1) | 0) | 0\\n    )\\n\\n    offset = (offset + 3) | 0\\n\\n    return 0\\n  }\\n\\n  function ARRAY_32 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(4) | 0) {\\n      return 1\\n    }\\n\\n    pushArrayStartFixed32(\\n      readUInt16((offset + 1) | 0) | 0,\\n      readUInt16((offset + 3) | 0) | 0\\n    )\\n\\n    offset = (offset + 5) | 0\\n\\n    return 0\\n  }\\n\\n  function ARRAY_64 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(8) | 0) {\\n      return 1\\n    }\\n\\n    pushArrayStartFixed64(\\n      readUInt16((offset + 1) | 0) | 0,\\n      readUInt16((offset + 3) | 0) | 0,\\n      readUInt16((offset + 5) | 0) | 0,\\n      readUInt16((offset + 7) | 0) | 0\\n    )\\n\\n    offset = (offset + 9) | 0\\n\\n    return 0\\n  }\\n\\n  function ARRAY_BREAK (octet) {\\n    octet = octet | 0\\n\\n    pushArrayStart()\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  function MAP (octet) {\\n    octet = octet | 0\\n\\n    var step = 0\\n\\n    step = (octet - 160) | 0\\n\\n    if (checkOffset(step | 0) | 0) {\\n      return 1\\n    }\\n\\n    pushObjectStartFixed(step | 0)\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  function MAP_8 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(1) | 0) {\\n      return 1\\n    }\\n\\n    pushObjectStartFixed(heap[(offset + 1) | 0] | 0)\\n\\n    offset = (offset + 2) | 0\\n\\n    return 0\\n  }\\n\\n  function MAP_16 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(2) | 0) {\\n      return 1\\n    }\\n\\n    pushObjectStartFixed(\\n      readUInt16((offset + 1) | 0) | 0\\n    )\\n\\n    offset = (offset + 3) | 0\\n\\n    return 0\\n  }\\n\\n  function MAP_32 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(4) | 0) {\\n      return 1\\n    }\\n\\n    pushObjectStartFixed32(\\n      readUInt16((offset + 1) | 0) | 0,\\n      readUInt16((offset + 3) | 0) | 0\\n    )\\n\\n    offset = (offset + 5) | 0\\n\\n    return 0\\n  }\\n\\n  function MAP_64 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(8) | 0) {\\n      return 1\\n    }\\n\\n    pushObjectStartFixed64(\\n      readUInt16((offset + 1) | 0) | 0,\\n      readUInt16((offset + 3) | 0) | 0,\\n      readUInt16((offset + 5) | 0) | 0,\\n      readUInt16((offset + 7) | 0) | 0\\n    )\\n\\n    offset = (offset + 9) | 0\\n\\n    return 0\\n  }\\n\\n  function MAP_BREAK (octet) {\\n    octet = octet | 0\\n\\n    pushObjectStart()\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  function TAG_KNOWN (octet) {\\n    octet = octet | 0\\n\\n    pushTagStart((octet - 192| 0) | 0)\\n\\n    offset = (offset + 1 | 0)\\n\\n    return 0\\n  }\\n\\n  function TAG_BIGNUM_POS (octet) {\\n    octet = octet | 0\\n\\n    pushTagStart(octet | 0)\\n\\n    offset = (offset + 1 | 0)\\n\\n    return 0\\n  }\\n\\n  function TAG_BIGNUM_NEG (octet) {\\n    octet = octet | 0\\n\\n    pushTagStart(octet | 0)\\n\\n    offset = (offset + 1 | 0)\\n\\n    return 0\\n  }\\n\\n  function TAG_FRAC (octet) {\\n    octet = octet | 0\\n\\n    pushTagStart(octet | 0)\\n\\n    offset = (offset + 1 | 0)\\n\\n    return 0\\n  }\\n\\n  function TAG_BIGNUM_FLOAT (octet) {\\n    octet = octet | 0\\n\\n    pushTagStart(octet | 0)\\n\\n    offset = (offset + 1 | 0)\\n\\n    return 0\\n  }\\n\\n  function TAG_UNASSIGNED (octet) {\\n    octet = octet | 0\\n\\n    pushTagStart((octet - 192| 0) | 0)\\n\\n    offset = (offset + 1 | 0)\\n\\n    return 0\\n  }\\n\\n  function TAG_BASE64_URL (octet) {\\n    octet = octet | 0\\n\\n    pushTagStart(octet | 0)\\n\\n    offset = (offset + 1 | 0)\\n\\n    return 0\\n  }\\n\\n  function TAG_BASE64 (octet) {\\n    octet = octet | 0\\n\\n    pushTagStart(octet | 0)\\n\\n    offset = (offset + 1 | 0)\\n\\n    return 0\\n  }\\n\\n  function TAG_BASE16 (octet) {\\n    octet = octet | 0\\n\\n    pushTagStart(octet | 0)\\n\\n    offset = (offset + 1 | 0)\\n\\n    return 0\\n  }\\n\\n  function TAG_MORE_1 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(1) | 0) {\\n      return 1\\n    }\\n\\n    pushTagStart(heap[(offset + 1) | 0] | 0)\\n\\n    offset = (offset + 2 | 0)\\n\\n    return 0\\n  }\\n\\n  function TAG_MORE_2 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(2) | 0) {\\n      return 1\\n    }\\n\\n    pushTagStart(\\n      readUInt16((offset + 1) | 0) | 0\\n    )\\n\\n    offset = (offset + 3 | 0)\\n\\n    return 0\\n  }\\n\\n  function TAG_MORE_4 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(4) | 0) {\\n      return 1\\n    }\\n\\n    pushTagStart4(\\n      readUInt16((offset + 1) | 0) | 0,\\n      readUInt16((offset + 3) | 0) | 0\\n    )\\n\\n    offset = (offset + 5 | 0)\\n\\n    return 0\\n  }\\n\\n  function TAG_MORE_8 (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(8) | 0) {\\n      return 1\\n    }\\n\\n    pushTagStart8(\\n      readUInt16((offset + 1) | 0) | 0,\\n      readUInt16((offset + 3) | 0) | 0,\\n      readUInt16((offset + 5) | 0) | 0,\\n      readUInt16((offset + 7) | 0) | 0\\n    )\\n\\n    offset = (offset + 9 | 0)\\n\\n    return 0\\n  }\\n\\n  function SIMPLE_UNASSIGNED (octet) {\\n    octet = octet | 0\\n\\n    pushSimpleUnassigned(((octet | 0) - 224) | 0)\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  function SIMPLE_FALSE (octet) {\\n    octet = octet | 0\\n\\n    pushFalse()\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  function SIMPLE_TRUE (octet) {\\n    octet = octet | 0\\n\\n    pushTrue()\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  function SIMPLE_NULL (octet) {\\n    octet = octet | 0\\n\\n    pushNull()\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  function SIMPLE_UNDEFINED (octet) {\\n    octet = octet | 0\\n\\n    pushUndefined()\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  function SIMPLE_BYTE (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(1) | 0) {\\n      return 1\\n    }\\n\\n    pushSimpleUnassigned(heap[(offset + 1) | 0] | 0)\\n\\n    offset = (offset + 2)  | 0\\n\\n    return 0\\n  }\\n\\n  function SIMPLE_FLOAT_HALF (octet) {\\n    octet = octet | 0\\n\\n    var f = 0\\n    var g = 0\\n    var sign = 1.0\\n    var exp = 0.0\\n    var mant = 0.0\\n    var r = 0.0\\n    if (checkOffset(2) | 0) {\\n      return 1\\n    }\\n\\n    f = heap[(offset + 1) | 0] | 0\\n    g = heap[(offset + 2) | 0] | 0\\n\\n    if ((f | 0) & 0x80) {\\n      sign = -1.0\\n    }\\n\\n    exp = +(((f | 0) & 0x7C) >> 2)\\n    mant = +((((f | 0) & 0x03) << 8) | g)\\n\\n    if (+exp == 0.0) {\\n      pushFloat(+(\\n        (+sign) * +5.9604644775390625e-8 * (+mant)\\n      ))\\n    } else if (+exp == 31.0) {\\n      if (+sign == 1.0) {\\n        if (+mant > 0.0) {\\n          pushNaN()\\n        } else {\\n          pushInfinity()\\n        }\\n      } else {\\n        if (+mant > 0.0) {\\n          pushNaNNeg()\\n        } else {\\n          pushInfinityNeg()\\n        }\\n      }\\n    } else {\\n      pushFloat(+(\\n        +sign * pow(+2, +(+exp - 25.0)) * +(1024.0 + mant)\\n      ))\\n    }\\n\\n    offset = (offset + 3) | 0\\n\\n    return 0\\n  }\\n\\n  function SIMPLE_FLOAT_SINGLE (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(4) | 0) {\\n      return 1\\n    }\\n\\n    pushFloatSingle(\\n      heap[(offset + 1) | 0] | 0,\\n      heap[(offset + 2) | 0] | 0,\\n      heap[(offset + 3) | 0] | 0,\\n      heap[(offset + 4) | 0] | 0\\n    )\\n\\n    offset = (offset + 5) | 0\\n\\n    return 0\\n  }\\n\\n  function SIMPLE_FLOAT_DOUBLE (octet) {\\n    octet = octet | 0\\n\\n    if (checkOffset(8) | 0) {\\n      return 1\\n    }\\n\\n    pushFloatDouble(\\n      heap[(offset + 1) | 0] | 0,\\n      heap[(offset + 2) | 0] | 0,\\n      heap[(offset + 3) | 0] | 0,\\n      heap[(offset + 4) | 0] | 0,\\n      heap[(offset + 5) | 0] | 0,\\n      heap[(offset + 6) | 0] | 0,\\n      heap[(offset + 7) | 0] | 0,\\n      heap[(offset + 8) | 0] | 0\\n    )\\n\\n    offset = (offset + 9) | 0\\n\\n    return 0\\n  }\\n\\n  function ERROR (octet) {\\n    octet = octet | 0\\n\\n    return 1\\n  }\\n\\n  function BREAK (octet) {\\n    octet = octet | 0\\n\\n    pushBreak()\\n\\n    offset = (offset + 1) | 0\\n\\n    return 0\\n  }\\n\\n  // -- Jump Table\\n\\n  var jumpTable = [\\n    // Integer 0x00..0x17 (0..23)\\n    INT_P, // 0x00\\n    INT_P, // 0x01\\n    INT_P, // 0x02\\n    INT_P, // 0x03\\n    INT_P, // 0x04\\n    INT_P, // 0x05\\n    INT_P, // 0x06\\n    INT_P, // 0x07\\n    INT_P, // 0x08\\n    INT_P, // 0x09\\n    INT_P, // 0x0A\\n    INT_P, // 0x0B\\n    INT_P, // 0x0C\\n    INT_P, // 0x0D\\n    INT_P, // 0x0E\\n    INT_P, // 0x0F\\n    INT_P, // 0x10\\n    INT_P, // 0x11\\n    INT_P, // 0x12\\n    INT_P, // 0x13\\n    INT_P, // 0x14\\n    INT_P, // 0x15\\n    INT_P, // 0x16\\n    INT_P, // 0x17\\n    // Unsigned integer (one-byte uint8_t follows)\\n    UINT_P_8, // 0x18\\n    // Unsigned integer (two-byte uint16_t follows)\\n    UINT_P_16, // 0x19\\n    // Unsigned integer (four-byte uint32_t follows)\\n    UINT_P_32, // 0x1a\\n    // Unsigned integer (eight-byte uint64_t follows)\\n    UINT_P_64, // 0x1b\\n    ERROR, // 0x1c\\n    ERROR, // 0x1d\\n    ERROR, // 0x1e\\n    ERROR, // 0x1f\\n    // Negative integer -1-0x00..-1-0x17 (-1..-24)\\n    INT_N, // 0x20\\n    INT_N, // 0x21\\n    INT_N, // 0x22\\n    INT_N, // 0x23\\n    INT_N, // 0x24\\n    INT_N, // 0x25\\n    INT_N, // 0x26\\n    INT_N, // 0x27\\n    INT_N, // 0x28\\n    INT_N, // 0x29\\n    INT_N, // 0x2A\\n    INT_N, // 0x2B\\n    INT_N, // 0x2C\\n    INT_N, // 0x2D\\n    INT_N, // 0x2E\\n    INT_N, // 0x2F\\n    INT_N, // 0x30\\n    INT_N, // 0x31\\n    INT_N, // 0x32\\n    INT_N, // 0x33\\n    INT_N, // 0x34\\n    INT_N, // 0x35\\n    INT_N, // 0x36\\n    INT_N, // 0x37\\n    // Negative integer -1-n (one-byte uint8_t for n follows)\\n    UINT_N_8, // 0x38\\n    // Negative integer -1-n (two-byte uint16_t for n follows)\\n    UINT_N_16, // 0x39\\n    // Negative integer -1-n (four-byte uint32_t for nfollows)\\n    UINT_N_32, // 0x3a\\n    // Negative integer -1-n (eight-byte uint64_t for n follows)\\n    UINT_N_64, // 0x3b\\n    ERROR, // 0x3c\\n    ERROR, // 0x3d\\n    ERROR, // 0x3e\\n    ERROR, // 0x3f\\n    // byte string (0x00..0x17 bytes follow)\\n    BYTE_STRING, // 0x40\\n    BYTE_STRING, // 0x41\\n    BYTE_STRING, // 0x42\\n    BYTE_STRING, // 0x43\\n    BYTE_STRING, // 0x44\\n    BYTE_STRING, // 0x45\\n    BYTE_STRING, // 0x46\\n    BYTE_STRING, // 0x47\\n    BYTE_STRING, // 0x48\\n    BYTE_STRING, // 0x49\\n    BYTE_STRING, // 0x4A\\n    BYTE_STRING, // 0x4B\\n    BYTE_STRING, // 0x4C\\n    BYTE_STRING, // 0x4D\\n    BYTE_STRING, // 0x4E\\n    BYTE_STRING, // 0x4F\\n    BYTE_STRING, // 0x50\\n    BYTE_STRING, // 0x51\\n    BYTE_STRING, // 0x52\\n    BYTE_STRING, // 0x53\\n    BYTE_STRING, // 0x54\\n    BYTE_STRING, // 0x55\\n    BYTE_STRING, // 0x56\\n    BYTE_STRING, // 0x57\\n    // byte string (one-byte uint8_t for n, and then n bytes follow)\\n    BYTE_STRING_8, // 0x58\\n    // byte string (two-byte uint16_t for n, and then n bytes follow)\\n    BYTE_STRING_16, // 0x59\\n    // byte string (four-byte uint32_t for n, and then n bytes follow)\\n    BYTE_STRING_32, // 0x5a\\n    // byte string (eight-byte uint64_t for n, and then n bytes follow)\\n    BYTE_STRING_64, // 0x5b\\n    ERROR, // 0x5c\\n    ERROR, // 0x5d\\n    ERROR, // 0x5e\\n    // byte string, byte strings follow, terminated by \\\"break\\\"\\n    BYTE_STRING_BREAK, // 0x5f\\n    // UTF-8 string (0x00..0x17 bytes follow)\\n    UTF8_STRING, // 0x60\\n    UTF8_STRING, // 0x61\\n    UTF8_STRING, // 0x62\\n    UTF8_STRING, // 0x63\\n    UTF8_STRING, // 0x64\\n    UTF8_STRING, // 0x65\\n    UTF8_STRING, // 0x66\\n    UTF8_STRING, // 0x67\\n    UTF8_STRING, // 0x68\\n    UTF8_STRING, // 0x69\\n    UTF8_STRING, // 0x6A\\n    UTF8_STRING, // 0x6B\\n    UTF8_STRING, // 0x6C\\n    UTF8_STRING, // 0x6D\\n    UTF8_STRING, // 0x6E\\n    UTF8_STRING, // 0x6F\\n    UTF8_STRING, // 0x70\\n    UTF8_STRING, // 0x71\\n    UTF8_STRING, // 0x72\\n    UTF8_STRING, // 0x73\\n    UTF8_STRING, // 0x74\\n    UTF8_STRING, // 0x75\\n    UTF8_STRING, // 0x76\\n    UTF8_STRING, // 0x77\\n    // UTF-8 string (one-byte uint8_t for n, and then n bytes follow)\\n    UTF8_STRING_8, // 0x78\\n    // UTF-8 string (two-byte uint16_t for n, and then n bytes follow)\\n    UTF8_STRING_16, // 0x79\\n    // UTF-8 string (four-byte uint32_t for n, and then n bytes follow)\\n    UTF8_STRING_32, // 0x7a\\n    // UTF-8 string (eight-byte uint64_t for n, and then n bytes follow)\\n    UTF8_STRING_64, // 0x7b\\n    // UTF-8 string, UTF-8 strings follow, terminated by \\\"break\\\"\\n    ERROR, // 0x7c\\n    ERROR, // 0x7d\\n    ERROR, // 0x7e\\n    UTF8_STRING_BREAK, // 0x7f\\n    // array (0x00..0x17 data items follow)\\n    ARRAY, // 0x80\\n    ARRAY, // 0x81\\n    ARRAY, // 0x82\\n    ARRAY, // 0x83\\n    ARRAY, // 0x84\\n    ARRAY, // 0x85\\n    ARRAY, // 0x86\\n    ARRAY, // 0x87\\n    ARRAY, // 0x88\\n    ARRAY, // 0x89\\n    ARRAY, // 0x8A\\n    ARRAY, // 0x8B\\n    ARRAY, // 0x8C\\n    ARRAY, // 0x8D\\n    ARRAY, // 0x8E\\n    ARRAY, // 0x8F\\n    ARRAY, // 0x90\\n    ARRAY, // 0x91\\n    ARRAY, // 0x92\\n    ARRAY, // 0x93\\n    ARRAY, // 0x94\\n    ARRAY, // 0x95\\n    ARRAY, // 0x96\\n    ARRAY, // 0x97\\n    // array (one-byte uint8_t fo, and then n data items follow)\\n    ARRAY_8, // 0x98\\n    // array (two-byte uint16_t for n, and then n data items follow)\\n    ARRAY_16, // 0x99\\n    // array (four-byte uint32_t for n, and then n data items follow)\\n    ARRAY_32, // 0x9a\\n    // array (eight-byte uint64_t for n, and then n data items follow)\\n    ARRAY_64, // 0x9b\\n    // array, data items follow, terminated by \\\"break\\\"\\n    ERROR, // 0x9c\\n    ERROR, // 0x9d\\n    ERROR, // 0x9e\\n    ARRAY_BREAK, // 0x9f\\n    // map (0x00..0x17 pairs of data items follow)\\n    MAP, // 0xa0\\n    MAP, // 0xa1\\n    MAP, // 0xa2\\n    MAP, // 0xa3\\n    MAP, // 0xa4\\n    MAP, // 0xa5\\n    MAP, // 0xa6\\n    MAP, // 0xa7\\n    MAP, // 0xa8\\n    MAP, // 0xa9\\n    MAP, // 0xaA\\n    MAP, // 0xaB\\n    MAP, // 0xaC\\n    MAP, // 0xaD\\n    MAP, // 0xaE\\n    MAP, // 0xaF\\n    MAP, // 0xb0\\n    MAP, // 0xb1\\n    MAP, // 0xb2\\n    MAP, // 0xb3\\n    MAP, // 0xb4\\n    MAP, // 0xb5\\n    MAP, // 0xb6\\n    MAP, // 0xb7\\n    // map (one-byte uint8_t for n, and then n pairs of data items follow)\\n    MAP_8, // 0xb8\\n    // map (two-byte uint16_t for n, and then n pairs of data items follow)\\n    MAP_16, // 0xb9\\n    // map (four-byte uint32_t for n, and then n pairs of data items follow)\\n    MAP_32, // 0xba\\n    // map (eight-byte uint64_t for n, and then n pairs of data items follow)\\n    MAP_64, // 0xbb\\n    ERROR, // 0xbc\\n    ERROR, // 0xbd\\n    ERROR, // 0xbe\\n    // map, pairs of data items follow, terminated by \\\"break\\\"\\n    MAP_BREAK, // 0xbf\\n    // Text-based date/time (data item follows; see Section 2.4.1)\\n    TAG_KNOWN, // 0xc0\\n    // Epoch-based date/time (data item follows; see Section 2.4.1)\\n    TAG_KNOWN, // 0xc1\\n    // Positive bignum (data item \\\"byte string\\\" follows)\\n    TAG_KNOWN, // 0xc2\\n    // Negative bignum (data item \\\"byte string\\\" follows)\\n    TAG_KNOWN, // 0xc3\\n    // Decimal Fraction (data item \\\"array\\\" follows; see Section 2.4.3)\\n    TAG_KNOWN, // 0xc4\\n    // Bigfloat (data item \\\"array\\\" follows; see Section 2.4.3)\\n    TAG_KNOWN, // 0xc5\\n    // (tagged item)\\n    TAG_UNASSIGNED, // 0xc6\\n    TAG_UNASSIGNED, // 0xc7\\n    TAG_UNASSIGNED, // 0xc8\\n    TAG_UNASSIGNED, // 0xc9\\n    TAG_UNASSIGNED, // 0xca\\n    TAG_UNASSIGNED, // 0xcb\\n    TAG_UNASSIGNED, // 0xcc\\n    TAG_UNASSIGNED, // 0xcd\\n    TAG_UNASSIGNED, // 0xce\\n    TAG_UNASSIGNED, // 0xcf\\n    TAG_UNASSIGNED, // 0xd0\\n    TAG_UNASSIGNED, // 0xd1\\n    TAG_UNASSIGNED, // 0xd2\\n    TAG_UNASSIGNED, // 0xd3\\n    TAG_UNASSIGNED, // 0xd4\\n    // Expected Conversion (data item follows; see Section 2.4.4.2)\\n    TAG_UNASSIGNED, // 0xd5\\n    TAG_UNASSIGNED, // 0xd6\\n    TAG_UNASSIGNED, // 0xd7\\n    // (more tagged items, 1/2/4/8 bytes and then a data item follow)\\n    TAG_MORE_1, // 0xd8\\n    TAG_MORE_2, // 0xd9\\n    TAG_MORE_4, // 0xda\\n    TAG_MORE_8, // 0xdb\\n    ERROR, // 0xdc\\n    ERROR, // 0xdd\\n    ERROR, // 0xde\\n    ERROR, // 0xdf\\n    // (simple value)\\n    SIMPLE_UNASSIGNED, // 0xe0\\n    SIMPLE_UNASSIGNED, // 0xe1\\n    SIMPLE_UNASSIGNED, // 0xe2\\n    SIMPLE_UNASSIGNED, // 0xe3\\n    SIMPLE_UNASSIGNED, // 0xe4\\n    SIMPLE_UNASSIGNED, // 0xe5\\n    SIMPLE_UNASSIGNED, // 0xe6\\n    SIMPLE_UNASSIGNED, // 0xe7\\n    SIMPLE_UNASSIGNED, // 0xe8\\n    SIMPLE_UNASSIGNED, // 0xe9\\n    SIMPLE_UNASSIGNED, // 0xea\\n    SIMPLE_UNASSIGNED, // 0xeb\\n    SIMPLE_UNASSIGNED, // 0xec\\n    SIMPLE_UNASSIGNED, // 0xed\\n    SIMPLE_UNASSIGNED, // 0xee\\n    SIMPLE_UNASSIGNED, // 0xef\\n    SIMPLE_UNASSIGNED, // 0xf0\\n    SIMPLE_UNASSIGNED, // 0xf1\\n    SIMPLE_UNASSIGNED, // 0xf2\\n    SIMPLE_UNASSIGNED, // 0xf3\\n    // False\\n    SIMPLE_FALSE, // 0xf4\\n    // True\\n    SIMPLE_TRUE, // 0xf5\\n    // Null\\n    SIMPLE_NULL, // 0xf6\\n    // Undefined\\n    SIMPLE_UNDEFINED, // 0xf7\\n    // (simple value, one byte follows)\\n    SIMPLE_BYTE, // 0xf8\\n    // Half-Precision Float (two-byte IEEE 754)\\n    SIMPLE_FLOAT_HALF, // 0xf9\\n    // Single-Precision Float (four-byte IEEE 754)\\n    SIMPLE_FLOAT_SINGLE, // 0xfa\\n    // Double-Precision Float (eight-byte IEEE 754)\\n    SIMPLE_FLOAT_DOUBLE, // 0xfb\\n    ERROR, // 0xfc\\n    ERROR, // 0xfd\\n    ERROR, // 0xfe\\n    // \\\"break\\\" stop code\\n    BREAK // 0xff\\n  ]\\n\\n  // --\\n\\n  return {\\n    parse: parse\\n  }\\n}\\n\\n},{}],30:[function(require,module,exports){\\n(function (global){(function (){\\n'use strict'\\n\\nconst { Buffer } = require('buffer')\\nconst ieee754 = require('ieee754')\\nconst Bignumber = require('bignumber.js').BigNumber\\n\\nconst parser = require('./decoder.asm')\\nconst utils = require('./utils')\\nconst c = require('./constants')\\nconst Simple = require('./simple')\\nconst Tagged = require('./tagged')\\nconst { URL } = require('iso-url')\\n\\n/**\\n * Transform binary cbor data into JavaScript objects.\\n */\\nclass Decoder {\\n  /**\\n   * @param {Object} [opts={}]\\n   * @param {number} [opts.size=65536] - Size of the allocated heap.\\n   */\\n  constructor (opts) {\\n    opts = opts || {}\\n\\n    if (!opts.size || opts.size < 0x10000) {\\n      opts.size = 0x10000\\n    } else {\\n      // Ensure the size is a power of 2\\n      opts.size = utils.nextPowerOf2(opts.size)\\n    }\\n\\n    // Heap use to share the input with the parser\\n    this._heap = new ArrayBuffer(opts.size)\\n    this._heap8 = new Uint8Array(this._heap)\\n    this._buffer = Buffer.from(this._heap)\\n\\n    this._reset()\\n\\n    // Known tags\\n    this._knownTags = Object.assign({\\n      0: (val) => new Date(val),\\n      1: (val) => new Date(val * 1000),\\n      2: (val) => utils.arrayBufferToBignumber(val),\\n      3: (val) => c.NEG_ONE.minus(utils.arrayBufferToBignumber(val)),\\n      4: (v) => {\\n        // const v = new Uint8Array(val)\\n        return c.TEN.pow(v[0]).times(v[1])\\n      },\\n      5: (v) => {\\n        // const v = new Uint8Array(val)\\n        return c.TWO.pow(v[0]).times(v[1])\\n      },\\n      32: (val) => new URL(val),\\n      35: (val) => new RegExp(val)\\n    }, opts.tags)\\n\\n    // Initialize asm based parser\\n    this.parser = parser(global, {\\n      // eslint-disable-next-line no-console\\n      log: console.log.bind(console),\\n      pushInt: this.pushInt.bind(this),\\n      pushInt32: this.pushInt32.bind(this),\\n      pushInt32Neg: this.pushInt32Neg.bind(this),\\n      pushInt64: this.pushInt64.bind(this),\\n      pushInt64Neg: this.pushInt64Neg.bind(this),\\n      pushFloat: this.pushFloat.bind(this),\\n      pushFloatSingle: this.pushFloatSingle.bind(this),\\n      pushFloatDouble: this.pushFloatDouble.bind(this),\\n      pushTrue: this.pushTrue.bind(this),\\n      pushFalse: this.pushFalse.bind(this),\\n      pushUndefined: this.pushUndefined.bind(this),\\n      pushNull: this.pushNull.bind(this),\\n      pushInfinity: this.pushInfinity.bind(this),\\n      pushInfinityNeg: this.pushInfinityNeg.bind(this),\\n      pushNaN: this.pushNaN.bind(this),\\n      pushNaNNeg: this.pushNaNNeg.bind(this),\\n      pushArrayStart: this.pushArrayStart.bind(this),\\n      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),\\n      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),\\n      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),\\n      pushObjectStart: this.pushObjectStart.bind(this),\\n      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),\\n      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),\\n      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),\\n      pushByteString: this.pushByteString.bind(this),\\n      pushByteStringStart: this.pushByteStringStart.bind(this),\\n      pushUtf8String: this.pushUtf8String.bind(this),\\n      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),\\n      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),\\n      pushTagUnassigned: this.pushTagUnassigned.bind(this),\\n      pushTagStart: this.pushTagStart.bind(this),\\n      pushTagStart4: this.pushTagStart4.bind(this),\\n      pushTagStart8: this.pushTagStart8.bind(this),\\n      pushBreak: this.pushBreak.bind(this)\\n    }, this._heap)\\n  }\\n\\n  get _depth () {\\n    return this._parents.length\\n  }\\n\\n  get _currentParent () {\\n    return this._parents[this._depth - 1]\\n  }\\n\\n  get _ref () {\\n    return this._currentParent.ref\\n  }\\n\\n  // Finish the current parent\\n  _closeParent () {\\n    var p = this._parents.pop()\\n\\n    if (p.length > 0) {\\n      throw new Error(`Missing ${p.length} elements`)\\n    }\\n\\n    switch (p.type) {\\n      case c.PARENT.TAG:\\n        this._push(\\n          this.createTag(p.ref[0], p.ref[1])\\n        )\\n        break\\n      case c.PARENT.BYTE_STRING:\\n        this._push(this.createByteString(p.ref, p.length))\\n        break\\n      case c.PARENT.UTF8_STRING:\\n        this._push(this.createUtf8String(p.ref, p.length))\\n        break\\n      case c.PARENT.MAP:\\n        if (p.values % 2 > 0) {\\n          throw new Error('Odd number of elements in the map')\\n        }\\n        this._push(this.createMap(p.ref, p.length))\\n        break\\n      case c.PARENT.OBJECT:\\n        if (p.values % 2 > 0) {\\n          throw new Error('Odd number of elements in the map')\\n        }\\n        this._push(this.createObject(p.ref, p.length))\\n        break\\n      case c.PARENT.ARRAY:\\n        this._push(this.createArray(p.ref, p.length))\\n        break\\n      default:\\n        break\\n    }\\n\\n    if (this._currentParent && this._currentParent.type === c.PARENT.TAG) {\\n      this._dec()\\n    }\\n  }\\n\\n  // Reduce the expected length of the current parent by one\\n  _dec () {\\n    const p = this._currentParent\\n    // The current parent does not know the epxected child length\\n\\n    if (p.length < 0) {\\n      return\\n    }\\n\\n    p.length--\\n\\n    // All children were seen, we can close the current parent\\n    if (p.length === 0) {\\n      this._closeParent()\\n    }\\n  }\\n\\n  // Push any value to the current parent\\n  _push (val, hasChildren) {\\n    const p = this._currentParent\\n    p.values++\\n\\n    switch (p.type) {\\n      case c.PARENT.ARRAY:\\n      case c.PARENT.BYTE_STRING:\\n      case c.PARENT.UTF8_STRING:\\n        if (p.length > -1) {\\n          this._ref[this._ref.length - p.length] = val\\n        } else {\\n          this._ref.push(val)\\n        }\\n        this._dec()\\n        break\\n      case c.PARENT.OBJECT:\\n        if (p.tmpKey != null) {\\n          this._ref[p.tmpKey] = val\\n          p.tmpKey = null\\n          this._dec()\\n        } else {\\n          p.tmpKey = val\\n\\n          if (typeof p.tmpKey !== 'string') {\\n            // too bad, convert to a Map\\n            p.type = c.PARENT.MAP\\n            p.ref = utils.buildMap(p.ref)\\n          }\\n        }\\n        break\\n      case c.PARENT.MAP:\\n        if (p.tmpKey != null) {\\n          this._ref.set(p.tmpKey, val)\\n          p.tmpKey = null\\n          this._dec()\\n        } else {\\n          p.tmpKey = val\\n        }\\n        break\\n      case c.PARENT.TAG:\\n        this._ref.push(val)\\n        if (!hasChildren) {\\n          this._dec()\\n        }\\n        break\\n      default:\\n        throw new Error('Unknown parent type')\\n    }\\n  }\\n\\n  // Create a new parent in the parents list\\n  _createParent (obj, type, len) {\\n    this._parents[this._depth] = {\\n      type: type,\\n      length: len,\\n      ref: obj,\\n      values: 0,\\n      tmpKey: null\\n    }\\n  }\\n\\n  // Reset all state back to the beginning, also used for initiatlization\\n  _reset () {\\n    this._res = []\\n    this._parents = [{\\n      type: c.PARENT.ARRAY,\\n      length: -1,\\n      ref: this._res,\\n      values: 0,\\n      tmpKey: null\\n    }]\\n  }\\n\\n  // -- Interface to customize deoding behaviour\\n  createTag (tagNumber, value) {\\n    const typ = this._knownTags[tagNumber]\\n\\n    if (!typ) {\\n      return new Tagged(tagNumber, value)\\n    }\\n\\n    return typ(value)\\n  }\\n\\n  createMap (obj, len) {\\n    return obj\\n  }\\n\\n  createObject (obj, len) {\\n    return obj\\n  }\\n\\n  createArray (arr, len) {\\n    return arr\\n  }\\n\\n  createByteString (raw, len) {\\n    return Buffer.concat(raw)\\n  }\\n\\n  createByteStringFromHeap (start, end) {\\n    if (start === end) {\\n      return Buffer.alloc(0)\\n    }\\n\\n    return Buffer.from(this._heap.slice(start, end))\\n  }\\n\\n  createInt (val) {\\n    return val\\n  }\\n\\n  createInt32 (f, g) {\\n    return utils.buildInt32(f, g)\\n  }\\n\\n  createInt64 (f1, f2, g1, g2) {\\n    return utils.buildInt64(f1, f2, g1, g2)\\n  }\\n\\n  createFloat (val) {\\n    return val\\n  }\\n\\n  createFloatSingle (a, b, c, d) {\\n    return ieee754.read([a, b, c, d], 0, false, 23, 4)\\n  }\\n\\n  createFloatDouble (a, b, c, d, e, f, g, h) {\\n    return ieee754.read([a, b, c, d, e, f, g, h], 0, false, 52, 8)\\n  }\\n\\n  createInt32Neg (f, g) {\\n    return -1 - utils.buildInt32(f, g)\\n  }\\n\\n  createInt64Neg (f1, f2, g1, g2) {\\n    const f = utils.buildInt32(f1, f2)\\n    const g = utils.buildInt32(g1, g2)\\n\\n    if (f > c.MAX_SAFE_HIGH) {\\n      return c.NEG_ONE.minus(new Bignumber(f).times(c.SHIFT32).plus(g))\\n    }\\n\\n    return -1 - ((f * c.SHIFT32) + g)\\n  }\\n\\n  createTrue () {\\n    return true\\n  }\\n\\n  createFalse () {\\n    return false\\n  }\\n\\n  createNull () {\\n    return null\\n  }\\n\\n  createUndefined () {\\n    return undefined\\n  }\\n\\n  createInfinity () {\\n    return Infinity\\n  }\\n\\n  createInfinityNeg () {\\n    return -Infinity\\n  }\\n\\n  createNaN () {\\n    return NaN\\n  }\\n\\n  createNaNNeg () {\\n    return -NaN\\n  }\\n\\n  createUtf8String (raw, len) {\\n    return raw.join('')\\n  }\\n\\n  createUtf8StringFromHeap (start, end) {\\n    if (start === end) {\\n      return ''\\n    }\\n\\n    return this._buffer.toString('utf8', start, end)\\n  }\\n\\n  createSimpleUnassigned (val) {\\n    return new Simple(val)\\n  }\\n\\n  // -- Interface for decoder.asm.js\\n\\n  pushInt (val) {\\n    this._push(this.createInt(val))\\n  }\\n\\n  pushInt32 (f, g) {\\n    this._push(this.createInt32(f, g))\\n  }\\n\\n  pushInt64 (f1, f2, g1, g2) {\\n    this._push(this.createInt64(f1, f2, g1, g2))\\n  }\\n\\n  pushFloat (val) {\\n    this._push(this.createFloat(val))\\n  }\\n\\n  pushFloatSingle (a, b, c, d) {\\n    this._push(this.createFloatSingle(a, b, c, d))\\n  }\\n\\n  pushFloatDouble (a, b, c, d, e, f, g, h) {\\n    this._push(this.createFloatDouble(a, b, c, d, e, f, g, h))\\n  }\\n\\n  pushInt32Neg (f, g) {\\n    this._push(this.createInt32Neg(f, g))\\n  }\\n\\n  pushInt64Neg (f1, f2, g1, g2) {\\n    this._push(this.createInt64Neg(f1, f2, g1, g2))\\n  }\\n\\n  pushTrue () {\\n    this._push(this.createTrue())\\n  }\\n\\n  pushFalse () {\\n    this._push(this.createFalse())\\n  }\\n\\n  pushNull () {\\n    this._push(this.createNull())\\n  }\\n\\n  pushUndefined () {\\n    this._push(this.createUndefined())\\n  }\\n\\n  pushInfinity () {\\n    this._push(this.createInfinity())\\n  }\\n\\n  pushInfinityNeg () {\\n    this._push(this.createInfinityNeg())\\n  }\\n\\n  pushNaN () {\\n    this._push(this.createNaN())\\n  }\\n\\n  pushNaNNeg () {\\n    this._push(this.createNaNNeg())\\n  }\\n\\n  pushArrayStart () {\\n    this._createParent([], c.PARENT.ARRAY, -1)\\n  }\\n\\n  pushArrayStartFixed (len) {\\n    this._createArrayStartFixed(len)\\n  }\\n\\n  pushArrayStartFixed32 (len1, len2) {\\n    const len = utils.buildInt32(len1, len2)\\n    this._createArrayStartFixed(len)\\n  }\\n\\n  pushArrayStartFixed64 (len1, len2, len3, len4) {\\n    const len = utils.buildInt64(len1, len2, len3, len4)\\n    this._createArrayStartFixed(len)\\n  }\\n\\n  pushObjectStart () {\\n    this._createObjectStartFixed(-1)\\n  }\\n\\n  pushObjectStartFixed (len) {\\n    this._createObjectStartFixed(len)\\n  }\\n\\n  pushObjectStartFixed32 (len1, len2) {\\n    const len = utils.buildInt32(len1, len2)\\n    this._createObjectStartFixed(len)\\n  }\\n\\n  pushObjectStartFixed64 (len1, len2, len3, len4) {\\n    const len = utils.buildInt64(len1, len2, len3, len4)\\n    this._createObjectStartFixed(len)\\n  }\\n\\n  pushByteStringStart () {\\n    this._parents[this._depth] = {\\n      type: c.PARENT.BYTE_STRING,\\n      length: -1,\\n      ref: [],\\n      values: 0,\\n      tmpKey: null\\n    }\\n  }\\n\\n  pushByteString (start, end) {\\n    this._push(this.createByteStringFromHeap(start, end))\\n  }\\n\\n  pushUtf8StringStart () {\\n    this._parents[this._depth] = {\\n      type: c.PARENT.UTF8_STRING,\\n      length: -1,\\n      ref: [],\\n      values: 0,\\n      tmpKey: null\\n    }\\n  }\\n\\n  pushUtf8String (start, end) {\\n    this._push(this.createUtf8StringFromHeap(start, end))\\n  }\\n\\n  pushSimpleUnassigned (val) {\\n    this._push(this.createSimpleUnassigned(val))\\n  }\\n\\n  pushTagStart (tag) {\\n    this._parents[this._depth] = {\\n      type: c.PARENT.TAG,\\n      length: 1,\\n      ref: [tag]\\n    }\\n  }\\n\\n  pushTagStart4 (f, g) {\\n    this.pushTagStart(utils.buildInt32(f, g))\\n  }\\n\\n  pushTagStart8 (f1, f2, g1, g2) {\\n    this.pushTagStart(utils.buildInt64(f1, f2, g1, g2))\\n  }\\n\\n  pushTagUnassigned (tagNumber) {\\n    this._push(this.createTag(tagNumber))\\n  }\\n\\n  pushBreak () {\\n    if (this._currentParent.length > -1) {\\n      throw new Error('Unexpected break')\\n    }\\n\\n    this._closeParent()\\n  }\\n\\n  _createObjectStartFixed (len) {\\n    if (len === 0) {\\n      this._push(this.createObject({}))\\n      return\\n    }\\n\\n    this._createParent({}, c.PARENT.OBJECT, len)\\n  }\\n\\n  _createArrayStartFixed (len) {\\n    if (len === 0) {\\n      this._push(this.createArray([]))\\n      return\\n    }\\n\\n    this._createParent(new Array(len), c.PARENT.ARRAY, len)\\n  }\\n\\n  _decode (input) {\\n    if (input.byteLength === 0) {\\n      throw new Error('Input too short')\\n    }\\n\\n    this._reset()\\n    this._heap8.set(input)\\n    const code = this.parser.parse(input.byteLength)\\n\\n    if (this._depth > 1) {\\n      while (this._currentParent.length === 0) {\\n        this._closeParent()\\n      }\\n      if (this._depth > 1) {\\n        throw new Error('Undeterminated nesting')\\n      }\\n    }\\n\\n    if (code > 0) {\\n      throw new Error('Failed to parse')\\n    }\\n\\n    if (this._res.length === 0) {\\n      throw new Error('No valid result')\\n    }\\n  }\\n\\n  // -- Public Interface\\n\\n  decodeFirst (input) {\\n    this._decode(input)\\n\\n    return this._res[0]\\n  }\\n\\n  decodeAll (input) {\\n    this._decode(input)\\n\\n    return this._res\\n  }\\n\\n  /**\\n   * Decode the first cbor object.\\n   *\\n   * @param {Buffer|string} input\\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\\n   * @returns {*}\\n   */\\n  static decode (input, enc) {\\n    if (typeof input === 'string') {\\n      input = Buffer.from(input, enc || 'hex')\\n    }\\n\\n    const dec = new Decoder({ size: input.length })\\n    return dec.decodeFirst(input)\\n  }\\n\\n  /**\\n   * Decode all cbor objects.\\n   *\\n   * @param {Buffer|string} input\\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\\n   * @returns {Array<*>}\\n   */\\n  static decodeAll (input, enc) {\\n    if (typeof input === 'string') {\\n      input = Buffer.from(input, enc || 'hex')\\n    }\\n\\n    const dec = new Decoder({ size: input.length })\\n    return dec.decodeAll(input)\\n  }\\n}\\n\\nDecoder.decodeFirst = Decoder.decode\\n\\nmodule.exports = Decoder\\n\\n}).call(this)}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\n},{\\\"./constants\\\":28,\\\"./decoder.asm\\\":29,\\\"./simple\\\":34,\\\"./tagged\\\":35,\\\"./utils\\\":36,\\\"bignumber.js\\\":19,\\\"buffer\\\":39,\\\"ieee754\\\":203,\\\"iso-url\\\":25}],31:[function(require,module,exports){\\n'use strict'\\n\\nconst { Buffer } = require('buffer')\\nconst Decoder = require('./decoder')\\nconst utils = require('./utils')\\n\\n/**\\n * Output the diagnostic format from a stream of CBOR bytes.\\n *\\n */\\nclass Diagnose extends Decoder {\\n  createTag (tagNumber, value) {\\n    return `${tagNumber}(${value})`\\n  }\\n\\n  createInt (val) {\\n    return super.createInt(val).toString()\\n  }\\n\\n  createInt32 (f, g) {\\n    return super.createInt32(f, g).toString()\\n  }\\n\\n  createInt64 (f1, f2, g1, g2) {\\n    return super.createInt64(f1, f2, g1, g2).toString()\\n  }\\n\\n  createInt32Neg (f, g) {\\n    return super.createInt32Neg(f, g).toString()\\n  }\\n\\n  createInt64Neg (f1, f2, g1, g2) {\\n    return super.createInt64Neg(f1, f2, g1, g2).toString()\\n  }\\n\\n  createTrue () {\\n    return 'true'\\n  }\\n\\n  createFalse () {\\n    return 'false'\\n  }\\n\\n  createFloat (val) {\\n    const fl = super.createFloat(val)\\n    if (utils.isNegativeZero(val)) {\\n      return '-0_1'\\n    }\\n\\n    return `${fl}_1`\\n  }\\n\\n  createFloatSingle (a, b, c, d) {\\n    const fl = super.createFloatSingle(a, b, c, d)\\n    return `${fl}_2`\\n  }\\n\\n  createFloatDouble (a, b, c, d, e, f, g, h) {\\n    const fl = super.createFloatDouble(a, b, c, d, e, f, g, h)\\n    return `${fl}_3`\\n  }\\n\\n  createByteString (raw, len) {\\n    const val = raw.join(', ')\\n\\n    if (len === -1) {\\n      return `(_ ${val})`\\n    }\\n    return `h'${val}`\\n  }\\n\\n  createByteStringFromHeap (start, end) {\\n    const val = (Buffer.from(\\n      super.createByteStringFromHeap(start, end)\\n    )).toString('hex')\\n\\n    return `h'${val}'`\\n  }\\n\\n  createInfinity () {\\n    return 'Infinity_1'\\n  }\\n\\n  createInfinityNeg () {\\n    return '-Infinity_1'\\n  }\\n\\n  createNaN () {\\n    return 'NaN_1'\\n  }\\n\\n  createNaNNeg () {\\n    return '-NaN_1'\\n  }\\n\\n  createNull () {\\n    return 'null'\\n  }\\n\\n  createUndefined () {\\n    return 'undefined'\\n  }\\n\\n  createSimpleUnassigned (val) {\\n    return `simple(${val})`\\n  }\\n\\n  createArray (arr, len) {\\n    const val = super.createArray(arr, len)\\n\\n    if (len === -1) {\\n      // indefinite\\n      return `[_ ${val.join(', ')}]`\\n    }\\n\\n    return `[${val.join(', ')}]`\\n  }\\n\\n  createMap (map, len) {\\n    const val = super.createMap(map)\\n    const list = Array.from(val.keys())\\n      .reduce(collectObject(val), '')\\n\\n    if (len === -1) {\\n      return `{_ ${list}}`\\n    }\\n\\n    return `{${list}}`\\n  }\\n\\n  createObject (obj, len) {\\n    const val = super.createObject(obj)\\n    const map = Object.keys(val)\\n      .reduce(collectObject(val), '')\\n\\n    if (len === -1) {\\n      return `{_ ${map}}`\\n    }\\n\\n    return `{${map}}`\\n  }\\n\\n  createUtf8String (raw, len) {\\n    const val = raw.join(', ')\\n\\n    if (len === -1) {\\n      return `(_ ${val})`\\n    }\\n\\n    return `\\\"${val}\\\"`\\n  }\\n\\n  createUtf8StringFromHeap (start, end) {\\n    const val = (Buffer.from(\\n      super.createUtf8StringFromHeap(start, end)\\n    )).toString('utf8')\\n\\n    return `\\\"${val}\\\"`\\n  }\\n\\n  static diagnose (input, enc) {\\n    if (typeof input === 'string') {\\n      input = Buffer.from(input, enc || 'hex')\\n    }\\n\\n    const dec = new Diagnose()\\n    return dec.decodeFirst(input)\\n  }\\n}\\n\\nmodule.exports = Diagnose\\n\\nfunction collectObject (val) {\\n  return (acc, key) => {\\n    if (acc) {\\n      return `${acc}, ${key}: ${val[key]}`\\n    }\\n    return `${key}: ${val[key]}`\\n  }\\n}\\n\\n},{\\\"./decoder\\\":30,\\\"./utils\\\":36,\\\"buffer\\\":39}],32:[function(require,module,exports){\\n'use strict'\\n\\nconst { Buffer } = require('buffer')\\nconst { URL } = require('iso-url')\\nconst Bignumber = require('bignumber.js').BigNumber\\n\\nconst utils = require('./utils')\\nconst constants = require('./constants')\\nconst MT = constants.MT\\nconst NUMBYTES = constants.NUMBYTES\\nconst SHIFT32 = constants.SHIFT32\\nconst SYMS = constants.SYMS\\nconst TAG = constants.TAG\\nconst HALF = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.TWO\\nconst FLOAT = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.FOUR\\nconst DOUBLE = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.EIGHT\\nconst TRUE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.TRUE\\nconst FALSE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.FALSE\\nconst UNDEFINED = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.UNDEFINED\\nconst NULL = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.NULL\\n\\nconst MAXINT_BN = new Bignumber('0x20000000000000')\\nconst BUF_NAN = Buffer.from('f97e00', 'hex')\\nconst BUF_INF_NEG = Buffer.from('f9fc00', 'hex')\\nconst BUF_INF_POS = Buffer.from('f97c00', 'hex')\\n\\nfunction toType (obj) {\\n  // [object Type]\\n  // --------8---1\\n  return ({}).toString.call(obj).slice(8, -1)\\n}\\n\\n/**\\n * Transform JavaScript values into CBOR bytes\\n *\\n */\\nclass Encoder {\\n  /**\\n   * @param {Object} [options={}]\\n   * @param {function(Buffer)} options.stream\\n   */\\n  constructor (options) {\\n    options = options || {}\\n\\n    this.streaming = typeof options.stream === 'function'\\n    this.onData = options.stream\\n\\n    this.semanticTypes = [\\n      [URL, this._pushUrl],\\n      [Bignumber, this._pushBigNumber]\\n    ]\\n\\n    const addTypes = options.genTypes || []\\n    const len = addTypes.length\\n    for (let i = 0; i < len; i++) {\\n      this.addSemanticType(\\n        addTypes[i][0],\\n        addTypes[i][1]\\n      )\\n    }\\n\\n    this._reset()\\n  }\\n\\n  addSemanticType (type, fun) {\\n    const len = this.semanticTypes.length\\n    for (let i = 0; i < len; i++) {\\n      const typ = this.semanticTypes[i][0]\\n      if (typ === type) {\\n        const old = this.semanticTypes[i][1]\\n        this.semanticTypes[i][1] = fun\\n        return old\\n      }\\n    }\\n    this.semanticTypes.push([type, fun])\\n    return null\\n  }\\n\\n  push (val) {\\n    if (!val) {\\n      return true\\n    }\\n\\n    this.result[this.offset] = val\\n    this.resultMethod[this.offset] = 0\\n    this.resultLength[this.offset] = val.length\\n    this.offset++\\n\\n    if (this.streaming) {\\n      this.onData(this.finalize())\\n    }\\n\\n    return true\\n  }\\n\\n  pushWrite (val, method, len) {\\n    this.result[this.offset] = val\\n    this.resultMethod[this.offset] = method\\n    this.resultLength[this.offset] = len\\n    this.offset++\\n\\n    if (this.streaming) {\\n      this.onData(this.finalize())\\n    }\\n\\n    return true\\n  }\\n\\n  _pushUInt8 (val) {\\n    return this.pushWrite(val, 1, 1)\\n  }\\n\\n  _pushUInt16BE (val) {\\n    return this.pushWrite(val, 2, 2)\\n  }\\n\\n  _pushUInt32BE (val) {\\n    return this.pushWrite(val, 3, 4)\\n  }\\n\\n  _pushDoubleBE (val) {\\n    return this.pushWrite(val, 4, 8)\\n  }\\n\\n  _pushNaN () {\\n    return this.push(BUF_NAN)\\n  }\\n\\n  _pushInfinity (obj) {\\n    const half = (obj < 0) ? BUF_INF_NEG : BUF_INF_POS\\n    return this.push(half)\\n  }\\n\\n  _pushFloat (obj) {\\n    const b2 = Buffer.allocUnsafe(2)\\n\\n    if (utils.writeHalf(b2, obj)) {\\n      if (utils.parseHalf(b2) === obj) {\\n        return this._pushUInt8(HALF) && this.push(b2)\\n      }\\n    }\\n\\n    const b4 = Buffer.allocUnsafe(4)\\n    b4.writeFloatBE(obj, 0)\\n    if (b4.readFloatBE(0) === obj) {\\n      return this._pushUInt8(FLOAT) && this.push(b4)\\n    }\\n\\n    return this._pushUInt8(DOUBLE) && this._pushDoubleBE(obj)\\n  }\\n\\n  _pushInt (obj, mt, orig) {\\n    const m = mt << 5\\n    if (obj < 24) {\\n      return this._pushUInt8(m | obj)\\n    }\\n\\n    if (obj <= 0xff) {\\n      return this._pushUInt8(m | NUMBYTES.ONE) && this._pushUInt8(obj)\\n    }\\n\\n    if (obj <= 0xffff) {\\n      return this._pushUInt8(m | NUMBYTES.TWO) && this._pushUInt16BE(obj)\\n    }\\n\\n    if (obj <= 0xffffffff) {\\n      return this._pushUInt8(m | NUMBYTES.FOUR) && this._pushUInt32BE(obj)\\n    }\\n\\n    if (obj <= Number.MAX_SAFE_INTEGER) {\\n      return this._pushUInt8(m | NUMBYTES.EIGHT) &&\\n        this._pushUInt32BE(Math.floor(obj / SHIFT32)) &&\\n        this._pushUInt32BE(obj % SHIFT32)\\n    }\\n\\n    if (mt === MT.NEG_INT) {\\n      return this._pushFloat(orig)\\n    }\\n\\n    return this._pushFloat(obj)\\n  }\\n\\n  _pushIntNum (obj) {\\n    if (obj < 0) {\\n      return this._pushInt(-obj - 1, MT.NEG_INT, obj)\\n    } else {\\n      return this._pushInt(obj, MT.POS_INT)\\n    }\\n  }\\n\\n  _pushNumber (obj) {\\n    switch (false) {\\n      case (obj === obj): // eslint-disable-line\\n        return this._pushNaN(obj)\\n      case isFinite(obj):\\n        return this._pushInfinity(obj)\\n      case ((obj % 1) !== 0):\\n        return this._pushIntNum(obj)\\n      default:\\n        return this._pushFloat(obj)\\n    }\\n  }\\n\\n  _pushString (obj) {\\n    const len = Buffer.byteLength(obj, 'utf8')\\n    return this._pushInt(len, MT.UTF8_STRING) && this.pushWrite(obj, 5, len)\\n  }\\n\\n  _pushBoolean (obj) {\\n    return this._pushUInt8(obj ? TRUE : FALSE)\\n  }\\n\\n  _pushUndefined (obj) {\\n    return this._pushUInt8(UNDEFINED)\\n  }\\n\\n  _pushArray (gen, obj) {\\n    const len = obj.length\\n    if (!gen._pushInt(len, MT.ARRAY)) {\\n      return false\\n    }\\n    for (let j = 0; j < len; j++) {\\n      if (!gen.pushAny(obj[j])) {\\n        return false\\n      }\\n    }\\n    return true\\n  }\\n\\n  _pushTag (tag) {\\n    return this._pushInt(tag, MT.TAG)\\n  }\\n\\n  _pushDate (gen, obj) {\\n    // Round date, to get seconds since 1970-01-01 00:00:00 as defined in\\n    // Sec. 2.4.1 and get a possibly more compact encoding. Note that it is\\n    // still allowed to encode fractions of seconds which can be achieved by\\n    // changing overwriting the encode function for Date objects.\\n    return gen._pushTag(TAG.DATE_EPOCH) && gen.pushAny(Math.round(obj / 1000))\\n  }\\n\\n  _pushBuffer (gen, obj) {\\n    return gen._pushInt(obj.length, MT.BYTE_STRING) && gen.push(obj)\\n  }\\n\\n  _pushNoFilter (gen, obj) {\\n    return gen._pushBuffer(gen, obj.slice())\\n  }\\n\\n  _pushRegexp (gen, obj) {\\n    return gen._pushTag(TAG.REGEXP) && gen.pushAny(obj.source)\\n  }\\n\\n  _pushSet (gen, obj) {\\n    if (!gen._pushInt(obj.size, MT.ARRAY)) {\\n      return false\\n    }\\n    for (const x of obj) {\\n      if (!gen.pushAny(x)) {\\n        return false\\n      }\\n    }\\n    return true\\n  }\\n\\n  _pushUrl (gen, obj) {\\n    return gen._pushTag(TAG.URI) && gen.pushAny(obj.format())\\n  }\\n\\n  _pushBigint (obj) {\\n    let tag = TAG.POS_BIGINT\\n    if (obj.isNegative()) {\\n      obj = obj.negated().minus(1)\\n      tag = TAG.NEG_BIGINT\\n    }\\n    let str = obj.toString(16)\\n    if (str.length % 2) {\\n      str = '0' + str\\n    }\\n    const buf = Buffer.from(str, 'hex')\\n    return this._pushTag(tag) && this._pushBuffer(this, buf)\\n  }\\n\\n  _pushBigNumber (gen, obj) {\\n    if (obj.isNaN()) {\\n      return gen._pushNaN()\\n    }\\n    if (!obj.isFinite()) {\\n      return gen._pushInfinity(obj.isNegative() ? -Infinity : Infinity)\\n    }\\n    if (obj.isInteger()) {\\n      return gen._pushBigint(obj)\\n    }\\n    if (!(gen._pushTag(TAG.DECIMAL_FRAC) &&\\n      gen._pushInt(2, MT.ARRAY))) {\\n      return false\\n    }\\n\\n    const dec = obj.decimalPlaces()\\n    const slide = obj.multipliedBy(new Bignumber(10).pow(dec))\\n    if (!gen._pushIntNum(-dec)) {\\n      return false\\n    }\\n    if (slide.abs().isLessThan(MAXINT_BN)) {\\n      return gen._pushIntNum(slide.toNumber())\\n    } else {\\n      return gen._pushBigint(slide)\\n    }\\n  }\\n\\n  _pushMap (gen, obj) {\\n    if (!gen._pushInt(obj.size, MT.MAP)) {\\n      return false\\n    }\\n\\n    return this._pushRawMap(\\n      obj.size,\\n      Array.from(obj)\\n    )\\n  }\\n\\n  _pushObject (obj) {\\n    if (!obj) {\\n      return this._pushUInt8(NULL)\\n    }\\n\\n    var len = this.semanticTypes.length\\n    for (var i = 0; i < len; i++) {\\n      if (obj instanceof this.semanticTypes[i][0]) {\\n        return this.semanticTypes[i][1].call(obj, this, obj)\\n      }\\n    }\\n\\n    var f = obj.encodeCBOR\\n    if (typeof f === 'function') {\\n      return f.call(obj, this)\\n    }\\n\\n    var keys = Object.keys(obj)\\n    var keyLength = keys.length\\n    if (!this._pushInt(keyLength, MT.MAP)) {\\n      return false\\n    }\\n\\n    return this._pushRawMap(\\n      keyLength,\\n      keys.map((k) => [k, obj[k]])\\n    )\\n  }\\n\\n  _pushRawMap (len, map) {\\n    // Sort keys for canoncialization\\n    // 1. encode key\\n    // 2. shorter key comes before longer key\\n    // 3. same length keys are sorted with lower\\n    //    byte value before higher\\n\\n    map = map.map(function (a) {\\n      a[0] = Encoder.encode(a[0])\\n      return a\\n    }).sort(utils.keySorter)\\n\\n    for (var j = 0; j < len; j++) {\\n      if (!this.push(map[j][0])) {\\n        return false\\n      }\\n\\n      if (!this.pushAny(map[j][1])) {\\n        return false\\n      }\\n    }\\n\\n    return true\\n  }\\n\\n  /**\\n   * Alias for `.pushAny`\\n   *\\n   * @param {*} obj\\n   * @returns {boolean} true on success\\n   */\\n  write (obj) {\\n    return this.pushAny(obj)\\n  }\\n\\n  /**\\n   * Push any supported type onto the encoded stream\\n   *\\n   * @param {any} obj\\n   * @returns {boolean} true on success\\n   */\\n  pushAny (obj) {\\n    var typ = toType(obj)\\n\\n    switch (typ) {\\n      case 'Number':\\n        return this._pushNumber(obj)\\n      case 'String':\\n        return this._pushString(obj)\\n      case 'Boolean':\\n        return this._pushBoolean(obj)\\n      case 'Object':\\n        return this._pushObject(obj)\\n      case 'Array':\\n        return this._pushArray(this, obj)\\n      case 'Uint8Array':\\n        return this._pushBuffer(this, Buffer.isBuffer(obj) ? obj : Buffer.from(obj))\\n      case 'Null':\\n        return this._pushUInt8(NULL)\\n      case 'Undefined':\\n        return this._pushUndefined(obj)\\n      case 'Map':\\n        return this._pushMap(this, obj)\\n      case 'Set':\\n        return this._pushSet(this, obj)\\n      case 'URL':\\n        return this._pushUrl(this, obj)\\n      case 'BigNumber':\\n        return this._pushBigNumber(this, obj)\\n      case 'Date':\\n        return this._pushDate(this, obj)\\n      case 'RegExp':\\n        return this._pushRegexp(this, obj)\\n      case 'Symbol':\\n        switch (obj) {\\n          case SYMS.NULL:\\n            return this._pushObject(null)\\n          case SYMS.UNDEFINED:\\n            return this._pushUndefined(undefined)\\n          // TODO: Add pluggable support for other symbols\\n          default:\\n            throw new Error('Unknown symbol: ' + obj.toString())\\n        }\\n      default:\\n        throw new Error('Unknown type: ' + typeof obj + ', ' + (obj ? obj.toString() : ''))\\n    }\\n  }\\n\\n  finalize () {\\n    if (this.offset === 0) {\\n      return null\\n    }\\n\\n    var result = this.result\\n    var resultLength = this.resultLength\\n    var resultMethod = this.resultMethod\\n    var offset = this.offset\\n\\n    // Determine the size of the buffer\\n    var size = 0\\n    var i = 0\\n\\n    for (; i < offset; i++) {\\n      size += resultLength[i]\\n    }\\n\\n    var res = Buffer.allocUnsafe(size)\\n    var index = 0\\n    var length = 0\\n\\n    // Write the content into the result buffer\\n    for (i = 0; i < offset; i++) {\\n      length = resultLength[i]\\n\\n      switch (resultMethod[i]) {\\n        case 0:\\n          result[i].copy(res, index)\\n          break\\n        case 1:\\n          res.writeUInt8(result[i], index, true)\\n          break\\n        case 2:\\n          res.writeUInt16BE(result[i], index, true)\\n          break\\n        case 3:\\n          res.writeUInt32BE(result[i], index, true)\\n          break\\n        case 4:\\n          res.writeDoubleBE(result[i], index, true)\\n          break\\n        case 5:\\n          res.write(result[i], index, length, 'utf8')\\n          break\\n        default:\\n          throw new Error('unkown method')\\n      }\\n\\n      index += length\\n    }\\n\\n    var tmp = res\\n\\n    this._reset()\\n\\n    return tmp\\n  }\\n\\n  _reset () {\\n    this.result = []\\n    this.resultMethod = []\\n    this.resultLength = []\\n    this.offset = 0\\n  }\\n\\n  /**\\n   * Encode the given value\\n   * @param {*} o\\n   * @returns {Buffer}\\n   */\\n  static encode (o) {\\n    const enc = new Encoder()\\n    const ret = enc.pushAny(o)\\n    if (!ret) {\\n      throw new Error('Failed to encode input')\\n    }\\n\\n    return enc.finalize()\\n  }\\n}\\n\\nmodule.exports = Encoder\\n\\n},{\\\"./constants\\\":28,\\\"./utils\\\":36,\\\"bignumber.js\\\":19,\\\"buffer\\\":39,\\\"iso-url\\\":25}],33:[function(require,module,exports){\\n'use strict'\\n\\n// exports.Commented = require('./commented')\\nexports.Diagnose = require('./diagnose')\\nexports.Decoder = require('./decoder')\\nexports.Encoder = require('./encoder')\\nexports.Simple = require('./simple')\\nexports.Tagged = require('./tagged')\\n\\n// exports.comment = exports.Commented.comment\\nexports.decodeAll = exports.Decoder.decodeAll\\nexports.decodeFirst = exports.Decoder.decodeFirst\\nexports.diagnose = exports.Diagnose.diagnose\\nexports.encode = exports.Encoder.encode\\nexports.decode = exports.Decoder.decode\\n\\nexports.leveldb = {\\n  decode: exports.Decoder.decodeAll,\\n  encode: exports.Encoder.encode,\\n  buffer: true,\\n  name: 'cbor'\\n}\\n\\n},{\\\"./decoder\\\":30,\\\"./diagnose\\\":31,\\\"./encoder\\\":32,\\\"./simple\\\":34,\\\"./tagged\\\":35}],34:[function(require,module,exports){\\n'use strict'\\n\\nconst constants = require('./constants')\\nconst MT = constants.MT\\nconst SIMPLE = constants.SIMPLE\\nconst SYMS = constants.SYMS\\n\\n/**\\n * A CBOR Simple Value that does not map onto a known constant.\\n */\\nclass Simple {\\n  /**\\n   * Creates an instance of Simple.\\n   *\\n   * @param {integer} value - the simple value's integer value\\n   */\\n  constructor (value) {\\n    if (typeof value !== 'number') {\\n      throw new Error('Invalid Simple type: ' + (typeof value))\\n    }\\n    if ((value < 0) || (value > 255) || ((value | 0) !== value)) {\\n      throw new Error('value must be a small positive integer: ' + value)\\n    }\\n    this.value = value\\n  }\\n\\n  /**\\n   * Debug string for simple value\\n   *\\n   * @returns {string} simple(value)\\n   */\\n  toString () {\\n    return 'simple(' + this.value + ')'\\n  }\\n\\n  /**\\n   * Debug string for simple value\\n   *\\n   * @returns {string} simple(value)\\n   */\\n  inspect () {\\n    return 'simple(' + this.value + ')'\\n  }\\n\\n  /**\\n   * Push the simple value onto the CBOR stream\\n   *\\n   * @param {cbor.Encoder} gen The generator to push onto\\n   * @returns {number}\\n   */\\n  encodeCBOR (gen) {\\n    return gen._pushInt(this.value, MT.SIMPLE_FLOAT)\\n  }\\n\\n  /**\\n   * Is the given object a Simple?\\n   *\\n   * @param {any} obj - object to test\\n   * @returns {bool} - is it Simple?\\n   */\\n  static isSimple (obj) {\\n    return obj instanceof Simple\\n  }\\n\\n  /**\\n   * Decode from the CBOR additional information into a JavaScript value.\\n   * If the CBOR item has no parent, return a \\\"safe\\\" symbol instead of\\n   * `null` or `undefined`, so that the value can be passed through a\\n   * stream in object mode.\\n   *\\n   * @param {Number} val - the CBOR additional info to convert\\n   * @param {bool} hasParent - Does the CBOR item have a parent?\\n   * @returns {(null|undefined|Boolean|Symbol)} - the decoded value\\n   */\\n  static decode (val, hasParent) {\\n    if (hasParent == null) {\\n      hasParent = true\\n    }\\n    switch (val) {\\n      case SIMPLE.FALSE:\\n        return false\\n      case SIMPLE.TRUE:\\n        return true\\n      case SIMPLE.NULL:\\n        if (hasParent) {\\n          return null\\n        } else {\\n          return SYMS.NULL\\n        }\\n      case SIMPLE.UNDEFINED:\\n        if (hasParent) {\\n          return undefined\\n        } else {\\n          return SYMS.UNDEFINED\\n        }\\n      case -1:\\n        if (!hasParent) {\\n          throw new Error('Invalid BREAK')\\n        }\\n        return SYMS.BREAK\\n      default:\\n        return new Simple(val)\\n    }\\n  }\\n}\\n\\nmodule.exports = Simple\\n\\n},{\\\"./constants\\\":28}],35:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * A CBOR tagged item, where the tag does not have semantics specified at the\\n * moment, or those semantics threw an error during parsing. Typically this will\\n * be an extension point you're not yet expecting.\\n */\\nclass Tagged {\\n  /**\\n   * Creates an instance of Tagged.\\n   *\\n   * @param {Number} tag - the number of the tag\\n   * @param {any} value - the value inside the tag\\n   * @param {Error} err - the error that was thrown parsing the tag, or null\\n   */\\n  constructor (tag, value, err) {\\n    this.tag = tag\\n    this.value = value\\n    this.err = err\\n    if (typeof this.tag !== 'number') {\\n      throw new Error('Invalid tag type (' + (typeof this.tag) + ')')\\n    }\\n    if ((this.tag < 0) || ((this.tag | 0) !== this.tag)) {\\n      throw new Error('Tag must be a positive integer: ' + this.tag)\\n    }\\n  }\\n\\n  /**\\n   * Convert to a String\\n   *\\n   * @returns {String} string of the form '1(2)'\\n   */\\n  toString () {\\n    return `${this.tag}(${JSON.stringify(this.value)})`\\n  }\\n\\n  /**\\n   * Push the simple value onto the CBOR stream\\n   *\\n   * @param {cbor.Encoder} gen The generator to push onto\\n   * @returns {number}\\n   */\\n  encodeCBOR (gen) {\\n    gen._pushTag(this.tag)\\n    return gen.pushAny(this.value)\\n  }\\n\\n  /**\\n   * If we have a converter for this type, do the conversion.  Some converters\\n   * are built-in.  Additional ones can be passed in.  If you want to remove\\n   * a built-in converter, pass a converter in whose value is 'null' instead\\n   * of a function.\\n   *\\n   * @param {Object} converters - keys in the object are a tag number, the value\\n   *   is a function that takes the decoded CBOR and returns a JavaScript value\\n   *   of the appropriate type.  Throw an exception in the function on errors.\\n   * @returns {any} - the converted item\\n   */\\n  convert (converters) {\\n    var er, f\\n    f = converters != null ? converters[this.tag] : undefined\\n    if (typeof f !== 'function') {\\n      f = Tagged['_tag' + this.tag]\\n      if (typeof f !== 'function') {\\n        return this\\n      }\\n    }\\n    try {\\n      return f.call(Tagged, this.value)\\n    } catch (error) {\\n      er = error\\n      this.err = er\\n      return this\\n    }\\n  }\\n}\\n\\nmodule.exports = Tagged\\n\\n},{}],36:[function(require,module,exports){\\n'use strict'\\n\\nconst { Buffer } = require('buffer')\\nconst Bignumber = require('bignumber.js').BigNumber\\n\\nconst constants = require('./constants')\\nconst SHIFT32 = constants.SHIFT32\\nconst SHIFT16 = constants.SHIFT16\\nconst MAX_SAFE_HIGH = 0x1fffff\\n\\nexports.parseHalf = function parseHalf (buf) {\\n  var exp, mant, sign\\n  sign = buf[0] & 0x80 ? -1 : 1\\n  exp = (buf[0] & 0x7C) >> 2\\n  mant = ((buf[0] & 0x03) << 8) | buf[1]\\n  if (!exp) {\\n    return sign * 5.9604644775390625e-8 * mant\\n  } else if (exp === 0x1f) {\\n    return sign * (mant ? 0 / 0 : 2e308)\\n  } else {\\n    return sign * Math.pow(2, exp - 25) * (1024 + mant)\\n  }\\n}\\n\\nfunction toHex (n) {\\n  if (n < 16) {\\n    return '0' + n.toString(16)\\n  }\\n\\n  return n.toString(16)\\n}\\n\\nexports.arrayBufferToBignumber = function (buf) {\\n  const len = buf.byteLength\\n  let res = ''\\n  for (let i = 0; i < len; i++) {\\n    res += toHex(buf[i])\\n  }\\n\\n  return new Bignumber(res, 16)\\n}\\n\\n// convert an Object into a Map\\nexports.buildMap = (obj) => {\\n  const res = new Map()\\n  const keys = Object.keys(obj)\\n  const length = keys.length\\n  for (let i = 0; i < length; i++) {\\n    res.set(keys[i], obj[keys[i]])\\n  }\\n  return res\\n}\\n\\nexports.buildInt32 = (f, g) => {\\n  return f * SHIFT16 + g\\n}\\n\\nexports.buildInt64 = (f1, f2, g1, g2) => {\\n  const f = exports.buildInt32(f1, f2)\\n  const g = exports.buildInt32(g1, g2)\\n\\n  if (f > MAX_SAFE_HIGH) {\\n    return new Bignumber(f).times(SHIFT32).plus(g)\\n  } else {\\n    return (f * SHIFT32) + g\\n  }\\n}\\n\\nexports.writeHalf = function writeHalf (buf, half) {\\n  // assume 0, -0, NaN, Infinity, and -Infinity have already been caught\\n\\n  // HACK: everyone settle in.  This isn't going to be pretty.\\n  // Translate cn-cbor's C code (from Carsten Borman):\\n\\n  // uint32_t be32;\\n  // uint16_t be16, u16;\\n  // union {\\n  //   float f;\\n  //   uint32_t u;\\n  // } u32;\\n  // u32.f = float_val;\\n\\n  const u32 = Buffer.allocUnsafe(4)\\n  u32.writeFloatBE(half, 0)\\n  const u = u32.readUInt32BE(0)\\n\\n  // if ((u32.u & 0x1FFF) == 0) { /* worth trying half */\\n\\n  // hildjj: If the lower 13 bits are 0, we won't lose anything in the conversion\\n  if ((u & 0x1FFF) !== 0) {\\n    return false\\n  }\\n\\n  //   int s16 = (u32.u >> 16) & 0x8000;\\n  //   int exp = (u32.u >> 23) & 0xff;\\n  //   int mant = u32.u & 0x7fffff;\\n\\n  var s16 = (u >> 16) & 0x8000 // top bit is sign\\n  const exp = (u >> 23) & 0xff // then 5 bits of exponent\\n  const mant = u & 0x7fffff\\n\\n  //   if (exp == 0 && mant == 0)\\n  //     ;              /* 0.0, -0.0 */\\n\\n  // hildjj: zeros already handled.  Assert if you don't believe me.\\n\\n  //   else if (exp >= 113 && exp <= 142) /* normalized */\\n  //     s16 += ((exp - 112) << 10) + (mant >> 13);\\n  if ((exp >= 113) && (exp <= 142)) {\\n    s16 += ((exp - 112) << 10) + (mant >> 13)\\n\\n  //   else if (exp >= 103 && exp < 113) { /* denorm, exp16 = 0 */\\n  //     if (mant & ((1 << (126 - exp)) - 1))\\n  //       goto float32;         /* loss of precision */\\n  //     s16 += ((mant + 0x800000) >> (126 - exp));\\n  } else if ((exp >= 103) && (exp < 113)) {\\n    if (mant & ((1 << (126 - exp)) - 1)) {\\n      return false\\n    }\\n    s16 += ((mant + 0x800000) >> (126 - exp))\\n\\n    //   } else if (exp == 255 && mant == 0) { /* Inf */\\n    //     s16 += 0x7c00;\\n\\n    // hildjj: Infinity already handled\\n\\n  //   } else\\n  //     goto float32;           /* loss of range */\\n  } else {\\n    return false\\n  }\\n\\n  //   ensure_writable(3);\\n  //   u16 = s16;\\n  //   be16 = hton16p((const uint8_t*)&u16);\\n  buf.writeUInt16BE(s16, 0)\\n  return true\\n}\\n\\nexports.keySorter = function (a, b) {\\n  var lenA = a[0].byteLength\\n  var lenB = b[0].byteLength\\n\\n  if (lenA > lenB) {\\n    return 1\\n  }\\n\\n  if (lenB > lenA) {\\n    return -1\\n  }\\n\\n  return a[0].compare(b[0])\\n}\\n\\n// Adapted from http://www.2ality.com/2012/03/signedzero.html\\nexports.isNegativeZero = (x) => {\\n  return x === 0 && (1 / x < 0)\\n}\\n\\nexports.nextPowerOf2 = (n) => {\\n  let count = 0\\n  // First n in the below condition is for\\n  // the case where n is 0\\n  if (n && !(n & (n - 1))) {\\n    return n\\n  }\\n\\n  while (n !== 0) {\\n    n >>= 1\\n    count += 1\\n  }\\n\\n  return 1 << count\\n}\\n\\n},{\\\"./constants\\\":28,\\\"bignumber.js\\\":19,\\\"buffer\\\":39}],37:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * Turns a browser readable stream into an async iterable. Async iteration over\\n * returned iterable will lock give stream, preventing any other consumer from\\n * acquiring a reader. The lock will be released if iteration loop is broken. To\\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\\n * as a second argument.\\n * @template T\\n * @param {ReadableStream<T>} stream\\n * @param {Object} [options]\\n * @param {boolean} [options.preventCancel=boolean]\\n * @returns {AsyncIterable<T>}\\n */\\nasync function * browserReadableStreamToIt (stream, options = {}) {\\n  const reader = stream.getReader()\\n\\n  try {\\n    while (true) {\\n      const result = await reader.read()\\n\\n      if (result.done) {\\n        return\\n      }\\n\\n      yield result.value\\n    }\\n  } finally {\\n    if (options.preventCancel !== true) {\\n      reader.cancel()\\n    }\\n\\n    reader.releaseLock()\\n  }\\n}\\n\\nmodule.exports = browserReadableStreamToIt\\n\\n},{}],38:[function(require,module,exports){\\n\\n},{}],39:[function(require,module,exports){\\n(function (Buffer){(function (){\\n/*!\\n * The buffer module from node.js, for the browser.\\n *\\n * @author   Feross Aboukhadijeh <https://feross.org>\\n * @license  MIT\\n */\\n/* eslint-disable no-proto */\\n\\n'use strict'\\n\\nvar base64 = require('base64-js')\\nvar ieee754 = require('ieee754')\\n\\nexports.Buffer = Buffer\\nexports.SlowBuffer = SlowBuffer\\nexports.INSPECT_MAX_BYTES = 50\\n\\nvar K_MAX_LENGTH = 0x7fffffff\\nexports.kMaxLength = K_MAX_LENGTH\\n\\n/**\\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\\n *   === true    Use Uint8Array implementation (fastest)\\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\\n *               implementation (most compatible, even IE6)\\n *\\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\\n * Opera 11.6+, iOS 4.2+.\\n *\\n * We report that the browser does not support typed arrays if the are not subclassable\\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\\n * for __proto__ and has a buggy typed array implementation.\\n */\\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\\n\\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\\n    typeof console.error === 'function') {\\n  console.error(\\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\\n  )\\n}\\n\\nfunction typedArraySupport () {\\n  // Can typed array instances can be augmented?\\n  try {\\n    var arr = new Uint8Array(1)\\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\\n    return arr.foo() === 42\\n  } catch (e) {\\n    return false\\n  }\\n}\\n\\nObject.defineProperty(Buffer.prototype, 'parent', {\\n  enumerable: true,\\n  get: function () {\\n    if (!Buffer.isBuffer(this)) return undefined\\n    return this.buffer\\n  }\\n})\\n\\nObject.defineProperty(Buffer.prototype, 'offset', {\\n  enumerable: true,\\n  get: function () {\\n    if (!Buffer.isBuffer(this)) return undefined\\n    return this.byteOffset\\n  }\\n})\\n\\nfunction createBuffer (length) {\\n  if (length > K_MAX_LENGTH) {\\n    throw new RangeError('The value \\\"' + length + '\\\" is invalid for option \\\"size\\\"')\\n  }\\n  // Return an augmented `Uint8Array` instance\\n  var buf = new Uint8Array(length)\\n  buf.__proto__ = Buffer.prototype\\n  return buf\\n}\\n\\n/**\\n * The Buffer constructor returns instances of `Uint8Array` that have their\\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\\n * returns a single octet.\\n *\\n * The `Uint8Array` prototype remains unmodified.\\n */\\n\\nfunction Buffer (arg, encodingOrOffset, length) {\\n  // Common case.\\n  if (typeof arg === 'number') {\\n    if (typeof encodingOrOffset === 'string') {\\n      throw new TypeError(\\n        'The \\\"string\\\" argument must be of type string. Received type number'\\n      )\\n    }\\n    return allocUnsafe(arg)\\n  }\\n  return from(arg, encodingOrOffset, length)\\n}\\n\\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\\n    Buffer[Symbol.species] === Buffer) {\\n  Object.defineProperty(Buffer, Symbol.species, {\\n    value: null,\\n    configurable: true,\\n    enumerable: false,\\n    writable: false\\n  })\\n}\\n\\nBuffer.poolSize = 8192 // not used by this implementation\\n\\nfunction from (value, encodingOrOffset, length) {\\n  if (typeof value === 'string') {\\n    return fromString(value, encodingOrOffset)\\n  }\\n\\n  if (ArrayBuffer.isView(value)) {\\n    return fromArrayLike(value)\\n  }\\n\\n  if (value == null) {\\n    throw TypeError(\\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\\n      'or Array-like Object. Received type ' + (typeof value)\\n    )\\n  }\\n\\n  if (isInstance(value, ArrayBuffer) ||\\n      (value && isInstance(value.buffer, ArrayBuffer))) {\\n    return fromArrayBuffer(value, encodingOrOffset, length)\\n  }\\n\\n  if (typeof value === 'number') {\\n    throw new TypeError(\\n      'The \\\"value\\\" argument must not be of type number. Received type number'\\n    )\\n  }\\n\\n  var valueOf = value.valueOf && value.valueOf()\\n  if (valueOf != null && valueOf !== value) {\\n    return Buffer.from(valueOf, encodingOrOffset, length)\\n  }\\n\\n  var b = fromObject(value)\\n  if (b) return b\\n\\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\\n      typeof value[Symbol.toPrimitive] === 'function') {\\n    return Buffer.from(\\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\\n    )\\n  }\\n\\n  throw new TypeError(\\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\\n    'or Array-like Object. Received type ' + (typeof value)\\n  )\\n}\\n\\n/**\\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\\n * if value is a number.\\n * Buffer.from(str[, encoding])\\n * Buffer.from(array)\\n * Buffer.from(buffer)\\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\\n **/\\nBuffer.from = function (value, encodingOrOffset, length) {\\n  return from(value, encodingOrOffset, length)\\n}\\n\\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\\n// https://github.com/feross/buffer/pull/148\\nBuffer.prototype.__proto__ = Uint8Array.prototype\\nBuffer.__proto__ = Uint8Array\\n\\nfunction assertSize (size) {\\n  if (typeof size !== 'number') {\\n    throw new TypeError('\\\"size\\\" argument must be of type number')\\n  } else if (size < 0) {\\n    throw new RangeError('The value \\\"' + size + '\\\" is invalid for option \\\"size\\\"')\\n  }\\n}\\n\\nfunction alloc (size, fill, encoding) {\\n  assertSize(size)\\n  if (size <= 0) {\\n    return createBuffer(size)\\n  }\\n  if (fill !== undefined) {\\n    // Only pay attention to encoding if it's a string. This\\n    // prevents accidentally sending in a number that would\\n    // be interpretted as a start offset.\\n    return typeof encoding === 'string'\\n      ? createBuffer(size).fill(fill, encoding)\\n      : createBuffer(size).fill(fill)\\n  }\\n  return createBuffer(size)\\n}\\n\\n/**\\n * Creates a new filled Buffer instance.\\n * alloc(size[, fill[, encoding]])\\n **/\\nBuffer.alloc = function (size, fill, encoding) {\\n  return alloc(size, fill, encoding)\\n}\\n\\nfunction allocUnsafe (size) {\\n  assertSize(size)\\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\\n}\\n\\n/**\\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\\n * */\\nBuffer.allocUnsafe = function (size) {\\n  return allocUnsafe(size)\\n}\\n/**\\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\\n */\\nBuffer.allocUnsafeSlow = function (size) {\\n  return allocUnsafe(size)\\n}\\n\\nfunction fromString (string, encoding) {\\n  if (typeof encoding !== 'string' || encoding === '') {\\n    encoding = 'utf8'\\n  }\\n\\n  if (!Buffer.isEncoding(encoding)) {\\n    throw new TypeError('Unknown encoding: ' + encoding)\\n  }\\n\\n  var length = byteLength(string, encoding) | 0\\n  var buf = createBuffer(length)\\n\\n  var actual = buf.write(string, encoding)\\n\\n  if (actual !== length) {\\n    // Writing a hex string, for example, that contains invalid characters will\\n    // cause everything after the first invalid character to be ignored. (e.g.\\n    // 'abxxcd' will be treated as 'ab')\\n    buf = buf.slice(0, actual)\\n  }\\n\\n  return buf\\n}\\n\\nfunction fromArrayLike (array) {\\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\\n  var buf = createBuffer(length)\\n  for (var i = 0; i < length; i += 1) {\\n    buf[i] = array[i] & 255\\n  }\\n  return buf\\n}\\n\\nfunction fromArrayBuffer (array, byteOffset, length) {\\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\\n    throw new RangeError('\\\"offset\\\" is outside of buffer bounds')\\n  }\\n\\n  if (array.byteLength < byteOffset + (length || 0)) {\\n    throw new RangeError('\\\"length\\\" is outside of buffer bounds')\\n  }\\n\\n  var buf\\n  if (byteOffset === undefined && length === undefined) {\\n    buf = new Uint8Array(array)\\n  } else if (length === undefined) {\\n    buf = new Uint8Array(array, byteOffset)\\n  } else {\\n    buf = new Uint8Array(array, byteOffset, length)\\n  }\\n\\n  // Return an augmented `Uint8Array` instance\\n  buf.__proto__ = Buffer.prototype\\n  return buf\\n}\\n\\nfunction fromObject (obj) {\\n  if (Buffer.isBuffer(obj)) {\\n    var len = checked(obj.length) | 0\\n    var buf = createBuffer(len)\\n\\n    if (buf.length === 0) {\\n      return buf\\n    }\\n\\n    obj.copy(buf, 0, 0, len)\\n    return buf\\n  }\\n\\n  if (obj.length !== undefined) {\\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\\n      return createBuffer(0)\\n    }\\n    return fromArrayLike(obj)\\n  }\\n\\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\\n    return fromArrayLike(obj.data)\\n  }\\n}\\n\\nfunction checked (length) {\\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\\n  // length is NaN (which is otherwise coerced to zero.)\\n  if (length >= K_MAX_LENGTH) {\\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\\n  }\\n  return length | 0\\n}\\n\\nfunction SlowBuffer (length) {\\n  if (+length != length) { // eslint-disable-line eqeqeq\\n    length = 0\\n  }\\n  return Buffer.alloc(+length)\\n}\\n\\nBuffer.isBuffer = function isBuffer (b) {\\n  return b != null && b._isBuffer === true &&\\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\\n}\\n\\nBuffer.compare = function compare (a, b) {\\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\\n    throw new TypeError(\\n      'The \\\"buf1\\\", \\\"buf2\\\" arguments must be one of type Buffer or Uint8Array'\\n    )\\n  }\\n\\n  if (a === b) return 0\\n\\n  var x = a.length\\n  var y = b.length\\n\\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\\n    if (a[i] !== b[i]) {\\n      x = a[i]\\n      y = b[i]\\n      break\\n    }\\n  }\\n\\n  if (x < y) return -1\\n  if (y < x) return 1\\n  return 0\\n}\\n\\nBuffer.isEncoding = function isEncoding (encoding) {\\n  switch (String(encoding).toLowerCase()) {\\n    case 'hex':\\n    case 'utf8':\\n    case 'utf-8':\\n    case 'ascii':\\n    case 'latin1':\\n    case 'binary':\\n    case 'base64':\\n    case 'ucs2':\\n    case 'ucs-2':\\n    case 'utf16le':\\n    case 'utf-16le':\\n      return true\\n    default:\\n      return false\\n  }\\n}\\n\\nBuffer.concat = function concat (list, length) {\\n  if (!Array.isArray(list)) {\\n    throw new TypeError('\\\"list\\\" argument must be an Array of Buffers')\\n  }\\n\\n  if (list.length === 0) {\\n    return Buffer.alloc(0)\\n  }\\n\\n  var i\\n  if (length === undefined) {\\n    length = 0\\n    for (i = 0; i < list.length; ++i) {\\n      length += list[i].length\\n    }\\n  }\\n\\n  var buffer = Buffer.allocUnsafe(length)\\n  var pos = 0\\n  for (i = 0; i < list.length; ++i) {\\n    var buf = list[i]\\n    if (isInstance(buf, Uint8Array)) {\\n      buf = Buffer.from(buf)\\n    }\\n    if (!Buffer.isBuffer(buf)) {\\n      throw new TypeError('\\\"list\\\" argument must be an Array of Buffers')\\n    }\\n    buf.copy(buffer, pos)\\n    pos += buf.length\\n  }\\n  return buffer\\n}\\n\\nfunction byteLength (string, encoding) {\\n  if (Buffer.isBuffer(string)) {\\n    return string.length\\n  }\\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\\n    return string.byteLength\\n  }\\n  if (typeof string !== 'string') {\\n    throw new TypeError(\\n      'The \\\"string\\\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\\n      'Received type ' + typeof string\\n    )\\n  }\\n\\n  var len = string.length\\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\\n  if (!mustMatch && len === 0) return 0\\n\\n  // Use a for loop to avoid recursion\\n  var loweredCase = false\\n  for (;;) {\\n    switch (encoding) {\\n      case 'ascii':\\n      case 'latin1':\\n      case 'binary':\\n        return len\\n      case 'utf8':\\n      case 'utf-8':\\n        return utf8ToBytes(string).length\\n      case 'ucs2':\\n      case 'ucs-2':\\n      case 'utf16le':\\n      case 'utf-16le':\\n        return len * 2\\n      case 'hex':\\n        return len >>> 1\\n      case 'base64':\\n        return base64ToBytes(string).length\\n      default:\\n        if (loweredCase) {\\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\\n        }\\n        encoding = ('' + encoding).toLowerCase()\\n        loweredCase = true\\n    }\\n  }\\n}\\nBuffer.byteLength = byteLength\\n\\nfunction slowToString (encoding, start, end) {\\n  var loweredCase = false\\n\\n  // No need to verify that \\\"this.length <= MAX_UINT32\\\" since it's a read-only\\n  // property of a typed array.\\n\\n  // This behaves neither like String nor Uint8Array in that we set start/end\\n  // to their upper/lower bounds if the value passed is out of range.\\n  // undefined is handled specially as per ECMA-262 6th Edition,\\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\\n  if (start === undefined || start < 0) {\\n    start = 0\\n  }\\n  // Return early if start > this.length. Done here to prevent potential uint32\\n  // coercion fail below.\\n  if (start > this.length) {\\n    return ''\\n  }\\n\\n  if (end === undefined || end > this.length) {\\n    end = this.length\\n  }\\n\\n  if (end <= 0) {\\n    return ''\\n  }\\n\\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\\n  end >>>= 0\\n  start >>>= 0\\n\\n  if (end <= start) {\\n    return ''\\n  }\\n\\n  if (!encoding) encoding = 'utf8'\\n\\n  while (true) {\\n    switch (encoding) {\\n      case 'hex':\\n        return hexSlice(this, start, end)\\n\\n      case 'utf8':\\n      case 'utf-8':\\n        return utf8Slice(this, start, end)\\n\\n      case 'ascii':\\n        return asciiSlice(this, start, end)\\n\\n      case 'latin1':\\n      case 'binary':\\n        return latin1Slice(this, start, end)\\n\\n      case 'base64':\\n        return base64Slice(this, start, end)\\n\\n      case 'ucs2':\\n      case 'ucs-2':\\n      case 'utf16le':\\n      case 'utf-16le':\\n        return utf16leSlice(this, start, end)\\n\\n      default:\\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\\n        encoding = (encoding + '').toLowerCase()\\n        loweredCase = true\\n    }\\n  }\\n}\\n\\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\\n// reliably in a browserify context because there could be multiple different\\n// copies of the 'buffer' package in use. This method works even for Buffer\\n// instances that were created from another copy of the `buffer` package.\\n// See: https://github.com/feross/buffer/issues/154\\nBuffer.prototype._isBuffer = true\\n\\nfunction swap (b, n, m) {\\n  var i = b[n]\\n  b[n] = b[m]\\n  b[m] = i\\n}\\n\\nBuffer.prototype.swap16 = function swap16 () {\\n  var len = this.length\\n  if (len % 2 !== 0) {\\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\\n  }\\n  for (var i = 0; i < len; i += 2) {\\n    swap(this, i, i + 1)\\n  }\\n  return this\\n}\\n\\nBuffer.prototype.swap32 = function swap32 () {\\n  var len = this.length\\n  if (len % 4 !== 0) {\\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\\n  }\\n  for (var i = 0; i < len; i += 4) {\\n    swap(this, i, i + 3)\\n    swap(this, i + 1, i + 2)\\n  }\\n  return this\\n}\\n\\nBuffer.prototype.swap64 = function swap64 () {\\n  var len = this.length\\n  if (len % 8 !== 0) {\\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\\n  }\\n  for (var i = 0; i < len; i += 8) {\\n    swap(this, i, i + 7)\\n    swap(this, i + 1, i + 6)\\n    swap(this, i + 2, i + 5)\\n    swap(this, i + 3, i + 4)\\n  }\\n  return this\\n}\\n\\nBuffer.prototype.toString = function toString () {\\n  var length = this.length\\n  if (length === 0) return ''\\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\\n  return slowToString.apply(this, arguments)\\n}\\n\\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\\n\\nBuffer.prototype.equals = function equals (b) {\\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\\n  if (this === b) return true\\n  return Buffer.compare(this, b) === 0\\n}\\n\\nBuffer.prototype.inspect = function inspect () {\\n  var str = ''\\n  var max = exports.INSPECT_MAX_BYTES\\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\\n  if (this.length > max) str += ' ... '\\n  return '<Buffer ' + str + '>'\\n}\\n\\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\\n  if (isInstance(target, Uint8Array)) {\\n    target = Buffer.from(target, target.offset, target.byteLength)\\n  }\\n  if (!Buffer.isBuffer(target)) {\\n    throw new TypeError(\\n      'The \\\"target\\\" argument must be one of type Buffer or Uint8Array. ' +\\n      'Received type ' + (typeof target)\\n    )\\n  }\\n\\n  if (start === undefined) {\\n    start = 0\\n  }\\n  if (end === undefined) {\\n    end = target ? target.length : 0\\n  }\\n  if (thisStart === undefined) {\\n    thisStart = 0\\n  }\\n  if (thisEnd === undefined) {\\n    thisEnd = this.length\\n  }\\n\\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\\n    throw new RangeError('out of range index')\\n  }\\n\\n  if (thisStart >= thisEnd && start >= end) {\\n    return 0\\n  }\\n  if (thisStart >= thisEnd) {\\n    return -1\\n  }\\n  if (start >= end) {\\n    return 1\\n  }\\n\\n  start >>>= 0\\n  end >>>= 0\\n  thisStart >>>= 0\\n  thisEnd >>>= 0\\n\\n  if (this === target) return 0\\n\\n  var x = thisEnd - thisStart\\n  var y = end - start\\n  var len = Math.min(x, y)\\n\\n  var thisCopy = this.slice(thisStart, thisEnd)\\n  var targetCopy = target.slice(start, end)\\n\\n  for (var i = 0; i < len; ++i) {\\n    if (thisCopy[i] !== targetCopy[i]) {\\n      x = thisCopy[i]\\n      y = targetCopy[i]\\n      break\\n    }\\n  }\\n\\n  if (x < y) return -1\\n  if (y < x) return 1\\n  return 0\\n}\\n\\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\\n//\\n// Arguments:\\n// - buffer - a Buffer to search\\n// - val - a string, Buffer, or number\\n// - byteOffset - an index into `buffer`; will be clamped to an int32\\n// - encoding - an optional encoding, relevant is val is a string\\n// - dir - true for indexOf, false for lastIndexOf\\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\\n  // Empty buffer means no match\\n  if (buffer.length === 0) return -1\\n\\n  // Normalize byteOffset\\n  if (typeof byteOffset === 'string') {\\n    encoding = byteOffset\\n    byteOffset = 0\\n  } else if (byteOffset > 0x7fffffff) {\\n    byteOffset = 0x7fffffff\\n  } else if (byteOffset < -0x80000000) {\\n    byteOffset = -0x80000000\\n  }\\n  byteOffset = +byteOffset // Coerce to Number.\\n  if (numberIsNaN(byteOffset)) {\\n    // byteOffset: it it's undefined, null, NaN, \\\"foo\\\", etc, search whole buffer\\n    byteOffset = dir ? 0 : (buffer.length - 1)\\n  }\\n\\n  // Normalize byteOffset: negative offsets start from the end of the buffer\\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\\n  if (byteOffset >= buffer.length) {\\n    if (dir) return -1\\n    else byteOffset = buffer.length - 1\\n  } else if (byteOffset < 0) {\\n    if (dir) byteOffset = 0\\n    else return -1\\n  }\\n\\n  // Normalize val\\n  if (typeof val === 'string') {\\n    val = Buffer.from(val, encoding)\\n  }\\n\\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\\n  if (Buffer.isBuffer(val)) {\\n    // Special case: looking for empty string/buffer always fails\\n    if (val.length === 0) {\\n      return -1\\n    }\\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\\n  } else if (typeof val === 'number') {\\n    val = val & 0xFF // Search for a byte value [0-255]\\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\\n      if (dir) {\\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\\n      } else {\\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\\n      }\\n    }\\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\\n  }\\n\\n  throw new TypeError('val must be string, number or Buffer')\\n}\\n\\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\\n  var indexSize = 1\\n  var arrLength = arr.length\\n  var valLength = val.length\\n\\n  if (encoding !== undefined) {\\n    encoding = String(encoding).toLowerCase()\\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\\n        encoding === 'utf16le' || encoding === 'utf-16le') {\\n      if (arr.length < 2 || val.length < 2) {\\n        return -1\\n      }\\n      indexSize = 2\\n      arrLength /= 2\\n      valLength /= 2\\n      byteOffset /= 2\\n    }\\n  }\\n\\n  function read (buf, i) {\\n    if (indexSize === 1) {\\n      return buf[i]\\n    } else {\\n      return buf.readUInt16BE(i * indexSize)\\n    }\\n  }\\n\\n  var i\\n  if (dir) {\\n    var foundIndex = -1\\n    for (i = byteOffset; i < arrLength; i++) {\\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\\n        if (foundIndex === -1) foundIndex = i\\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\\n      } else {\\n        if (foundIndex !== -1) i -= i - foundIndex\\n        foundIndex = -1\\n      }\\n    }\\n  } else {\\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\\n    for (i = byteOffset; i >= 0; i--) {\\n      var found = true\\n      for (var j = 0; j < valLength; j++) {\\n        if (read(arr, i + j) !== read(val, j)) {\\n          found = false\\n          break\\n        }\\n      }\\n      if (found) return i\\n    }\\n  }\\n\\n  return -1\\n}\\n\\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\\n  return this.indexOf(val, byteOffset, encoding) !== -1\\n}\\n\\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\\n}\\n\\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\\n}\\n\\nfunction hexWrite (buf, string, offset, length) {\\n  offset = Number(offset) || 0\\n  var remaining = buf.length - offset\\n  if (!length) {\\n    length = remaining\\n  } else {\\n    length = Number(length)\\n    if (length > remaining) {\\n      length = remaining\\n    }\\n  }\\n\\n  var strLen = string.length\\n\\n  if (length > strLen / 2) {\\n    length = strLen / 2\\n  }\\n  for (var i = 0; i < length; ++i) {\\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\\n    if (numberIsNaN(parsed)) return i\\n    buf[offset + i] = parsed\\n  }\\n  return i\\n}\\n\\nfunction utf8Write (buf, string, offset, length) {\\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\\n}\\n\\nfunction asciiWrite (buf, string, offset, length) {\\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\\n}\\n\\nfunction latin1Write (buf, string, offset, length) {\\n  return asciiWrite(buf, string, offset, length)\\n}\\n\\nfunction base64Write (buf, string, offset, length) {\\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\\n}\\n\\nfunction ucs2Write (buf, string, offset, length) {\\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\\n}\\n\\nBuffer.prototype.write = function write (string, offset, length, encoding) {\\n  // Buffer#write(string)\\n  if (offset === undefined) {\\n    encoding = 'utf8'\\n    length = this.length\\n    offset = 0\\n  // Buffer#write(string, encoding)\\n  } else if (length === undefined && typeof offset === 'string') {\\n    encoding = offset\\n    length = this.length\\n    offset = 0\\n  // Buffer#write(string, offset[, length][, encoding])\\n  } else if (isFinite(offset)) {\\n    offset = offset >>> 0\\n    if (isFinite(length)) {\\n      length = length >>> 0\\n      if (encoding === undefined) encoding = 'utf8'\\n    } else {\\n      encoding = length\\n      length = undefined\\n    }\\n  } else {\\n    throw new Error(\\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\\n    )\\n  }\\n\\n  var remaining = this.length - offset\\n  if (length === undefined || length > remaining) length = remaining\\n\\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\\n    throw new RangeError('Attempt to write outside buffer bounds')\\n  }\\n\\n  if (!encoding) encoding = 'utf8'\\n\\n  var loweredCase = false\\n  for (;;) {\\n    switch (encoding) {\\n      case 'hex':\\n        return hexWrite(this, string, offset, length)\\n\\n      case 'utf8':\\n      case 'utf-8':\\n        return utf8Write(this, string, offset, length)\\n\\n      case 'ascii':\\n        return asciiWrite(this, string, offset, length)\\n\\n      case 'latin1':\\n      case 'binary':\\n        return latin1Write(this, string, offset, length)\\n\\n      case 'base64':\\n        // Warning: maxLength not taken into account in base64Write\\n        return base64Write(this, string, offset, length)\\n\\n      case 'ucs2':\\n      case 'ucs-2':\\n      case 'utf16le':\\n      case 'utf-16le':\\n        return ucs2Write(this, string, offset, length)\\n\\n      default:\\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\\n        encoding = ('' + encoding).toLowerCase()\\n        loweredCase = true\\n    }\\n  }\\n}\\n\\nBuffer.prototype.toJSON = function toJSON () {\\n  return {\\n    type: 'Buffer',\\n    data: Array.prototype.slice.call(this._arr || this, 0)\\n  }\\n}\\n\\nfunction base64Slice (buf, start, end) {\\n  if (start === 0 && end === buf.length) {\\n    return base64.fromByteArray(buf)\\n  } else {\\n    return base64.fromByteArray(buf.slice(start, end))\\n  }\\n}\\n\\nfunction utf8Slice (buf, start, end) {\\n  end = Math.min(buf.length, end)\\n  var res = []\\n\\n  var i = start\\n  while (i < end) {\\n    var firstByte = buf[i]\\n    var codePoint = null\\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\\n      : (firstByte > 0xDF) ? 3\\n        : (firstByte > 0xBF) ? 2\\n          : 1\\n\\n    if (i + bytesPerSequence <= end) {\\n      var secondByte, thirdByte, fourthByte, tempCodePoint\\n\\n      switch (bytesPerSequence) {\\n        case 1:\\n          if (firstByte < 0x80) {\\n            codePoint = firstByte\\n          }\\n          break\\n        case 2:\\n          secondByte = buf[i + 1]\\n          if ((secondByte & 0xC0) === 0x80) {\\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\\n            if (tempCodePoint > 0x7F) {\\n              codePoint = tempCodePoint\\n            }\\n          }\\n          break\\n        case 3:\\n          secondByte = buf[i + 1]\\n          thirdByte = buf[i + 2]\\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\\n              codePoint = tempCodePoint\\n            }\\n          }\\n          break\\n        case 4:\\n          secondByte = buf[i + 1]\\n          thirdByte = buf[i + 2]\\n          fourthByte = buf[i + 3]\\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\\n              codePoint = tempCodePoint\\n            }\\n          }\\n      }\\n    }\\n\\n    if (codePoint === null) {\\n      // we did not generate a valid codePoint so insert a\\n      // replacement char (U+FFFD) and advance only 1 byte\\n      codePoint = 0xFFFD\\n      bytesPerSequence = 1\\n    } else if (codePoint > 0xFFFF) {\\n      // encode to utf16 (surrogate pair dance)\\n      codePoint -= 0x10000\\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\\n      codePoint = 0xDC00 | codePoint & 0x3FF\\n    }\\n\\n    res.push(codePoint)\\n    i += bytesPerSequence\\n  }\\n\\n  return decodeCodePointsArray(res)\\n}\\n\\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\\n// the lowest limit is Chrome, with 0x10000 args.\\n// We go 1 magnitude less, for safety\\nvar MAX_ARGUMENTS_LENGTH = 0x1000\\n\\nfunction decodeCodePointsArray (codePoints) {\\n  var len = codePoints.length\\n  if (len <= MAX_ARGUMENTS_LENGTH) {\\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\\n  }\\n\\n  // Decode in chunks to avoid \\\"call stack size exceeded\\\".\\n  var res = ''\\n  var i = 0\\n  while (i < len) {\\n    res += String.fromCharCode.apply(\\n      String,\\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\\n    )\\n  }\\n  return res\\n}\\n\\nfunction asciiSlice (buf, start, end) {\\n  var ret = ''\\n  end = Math.min(buf.length, end)\\n\\n  for (var i = start; i < end; ++i) {\\n    ret += String.fromCharCode(buf[i] & 0x7F)\\n  }\\n  return ret\\n}\\n\\nfunction latin1Slice (buf, start, end) {\\n  var ret = ''\\n  end = Math.min(buf.length, end)\\n\\n  for (var i = start; i < end; ++i) {\\n    ret += String.fromCharCode(buf[i])\\n  }\\n  return ret\\n}\\n\\nfunction hexSlice (buf, start, end) {\\n  var len = buf.length\\n\\n  if (!start || start < 0) start = 0\\n  if (!end || end < 0 || end > len) end = len\\n\\n  var out = ''\\n  for (var i = start; i < end; ++i) {\\n    out += toHex(buf[i])\\n  }\\n  return out\\n}\\n\\nfunction utf16leSlice (buf, start, end) {\\n  var bytes = buf.slice(start, end)\\n  var res = ''\\n  for (var i = 0; i < bytes.length; i += 2) {\\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\\n  }\\n  return res\\n}\\n\\nBuffer.prototype.slice = function slice (start, end) {\\n  var len = this.length\\n  start = ~~start\\n  end = end === undefined ? len : ~~end\\n\\n  if (start < 0) {\\n    start += len\\n    if (start < 0) start = 0\\n  } else if (start > len) {\\n    start = len\\n  }\\n\\n  if (end < 0) {\\n    end += len\\n    if (end < 0) end = 0\\n  } else if (end > len) {\\n    end = len\\n  }\\n\\n  if (end < start) end = start\\n\\n  var newBuf = this.subarray(start, end)\\n  // Return an augmented `Uint8Array` instance\\n  newBuf.__proto__ = Buffer.prototype\\n  return newBuf\\n}\\n\\n/*\\n * Need to make sure that buffer isn't trying to write out of bounds.\\n */\\nfunction checkOffset (offset, ext, length) {\\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\\n}\\n\\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\\n  offset = offset >>> 0\\n  byteLength = byteLength >>> 0\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\n\\n  var val = this[offset]\\n  var mul = 1\\n  var i = 0\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    val += this[offset + i] * mul\\n  }\\n\\n  return val\\n}\\n\\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\\n  offset = offset >>> 0\\n  byteLength = byteLength >>> 0\\n  if (!noAssert) {\\n    checkOffset(offset, byteLength, this.length)\\n  }\\n\\n  var val = this[offset + --byteLength]\\n  var mul = 1\\n  while (byteLength > 0 && (mul *= 0x100)) {\\n    val += this[offset + --byteLength] * mul\\n  }\\n\\n  return val\\n}\\n\\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 1, this.length)\\n  return this[offset]\\n}\\n\\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\n  return this[offset] | (this[offset + 1] << 8)\\n}\\n\\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\n  return (this[offset] << 8) | this[offset + 1]\\n}\\n\\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n\\n  return ((this[offset]) |\\n      (this[offset + 1] << 8) |\\n      (this[offset + 2] << 16)) +\\n      (this[offset + 3] * 0x1000000)\\n}\\n\\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n\\n  return (this[offset] * 0x1000000) +\\n    ((this[offset + 1] << 16) |\\n    (this[offset + 2] << 8) |\\n    this[offset + 3])\\n}\\n\\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\\n  offset = offset >>> 0\\n  byteLength = byteLength >>> 0\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\n\\n  var val = this[offset]\\n  var mul = 1\\n  var i = 0\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    val += this[offset + i] * mul\\n  }\\n  mul *= 0x80\\n\\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\\n\\n  return val\\n}\\n\\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\\n  offset = offset >>> 0\\n  byteLength = byteLength >>> 0\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\n\\n  var i = byteLength\\n  var mul = 1\\n  var val = this[offset + --i]\\n  while (i > 0 && (mul *= 0x100)) {\\n    val += this[offset + --i] * mul\\n  }\\n  mul *= 0x80\\n\\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\\n\\n  return val\\n}\\n\\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 1, this.length)\\n  if (!(this[offset] & 0x80)) return (this[offset])\\n  return ((0xff - this[offset] + 1) * -1)\\n}\\n\\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\n  var val = this[offset] | (this[offset + 1] << 8)\\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\\n}\\n\\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\n  var val = this[offset + 1] | (this[offset] << 8)\\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\\n}\\n\\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n\\n  return (this[offset]) |\\n    (this[offset + 1] << 8) |\\n    (this[offset + 2] << 16) |\\n    (this[offset + 3] << 24)\\n}\\n\\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n\\n  return (this[offset] << 24) |\\n    (this[offset + 1] << 16) |\\n    (this[offset + 2] << 8) |\\n    (this[offset + 3])\\n}\\n\\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n  return ieee754.read(this, offset, true, 23, 4)\\n}\\n\\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n  return ieee754.read(this, offset, false, 23, 4)\\n}\\n\\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 8, this.length)\\n  return ieee754.read(this, offset, true, 52, 8)\\n}\\n\\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 8, this.length)\\n  return ieee754.read(this, offset, false, 52, 8)\\n}\\n\\nfunction checkInt (buf, value, offset, ext, max, min) {\\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\\\"buffer\\\" argument must be a Buffer instance')\\n  if (value > max || value < min) throw new RangeError('\\\"value\\\" argument is out of bounds')\\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\\n}\\n\\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  byteLength = byteLength >>> 0\\n  if (!noAssert) {\\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\\n  }\\n\\n  var mul = 1\\n  var i = 0\\n  this[offset] = value & 0xFF\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    this[offset + i] = (value / mul) & 0xFF\\n  }\\n\\n  return offset + byteLength\\n}\\n\\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  byteLength = byteLength >>> 0\\n  if (!noAssert) {\\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\\n  }\\n\\n  var i = byteLength - 1\\n  var mul = 1\\n  this[offset + i] = value & 0xFF\\n  while (--i >= 0 && (mul *= 0x100)) {\\n    this[offset + i] = (value / mul) & 0xFF\\n  }\\n\\n  return offset + byteLength\\n}\\n\\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\\n  this[offset] = (value & 0xff)\\n  return offset + 1\\n}\\n\\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\\n  this[offset] = (value & 0xff)\\n  this[offset + 1] = (value >>> 8)\\n  return offset + 2\\n}\\n\\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\\n  this[offset] = (value >>> 8)\\n  this[offset + 1] = (value & 0xff)\\n  return offset + 2\\n}\\n\\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\\n  this[offset + 3] = (value >>> 24)\\n  this[offset + 2] = (value >>> 16)\\n  this[offset + 1] = (value >>> 8)\\n  this[offset] = (value & 0xff)\\n  return offset + 4\\n}\\n\\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\\n  this[offset] = (value >>> 24)\\n  this[offset + 1] = (value >>> 16)\\n  this[offset + 2] = (value >>> 8)\\n  this[offset + 3] = (value & 0xff)\\n  return offset + 4\\n}\\n\\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) {\\n    var limit = Math.pow(2, (8 * byteLength) - 1)\\n\\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\\n  }\\n\\n  var i = 0\\n  var mul = 1\\n  var sub = 0\\n  this[offset] = value & 0xFF\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\\n      sub = 1\\n    }\\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\\n  }\\n\\n  return offset + byteLength\\n}\\n\\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) {\\n    var limit = Math.pow(2, (8 * byteLength) - 1)\\n\\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\\n  }\\n\\n  var i = byteLength - 1\\n  var mul = 1\\n  var sub = 0\\n  this[offset + i] = value & 0xFF\\n  while (--i >= 0 && (mul *= 0x100)) {\\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\\n      sub = 1\\n    }\\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\\n  }\\n\\n  return offset + byteLength\\n}\\n\\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\\n  if (value < 0) value = 0xff + value + 1\\n  this[offset] = (value & 0xff)\\n  return offset + 1\\n}\\n\\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\\n  this[offset] = (value & 0xff)\\n  this[offset + 1] = (value >>> 8)\\n  return offset + 2\\n}\\n\\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\\n  this[offset] = (value >>> 8)\\n  this[offset + 1] = (value & 0xff)\\n  return offset + 2\\n}\\n\\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\\n  this[offset] = (value & 0xff)\\n  this[offset + 1] = (value >>> 8)\\n  this[offset + 2] = (value >>> 16)\\n  this[offset + 3] = (value >>> 24)\\n  return offset + 4\\n}\\n\\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\\n  if (value < 0) value = 0xffffffff + value + 1\\n  this[offset] = (value >>> 24)\\n  this[offset + 1] = (value >>> 16)\\n  this[offset + 2] = (value >>> 8)\\n  this[offset + 3] = (value & 0xff)\\n  return offset + 4\\n}\\n\\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\\n  if (offset < 0) throw new RangeError('Index out of range')\\n}\\n\\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) {\\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\\n  }\\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\\n  return offset + 4\\n}\\n\\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\\n  return writeFloat(this, value, offset, true, noAssert)\\n}\\n\\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\\n  return writeFloat(this, value, offset, false, noAssert)\\n}\\n\\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) {\\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\\n  }\\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\\n  return offset + 8\\n}\\n\\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\\n  return writeDouble(this, value, offset, true, noAssert)\\n}\\n\\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\\n  return writeDouble(this, value, offset, false, noAssert)\\n}\\n\\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\\n  if (!start) start = 0\\n  if (!end && end !== 0) end = this.length\\n  if (targetStart >= target.length) targetStart = target.length\\n  if (!targetStart) targetStart = 0\\n  if (end > 0 && end < start) end = start\\n\\n  // Copy 0 bytes; we're done\\n  if (end === start) return 0\\n  if (target.length === 0 || this.length === 0) return 0\\n\\n  // Fatal error conditions\\n  if (targetStart < 0) {\\n    throw new RangeError('targetStart out of bounds')\\n  }\\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\\n\\n  // Are we oob?\\n  if (end > this.length) end = this.length\\n  if (target.length - targetStart < end - start) {\\n    end = target.length - targetStart + start\\n  }\\n\\n  var len = end - start\\n\\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\\n    // Use built-in when available, missing from IE11\\n    this.copyWithin(targetStart, start, end)\\n  } else if (this === target && start < targetStart && targetStart < end) {\\n    // descending copy from end\\n    for (var i = len - 1; i >= 0; --i) {\\n      target[i + targetStart] = this[i + start]\\n    }\\n  } else {\\n    Uint8Array.prototype.set.call(\\n      target,\\n      this.subarray(start, end),\\n      targetStart\\n    )\\n  }\\n\\n  return len\\n}\\n\\n// Usage:\\n//    buffer.fill(number[, offset[, end]])\\n//    buffer.fill(buffer[, offset[, end]])\\n//    buffer.fill(string[, offset[, end]][, encoding])\\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\\n  // Handle string cases:\\n  if (typeof val === 'string') {\\n    if (typeof start === 'string') {\\n      encoding = start\\n      start = 0\\n      end = this.length\\n    } else if (typeof end === 'string') {\\n      encoding = end\\n      end = this.length\\n    }\\n    if (encoding !== undefined && typeof encoding !== 'string') {\\n      throw new TypeError('encoding must be a string')\\n    }\\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\\n      throw new TypeError('Unknown encoding: ' + encoding)\\n    }\\n    if (val.length === 1) {\\n      var code = val.charCodeAt(0)\\n      if ((encoding === 'utf8' && code < 128) ||\\n          encoding === 'latin1') {\\n        // Fast path: If `val` fits into a single byte, use that numeric value.\\n        val = code\\n      }\\n    }\\n  } else if (typeof val === 'number') {\\n    val = val & 255\\n  }\\n\\n  // Invalid ranges are not set to a default, so can range check early.\\n  if (start < 0 || this.length < start || this.length < end) {\\n    throw new RangeError('Out of range index')\\n  }\\n\\n  if (end <= start) {\\n    return this\\n  }\\n\\n  start = start >>> 0\\n  end = end === undefined ? this.length : end >>> 0\\n\\n  if (!val) val = 0\\n\\n  var i\\n  if (typeof val === 'number') {\\n    for (i = start; i < end; ++i) {\\n      this[i] = val\\n    }\\n  } else {\\n    var bytes = Buffer.isBuffer(val)\\n      ? val\\n      : Buffer.from(val, encoding)\\n    var len = bytes.length\\n    if (len === 0) {\\n      throw new TypeError('The value \\\"' + val +\\n        '\\\" is invalid for argument \\\"value\\\"')\\n    }\\n    for (i = 0; i < end - start; ++i) {\\n      this[i + start] = bytes[i % len]\\n    }\\n  }\\n\\n  return this\\n}\\n\\n// HELPER FUNCTIONS\\n// ================\\n\\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\\n\\nfunction base64clean (str) {\\n  // Node takes equal signs as end of the Base64 encoding\\n  str = str.split('=')[0]\\n  // Node strips out invalid characters like \\\\n and \\\\t from the string, base64-js does not\\n  str = str.trim().replace(INVALID_BASE64_RE, '')\\n  // Node converts strings with length < 2 to ''\\n  if (str.length < 2) return ''\\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\\n  while (str.length % 4 !== 0) {\\n    str = str + '='\\n  }\\n  return str\\n}\\n\\nfunction toHex (n) {\\n  if (n < 16) return '0' + n.toString(16)\\n  return n.toString(16)\\n}\\n\\nfunction utf8ToBytes (string, units) {\\n  units = units || Infinity\\n  var codePoint\\n  var length = string.length\\n  var leadSurrogate = null\\n  var bytes = []\\n\\n  for (var i = 0; i < length; ++i) {\\n    codePoint = string.charCodeAt(i)\\n\\n    // is surrogate component\\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\\n      // last char was a lead\\n      if (!leadSurrogate) {\\n        // no lead yet\\n        if (codePoint > 0xDBFF) {\\n          // unexpected trail\\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\n          continue\\n        } else if (i + 1 === length) {\\n          // unpaired lead\\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\n          continue\\n        }\\n\\n        // valid lead\\n        leadSurrogate = codePoint\\n\\n        continue\\n      }\\n\\n      // 2 leads in a row\\n      if (codePoint < 0xDC00) {\\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\n        leadSurrogate = codePoint\\n        continue\\n      }\\n\\n      // valid surrogate pair\\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\\n    } else if (leadSurrogate) {\\n      // valid bmp char, but last char was a lead\\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\n    }\\n\\n    leadSurrogate = null\\n\\n    // encode utf8\\n    if (codePoint < 0x80) {\\n      if ((units -= 1) < 0) break\\n      bytes.push(codePoint)\\n    } else if (codePoint < 0x800) {\\n      if ((units -= 2) < 0) break\\n      bytes.push(\\n        codePoint >> 0x6 | 0xC0,\\n        codePoint & 0x3F | 0x80\\n      )\\n    } else if (codePoint < 0x10000) {\\n      if ((units -= 3) < 0) break\\n      bytes.push(\\n        codePoint >> 0xC | 0xE0,\\n        codePoint >> 0x6 & 0x3F | 0x80,\\n        codePoint & 0x3F | 0x80\\n      )\\n    } else if (codePoint < 0x110000) {\\n      if ((units -= 4) < 0) break\\n      bytes.push(\\n        codePoint >> 0x12 | 0xF0,\\n        codePoint >> 0xC & 0x3F | 0x80,\\n        codePoint >> 0x6 & 0x3F | 0x80,\\n        codePoint & 0x3F | 0x80\\n      )\\n    } else {\\n      throw new Error('Invalid code point')\\n    }\\n  }\\n\\n  return bytes\\n}\\n\\nfunction asciiToBytes (str) {\\n  var byteArray = []\\n  for (var i = 0; i < str.length; ++i) {\\n    // Node's code seems to be doing this and not & 0x7F..\\n    byteArray.push(str.charCodeAt(i) & 0xFF)\\n  }\\n  return byteArray\\n}\\n\\nfunction utf16leToBytes (str, units) {\\n  var c, hi, lo\\n  var byteArray = []\\n  for (var i = 0; i < str.length; ++i) {\\n    if ((units -= 2) < 0) break\\n\\n    c = str.charCodeAt(i)\\n    hi = c >> 8\\n    lo = c % 256\\n    byteArray.push(lo)\\n    byteArray.push(hi)\\n  }\\n\\n  return byteArray\\n}\\n\\nfunction base64ToBytes (str) {\\n  return base64.toByteArray(base64clean(str))\\n}\\n\\nfunction blitBuffer (src, dst, offset, length) {\\n  for (var i = 0; i < length; ++i) {\\n    if ((i + offset >= dst.length) || (i >= src.length)) break\\n    dst[i + offset] = src[i]\\n  }\\n  return i\\n}\\n\\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\\n// the `instanceof` check but they should be treated as of that type.\\n// See: https://github.com/feross/buffer/issues/166\\nfunction isInstance (obj, type) {\\n  return obj instanceof type ||\\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\\n      obj.constructor.name === type.name)\\n}\\nfunction numberIsNaN (obj) {\\n  // For IE11 support\\n  return obj !== obj // eslint-disable-line no-self-compare\\n}\\n\\n}).call(this)}).call(this,require(\\\"buffer\\\").Buffer)\\n},{\\\"base64-js\\\":18,\\\"buffer\\\":39,\\\"ieee754\\\":203}],40:[function(require,module,exports){\\n'use strict'\\n\\nconst { encodeText } = require('./util')\\n\\n/** @typedef {import('./types').CodecFactory} CodecFactory */\\n/** @typedef {import(\\\"./types\\\").BaseName} BaseName */\\n/** @typedef {import(\\\"./types\\\").BaseCode} BaseCode */\\n\\n/**\\n * Class to encode/decode in the supported Bases\\n *\\n */\\nclass Base {\\n  /**\\n   * @param {BaseName} name\\n   * @param {BaseCode} code\\n   * @param {CodecFactory} factory\\n   * @param {string} alphabet\\n   */\\n  constructor (name, code, factory, alphabet) {\\n    this.name = name\\n    this.code = code\\n    this.codeBuf = encodeText(this.code)\\n    this.alphabet = alphabet\\n    this.codec = factory(alphabet)\\n  }\\n\\n  /**\\n   * @param {Uint8Array} buf\\n   * @returns {string}\\n   */\\n  encode (buf) {\\n    return this.codec.encode(buf)\\n  }\\n\\n  /**\\n   * @param {string} string\\n   * @returns {Uint8Array}\\n   */\\n  decode (string) {\\n    for (const char of string) {\\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\\n        throw new Error(`invalid character '${char}' in '${string}'`)\\n      }\\n    }\\n    return this.codec.decode(string)\\n  }\\n}\\n\\nmodule.exports = Base\\n\\n},{\\\"./util\\\":44}],41:[function(require,module,exports){\\n'use strict'\\n\\nconst baseX = require('@multiformats/base-x')\\nconst Base = require('./base.js')\\nconst { rfc4648 } = require('./rfc4648')\\nconst { decodeText, encodeText } = require('./util')\\n\\n/** @typedef {import('./types').CodecFactory} CodecFactory */\\n/** @typedef {import('./types').Codec} Codec */\\n/** @typedef {import('./types').BaseName} BaseName */\\n/** @typedef {import('./types').BaseCode} BaseCode */\\n\\n/** @type {CodecFactory} */\\nconst identity = () => {\\n  return {\\n    encode: decodeText,\\n    decode: encodeText\\n  }\\n}\\n\\n/**\\n *\\n * name, code, implementation, alphabet\\n *\\n * @type {Array<[BaseName, BaseCode, CodecFactory, string]>}\\n */\\nconst constants = [\\n  ['identity', '\\\\x00', identity, ''],\\n  ['base2', '0', rfc4648(1), '01'],\\n  ['base8', '7', rfc4648(3), '01234567'],\\n  ['base10', '9', baseX, '0123456789'],\\n  ['base16', 'f', rfc4648(4), '0123456789abcdef'],\\n  ['base16upper', 'F', rfc4648(4), '0123456789ABCDEF'],\\n  ['base32hex', 'v', rfc4648(5), '0123456789abcdefghijklmnopqrstuv'],\\n  ['base32hexupper', 'V', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'],\\n  ['base32hexpad', 't', rfc4648(5), '0123456789abcdefghijklmnopqrstuv='],\\n  ['base32hexpadupper', 'T', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='],\\n  ['base32', 'b', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567'],\\n  ['base32upper', 'B', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'],\\n  ['base32pad', 'c', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567='],\\n  ['base32padupper', 'C', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='],\\n  ['base32z', 'h', rfc4648(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'],\\n  ['base36', 'k', baseX, '0123456789abcdefghijklmnopqrstuvwxyz'],\\n  ['base36upper', 'K', baseX, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\\n  ['base64', 'm', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\\n  ['base64pad', 'M', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\\n  ['base64url', 'u', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\\n  ['base64urlpad', 'U', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\\n]\\n\\n/** @type {Record<BaseName,Base>} */\\nconst names = constants.reduce((prev, tupple) => {\\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\\n  return prev\\n}, /** @type {Record<BaseName,Base>} */({}))\\n\\n/** @type {Record<BaseCode,Base>} */\\nconst codes = constants.reduce((prev, tupple) => {\\n  prev[tupple[1]] = names[tupple[0]]\\n  return prev\\n}, /** @type {Record<BaseCode,Base>} */({}))\\n\\nmodule.exports = {\\n  names,\\n  codes\\n}\\n\\n},{\\\"./base.js\\\":40,\\\"./rfc4648\\\":43,\\\"./util\\\":44,\\\"@multiformats/base-x\\\":7}],42:[function(require,module,exports){\\n/**\\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\\n *\\n */\\n'use strict'\\n\\nconst constants = require('./constants')\\nconst { encodeText, decodeText, concat } = require('./util')\\n\\n/** @typedef {import('./base')} Base */\\n/** @typedef {import(\\\"./types\\\").BaseNameOrCode} BaseNameOrCode */\\n/** @typedef {import(\\\"./types\\\").BaseCode} BaseCode */\\n/** @typedef {import(\\\"./types\\\").BaseName} BaseName */\\n\\n/**\\n * Create a new Uint8Array with the multibase varint+code.\\n *\\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\\n * @param {Uint8Array} buf - The data to be prefixed with multibase.\\n * @returns {Uint8Array}\\n * @throws {Error} Will throw if the encoding is not supported\\n */\\nfunction multibase (nameOrCode, buf) {\\n  if (!buf) {\\n    throw new Error('requires an encoded Uint8Array')\\n  }\\n  const { name, codeBuf } = encoding(nameOrCode)\\n  validEncode(name, buf)\\n\\n  return concat([codeBuf, buf], codeBuf.length + buf.length)\\n}\\n\\n/**\\n * Encode data with the specified base and add the multibase prefix.\\n *\\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\\n * @param {Uint8Array} buf - The data to be encoded.\\n * @returns {Uint8Array}\\n * @throws {Error} Will throw if the encoding is not supported\\n *\\n */\\nfunction encode (nameOrCode, buf) {\\n  const enc = encoding(nameOrCode)\\n  const data = encodeText(enc.encode(buf))\\n\\n  return concat([enc.codeBuf, data], enc.codeBuf.length + data.length)\\n}\\n\\n/**\\n * Takes a Uint8Array or string encoded with multibase header, decodes it and\\n * returns the decoded buffer\\n *\\n * @param {Uint8Array|string} data\\n * @returns {Uint8Array}\\n * @throws {Error} Will throw if the encoding is not supported\\n *\\n */\\nfunction decode (data) {\\n  if (data instanceof Uint8Array) {\\n    data = decodeText(data)\\n  }\\n  const prefix = data[0]\\n\\n  // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\\n  if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\\n    data = data.toLowerCase()\\n  }\\n  const enc = encoding(/** @type {BaseCode} */(data[0]))\\n  return enc.decode(data.substring(1))\\n}\\n\\n/**\\n * Is the given data multibase encoded?\\n *\\n * @param {Uint8Array|string} data\\n * @returns {false | string}\\n */\\nfunction isEncoded (data) {\\n  if (data instanceof Uint8Array) {\\n    data = decodeText(data)\\n  }\\n\\n  // Ensure bufOrString is a string\\n  if (Object.prototype.toString.call(data) !== '[object String]') {\\n    return false\\n  }\\n\\n  try {\\n    const enc = encoding(/** @type {BaseCode} */(data[0]))\\n    return enc.name\\n  } catch (err) {\\n    return false\\n  }\\n}\\n\\n/**\\n * Validate encoded data\\n *\\n * @param {BaseNameOrCode} name\\n * @param {Uint8Array} buf\\n * @returns {void}\\n * @throws {Error} Will throw if the encoding is not supported\\n */\\nfunction validEncode (name, buf) {\\n  const enc = encoding(name)\\n  enc.decode(decodeText(buf))\\n}\\n\\n/**\\n * Get the encoding by name or code\\n *\\n * @param {BaseNameOrCode} nameOrCode\\n * @returns {Base}\\n * @throws {Error} Will throw if the encoding is not supported\\n */\\nfunction encoding (nameOrCode) {\\n  if (Object.prototype.hasOwnProperty.call(constants.names, /** @type {BaseName} */(nameOrCode))) {\\n    return constants.names[/** @type {BaseName} */(nameOrCode)]\\n  } else if (Object.prototype.hasOwnProperty.call(constants.codes, /** @type {BaseCode} */(nameOrCode))) {\\n    return constants.codes[/** @type {BaseCode} */(nameOrCode)]\\n  } else {\\n    throw new Error(`Unsupported encoding: ${nameOrCode}`)\\n  }\\n}\\n\\n/**\\n * Get encoding from data\\n *\\n * @param {string|Uint8Array} data\\n * @returns {Base}\\n * @throws {Error} Will throw if the encoding is not supported\\n */\\nfunction encodingFromData (data) {\\n  if (data instanceof Uint8Array) {\\n    data = decodeText(data)\\n  }\\n\\n  return encoding(/** @type {BaseCode} */(data[0]))\\n}\\n\\nexports = module.exports = multibase\\nexports.encode = encode\\nexports.decode = decode\\nexports.isEncoded = isEncoded\\nexports.encoding = encoding\\nexports.encodingFromData = encodingFromData\\nconst names = Object.freeze(constants.names)\\nconst codes = Object.freeze(constants.codes)\\nexports.names = names\\nexports.codes = codes\\n\\n},{\\\"./constants\\\":41,\\\"./util\\\":44}],43:[function(require,module,exports){\\n'use strict'\\n\\n/** @typedef {import('./types').CodecFactory} CodecFactory */\\n\\n/**\\n * @param {string} string\\n * @param {string} alphabet\\n * @param {number} bitsPerChar\\n * @returns {Uint8Array}\\n */\\nconst decode = (string, alphabet, bitsPerChar) => {\\n  // Build the character lookup table:\\n  /** @type {Record<string, number>} */\\n  const codes = {}\\n  for (let i = 0; i < alphabet.length; ++i) {\\n    codes[alphabet[i]] = i\\n  }\\n\\n  // Count the padding bytes:\\n  let end = string.length\\n  while (string[end - 1] === '=') {\\n    --end\\n  }\\n\\n  // Allocate the output:\\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\\n\\n  // Parse the data:\\n  let bits = 0 // Number of bits currently in the buffer\\n  let buffer = 0 // Bits waiting to be written out, MSB first\\n  let written = 0 // Next byte to write\\n  for (let i = 0; i < end; ++i) {\\n    // Read one character from the string:\\n    const value = codes[string[i]]\\n    if (value === undefined) {\\n      throw new SyntaxError('Invalid character ' + string[i])\\n    }\\n\\n    // Append the bits to the buffer:\\n    buffer = (buffer << bitsPerChar) | value\\n    bits += bitsPerChar\\n\\n    // Write out some bits if the buffer has a byte's worth:\\n    if (bits >= 8) {\\n      bits -= 8\\n      out[written++] = 0xff & (buffer >> bits)\\n    }\\n  }\\n\\n  // Verify that we have received just enough bits:\\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\\n    throw new SyntaxError('Unexpected end of data')\\n  }\\n\\n  return out\\n}\\n\\n/**\\n * @param {Uint8Array} data\\n * @param {string} alphabet\\n * @param {number} bitsPerChar\\n * @returns {string}\\n */\\nconst encode = (data, alphabet, bitsPerChar) => {\\n  const pad = alphabet[alphabet.length - 1] === '='\\n  const mask = (1 << bitsPerChar) - 1\\n  let out = ''\\n\\n  let bits = 0 // Number of bits currently in the buffer\\n  let buffer = 0 // Bits waiting to be written out, MSB first\\n  for (let i = 0; i < data.length; ++i) {\\n    // Slurp data into the buffer:\\n    buffer = (buffer << 8) | data[i]\\n    bits += 8\\n\\n    // Write out as much as we can:\\n    while (bits > bitsPerChar) {\\n      bits -= bitsPerChar\\n      out += alphabet[mask & (buffer >> bits)]\\n    }\\n  }\\n\\n  // Partial character:\\n  if (bits) {\\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\\n  }\\n\\n  // Add padding characters until we hit a byte boundary:\\n  if (pad) {\\n    while ((out.length * bitsPerChar) & 7) {\\n      out += '='\\n    }\\n  }\\n\\n  return out\\n}\\n\\n/**\\n * RFC4648 Factory\\n *\\n * @param {number} bitsPerChar\\n * @returns {CodecFactory}\\n */\\nconst rfc4648 = (bitsPerChar) => (alphabet) => {\\n  return {\\n    /**\\n     * @param {Uint8Array} input\\n     * @returns {string}\\n     */\\n    encode (input) {\\n      return encode(input, alphabet, bitsPerChar)\\n    },\\n    /**\\n     * @param {string} input\\n     * @returns {Uint8Array}\\n     */\\n    decode (input) {\\n      return decode(input, alphabet, bitsPerChar)\\n    }\\n  }\\n}\\n\\nmodule.exports = { rfc4648 }\\n\\n},{}],44:[function(require,module,exports){\\n'use strict'\\n\\n// @ts-ignore\\nconst { TextEncoder, TextDecoder } = require('web-encoding')\\n\\nconst textDecoder = new TextDecoder()\\n/**\\n * @param {ArrayBufferView|ArrayBuffer} bytes\\n * @returns {string}\\n */\\nconst decodeText = (bytes) => textDecoder.decode(bytes)\\n\\nconst textEncoder = new TextEncoder()\\n/**\\n * @param {string} text\\n * @returns {Uint8Array}\\n */\\nconst encodeText = (text) => textEncoder.encode(text)\\n\\n/**\\n * Returns a new Uint8Array created by concatenating the passed Arrays\\n *\\n * @param {Array<ArrayLike<number>>} arrs\\n * @param {number} length\\n * @returns {Uint8Array}\\n */\\nfunction concat (arrs, length) {\\n  const output = new Uint8Array(length)\\n  let offset = 0\\n\\n  for (const arr of arrs) {\\n    output.set(arr, offset)\\n    offset += arr.length\\n  }\\n\\n  return output\\n}\\n\\nmodule.exports = { decodeText, encodeText, concat }\\n\\n},{\\\"web-encoding\\\":51}],45:[function(require,module,exports){\\n// DO NOT CHANGE THIS FILE. IT IS GENERATED BY tools/update-table.js\\n/* eslint quote-props: off */\\n'use strict'\\n\\n/**\\n * @type {import('./generated-types').NameCodeMap}\\n */\\nconst baseTable = Object.freeze({\\n  'identity': 0x00,\\n  'cidv1': 0x01,\\n  'cidv2': 0x02,\\n  'cidv3': 0x03,\\n  'ip4': 0x04,\\n  'tcp': 0x06,\\n  'sha1': 0x11,\\n  'sha2-256': 0x12,\\n  'sha2-512': 0x13,\\n  'sha3-512': 0x14,\\n  'sha3-384': 0x15,\\n  'sha3-256': 0x16,\\n  'sha3-224': 0x17,\\n  'shake-128': 0x18,\\n  'shake-256': 0x19,\\n  'keccak-224': 0x1a,\\n  'keccak-256': 0x1b,\\n  'keccak-384': 0x1c,\\n  'keccak-512': 0x1d,\\n  'blake3': 0x1e,\\n  'dccp': 0x21,\\n  'murmur3-128': 0x22,\\n  'murmur3-32': 0x23,\\n  'ip6': 0x29,\\n  'ip6zone': 0x2a,\\n  'path': 0x2f,\\n  'multicodec': 0x30,\\n  'multihash': 0x31,\\n  'multiaddr': 0x32,\\n  'multibase': 0x33,\\n  'dns': 0x35,\\n  'dns4': 0x36,\\n  'dns6': 0x37,\\n  'dnsaddr': 0x38,\\n  'protobuf': 0x50,\\n  'cbor': 0x51,\\n  'raw': 0x55,\\n  'dbl-sha2-256': 0x56,\\n  'rlp': 0x60,\\n  'bencode': 0x63,\\n  'dag-pb': 0x70,\\n  'dag-cbor': 0x71,\\n  'libp2p-key': 0x72,\\n  'git-raw': 0x78,\\n  'torrent-info': 0x7b,\\n  'torrent-file': 0x7c,\\n  'leofcoin-block': 0x81,\\n  'leofcoin-tx': 0x82,\\n  'leofcoin-pr': 0x83,\\n  'sctp': 0x84,\\n  'dag-jose': 0x85,\\n  'dag-cose': 0x86,\\n  'eth-block': 0x90,\\n  'eth-block-list': 0x91,\\n  'eth-tx-trie': 0x92,\\n  'eth-tx': 0x93,\\n  'eth-tx-receipt-trie': 0x94,\\n  'eth-tx-receipt': 0x95,\\n  'eth-state-trie': 0x96,\\n  'eth-account-snapshot': 0x97,\\n  'eth-storage-trie': 0x98,\\n  'bitcoin-block': 0xb0,\\n  'bitcoin-tx': 0xb1,\\n  'bitcoin-witness-commitment': 0xb2,\\n  'zcash-block': 0xc0,\\n  'zcash-tx': 0xc1,\\n  'docid': 0xce,\\n  'stellar-block': 0xd0,\\n  'stellar-tx': 0xd1,\\n  'md4': 0xd4,\\n  'md5': 0xd5,\\n  'bmt': 0xd6,\\n  'decred-block': 0xe0,\\n  'decred-tx': 0xe1,\\n  'ipld-ns': 0xe2,\\n  'ipfs-ns': 0xe3,\\n  'swarm-ns': 0xe4,\\n  'ipns-ns': 0xe5,\\n  'zeronet': 0xe6,\\n  'secp256k1-pub': 0xe7,\\n  'bls12_381-g1-pub': 0xea,\\n  'bls12_381-g2-pub': 0xeb,\\n  'x25519-pub': 0xec,\\n  'ed25519-pub': 0xed,\\n  'bls12_381-g1g2-pub': 0xee,\\n  'dash-block': 0xf0,\\n  'dash-tx': 0xf1,\\n  'swarm-manifest': 0xfa,\\n  'swarm-feed': 0xfb,\\n  'udp': 0x0111,\\n  'p2p-webrtc-star': 0x0113,\\n  'p2p-webrtc-direct': 0x0114,\\n  'p2p-stardust': 0x0115,\\n  'p2p-circuit': 0x0122,\\n  'dag-json': 0x0129,\\n  'udt': 0x012d,\\n  'utp': 0x012e,\\n  'unix': 0x0190,\\n  'thread': 0x0196,\\n  'p2p': 0x01a5,\\n  'ipfs': 0x01a5,\\n  'https': 0x01bb,\\n  'onion': 0x01bc,\\n  'onion3': 0x01bd,\\n  'garlic64': 0x01be,\\n  'garlic32': 0x01bf,\\n  'tls': 0x01c0,\\n  'quic': 0x01cc,\\n  'ws': 0x01dd,\\n  'wss': 0x01de,\\n  'p2p-websocket-star': 0x01df,\\n  'http': 0x01e0,\\n  'json': 0x0200,\\n  'messagepack': 0x0201,\\n  'libp2p-peer-record': 0x0301,\\n  'sha2-256-trunc254-padded': 0x1012,\\n  'ripemd-128': 0x1052,\\n  'ripemd-160': 0x1053,\\n  'ripemd-256': 0x1054,\\n  'ripemd-320': 0x1055,\\n  'x11': 0x1100,\\n  'p256-pub': 0x1200,\\n  'p384-pub': 0x1201,\\n  'p521-pub': 0x1202,\\n  'ed448-pub': 0x1203,\\n  'x448-pub': 0x1204,\\n  'ed25519-priv': 0x1300,\\n  'kangarootwelve': 0x1d01,\\n  'sm3-256': 0x534d,\\n  'blake2b-8': 0xb201,\\n  'blake2b-16': 0xb202,\\n  'blake2b-24': 0xb203,\\n  'blake2b-32': 0xb204,\\n  'blake2b-40': 0xb205,\\n  'blake2b-48': 0xb206,\\n  'blake2b-56': 0xb207,\\n  'blake2b-64': 0xb208,\\n  'blake2b-72': 0xb209,\\n  'blake2b-80': 0xb20a,\\n  'blake2b-88': 0xb20b,\\n  'blake2b-96': 0xb20c,\\n  'blake2b-104': 0xb20d,\\n  'blake2b-112': 0xb20e,\\n  'blake2b-120': 0xb20f,\\n  'blake2b-128': 0xb210,\\n  'blake2b-136': 0xb211,\\n  'blake2b-144': 0xb212,\\n  'blake2b-152': 0xb213,\\n  'blake2b-160': 0xb214,\\n  'blake2b-168': 0xb215,\\n  'blake2b-176': 0xb216,\\n  'blake2b-184': 0xb217,\\n  'blake2b-192': 0xb218,\\n  'blake2b-200': 0xb219,\\n  'blake2b-208': 0xb21a,\\n  'blake2b-216': 0xb21b,\\n  'blake2b-224': 0xb21c,\\n  'blake2b-232': 0xb21d,\\n  'blake2b-240': 0xb21e,\\n  'blake2b-248': 0xb21f,\\n  'blake2b-256': 0xb220,\\n  'blake2b-264': 0xb221,\\n  'blake2b-272': 0xb222,\\n  'blake2b-280': 0xb223,\\n  'blake2b-288': 0xb224,\\n  'blake2b-296': 0xb225,\\n  'blake2b-304': 0xb226,\\n  'blake2b-312': 0xb227,\\n  'blake2b-320': 0xb228,\\n  'blake2b-328': 0xb229,\\n  'blake2b-336': 0xb22a,\\n  'blake2b-344': 0xb22b,\\n  'blake2b-352': 0xb22c,\\n  'blake2b-360': 0xb22d,\\n  'blake2b-368': 0xb22e,\\n  'blake2b-376': 0xb22f,\\n  'blake2b-384': 0xb230,\\n  'blake2b-392': 0xb231,\\n  'blake2b-400': 0xb232,\\n  'blake2b-408': 0xb233,\\n  'blake2b-416': 0xb234,\\n  'blake2b-424': 0xb235,\\n  'blake2b-432': 0xb236,\\n  'blake2b-440': 0xb237,\\n  'blake2b-448': 0xb238,\\n  'blake2b-456': 0xb239,\\n  'blake2b-464': 0xb23a,\\n  'blake2b-472': 0xb23b,\\n  'blake2b-480': 0xb23c,\\n  'blake2b-488': 0xb23d,\\n  'blake2b-496': 0xb23e,\\n  'blake2b-504': 0xb23f,\\n  'blake2b-512': 0xb240,\\n  'blake2s-8': 0xb241,\\n  'blake2s-16': 0xb242,\\n  'blake2s-24': 0xb243,\\n  'blake2s-32': 0xb244,\\n  'blake2s-40': 0xb245,\\n  'blake2s-48': 0xb246,\\n  'blake2s-56': 0xb247,\\n  'blake2s-64': 0xb248,\\n  'blake2s-72': 0xb249,\\n  'blake2s-80': 0xb24a,\\n  'blake2s-88': 0xb24b,\\n  'blake2s-96': 0xb24c,\\n  'blake2s-104': 0xb24d,\\n  'blake2s-112': 0xb24e,\\n  'blake2s-120': 0xb24f,\\n  'blake2s-128': 0xb250,\\n  'blake2s-136': 0xb251,\\n  'blake2s-144': 0xb252,\\n  'blake2s-152': 0xb253,\\n  'blake2s-160': 0xb254,\\n  'blake2s-168': 0xb255,\\n  'blake2s-176': 0xb256,\\n  'blake2s-184': 0xb257,\\n  'blake2s-192': 0xb258,\\n  'blake2s-200': 0xb259,\\n  'blake2s-208': 0xb25a,\\n  'blake2s-216': 0xb25b,\\n  'blake2s-224': 0xb25c,\\n  'blake2s-232': 0xb25d,\\n  'blake2s-240': 0xb25e,\\n  'blake2s-248': 0xb25f,\\n  'blake2s-256': 0xb260,\\n  'skein256-8': 0xb301,\\n  'skein256-16': 0xb302,\\n  'skein256-24': 0xb303,\\n  'skein256-32': 0xb304,\\n  'skein256-40': 0xb305,\\n  'skein256-48': 0xb306,\\n  'skein256-56': 0xb307,\\n  'skein256-64': 0xb308,\\n  'skein256-72': 0xb309,\\n  'skein256-80': 0xb30a,\\n  'skein256-88': 0xb30b,\\n  'skein256-96': 0xb30c,\\n  'skein256-104': 0xb30d,\\n  'skein256-112': 0xb30e,\\n  'skein256-120': 0xb30f,\\n  'skein256-128': 0xb310,\\n  'skein256-136': 0xb311,\\n  'skein256-144': 0xb312,\\n  'skein256-152': 0xb313,\\n  'skein256-160': 0xb314,\\n  'skein256-168': 0xb315,\\n  'skein256-176': 0xb316,\\n  'skein256-184': 0xb317,\\n  'skein256-192': 0xb318,\\n  'skein256-200': 0xb319,\\n  'skein256-208': 0xb31a,\\n  'skein256-216': 0xb31b,\\n  'skein256-224': 0xb31c,\\n  'skein256-232': 0xb31d,\\n  'skein256-240': 0xb31e,\\n  'skein256-248': 0xb31f,\\n  'skein256-256': 0xb320,\\n  'skein512-8': 0xb321,\\n  'skein512-16': 0xb322,\\n  'skein512-24': 0xb323,\\n  'skein512-32': 0xb324,\\n  'skein512-40': 0xb325,\\n  'skein512-48': 0xb326,\\n  'skein512-56': 0xb327,\\n  'skein512-64': 0xb328,\\n  'skein512-72': 0xb329,\\n  'skein512-80': 0xb32a,\\n  'skein512-88': 0xb32b,\\n  'skein512-96': 0xb32c,\\n  'skein512-104': 0xb32d,\\n  'skein512-112': 0xb32e,\\n  'skein512-120': 0xb32f,\\n  'skein512-128': 0xb330,\\n  'skein512-136': 0xb331,\\n  'skein512-144': 0xb332,\\n  'skein512-152': 0xb333,\\n  'skein512-160': 0xb334,\\n  'skein512-168': 0xb335,\\n  'skein512-176': 0xb336,\\n  'skein512-184': 0xb337,\\n  'skein512-192': 0xb338,\\n  'skein512-200': 0xb339,\\n  'skein512-208': 0xb33a,\\n  'skein512-216': 0xb33b,\\n  'skein512-224': 0xb33c,\\n  'skein512-232': 0xb33d,\\n  'skein512-240': 0xb33e,\\n  'skein512-248': 0xb33f,\\n  'skein512-256': 0xb340,\\n  'skein512-264': 0xb341,\\n  'skein512-272': 0xb342,\\n  'skein512-280': 0xb343,\\n  'skein512-288': 0xb344,\\n  'skein512-296': 0xb345,\\n  'skein512-304': 0xb346,\\n  'skein512-312': 0xb347,\\n  'skein512-320': 0xb348,\\n  'skein512-328': 0xb349,\\n  'skein512-336': 0xb34a,\\n  'skein512-344': 0xb34b,\\n  'skein512-352': 0xb34c,\\n  'skein512-360': 0xb34d,\\n  'skein512-368': 0xb34e,\\n  'skein512-376': 0xb34f,\\n  'skein512-384': 0xb350,\\n  'skein512-392': 0xb351,\\n  'skein512-400': 0xb352,\\n  'skein512-408': 0xb353,\\n  'skein512-416': 0xb354,\\n  'skein512-424': 0xb355,\\n  'skein512-432': 0xb356,\\n  'skein512-440': 0xb357,\\n  'skein512-448': 0xb358,\\n  'skein512-456': 0xb359,\\n  'skein512-464': 0xb35a,\\n  'skein512-472': 0xb35b,\\n  'skein512-480': 0xb35c,\\n  'skein512-488': 0xb35d,\\n  'skein512-496': 0xb35e,\\n  'skein512-504': 0xb35f,\\n  'skein512-512': 0xb360,\\n  'skein1024-8': 0xb361,\\n  'skein1024-16': 0xb362,\\n  'skein1024-24': 0xb363,\\n  'skein1024-32': 0xb364,\\n  'skein1024-40': 0xb365,\\n  'skein1024-48': 0xb366,\\n  'skein1024-56': 0xb367,\\n  'skein1024-64': 0xb368,\\n  'skein1024-72': 0xb369,\\n  'skein1024-80': 0xb36a,\\n  'skein1024-88': 0xb36b,\\n  'skein1024-96': 0xb36c,\\n  'skein1024-104': 0xb36d,\\n  'skein1024-112': 0xb36e,\\n  'skein1024-120': 0xb36f,\\n  'skein1024-128': 0xb370,\\n  'skein1024-136': 0xb371,\\n  'skein1024-144': 0xb372,\\n  'skein1024-152': 0xb373,\\n  'skein1024-160': 0xb374,\\n  'skein1024-168': 0xb375,\\n  'skein1024-176': 0xb376,\\n  'skein1024-184': 0xb377,\\n  'skein1024-192': 0xb378,\\n  'skein1024-200': 0xb379,\\n  'skein1024-208': 0xb37a,\\n  'skein1024-216': 0xb37b,\\n  'skein1024-224': 0xb37c,\\n  'skein1024-232': 0xb37d,\\n  'skein1024-240': 0xb37e,\\n  'skein1024-248': 0xb37f,\\n  'skein1024-256': 0xb380,\\n  'skein1024-264': 0xb381,\\n  'skein1024-272': 0xb382,\\n  'skein1024-280': 0xb383,\\n  'skein1024-288': 0xb384,\\n  'skein1024-296': 0xb385,\\n  'skein1024-304': 0xb386,\\n  'skein1024-312': 0xb387,\\n  'skein1024-320': 0xb388,\\n  'skein1024-328': 0xb389,\\n  'skein1024-336': 0xb38a,\\n  'skein1024-344': 0xb38b,\\n  'skein1024-352': 0xb38c,\\n  'skein1024-360': 0xb38d,\\n  'skein1024-368': 0xb38e,\\n  'skein1024-376': 0xb38f,\\n  'skein1024-384': 0xb390,\\n  'skein1024-392': 0xb391,\\n  'skein1024-400': 0xb392,\\n  'skein1024-408': 0xb393,\\n  'skein1024-416': 0xb394,\\n  'skein1024-424': 0xb395,\\n  'skein1024-432': 0xb396,\\n  'skein1024-440': 0xb397,\\n  'skein1024-448': 0xb398,\\n  'skein1024-456': 0xb399,\\n  'skein1024-464': 0xb39a,\\n  'skein1024-472': 0xb39b,\\n  'skein1024-480': 0xb39c,\\n  'skein1024-488': 0xb39d,\\n  'skein1024-496': 0xb39e,\\n  'skein1024-504': 0xb39f,\\n  'skein1024-512': 0xb3a0,\\n  'skein1024-520': 0xb3a1,\\n  'skein1024-528': 0xb3a2,\\n  'skein1024-536': 0xb3a3,\\n  'skein1024-544': 0xb3a4,\\n  'skein1024-552': 0xb3a5,\\n  'skein1024-560': 0xb3a6,\\n  'skein1024-568': 0xb3a7,\\n  'skein1024-576': 0xb3a8,\\n  'skein1024-584': 0xb3a9,\\n  'skein1024-592': 0xb3aa,\\n  'skein1024-600': 0xb3ab,\\n  'skein1024-608': 0xb3ac,\\n  'skein1024-616': 0xb3ad,\\n  'skein1024-624': 0xb3ae,\\n  'skein1024-632': 0xb3af,\\n  'skein1024-640': 0xb3b0,\\n  'skein1024-648': 0xb3b1,\\n  'skein1024-656': 0xb3b2,\\n  'skein1024-664': 0xb3b3,\\n  'skein1024-672': 0xb3b4,\\n  'skein1024-680': 0xb3b5,\\n  'skein1024-688': 0xb3b6,\\n  'skein1024-696': 0xb3b7,\\n  'skein1024-704': 0xb3b8,\\n  'skein1024-712': 0xb3b9,\\n  'skein1024-720': 0xb3ba,\\n  'skein1024-728': 0xb3bb,\\n  'skein1024-736': 0xb3bc,\\n  'skein1024-744': 0xb3bd,\\n  'skein1024-752': 0xb3be,\\n  'skein1024-760': 0xb3bf,\\n  'skein1024-768': 0xb3c0,\\n  'skein1024-776': 0xb3c1,\\n  'skein1024-784': 0xb3c2,\\n  'skein1024-792': 0xb3c3,\\n  'skein1024-800': 0xb3c4,\\n  'skein1024-808': 0xb3c5,\\n  'skein1024-816': 0xb3c6,\\n  'skein1024-824': 0xb3c7,\\n  'skein1024-832': 0xb3c8,\\n  'skein1024-840': 0xb3c9,\\n  'skein1024-848': 0xb3ca,\\n  'skein1024-856': 0xb3cb,\\n  'skein1024-864': 0xb3cc,\\n  'skein1024-872': 0xb3cd,\\n  'skein1024-880': 0xb3ce,\\n  'skein1024-888': 0xb3cf,\\n  'skein1024-896': 0xb3d0,\\n  'skein1024-904': 0xb3d1,\\n  'skein1024-912': 0xb3d2,\\n  'skein1024-920': 0xb3d3,\\n  'skein1024-928': 0xb3d4,\\n  'skein1024-936': 0xb3d5,\\n  'skein1024-944': 0xb3d6,\\n  'skein1024-952': 0xb3d7,\\n  'skein1024-960': 0xb3d8,\\n  'skein1024-968': 0xb3d9,\\n  'skein1024-976': 0xb3da,\\n  'skein1024-984': 0xb3db,\\n  'skein1024-992': 0xb3dc,\\n  'skein1024-1000': 0xb3dd,\\n  'skein1024-1008': 0xb3de,\\n  'skein1024-1016': 0xb3df,\\n  'skein1024-1024': 0xb3e0,\\n  'poseidon-bls12_381-a2-fc1': 0xb401,\\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402,\\n  'zeroxcert-imprint-256': 0xce11,\\n  'fil-commitment-unsealed': 0xf101,\\n  'fil-commitment-sealed': 0xf102,\\n  'holochain-adr-v0': 0x807124,\\n  'holochain-adr-v1': 0x817124,\\n  'holochain-key-v0': 0x947124,\\n  'holochain-key-v1': 0x957124,\\n  'holochain-sig-v0': 0xa27124,\\n  'holochain-sig-v1': 0xa37124,\\n  'skynet-ns': 0xb19910\\n})\\n\\nmodule.exports = { baseTable }\\n\\n},{}],46:[function(require,module,exports){\\n/**\\n * Implementation of the multicodec specification.\\n *\\n * @module multicodec\\n * @example\\n * const multicodec = require('multicodec')\\n *\\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\\n * // prefixedProtobuf 0x50...\\n *\\n */\\n'use strict'\\n\\n/** @typedef {import('./generated-types').CodecName} CodecName */\\n/** @typedef {import('./generated-types').CodecCode} CodecCode */\\n\\nconst varint = require('varint')\\nconst uint8ArrayConcat = require('uint8arrays/concat')\\nconst util = require('./util')\\nconst { nameToVarint, constantToCode, nameToCode, codeToName } = require('./maps')\\n\\n/**\\n * Prefix a buffer with a multicodec-packed.\\n *\\n * @param {CodecName|Uint8Array} multicodecStrOrCode\\n * @param {Uint8Array} data\\n * @returns {Uint8Array}\\n */\\nfunction addPrefix (multicodecStrOrCode, data) {\\n  let prefix\\n\\n  if (multicodecStrOrCode instanceof Uint8Array) {\\n    prefix = util.varintUint8ArrayEncode(multicodecStrOrCode)\\n  } else {\\n    if (nameToVarint[multicodecStrOrCode]) {\\n      prefix = nameToVarint[multicodecStrOrCode]\\n    } else {\\n      throw new Error('multicodec not recognized')\\n    }\\n  }\\n\\n  return uint8ArrayConcat([prefix, data], prefix.length + data.length)\\n}\\n\\n/**\\n * Decapsulate the multicodec-packed prefix from the data.\\n *\\n * @param {Uint8Array} data\\n * @returns {Uint8Array}\\n */\\nfunction rmPrefix (data) {\\n  varint.decode(/** @type {Buffer} */(data))\\n  return data.slice(varint.decode.bytes)\\n}\\n\\n/**\\n * Get the codec name of the prefixed data.\\n *\\n * @param {Uint8Array} prefixedData\\n * @returns {CodecName}\\n */\\nfunction getNameFromData (prefixedData) {\\n  const code = /** @type {CodecCode} */(varint.decode(/** @type {Buffer} */(prefixedData)))\\n  const name = codeToName[code]\\n  if (name === undefined) {\\n    throw new Error(`Code \\\"${code}\\\" not found`)\\n  }\\n  return name\\n}\\n\\n/**\\n * Get the codec name from a code.\\n *\\n * @param {CodecCode} codec\\n * @returns {CodecName}\\n */\\nfunction getNameFromCode (codec) {\\n  return codeToName[codec]\\n}\\n\\n/**\\n * Get the code of the codec\\n *\\n * @param {CodecName} name\\n * @returns {CodecCode}\\n */\\nfunction getCodeFromName (name) {\\n  const code = nameToCode[name]\\n  if (code === undefined) {\\n    throw new Error(`Codec \\\"${name}\\\" not found`)\\n  }\\n  return code\\n}\\n\\n/**\\n * Get the code of the prefixed data.\\n *\\n * @param {Uint8Array} prefixedData\\n * @returns {CodecCode}\\n */\\nfunction getCodeFromData (prefixedData) {\\n  return /** @type {CodecCode} */(varint.decode(/** @type {Buffer} */(prefixedData)))\\n}\\n\\n/**\\n * Get the code as varint of a codec name.\\n *\\n * @param {CodecName} name\\n * @returns {Uint8Array}\\n */\\nfunction getVarintFromName (name) {\\n  const code = nameToVarint[name]\\n  if (code === undefined) {\\n    throw new Error(`Codec \\\"${name}\\\" not found`)\\n  }\\n  return code\\n}\\n\\n/**\\n * Get the varint of a code.\\n *\\n * @param {CodecCode} code\\n * @returns {Uint8Array}\\n */\\nfunction getVarintFromCode (code) {\\n  return util.varintEncode(code)\\n}\\n\\n/**\\n * Get the codec name of the prefixed data.\\n *\\n * @deprecated use getNameFromData instead.\\n * @param {Uint8Array} prefixedData\\n * @returns {CodecName}\\n */\\nfunction getCodec (prefixedData) {\\n  return getNameFromData(prefixedData)\\n}\\n\\n/**\\n * Get the codec name from a code.\\n *\\n * @deprecated use getNameFromCode instead.\\n * @param {CodecCode} codec\\n * @returns {CodecName}\\n */\\nfunction getName (codec) {\\n  return getNameFromCode(codec)\\n}\\n\\n/**\\n * Get the code of the codec\\n *\\n * @deprecated use getCodeFromName instead.\\n * @param {CodecName} name\\n * @returns {CodecCode}\\n */\\nfunction getNumber (name) {\\n  return getCodeFromName(name)\\n}\\n\\n/**\\n * Get the code of the prefixed data.\\n *\\n * @deprecated use getCodeFromData instead.\\n * @param {Uint8Array} prefixedData\\n * @returns {CodecCode}\\n */\\nfunction getCode (prefixedData) {\\n  return getCodeFromData(prefixedData)\\n}\\n\\n/**\\n * Get the code as varint of a codec name.\\n *\\n * @deprecated use getVarintFromName instead.\\n * @param {CodecName} name\\n * @returns {Uint8Array}\\n */\\nfunction getCodeVarint (name) {\\n  return getVarintFromName(name)\\n}\\n\\n/**\\n * Get the varint of a code.\\n *\\n * @deprecated use getVarintFromCode instead.\\n * @param {CodecCode} code\\n * @returns {Array.<number>}\\n */\\nfunction getVarint (code) {\\n  return Array.from(getVarintFromCode(code))\\n}\\n\\nmodule.exports = {\\n  addPrefix,\\n  rmPrefix,\\n  getNameFromData,\\n  getNameFromCode,\\n  getCodeFromName,\\n  getCodeFromData,\\n  getVarintFromName,\\n  getVarintFromCode,\\n  // Deprecated\\n  getCodec,\\n  getName,\\n  getNumber,\\n  getCode,\\n  getCodeVarint,\\n  getVarint,\\n  // Make the constants top-level constants\\n  ...constantToCode,\\n  // Export the maps\\n  nameToVarint,\\n  nameToCode,\\n  codeToName\\n}\\n\\n},{\\\"./maps\\\":47,\\\"./util\\\":48,\\\"uint8arrays/concat\\\":579,\\\"varint\\\":593}],47:[function(require,module,exports){\\n'use strict'\\n\\n/** @typedef {import('./generated-types').ConstantCodeMap} ConstantCodeMap */\\n/** @typedef {import('./generated-types').NameUint8ArrayMap} NameUint8ArrayMap */\\n/** @typedef {import('./generated-types').CodeNameMap} CodeNameMap */\\n/** @typedef {import('./generated-types').CodecName} CodecName */\\n/** @typedef {import('./generated-types').CodecConstant} CodecConstant */\\n\\nconst { baseTable } = require('./generated-table')\\nconst varintEncode = require('./util').varintEncode\\n\\nconst nameToVarint = /** @type {NameUint8ArrayMap} */ ({})\\nconst constantToCode = /** @type {ConstantCodeMap} */({})\\nconst codeToName = /** @type {CodeNameMap} */({})\\n\\n// eslint-disable-next-line guard-for-in\\nfor (const name in baseTable) {\\n  const codecName = /** @type {CodecName} */(name)\\n  const code = baseTable[codecName]\\n  nameToVarint[codecName] = varintEncode(code)\\n\\n  const constant = /** @type {CodecConstant} */(codecName.toUpperCase().replace(/-/g, '_'))\\n  constantToCode[constant] = code\\n\\n  if (!codeToName[code]) {\\n    codeToName[code] = codecName\\n  }\\n}\\n\\nObject.freeze(nameToVarint)\\nObject.freeze(constantToCode)\\nObject.freeze(codeToName)\\nconst nameToCode = Object.freeze(baseTable)\\nmodule.exports = {\\n  nameToVarint,\\n  constantToCode,\\n  nameToCode,\\n  codeToName\\n}\\n\\n},{\\\"./generated-table\\\":45,\\\"./util\\\":48}],48:[function(require,module,exports){\\n'use strict'\\n\\nconst varint = require('varint')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\n\\nmodule.exports = {\\n  numberToUint8Array,\\n  uint8ArrayToNumber,\\n  varintUint8ArrayEncode,\\n  varintEncode\\n}\\n\\n/**\\n * @param {Uint8Array} buf\\n */\\nfunction uint8ArrayToNumber (buf) {\\n  return parseInt(uint8ArrayToString(buf, 'base16'), 16)\\n}\\n\\n/**\\n * @param {number} num\\n */\\nfunction numberToUint8Array (num) {\\n  let hexString = num.toString(16)\\n  if (hexString.length % 2 === 1) {\\n    hexString = '0' + hexString\\n  }\\n  return uint8ArrayFromString(hexString, 'base16')\\n}\\n\\n/**\\n * @param {Uint8Array} input\\n */\\nfunction varintUint8ArrayEncode (input) {\\n  return Uint8Array.from(varint.encode(uint8ArrayToNumber(input)))\\n}\\n\\n/**\\n * @param {number} num\\n */\\nfunction varintEncode (num) {\\n  return Uint8Array.from(varint.encode(num))\\n}\\n\\n},{\\\"uint8arrays/from-string\\\":581,\\\"uint8arrays/to-string\\\":589,\\\"varint\\\":593}],49:[function(require,module,exports){\\n/* eslint quote-props: off */\\n'use strict'\\n\\n/**\\n * Names for all available hashes\\n *\\n * @typedef { \\\"identity\\\" | \\\"sha1\\\" | \\\"sha2-256\\\" | \\\"sha2-512\\\" | \\\"sha3-512\\\" | \\\"sha3-384\\\" | \\\"sha3-256\\\" | \\\"sha3-224\\\" | \\\"shake-128\\\" | \\\"shake-256\\\" | \\\"keccak-224\\\" | \\\"keccak-256\\\" | \\\"keccak-384\\\" | \\\"keccak-512\\\" | \\\"blake3\\\" | \\\"murmur3-128\\\" | \\\"murmur3-32\\\" | \\\"dbl-sha2-256\\\" | \\\"md4\\\" | \\\"md5\\\" | \\\"bmt\\\" | \\\"sha2-256-trunc254-padded\\\" | \\\"ripemd-128\\\" | \\\"ripemd-160\\\" | \\\"ripemd-256\\\" | \\\"ripemd-320\\\" | \\\"x11\\\" | \\\"kangarootwelve\\\" | \\\"sm3-256\\\" | \\\"blake2b-8\\\" | \\\"blake2b-16\\\" | \\\"blake2b-24\\\" | \\\"blake2b-32\\\" | \\\"blake2b-40\\\" | \\\"blake2b-48\\\" | \\\"blake2b-56\\\" | \\\"blake2b-64\\\" | \\\"blake2b-72\\\" | \\\"blake2b-80\\\" | \\\"blake2b-88\\\" | \\\"blake2b-96\\\" | \\\"blake2b-104\\\" | \\\"blake2b-112\\\" | \\\"blake2b-120\\\" | \\\"blake2b-128\\\" | \\\"blake2b-136\\\" | \\\"blake2b-144\\\" | \\\"blake2b-152\\\" | \\\"blake2b-160\\\" | \\\"blake2b-168\\\" | \\\"blake2b-176\\\" | \\\"blake2b-184\\\" | \\\"blake2b-192\\\" | \\\"blake2b-200\\\" | \\\"blake2b-208\\\" | \\\"blake2b-216\\\" | \\\"blake2b-224\\\" | \\\"blake2b-232\\\" | \\\"blake2b-240\\\" | \\\"blake2b-248\\\" | \\\"blake2b-256\\\" | \\\"blake2b-264\\\" | \\\"blake2b-272\\\" | \\\"blake2b-280\\\" | \\\"blake2b-288\\\" | \\\"blake2b-296\\\" | \\\"blake2b-304\\\" | \\\"blake2b-312\\\" | \\\"blake2b-320\\\" | \\\"blake2b-328\\\" | \\\"blake2b-336\\\" | \\\"blake2b-344\\\" | \\\"blake2b-352\\\" | \\\"blake2b-360\\\" | \\\"blake2b-368\\\" | \\\"blake2b-376\\\" | \\\"blake2b-384\\\" | \\\"blake2b-392\\\" | \\\"blake2b-400\\\" | \\\"blake2b-408\\\" | \\\"blake2b-416\\\" | \\\"blake2b-424\\\" | \\\"blake2b-432\\\" | \\\"blake2b-440\\\" | \\\"blake2b-448\\\" | \\\"blake2b-456\\\" | \\\"blake2b-464\\\" | \\\"blake2b-472\\\" | \\\"blake2b-480\\\" | \\\"blake2b-488\\\" | \\\"blake2b-496\\\" | \\\"blake2b-504\\\" | \\\"blake2b-512\\\" | \\\"blake2s-8\\\" | \\\"blake2s-16\\\" | \\\"blake2s-24\\\" | \\\"blake2s-32\\\" | \\\"blake2s-40\\\" | \\\"blake2s-48\\\" | \\\"blake2s-56\\\" | \\\"blake2s-64\\\" | \\\"blake2s-72\\\" | \\\"blake2s-80\\\" | \\\"blake2s-88\\\" | \\\"blake2s-96\\\" | \\\"blake2s-104\\\" | \\\"blake2s-112\\\" | \\\"blake2s-120\\\" | \\\"blake2s-128\\\" | \\\"blake2s-136\\\" | \\\"blake2s-144\\\" | \\\"blake2s-152\\\" | \\\"blake2s-160\\\" | \\\"blake2s-168\\\" | \\\"blake2s-176\\\" | \\\"blake2s-184\\\" | \\\"blake2s-192\\\" | \\\"blake2s-200\\\" | \\\"blake2s-208\\\" | \\\"blake2s-216\\\" | \\\"blake2s-224\\\" | \\\"blake2s-232\\\" | \\\"blake2s-240\\\" | \\\"blake2s-248\\\" | \\\"blake2s-256\\\" | \\\"skein256-8\\\" | \\\"skein256-16\\\" | \\\"skein256-24\\\" | \\\"skein256-32\\\" | \\\"skein256-40\\\" | \\\"skein256-48\\\" | \\\"skein256-56\\\" | \\\"skein256-64\\\" | \\\"skein256-72\\\" | \\\"skein256-80\\\" | \\\"skein256-88\\\" | \\\"skein256-96\\\" | \\\"skein256-104\\\" | \\\"skein256-112\\\" | \\\"skein256-120\\\" | \\\"skein256-128\\\" | \\\"skein256-136\\\" | \\\"skein256-144\\\" | \\\"skein256-152\\\" | \\\"skein256-160\\\" | \\\"skein256-168\\\" | \\\"skein256-176\\\" | \\\"skein256-184\\\" | \\\"skein256-192\\\" | \\\"skein256-200\\\" | \\\"skein256-208\\\" | \\\"skein256-216\\\" | \\\"skein256-224\\\" | \\\"skein256-232\\\" | \\\"skein256-240\\\" | \\\"skein256-248\\\" | \\\"skein256-256\\\" | \\\"skein512-8\\\" | \\\"skein512-16\\\" | \\\"skein512-24\\\" | \\\"skein512-32\\\" | \\\"skein512-40\\\" | \\\"skein512-48\\\" | \\\"skein512-56\\\" | \\\"skein512-64\\\" | \\\"skein512-72\\\" | \\\"skein512-80\\\" | \\\"skein512-88\\\" | \\\"skein512-96\\\" | \\\"skein512-104\\\" | \\\"skein512-112\\\" | \\\"skein512-120\\\" | \\\"skein512-128\\\" | \\\"skein512-136\\\" | \\\"skein512-144\\\" | \\\"skein512-152\\\" | \\\"skein512-160\\\" | \\\"skein512-168\\\" | \\\"skein512-176\\\" | \\\"skein512-184\\\" | \\\"skein512-192\\\" | \\\"skein512-200\\\" | \\\"skein512-208\\\" | \\\"skein512-216\\\" | \\\"skein512-224\\\" | \\\"skein512-232\\\" | \\\"skein512-240\\\" | \\\"skein512-248\\\" | \\\"skein512-256\\\" | \\\"skein512-264\\\" | \\\"skein512-272\\\" | \\\"skein512-280\\\" | \\\"skein512-288\\\" | \\\"skein512-296\\\" | \\\"skein512-304\\\" | \\\"skein512-312\\\" | \\\"skein512-320\\\" | \\\"skein512-328\\\" | \\\"skein512-336\\\" | \\\"skein512-344\\\" | \\\"skein512-352\\\" | \\\"skein512-360\\\" | \\\"skein512-368\\\" | \\\"skein512-376\\\" | \\\"skein512-384\\\" | \\\"skein512-392\\\" | \\\"skein512-400\\\" | \\\"skein512-408\\\" | \\\"skein512-416\\\" | \\\"skein512-424\\\" | \\\"skein512-432\\\" | \\\"skein512-440\\\" | \\\"skein512-448\\\" | \\\"skein512-456\\\" | \\\"skein512-464\\\" | \\\"skein512-472\\\" | \\\"skein512-480\\\" | \\\"skein512-488\\\" | \\\"skein512-496\\\" | \\\"skein512-504\\\" | \\\"skein512-512\\\" | \\\"skein1024-8\\\" | \\\"skein1024-16\\\" | \\\"skein1024-24\\\" | \\\"skein1024-32\\\" | \\\"skein1024-40\\\" | \\\"skein1024-48\\\" | \\\"skein1024-56\\\" | \\\"skein1024-64\\\" | \\\"skein1024-72\\\" | \\\"skein1024-80\\\" | \\\"skein1024-88\\\" | \\\"skein1024-96\\\" | \\\"skein1024-104\\\" | \\\"skein1024-112\\\" | \\\"skein1024-120\\\" | \\\"skein1024-128\\\" | \\\"skein1024-136\\\" | \\\"skein1024-144\\\" | \\\"skein1024-152\\\" | \\\"skein1024-160\\\" | \\\"skein1024-168\\\" | \\\"skein1024-176\\\" | \\\"skein1024-184\\\" | \\\"skein1024-192\\\" | \\\"skein1024-200\\\" | \\\"skein1024-208\\\" | \\\"skein1024-216\\\" | \\\"skein1024-224\\\" | \\\"skein1024-232\\\" | \\\"skein1024-240\\\" | \\\"skein1024-248\\\" | \\\"skein1024-256\\\" | \\\"skein1024-264\\\" | \\\"skein1024-272\\\" | \\\"skein1024-280\\\" | \\\"skein1024-288\\\" | \\\"skein1024-296\\\" | \\\"skein1024-304\\\" | \\\"skein1024-312\\\" | \\\"skein1024-320\\\" | \\\"skein1024-328\\\" | \\\"skein1024-336\\\" | \\\"skein1024-344\\\" | \\\"skein1024-352\\\" | \\\"skein1024-360\\\" | \\\"skein1024-368\\\" | \\\"skein1024-376\\\" | \\\"skein1024-384\\\" | \\\"skein1024-392\\\" | \\\"skein1024-400\\\" | \\\"skein1024-408\\\" | \\\"skein1024-416\\\" | \\\"skein1024-424\\\" | \\\"skein1024-432\\\" | \\\"skein1024-440\\\" | \\\"skein1024-448\\\" | \\\"skein1024-456\\\" | \\\"skein1024-464\\\" | \\\"skein1024-472\\\" | \\\"skein1024-480\\\" | \\\"skein1024-488\\\" | \\\"skein1024-496\\\" | \\\"skein1024-504\\\" | \\\"skein1024-512\\\" | \\\"skein1024-520\\\" | \\\"skein1024-528\\\" | \\\"skein1024-536\\\" | \\\"skein1024-544\\\" | \\\"skein1024-552\\\" | \\\"skein1024-560\\\" | \\\"skein1024-568\\\" | \\\"skein1024-576\\\" | \\\"skein1024-584\\\" | \\\"skein1024-592\\\" | \\\"skein1024-600\\\" | \\\"skein1024-608\\\" | \\\"skein1024-616\\\" | \\\"skein1024-624\\\" | \\\"skein1024-632\\\" | \\\"skein1024-640\\\" | \\\"skein1024-648\\\" | \\\"skein1024-656\\\" | \\\"skein1024-664\\\" | \\\"skein1024-672\\\" | \\\"skein1024-680\\\" | \\\"skein1024-688\\\" | \\\"skein1024-696\\\" | \\\"skein1024-704\\\" | \\\"skein1024-712\\\" | \\\"skein1024-720\\\" | \\\"skein1024-728\\\" | \\\"skein1024-736\\\" | \\\"skein1024-744\\\" | \\\"skein1024-752\\\" | \\\"skein1024-760\\\" | \\\"skein1024-768\\\" | \\\"skein1024-776\\\" | \\\"skein1024-784\\\" | \\\"skein1024-792\\\" | \\\"skein1024-800\\\" | \\\"skein1024-808\\\" | \\\"skein1024-816\\\" | \\\"skein1024-824\\\" | \\\"skein1024-832\\\" | \\\"skein1024-840\\\" | \\\"skein1024-848\\\" | \\\"skein1024-856\\\" | \\\"skein1024-864\\\" | \\\"skein1024-872\\\" | \\\"skein1024-880\\\" | \\\"skein1024-888\\\" | \\\"skein1024-896\\\" | \\\"skein1024-904\\\" | \\\"skein1024-912\\\" | \\\"skein1024-920\\\" | \\\"skein1024-928\\\" | \\\"skein1024-936\\\" | \\\"skein1024-944\\\" | \\\"skein1024-952\\\" | \\\"skein1024-960\\\" | \\\"skein1024-968\\\" | \\\"skein1024-976\\\" | \\\"skein1024-984\\\" | \\\"skein1024-992\\\" | \\\"skein1024-1000\\\" | \\\"skein1024-1008\\\" | \\\"skein1024-1016\\\" | \\\"skein1024-1024\\\" | \\\"poseidon-bls12_381-a2-fc1\\\" | \\\"poseidon-bls12_381-a2-fc1-sc\\\" } HashName\\n */\\n/**\\n * Codes for all available hashes\\n *\\n * @typedef { 0x00 | 0x11 | 0x12 | 0x13 | 0x14 | 0x15 | 0x16 | 0x17 | 0x18 | 0x19 | 0x1a | 0x1b | 0x1c | 0x1d | 0x1e | 0x22 | 0x23 | 0x56 | 0xd4 | 0xd5 | 0xd6 | 0x1012 | 0x1052 | 0x1053 | 0x1054 | 0x1055 | 0x1100 | 0x1d01 | 0x534d | 0xb201 | 0xb202 | 0xb203 | 0xb204 | 0xb205 | 0xb206 | 0xb207 | 0xb208 | 0xb209 | 0xb20a | 0xb20b | 0xb20c | 0xb20d | 0xb20e | 0xb20f | 0xb210 | 0xb211 | 0xb212 | 0xb213 | 0xb214 | 0xb215 | 0xb216 | 0xb217 | 0xb218 | 0xb219 | 0xb21a | 0xb21b | 0xb21c | 0xb21d | 0xb21e | 0xb21f | 0xb220 | 0xb221 | 0xb222 | 0xb223 | 0xb224 | 0xb225 | 0xb226 | 0xb227 | 0xb228 | 0xb229 | 0xb22a | 0xb22b | 0xb22c | 0xb22d | 0xb22e | 0xb22f | 0xb230 | 0xb231 | 0xb232 | 0xb233 | 0xb234 | 0xb235 | 0xb236 | 0xb237 | 0xb238 | 0xb239 | 0xb23a | 0xb23b | 0xb23c | 0xb23d | 0xb23e | 0xb23f | 0xb240 | 0xb241 | 0xb242 | 0xb243 | 0xb244 | 0xb245 | 0xb246 | 0xb247 | 0xb248 | 0xb249 | 0xb24a | 0xb24b | 0xb24c | 0xb24d | 0xb24e | 0xb24f | 0xb250 | 0xb251 | 0xb252 | 0xb253 | 0xb254 | 0xb255 | 0xb256 | 0xb257 | 0xb258 | 0xb259 | 0xb25a | 0xb25b | 0xb25c | 0xb25d | 0xb25e | 0xb25f | 0xb260 | 0xb301 | 0xb302 | 0xb303 | 0xb304 | 0xb305 | 0xb306 | 0xb307 | 0xb308 | 0xb309 | 0xb30a | 0xb30b | 0xb30c | 0xb30d | 0xb30e | 0xb30f | 0xb310 | 0xb311 | 0xb312 | 0xb313 | 0xb314 | 0xb315 | 0xb316 | 0xb317 | 0xb318 | 0xb319 | 0xb31a | 0xb31b | 0xb31c | 0xb31d | 0xb31e | 0xb31f | 0xb320 | 0xb321 | 0xb322 | 0xb323 | 0xb324 | 0xb325 | 0xb326 | 0xb327 | 0xb328 | 0xb329 | 0xb32a | 0xb32b | 0xb32c | 0xb32d | 0xb32e | 0xb32f | 0xb330 | 0xb331 | 0xb332 | 0xb333 | 0xb334 | 0xb335 | 0xb336 | 0xb337 | 0xb338 | 0xb339 | 0xb33a | 0xb33b | 0xb33c | 0xb33d | 0xb33e | 0xb33f | 0xb340 | 0xb341 | 0xb342 | 0xb343 | 0xb344 | 0xb345 | 0xb346 | 0xb347 | 0xb348 | 0xb349 | 0xb34a | 0xb34b | 0xb34c | 0xb34d | 0xb34e | 0xb34f | 0xb350 | 0xb351 | 0xb352 | 0xb353 | 0xb354 | 0xb355 | 0xb356 | 0xb357 | 0xb358 | 0xb359 | 0xb35a | 0xb35b | 0xb35c | 0xb35d | 0xb35e | 0xb35f | 0xb360 | 0xb361 | 0xb362 | 0xb363 | 0xb364 | 0xb365 | 0xb366 | 0xb367 | 0xb368 | 0xb369 | 0xb36a | 0xb36b | 0xb36c | 0xb36d | 0xb36e | 0xb36f | 0xb370 | 0xb371 | 0xb372 | 0xb373 | 0xb374 | 0xb375 | 0xb376 | 0xb377 | 0xb378 | 0xb379 | 0xb37a | 0xb37b | 0xb37c | 0xb37d | 0xb37e | 0xb37f | 0xb380 | 0xb381 | 0xb382 | 0xb383 | 0xb384 | 0xb385 | 0xb386 | 0xb387 | 0xb388 | 0xb389 | 0xb38a | 0xb38b | 0xb38c | 0xb38d | 0xb38e | 0xb38f | 0xb390 | 0xb391 | 0xb392 | 0xb393 | 0xb394 | 0xb395 | 0xb396 | 0xb397 | 0xb398 | 0xb399 | 0xb39a | 0xb39b | 0xb39c | 0xb39d | 0xb39e | 0xb39f | 0xb3a0 | 0xb3a1 | 0xb3a2 | 0xb3a3 | 0xb3a4 | 0xb3a5 | 0xb3a6 | 0xb3a7 | 0xb3a8 | 0xb3a9 | 0xb3aa | 0xb3ab | 0xb3ac | 0xb3ad | 0xb3ae | 0xb3af | 0xb3b0 | 0xb3b1 | 0xb3b2 | 0xb3b3 | 0xb3b4 | 0xb3b5 | 0xb3b6 | 0xb3b7 | 0xb3b8 | 0xb3b9 | 0xb3ba | 0xb3bb | 0xb3bc | 0xb3bd | 0xb3be | 0xb3bf | 0xb3c0 | 0xb3c1 | 0xb3c2 | 0xb3c3 | 0xb3c4 | 0xb3c5 | 0xb3c6 | 0xb3c7 | 0xb3c8 | 0xb3c9 | 0xb3ca | 0xb3cb | 0xb3cc | 0xb3cd | 0xb3ce | 0xb3cf | 0xb3d0 | 0xb3d1 | 0xb3d2 | 0xb3d3 | 0xb3d4 | 0xb3d5 | 0xb3d6 | 0xb3d7 | 0xb3d8 | 0xb3d9 | 0xb3da | 0xb3db | 0xb3dc | 0xb3dd | 0xb3de | 0xb3df | 0xb3e0 | 0xb401 | 0xb402 } HashCode\\n */\\n\\n/**\\n * @type { Record<HashName,HashCode> }\\n */\\nconst names = Object.freeze({\\n  'identity': 0x00,\\n  'sha1': 0x11,\\n  'sha2-256': 0x12,\\n  'sha2-512': 0x13,\\n  'sha3-512': 0x14,\\n  'sha3-384': 0x15,\\n  'sha3-256': 0x16,\\n  'sha3-224': 0x17,\\n  'shake-128': 0x18,\\n  'shake-256': 0x19,\\n  'keccak-224': 0x1a,\\n  'keccak-256': 0x1b,\\n  'keccak-384': 0x1c,\\n  'keccak-512': 0x1d,\\n  'blake3': 0x1e,\\n  'murmur3-128': 0x22,\\n  'murmur3-32': 0x23,\\n  'dbl-sha2-256': 0x56,\\n  'md4': 0xd4,\\n  'md5': 0xd5,\\n  'bmt': 0xd6,\\n  'sha2-256-trunc254-padded': 0x1012,\\n  'ripemd-128': 0x1052,\\n  'ripemd-160': 0x1053,\\n  'ripemd-256': 0x1054,\\n  'ripemd-320': 0x1055,\\n  'x11': 0x1100,\\n  'kangarootwelve': 0x1d01,\\n  'sm3-256': 0x534d,\\n  'blake2b-8': 0xb201,\\n  'blake2b-16': 0xb202,\\n  'blake2b-24': 0xb203,\\n  'blake2b-32': 0xb204,\\n  'blake2b-40': 0xb205,\\n  'blake2b-48': 0xb206,\\n  'blake2b-56': 0xb207,\\n  'blake2b-64': 0xb208,\\n  'blake2b-72': 0xb209,\\n  'blake2b-80': 0xb20a,\\n  'blake2b-88': 0xb20b,\\n  'blake2b-96': 0xb20c,\\n  'blake2b-104': 0xb20d,\\n  'blake2b-112': 0xb20e,\\n  'blake2b-120': 0xb20f,\\n  'blake2b-128': 0xb210,\\n  'blake2b-136': 0xb211,\\n  'blake2b-144': 0xb212,\\n  'blake2b-152': 0xb213,\\n  'blake2b-160': 0xb214,\\n  'blake2b-168': 0xb215,\\n  'blake2b-176': 0xb216,\\n  'blake2b-184': 0xb217,\\n  'blake2b-192': 0xb218,\\n  'blake2b-200': 0xb219,\\n  'blake2b-208': 0xb21a,\\n  'blake2b-216': 0xb21b,\\n  'blake2b-224': 0xb21c,\\n  'blake2b-232': 0xb21d,\\n  'blake2b-240': 0xb21e,\\n  'blake2b-248': 0xb21f,\\n  'blake2b-256': 0xb220,\\n  'blake2b-264': 0xb221,\\n  'blake2b-272': 0xb222,\\n  'blake2b-280': 0xb223,\\n  'blake2b-288': 0xb224,\\n  'blake2b-296': 0xb225,\\n  'blake2b-304': 0xb226,\\n  'blake2b-312': 0xb227,\\n  'blake2b-320': 0xb228,\\n  'blake2b-328': 0xb229,\\n  'blake2b-336': 0xb22a,\\n  'blake2b-344': 0xb22b,\\n  'blake2b-352': 0xb22c,\\n  'blake2b-360': 0xb22d,\\n  'blake2b-368': 0xb22e,\\n  'blake2b-376': 0xb22f,\\n  'blake2b-384': 0xb230,\\n  'blake2b-392': 0xb231,\\n  'blake2b-400': 0xb232,\\n  'blake2b-408': 0xb233,\\n  'blake2b-416': 0xb234,\\n  'blake2b-424': 0xb235,\\n  'blake2b-432': 0xb236,\\n  'blake2b-440': 0xb237,\\n  'blake2b-448': 0xb238,\\n  'blake2b-456': 0xb239,\\n  'blake2b-464': 0xb23a,\\n  'blake2b-472': 0xb23b,\\n  'blake2b-480': 0xb23c,\\n  'blake2b-488': 0xb23d,\\n  'blake2b-496': 0xb23e,\\n  'blake2b-504': 0xb23f,\\n  'blake2b-512': 0xb240,\\n  'blake2s-8': 0xb241,\\n  'blake2s-16': 0xb242,\\n  'blake2s-24': 0xb243,\\n  'blake2s-32': 0xb244,\\n  'blake2s-40': 0xb245,\\n  'blake2s-48': 0xb246,\\n  'blake2s-56': 0xb247,\\n  'blake2s-64': 0xb248,\\n  'blake2s-72': 0xb249,\\n  'blake2s-80': 0xb24a,\\n  'blake2s-88': 0xb24b,\\n  'blake2s-96': 0xb24c,\\n  'blake2s-104': 0xb24d,\\n  'blake2s-112': 0xb24e,\\n  'blake2s-120': 0xb24f,\\n  'blake2s-128': 0xb250,\\n  'blake2s-136': 0xb251,\\n  'blake2s-144': 0xb252,\\n  'blake2s-152': 0xb253,\\n  'blake2s-160': 0xb254,\\n  'blake2s-168': 0xb255,\\n  'blake2s-176': 0xb256,\\n  'blake2s-184': 0xb257,\\n  'blake2s-192': 0xb258,\\n  'blake2s-200': 0xb259,\\n  'blake2s-208': 0xb25a,\\n  'blake2s-216': 0xb25b,\\n  'blake2s-224': 0xb25c,\\n  'blake2s-232': 0xb25d,\\n  'blake2s-240': 0xb25e,\\n  'blake2s-248': 0xb25f,\\n  'blake2s-256': 0xb260,\\n  'skein256-8': 0xb301,\\n  'skein256-16': 0xb302,\\n  'skein256-24': 0xb303,\\n  'skein256-32': 0xb304,\\n  'skein256-40': 0xb305,\\n  'skein256-48': 0xb306,\\n  'skein256-56': 0xb307,\\n  'skein256-64': 0xb308,\\n  'skein256-72': 0xb309,\\n  'skein256-80': 0xb30a,\\n  'skein256-88': 0xb30b,\\n  'skein256-96': 0xb30c,\\n  'skein256-104': 0xb30d,\\n  'skein256-112': 0xb30e,\\n  'skein256-120': 0xb30f,\\n  'skein256-128': 0xb310,\\n  'skein256-136': 0xb311,\\n  'skein256-144': 0xb312,\\n  'skein256-152': 0xb313,\\n  'skein256-160': 0xb314,\\n  'skein256-168': 0xb315,\\n  'skein256-176': 0xb316,\\n  'skein256-184': 0xb317,\\n  'skein256-192': 0xb318,\\n  'skein256-200': 0xb319,\\n  'skein256-208': 0xb31a,\\n  'skein256-216': 0xb31b,\\n  'skein256-224': 0xb31c,\\n  'skein256-232': 0xb31d,\\n  'skein256-240': 0xb31e,\\n  'skein256-248': 0xb31f,\\n  'skein256-256': 0xb320,\\n  'skein512-8': 0xb321,\\n  'skein512-16': 0xb322,\\n  'skein512-24': 0xb323,\\n  'skein512-32': 0xb324,\\n  'skein512-40': 0xb325,\\n  'skein512-48': 0xb326,\\n  'skein512-56': 0xb327,\\n  'skein512-64': 0xb328,\\n  'skein512-72': 0xb329,\\n  'skein512-80': 0xb32a,\\n  'skein512-88': 0xb32b,\\n  'skein512-96': 0xb32c,\\n  'skein512-104': 0xb32d,\\n  'skein512-112': 0xb32e,\\n  'skein512-120': 0xb32f,\\n  'skein512-128': 0xb330,\\n  'skein512-136': 0xb331,\\n  'skein512-144': 0xb332,\\n  'skein512-152': 0xb333,\\n  'skein512-160': 0xb334,\\n  'skein512-168': 0xb335,\\n  'skein512-176': 0xb336,\\n  'skein512-184': 0xb337,\\n  'skein512-192': 0xb338,\\n  'skein512-200': 0xb339,\\n  'skein512-208': 0xb33a,\\n  'skein512-216': 0xb33b,\\n  'skein512-224': 0xb33c,\\n  'skein512-232': 0xb33d,\\n  'skein512-240': 0xb33e,\\n  'skein512-248': 0xb33f,\\n  'skein512-256': 0xb340,\\n  'skein512-264': 0xb341,\\n  'skein512-272': 0xb342,\\n  'skein512-280': 0xb343,\\n  'skein512-288': 0xb344,\\n  'skein512-296': 0xb345,\\n  'skein512-304': 0xb346,\\n  'skein512-312': 0xb347,\\n  'skein512-320': 0xb348,\\n  'skein512-328': 0xb349,\\n  'skein512-336': 0xb34a,\\n  'skein512-344': 0xb34b,\\n  'skein512-352': 0xb34c,\\n  'skein512-360': 0xb34d,\\n  'skein512-368': 0xb34e,\\n  'skein512-376': 0xb34f,\\n  'skein512-384': 0xb350,\\n  'skein512-392': 0xb351,\\n  'skein512-400': 0xb352,\\n  'skein512-408': 0xb353,\\n  'skein512-416': 0xb354,\\n  'skein512-424': 0xb355,\\n  'skein512-432': 0xb356,\\n  'skein512-440': 0xb357,\\n  'skein512-448': 0xb358,\\n  'skein512-456': 0xb359,\\n  'skein512-464': 0xb35a,\\n  'skein512-472': 0xb35b,\\n  'skein512-480': 0xb35c,\\n  'skein512-488': 0xb35d,\\n  'skein512-496': 0xb35e,\\n  'skein512-504': 0xb35f,\\n  'skein512-512': 0xb360,\\n  'skein1024-8': 0xb361,\\n  'skein1024-16': 0xb362,\\n  'skein1024-24': 0xb363,\\n  'skein1024-32': 0xb364,\\n  'skein1024-40': 0xb365,\\n  'skein1024-48': 0xb366,\\n  'skein1024-56': 0xb367,\\n  'skein1024-64': 0xb368,\\n  'skein1024-72': 0xb369,\\n  'skein1024-80': 0xb36a,\\n  'skein1024-88': 0xb36b,\\n  'skein1024-96': 0xb36c,\\n  'skein1024-104': 0xb36d,\\n  'skein1024-112': 0xb36e,\\n  'skein1024-120': 0xb36f,\\n  'skein1024-128': 0xb370,\\n  'skein1024-136': 0xb371,\\n  'skein1024-144': 0xb372,\\n  'skein1024-152': 0xb373,\\n  'skein1024-160': 0xb374,\\n  'skein1024-168': 0xb375,\\n  'skein1024-176': 0xb376,\\n  'skein1024-184': 0xb377,\\n  'skein1024-192': 0xb378,\\n  'skein1024-200': 0xb379,\\n  'skein1024-208': 0xb37a,\\n  'skein1024-216': 0xb37b,\\n  'skein1024-224': 0xb37c,\\n  'skein1024-232': 0xb37d,\\n  'skein1024-240': 0xb37e,\\n  'skein1024-248': 0xb37f,\\n  'skein1024-256': 0xb380,\\n  'skein1024-264': 0xb381,\\n  'skein1024-272': 0xb382,\\n  'skein1024-280': 0xb383,\\n  'skein1024-288': 0xb384,\\n  'skein1024-296': 0xb385,\\n  'skein1024-304': 0xb386,\\n  'skein1024-312': 0xb387,\\n  'skein1024-320': 0xb388,\\n  'skein1024-328': 0xb389,\\n  'skein1024-336': 0xb38a,\\n  'skein1024-344': 0xb38b,\\n  'skein1024-352': 0xb38c,\\n  'skein1024-360': 0xb38d,\\n  'skein1024-368': 0xb38e,\\n  'skein1024-376': 0xb38f,\\n  'skein1024-384': 0xb390,\\n  'skein1024-392': 0xb391,\\n  'skein1024-400': 0xb392,\\n  'skein1024-408': 0xb393,\\n  'skein1024-416': 0xb394,\\n  'skein1024-424': 0xb395,\\n  'skein1024-432': 0xb396,\\n  'skein1024-440': 0xb397,\\n  'skein1024-448': 0xb398,\\n  'skein1024-456': 0xb399,\\n  'skein1024-464': 0xb39a,\\n  'skein1024-472': 0xb39b,\\n  'skein1024-480': 0xb39c,\\n  'skein1024-488': 0xb39d,\\n  'skein1024-496': 0xb39e,\\n  'skein1024-504': 0xb39f,\\n  'skein1024-512': 0xb3a0,\\n  'skein1024-520': 0xb3a1,\\n  'skein1024-528': 0xb3a2,\\n  'skein1024-536': 0xb3a3,\\n  'skein1024-544': 0xb3a4,\\n  'skein1024-552': 0xb3a5,\\n  'skein1024-560': 0xb3a6,\\n  'skein1024-568': 0xb3a7,\\n  'skein1024-576': 0xb3a8,\\n  'skein1024-584': 0xb3a9,\\n  'skein1024-592': 0xb3aa,\\n  'skein1024-600': 0xb3ab,\\n  'skein1024-608': 0xb3ac,\\n  'skein1024-616': 0xb3ad,\\n  'skein1024-624': 0xb3ae,\\n  'skein1024-632': 0xb3af,\\n  'skein1024-640': 0xb3b0,\\n  'skein1024-648': 0xb3b1,\\n  'skein1024-656': 0xb3b2,\\n  'skein1024-664': 0xb3b3,\\n  'skein1024-672': 0xb3b4,\\n  'skein1024-680': 0xb3b5,\\n  'skein1024-688': 0xb3b6,\\n  'skein1024-696': 0xb3b7,\\n  'skein1024-704': 0xb3b8,\\n  'skein1024-712': 0xb3b9,\\n  'skein1024-720': 0xb3ba,\\n  'skein1024-728': 0xb3bb,\\n  'skein1024-736': 0xb3bc,\\n  'skein1024-744': 0xb3bd,\\n  'skein1024-752': 0xb3be,\\n  'skein1024-760': 0xb3bf,\\n  'skein1024-768': 0xb3c0,\\n  'skein1024-776': 0xb3c1,\\n  'skein1024-784': 0xb3c2,\\n  'skein1024-792': 0xb3c3,\\n  'skein1024-800': 0xb3c4,\\n  'skein1024-808': 0xb3c5,\\n  'skein1024-816': 0xb3c6,\\n  'skein1024-824': 0xb3c7,\\n  'skein1024-832': 0xb3c8,\\n  'skein1024-840': 0xb3c9,\\n  'skein1024-848': 0xb3ca,\\n  'skein1024-856': 0xb3cb,\\n  'skein1024-864': 0xb3cc,\\n  'skein1024-872': 0xb3cd,\\n  'skein1024-880': 0xb3ce,\\n  'skein1024-888': 0xb3cf,\\n  'skein1024-896': 0xb3d0,\\n  'skein1024-904': 0xb3d1,\\n  'skein1024-912': 0xb3d2,\\n  'skein1024-920': 0xb3d3,\\n  'skein1024-928': 0xb3d4,\\n  'skein1024-936': 0xb3d5,\\n  'skein1024-944': 0xb3d6,\\n  'skein1024-952': 0xb3d7,\\n  'skein1024-960': 0xb3d8,\\n  'skein1024-968': 0xb3d9,\\n  'skein1024-976': 0xb3da,\\n  'skein1024-984': 0xb3db,\\n  'skein1024-992': 0xb3dc,\\n  'skein1024-1000': 0xb3dd,\\n  'skein1024-1008': 0xb3de,\\n  'skein1024-1016': 0xb3df,\\n  'skein1024-1024': 0xb3e0,\\n  'poseidon-bls12_381-a2-fc1': 0xb401,\\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402\\n})\\n\\nmodule.exports = { names }\\n\\n},{}],50:[function(require,module,exports){\\n/**\\n * Multihash implementation in JavaScript.\\n */\\n'use strict'\\n\\nconst multibase = require('multibase')\\nconst varint = require('varint')\\nconst { names } = require('./constants')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\nconst uint8ArrayConcat = require('uint8arrays/concat')\\n\\nconst codes = /** @type {import('./types').CodeNameMap} */({})\\n\\n// eslint-disable-next-line guard-for-in\\nfor (const key in names) {\\n  const name = /** @type {HashName} */(key)\\n  codes[names[name]] = name\\n}\\nObject.freeze(codes)\\n\\n/**\\n * Convert the given multihash to a hex encoded string.\\n *\\n * @param {Uint8Array} hash\\n * @returns {string}\\n */\\nfunction toHexString (hash) {\\n  if (!(hash instanceof Uint8Array)) {\\n    throw new Error('must be passed a Uint8Array')\\n  }\\n\\n  return uint8ArrayToString(hash, 'base16')\\n}\\n\\n/**\\n * Convert the given hex encoded string to a multihash.\\n *\\n * @param {string} hash\\n * @returns {Uint8Array}\\n */\\nfunction fromHexString (hash) {\\n  return uint8ArrayFromString(hash, 'base16')\\n}\\n\\n/**\\n * Convert the given multihash to a base58 encoded string.\\n *\\n * @param {Uint8Array} hash\\n * @returns {string}\\n */\\nfunction toB58String (hash) {\\n  if (!(hash instanceof Uint8Array)) {\\n    throw new Error('must be passed a Uint8Array')\\n  }\\n\\n  return uint8ArrayToString(multibase.encode('base58btc', hash)).slice(1)\\n}\\n\\n/**\\n * Convert the given base58 encoded string to a multihash.\\n *\\n * @param {string|Uint8Array} hash\\n * @returns {Uint8Array}\\n */\\nfunction fromB58String (hash) {\\n  const encoded = hash instanceof Uint8Array\\n    ? uint8ArrayToString(hash)\\n    : hash\\n\\n  return multibase.decode('z' + encoded)\\n}\\n\\n/**\\n * Decode a hash from the given multihash.\\n *\\n * @param {Uint8Array} bytes\\n * @returns {{code: HashCode, name: HashName, length: number, digest: Uint8Array}} result\\n */\\nfunction decode (bytes) {\\n  if (!(bytes instanceof Uint8Array)) {\\n    throw new Error('multihash must be a Uint8Array')\\n  }\\n\\n  if (bytes.length < 2) {\\n    throw new Error('multihash too short. must be > 2 bytes.')\\n  }\\n\\n  const code = /** @type {HashCode} */(varint.decode(bytes))\\n  if (!isValidCode(code)) {\\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\\n  }\\n  bytes = bytes.slice(varint.decode.bytes)\\n\\n  const len = varint.decode(bytes)\\n  if (len < 0) {\\n    throw new Error(`multihash invalid length: ${len}`)\\n  }\\n  bytes = bytes.slice(varint.decode.bytes)\\n\\n  if (bytes.length !== len) {\\n    throw new Error(`multihash length inconsistent: 0x${uint8ArrayToString(bytes, 'base16')}`)\\n  }\\n\\n  return {\\n    code,\\n    name: codes[code],\\n    length: len,\\n    digest: bytes\\n  }\\n}\\n\\n/**\\n * Encode a hash digest along with the specified function code.\\n *\\n * > **Note:** the length is derived from the length of the digest itself.\\n *\\n * @param {Uint8Array} digest\\n * @param {HashName | HashCode} code\\n * @param {number} [length]\\n * @returns {Uint8Array}\\n */\\nfunction encode (digest, code, length) {\\n  if (!digest || code === undefined) {\\n    throw new Error('multihash encode requires at least two args: digest, code')\\n  }\\n\\n  // ensure it's a hashfunction code.\\n  const hashfn = coerceCode(code)\\n\\n  if (!(digest instanceof Uint8Array)) {\\n    throw new Error('digest should be a Uint8Array')\\n  }\\n\\n  if (length == null) {\\n    length = digest.length\\n  }\\n\\n  if (length && digest.length !== length) {\\n    throw new Error('digest length should be equal to specified length.')\\n  }\\n\\n  const hash = varint.encode(hashfn)\\n  const len = varint.encode(length)\\n  return uint8ArrayConcat([hash, len, digest], hash.length + len.length + digest.length)\\n}\\n\\n/**\\n * Converts a hash function name into the matching code.\\n * If passed a number it will return the number if it's a valid code.\\n *\\n * @param {HashName | number} name\\n * @returns {number}\\n */\\nfunction coerceCode (name) {\\n  let code = name\\n\\n  if (typeof name === 'string') {\\n    if (names[name] === undefined) {\\n      throw new Error(`Unrecognized hash function named: ${name}`)\\n    }\\n    code = names[name]\\n  }\\n\\n  if (typeof code !== 'number') {\\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\\n  }\\n\\n  // @ts-ignore\\n  if (codes[code] === undefined && !isAppCode(code)) {\\n    throw new Error(`Unrecognized function code: ${code}`)\\n  }\\n\\n  return code\\n}\\n\\n/**\\n * Checks if a code is part of the app range\\n *\\n * @param {number} code\\n * @returns {boolean}\\n */\\nfunction isAppCode (code) {\\n  return code > 0 && code < 0x10\\n}\\n\\n/**\\n * Checks whether a multihash code is valid.\\n *\\n * @param {HashCode} code\\n * @returns {boolean}\\n */\\nfunction isValidCode (code) {\\n  if (isAppCode(code)) {\\n    return true\\n  }\\n\\n  if (codes[code]) {\\n    return true\\n  }\\n\\n  return false\\n}\\n\\n/**\\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\\n *\\n * @param {Uint8Array} multihash\\n * @returns {void}\\n * @throws {Error}\\n */\\nfunction validate (multihash) {\\n  decode(multihash) // throws if bad.\\n}\\n\\n/**\\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\\n *\\n * @param {Uint8Array} multihash\\n * @returns {Uint8Array}\\n * @throws {Error}\\n */\\nfunction prefix (multihash) {\\n  validate(multihash)\\n\\n  return multihash.subarray(0, 2)\\n}\\n\\nmodule.exports = {\\n  names,\\n  codes,\\n  toHexString,\\n  fromHexString,\\n  toB58String,\\n  fromB58String,\\n  decode,\\n  encode,\\n  coerceCode,\\n  isAppCode,\\n  validate,\\n  prefix,\\n  isValidCode\\n}\\n\\n/**\\n * @typedef { import(\\\"./constants\\\").HashCode } HashCode\\n * @typedef { import(\\\"./constants\\\").HashName } HashName\\n */\\n\\n},{\\\"./constants\\\":49,\\\"multibase\\\":42,\\\"uint8arrays/concat\\\":579,\\\"uint8arrays/from-string\\\":581,\\\"uint8arrays/to-string\\\":589,\\\"varint\\\":593}],51:[function(require,module,exports){\\n\\\"use strict\\\"\\n\\nexports.TextEncoder = TextEncoder\\nexports.TextDecoder = TextDecoder\\n\\n},{}],52:[function(require,module,exports){\\n'use strict'\\n\\nconst mh = require('multihashes')\\n\\nconst CIDUtil = {\\n  /**\\n   * Test if the given input is a valid CID object.\\n   * Returns an error message if it is not.\\n   * Returns undefined if it is a valid CID.\\n   *\\n   * @param {any} other\\n   * @returns {string|undefined}\\n   */\\n  checkCIDComponents: function (other) {\\n    if (other == null) {\\n      return 'null values are not valid CIDs'\\n    }\\n\\n    if (!(other.version === 0 || other.version === 1)) {\\n      return 'Invalid version, must be a number equal to 1 or 0'\\n    }\\n\\n    if (typeof other.codec !== 'string') {\\n      return 'codec must be string'\\n    }\\n\\n    if (other.version === 0) {\\n      if (other.codec !== 'dag-pb') {\\n        return \\\"codec must be 'dag-pb' for CIDv0\\\"\\n      }\\n      if (other.multibaseName !== 'base58btc') {\\n        return \\\"multibaseName must be 'base58btc' for CIDv0\\\"\\n      }\\n    }\\n\\n    if (!(other.multihash instanceof Uint8Array)) {\\n      return 'multihash must be a Uint8Array'\\n    }\\n\\n    try {\\n      mh.validate(other.multihash)\\n    } catch (err) {\\n      let errorMsg = err.message\\n      if (!errorMsg) { // Just in case mh.validate() throws an error with empty error message\\n        errorMsg = 'Multihash validation failed'\\n      }\\n      return errorMsg\\n    }\\n  }\\n}\\n\\nmodule.exports = CIDUtil\\n\\n},{\\\"multihashes\\\":50}],53:[function(require,module,exports){\\n'use strict'\\n\\nconst mh = require('multihashes')\\nconst multibase = require('multibase')\\nconst multicodec = require('multicodec')\\nconst CIDUtil = require('./cid-util')\\nconst uint8ArrayConcat = require('uint8arrays/concat')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\nconst uint8ArrayEquals = require('uint8arrays/equals')\\n\\nconst codecs = multicodec.nameToCode\\nconst codecInts = /** @type {CodecName[]} */(Object.keys(codecs)).reduce((p, name) => {\\n  p[codecs[name]] = name\\n  return p\\n}, /** @type {Record<CodecCode, CodecName>} */({}))\\n\\nconst symbol = Symbol.for('@ipld/js-cid/CID')\\n\\n/**\\n * @typedef {Object} SerializedCID\\n * @property {string} codec\\n * @property {number} version\\n * @property {Uint8Array} hash\\n */\\n/**\\n * @typedef {0|1} CIDVersion\\n * @typedef {import('multibase').BaseNameOrCode} BaseNameOrCode\\n * @typedef {import('multicodec').CodecName} CodecName\\n * @typedef {import('multicodec').CodecCode} CodecCode\\n */\\n\\n/**\\n * Class representing a CID `<mbase><version><mcodec><mhash>`\\n * , as defined in [ipld/cid](https://github.com/multiformats/cid).\\n *\\n * @class CID\\n */\\nclass CID {\\n  /**\\n   * Create a new CID.\\n   *\\n   * The algorithm for argument input is roughly:\\n   * ```\\n   * if (cid)\\n   *   -> create a copy\\n   * else if (str)\\n   *   if (1st char is on multibase table) -> CID String\\n   *   else -> bs58 encoded multihash\\n   * else if (Uint8Array)\\n   *   if (1st byte is 0 or 1) -> CID\\n   *   else -> multihash\\n   * else if (Number)\\n   *   -> construct CID by parts\\n   * ```\\n   *\\n   * @param {CIDVersion | string | Uint8Array | CID} version\\n   * @param {string|number} [codec]\\n   * @param {Uint8Array} [multihash]\\n   * @param {string} [multibaseName]\\n   *\\n   * @example\\n   * new CID(<version>, <codec>, <multihash>, <multibaseName>)\\n   * new CID(<cidStr>)\\n   * new CID(<cid.bytes>)\\n   * new CID(<multihash>)\\n   * new CID(<bs58 encoded multihash>)\\n   * new CID(<cid>)\\n   */\\n  constructor (version, codec, multihash, multibaseName) {\\n    // We have below three blank field accessors only because\\n    // otherwise TS will not pick them up if done after assignemnts\\n\\n    /**\\n     * The version of the CID.\\n     *\\n     * @type {CIDVersion}\\n     */\\n    // eslint-disable-next-line no-unused-expressions\\n    this.version\\n\\n    /**\\n     * The codec of the CID.\\n     *\\n     * @deprecated\\n     * @type {CodecName}\\n     */\\n    // eslint-disable-next-line no-unused-expressions\\n    this.codec\\n\\n    /**\\n     * The multihash of the CID.\\n     *\\n     * @type {Uint8Array}\\n     */\\n    // eslint-disable-next-line no-unused-expressions\\n    this.multihash\\n\\n    Object.defineProperty(this, symbol, { value: true })\\n    if (CID.isCID(version)) {\\n      // version is an exising CID instance\\n      const cid = /** @type {CID} */(version)\\n      this.version = cid.version\\n      this.codec = cid.codec\\n      this.multihash = cid.multihash\\n      // Default guard for when a CID < 0.7 is passed with no multibaseName\\n      // @ts-ignore\\n      this.multibaseName = cid.multibaseName || (cid.version === 0 ? 'base58btc' : 'base32')\\n      return\\n    }\\n\\n    if (typeof version === 'string') {\\n      // e.g. 'base32' or false\\n      const baseName = multibase.isEncoded(version)\\n      if (baseName) {\\n        // version is a CID String encoded with multibase, so v1\\n        const cid = multibase.decode(version)\\n        this.version = /** @type {CIDVersion} */(parseInt(cid[0].toString(), 16))\\n        this.codec = multicodec.getCodec(cid.slice(1))\\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\\n        this.multibaseName = baseName\\n      } else {\\n        // version is a base58btc string multihash, so v0\\n        this.version = 0\\n        this.codec = 'dag-pb'\\n        this.multihash = mh.fromB58String(version)\\n        this.multibaseName = 'base58btc'\\n      }\\n      CID.validateCID(this)\\n      Object.defineProperty(this, 'string', { value: version })\\n      return\\n    }\\n\\n    if (version instanceof Uint8Array) {\\n      const v = parseInt(version[0].toString(), 16)\\n      if (v === 1) {\\n        // version is a CID Uint8Array\\n        const cid = version\\n        this.version = v\\n        this.codec = multicodec.getCodec(cid.slice(1))\\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\\n        this.multibaseName = 'base32'\\n      } else {\\n        // version is a raw multihash Uint8Array, so v0\\n        this.version = 0\\n        this.codec = 'dag-pb'\\n        this.multihash = version\\n        this.multibaseName = 'base58btc'\\n      }\\n      CID.validateCID(this)\\n      return\\n    }\\n\\n    // otherwise, assemble the CID from the parameters\\n\\n    this.version = version\\n\\n    if (typeof codec === 'number') {\\n      // @ts-ignore\\n      codec = codecInts[codec]\\n    }\\n\\n    this.codec = /** @type {CodecName} */ (codec)\\n\\n    this.multihash = /** @type {Uint8Array} */ (multihash)\\n\\n    /**\\n     * Multibase name as string.\\n     *\\n     * @deprecated\\n     * @type {string}\\n     */\\n    this.multibaseName = multibaseName || (version === 0 ? 'base58btc' : 'base32')\\n\\n    CID.validateCID(this)\\n  }\\n\\n  /**\\n   * The CID as a `Uint8Array`\\n   *\\n   * @returns {Uint8Array}\\n   *\\n   */\\n  get bytes () {\\n    // @ts-ignore\\n    let bytes = this._bytes\\n\\n    if (!bytes) {\\n      if (this.version === 0) {\\n        bytes = this.multihash\\n      } else if (this.version === 1) {\\n        const codec = multicodec.getCodeVarint(this.codec)\\n        bytes = uint8ArrayConcat([\\n          [1], codec, this.multihash\\n        ], 1 + codec.byteLength + this.multihash.byteLength)\\n      } else {\\n        throw new Error('unsupported version')\\n      }\\n\\n      // Cache this Uint8Array so it doesn't have to be recreated\\n      Object.defineProperty(this, '_bytes', { value: bytes })\\n    }\\n\\n    return bytes\\n  }\\n\\n  /**\\n   * The prefix of the CID.\\n   *\\n   * @returns {Uint8Array}\\n   */\\n  get prefix () {\\n    const codec = multicodec.getCodeVarint(this.codec)\\n    const multihash = mh.prefix(this.multihash)\\n    const prefix = uint8ArrayConcat([\\n      [this.version], codec, multihash\\n    ], 1 + codec.byteLength + multihash.byteLength)\\n\\n    return prefix\\n  }\\n\\n  /**\\n   * The codec of the CID in its number form.\\n   *\\n   * @returns {CodecCode}\\n   */\\n  get code () {\\n    return codecs[this.codec]\\n  }\\n\\n  /**\\n   * Convert to a CID of version `0`.\\n   *\\n   * @returns {CID}\\n   */\\n  toV0 () {\\n    if (this.codec !== 'dag-pb') {\\n      throw new Error('Cannot convert a non dag-pb CID to CIDv0')\\n    }\\n\\n    const { name, length } = mh.decode(this.multihash)\\n\\n    if (name !== 'sha2-256') {\\n      throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\\n    }\\n\\n    if (length !== 32) {\\n      throw new Error('Cannot convert non 32 byte multihash CID to CIDv0')\\n    }\\n\\n    return new CID(0, this.codec, this.multihash)\\n  }\\n\\n  /**\\n   * Convert to a CID of version `1`.\\n   *\\n   * @returns {CID}\\n   */\\n  toV1 () {\\n    return new CID(1, this.codec, this.multihash)\\n  }\\n\\n  /**\\n   * Encode the CID into a string.\\n   *\\n   * @param {BaseNameOrCode} [base=this.multibaseName] - Base encoding to use.\\n   * @returns {string}\\n   */\\n  toBaseEncodedString (base = this.multibaseName) {\\n    // @ts-ignore non enumerable cache property\\n    if (this.string && this.string.length !== 0 && base === this.multibaseName) {\\n      // @ts-ignore non enumerable cache property\\n      return this.string\\n    }\\n    let str\\n    if (this.version === 0) {\\n      if (base !== 'base58btc') {\\n        throw new Error('not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()')\\n      }\\n      str = mh.toB58String(this.multihash)\\n    } else if (this.version === 1) {\\n      str = uint8ArrayToString(multibase.encode(base, this.bytes))\\n    } else {\\n      throw new Error('unsupported version')\\n    }\\n    if (base === this.multibaseName) {\\n      // cache the string value\\n      Object.defineProperty(this, 'string', { value: str })\\n    }\\n    return str\\n  }\\n\\n  /**\\n   * CID(QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n)\\n   *\\n   * @returns {string}\\n   */\\n  [Symbol.for('nodejs.util.inspect.custom')] () {\\n    return 'CID(' + this.toString() + ')'\\n  }\\n\\n  /**\\n   * Encode the CID into a string.\\n   *\\n   * @param {BaseNameOrCode} [base=this.multibaseName] - Base encoding to use.\\n   * @returns {string}\\n   */\\n  toString (base) {\\n    return this.toBaseEncodedString(base)\\n  }\\n\\n  /**\\n   * Serialize to a plain object.\\n   *\\n   * @returns {SerializedCID}\\n   */\\n  toJSON () {\\n    return {\\n      codec: this.codec,\\n      version: this.version,\\n      hash: this.multihash\\n    }\\n  }\\n\\n  /**\\n   * Compare equality with another CID.\\n   *\\n   * @param {CID} other\\n   * @returns {boolean}\\n   */\\n  equals (other) {\\n    return this.codec === other.codec &&\\n      this.version === other.version &&\\n      uint8ArrayEquals(this.multihash, other.multihash)\\n  }\\n\\n  /**\\n   * Test if the given input is a valid CID object.\\n   * Throws if it is not.\\n   *\\n   * @param {any} other - The other CID.\\n   * @returns {void}\\n   */\\n  static validateCID (other) {\\n    const errorMsg = CIDUtil.checkCIDComponents(other)\\n    if (errorMsg) {\\n      throw new Error(errorMsg)\\n    }\\n  }\\n\\n  /**\\n   * Check if object is a CID instance\\n   *\\n   * @param {any} value\\n   * @returns {value is CID}\\n   */\\n  static isCID (value) {\\n    return value instanceof CID || Boolean(value && value[symbol])\\n  }\\n}\\n\\nCID.codecs = codecs\\n\\nmodule.exports = CID\\n\\n},{\\\"./cid-util\\\":52,\\\"multibase\\\":42,\\\"multicodec\\\":46,\\\"multihashes\\\":50,\\\"uint8arrays/concat\\\":579,\\\"uint8arrays/equals\\\":580,\\\"uint8arrays/to-string\\\":589}],54:[function(require,module,exports){\\n'use strict';\\n\\nfunction withIs(Class, { className, symbolName }) {\\n    const symbol = Symbol.for(symbolName);\\n\\n    const ClassIsWrapper = {\\n        // The code below assigns the class wrapper to an object to trick\\n        // JavaScript engines to show the name of the extended class when\\n        // logging an instances.\\n        // We are assigning an anonymous class (class wrapper) to the object\\n        // with key `className` to keep the correct name.\\n        // If this is not supported it falls back to logging `ClassIsWrapper`.\\n        [className]: class extends Class {\\n            constructor(...args) {\\n                super(...args);\\n                Object.defineProperty(this, symbol, { value: true });\\n            }\\n\\n            get [Symbol.toStringTag]() {\\n                return className;\\n            }\\n        },\\n    }[className];\\n\\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\\n\\n    return ClassIsWrapper;\\n}\\n\\nfunction withIsProto(Class, { className, symbolName, withoutNew }) {\\n    const symbol = Symbol.for(symbolName);\\n\\n    /* eslint-disable object-shorthand */\\n    const ClassIsWrapper = {\\n        [className]: function (...args) {\\n            if (withoutNew && !(this instanceof ClassIsWrapper)) {\\n                return new ClassIsWrapper(...args);\\n            }\\n\\n            const _this = Class.call(this, ...args) || this;\\n\\n            if (_this && !_this[symbol]) {\\n                Object.defineProperty(_this, symbol, { value: true });\\n            }\\n\\n            return _this;\\n        },\\n    }[className];\\n    /* eslint-enable object-shorthand */\\n\\n    ClassIsWrapper.prototype = Object.create(Class.prototype);\\n    ClassIsWrapper.prototype.constructor = ClassIsWrapper;\\n\\n    Object.defineProperty(ClassIsWrapper.prototype, Symbol.toStringTag, {\\n        get() {\\n            return className;\\n        },\\n    });\\n\\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\\n\\n    return ClassIsWrapper;\\n}\\n\\nmodule.exports = withIs;\\nmodule.exports.proto = withIsProto;\\n\\n},{}],55:[function(require,module,exports){\\nmodule.exports = function (it) {\\n  if (typeof it != 'function') {\\n    throw TypeError(String(it) + ' is not a function');\\n  } return it;\\n};\\n\\n},{}],56:[function(require,module,exports){\\nvar isObject = require('../internals/is-object');\\n\\nmodule.exports = function (it) {\\n  if (!isObject(it) && it !== null) {\\n    throw TypeError(\\\"Can't set \\\" + String(it) + ' as a prototype');\\n  } return it;\\n};\\n\\n},{\\\"../internals/is-object\\\":110}],57:[function(require,module,exports){\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\nvar create = require('../internals/object-create');\\nvar definePropertyModule = require('../internals/object-define-property');\\n\\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\\nvar ArrayPrototype = Array.prototype;\\n\\n// Array.prototype[@@unscopables]\\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\\n    configurable: true,\\n    value: create(null)\\n  });\\n}\\n\\n// add a key to Array.prototype[@@unscopables]\\nmodule.exports = function (key) {\\n  ArrayPrototype[UNSCOPABLES][key] = true;\\n};\\n\\n},{\\\"../internals/object-create\\\":120,\\\"../internals/object-define-property\\\":122,\\\"../internals/well-known-symbol\\\":165}],58:[function(require,module,exports){\\n'use strict';\\nvar charAt = require('../internals/string-multibyte').charAt;\\n\\n// `AdvanceStringIndex` abstract operation\\n// https://tc39.es/ecma262/#sec-advancestringindex\\nmodule.exports = function (S, index, unicode) {\\n  return index + (unicode ? charAt(S, index).length : 1);\\n};\\n\\n},{\\\"../internals/string-multibyte\\\":148}],59:[function(require,module,exports){\\nmodule.exports = function (it, Constructor, name) {\\n  if (!(it instanceof Constructor)) {\\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\\n  } return it;\\n};\\n\\n},{}],60:[function(require,module,exports){\\nvar isObject = require('../internals/is-object');\\n\\nmodule.exports = function (it) {\\n  if (!isObject(it)) {\\n    throw TypeError(String(it) + ' is not an object');\\n  } return it;\\n};\\n\\n},{\\\"../internals/is-object\\\":110}],61:[function(require,module,exports){\\nmodule.exports = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined';\\n\\n},{}],62:[function(require,module,exports){\\n'use strict';\\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-native');\\nvar DESCRIPTORS = require('../internals/descriptors');\\nvar global = require('../internals/global');\\nvar isObject = require('../internals/is-object');\\nvar has = require('../internals/has');\\nvar classof = require('../internals/classof');\\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\\nvar redefine = require('../internals/redefine');\\nvar defineProperty = require('../internals/object-define-property').f;\\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\nvar uid = require('../internals/uid');\\n\\nvar Int8Array = global.Int8Array;\\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\\nvar Uint8ClampedArray = global.Uint8ClampedArray;\\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\\nvar ObjectPrototype = Object.prototype;\\nvar isPrototypeOf = ObjectPrototype.isPrototypeOf;\\n\\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';\\nvar TYPED_ARRAY_TAG_REQIRED = false;\\nvar NAME;\\n\\nvar TypedArrayConstructorsList = {\\n  Int8Array: 1,\\n  Uint8Array: 1,\\n  Uint8ClampedArray: 1,\\n  Int16Array: 2,\\n  Uint16Array: 2,\\n  Int32Array: 4,\\n  Uint32Array: 4,\\n  Float32Array: 4,\\n  Float64Array: 8\\n};\\n\\nvar BigIntArrayConstructorsList = {\\n  BigInt64Array: 8,\\n  BigUint64Array: 8\\n};\\n\\nvar isView = function isView(it) {\\n  if (!isObject(it)) return false;\\n  var klass = classof(it);\\n  return klass === 'DataView'\\n    || has(TypedArrayConstructorsList, klass)\\n    || has(BigIntArrayConstructorsList, klass);\\n};\\n\\nvar isTypedArray = function (it) {\\n  if (!isObject(it)) return false;\\n  var klass = classof(it);\\n  return has(TypedArrayConstructorsList, klass)\\n    || has(BigIntArrayConstructorsList, klass);\\n};\\n\\nvar aTypedArray = function (it) {\\n  if (isTypedArray(it)) return it;\\n  throw TypeError('Target is not a typed array');\\n};\\n\\nvar aTypedArrayConstructor = function (C) {\\n  if (setPrototypeOf) {\\n    if (isPrototypeOf.call(TypedArray, C)) return C;\\n  } else for (var ARRAY in TypedArrayConstructorsList) if (has(TypedArrayConstructorsList, NAME)) {\\n    var TypedArrayConstructor = global[ARRAY];\\n    if (TypedArrayConstructor && (C === TypedArrayConstructor || isPrototypeOf.call(TypedArrayConstructor, C))) {\\n      return C;\\n    }\\n  } throw TypeError('Target is not a typed array constructor');\\n};\\n\\nvar exportTypedArrayMethod = function (KEY, property, forced) {\\n  if (!DESCRIPTORS) return;\\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\\n    var TypedArrayConstructor = global[ARRAY];\\n    if (TypedArrayConstructor && has(TypedArrayConstructor.prototype, KEY)) {\\n      delete TypedArrayConstructor.prototype[KEY];\\n    }\\n  }\\n  if (!TypedArrayPrototype[KEY] || forced) {\\n    redefine(TypedArrayPrototype, KEY, forced ? property\\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property);\\n  }\\n};\\n\\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\\n  var ARRAY, TypedArrayConstructor;\\n  if (!DESCRIPTORS) return;\\n  if (setPrototypeOf) {\\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\\n      TypedArrayConstructor = global[ARRAY];\\n      if (TypedArrayConstructor && has(TypedArrayConstructor, KEY)) {\\n        delete TypedArrayConstructor[KEY];\\n      }\\n    }\\n    if (!TypedArray[KEY] || forced) {\\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\\n      try {\\n        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8Array[KEY] || property);\\n      } catch (error) { /* empty */ }\\n    } else return;\\n  }\\n  for (ARRAY in TypedArrayConstructorsList) {\\n    TypedArrayConstructor = global[ARRAY];\\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\\n      redefine(TypedArrayConstructor, KEY, property);\\n    }\\n  }\\n};\\n\\nfor (NAME in TypedArrayConstructorsList) {\\n  if (!global[NAME]) NATIVE_ARRAY_BUFFER_VIEWS = false;\\n}\\n\\n// WebKit bug - typed arrays constructors prototype is Object.prototype\\nif (!NATIVE_ARRAY_BUFFER_VIEWS || typeof TypedArray != 'function' || TypedArray === Function.prototype) {\\n  // eslint-disable-next-line no-shadow -- safe\\n  TypedArray = function TypedArray() {\\n    throw TypeError('Incorrect invocation');\\n  };\\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\\n    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);\\n  }\\n}\\n\\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\\n  TypedArrayPrototype = TypedArray.prototype;\\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\\n    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);\\n  }\\n}\\n\\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\\n}\\n\\nif (DESCRIPTORS && !has(TypedArrayPrototype, TO_STRING_TAG)) {\\n  TYPED_ARRAY_TAG_REQIRED = true;\\n  defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {\\n    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\\n  } });\\n  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {\\n    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);\\n  }\\n}\\n\\nmodule.exports = {\\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,\\n  aTypedArray: aTypedArray,\\n  aTypedArrayConstructor: aTypedArrayConstructor,\\n  exportTypedArrayMethod: exportTypedArrayMethod,\\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\\n  isView: isView,\\n  isTypedArray: isTypedArray,\\n  TypedArray: TypedArray,\\n  TypedArrayPrototype: TypedArrayPrototype\\n};\\n\\n},{\\\"../internals/array-buffer-native\\\":61,\\\"../internals/classof\\\":72,\\\"../internals/create-non-enumerable-property\\\":77,\\\"../internals/descriptors\\\":81,\\\"../internals/global\\\":97,\\\"../internals/has\\\":98,\\\"../internals/is-object\\\":110,\\\"../internals/object-define-property\\\":122,\\\"../internals/object-get-prototype-of\\\":126,\\\"../internals/object-set-prototype-of\\\":130,\\\"../internals/redefine\\\":134,\\\"../internals/uid\\\":163,\\\"../internals/well-known-symbol\\\":165}],63:[function(require,module,exports){\\n'use strict';\\nvar global = require('../internals/global');\\nvar DESCRIPTORS = require('../internals/descriptors');\\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-native');\\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\\nvar redefineAll = require('../internals/redefine-all');\\nvar fails = require('../internals/fails');\\nvar anInstance = require('../internals/an-instance');\\nvar toInteger = require('../internals/to-integer');\\nvar toLength = require('../internals/to-length');\\nvar toIndex = require('../internals/to-index');\\nvar IEEE754 = require('../internals/ieee754');\\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\\nvar defineProperty = require('../internals/object-define-property').f;\\nvar arrayFill = require('../internals/array-fill');\\nvar setToStringTag = require('../internals/set-to-string-tag');\\nvar InternalStateModule = require('../internals/internal-state');\\n\\nvar getInternalState = InternalStateModule.get;\\nvar setInternalState = InternalStateModule.set;\\nvar ARRAY_BUFFER = 'ArrayBuffer';\\nvar DATA_VIEW = 'DataView';\\nvar PROTOTYPE = 'prototype';\\nvar WRONG_LENGTH = 'Wrong length';\\nvar WRONG_INDEX = 'Wrong index';\\nvar NativeArrayBuffer = global[ARRAY_BUFFER];\\nvar $ArrayBuffer = NativeArrayBuffer;\\nvar $DataView = global[DATA_VIEW];\\nvar $DataViewPrototype = $DataView && $DataView[PROTOTYPE];\\nvar ObjectPrototype = Object.prototype;\\nvar RangeError = global.RangeError;\\n\\nvar packIEEE754 = IEEE754.pack;\\nvar unpackIEEE754 = IEEE754.unpack;\\n\\nvar packInt8 = function (number) {\\n  return [number & 0xFF];\\n};\\n\\nvar packInt16 = function (number) {\\n  return [number & 0xFF, number >> 8 & 0xFF];\\n};\\n\\nvar packInt32 = function (number) {\\n  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];\\n};\\n\\nvar unpackInt32 = function (buffer) {\\n  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];\\n};\\n\\nvar packFloat32 = function (number) {\\n  return packIEEE754(number, 23, 4);\\n};\\n\\nvar packFloat64 = function (number) {\\n  return packIEEE754(number, 52, 8);\\n};\\n\\nvar addGetter = function (Constructor, key) {\\n  defineProperty(Constructor[PROTOTYPE], key, { get: function () { return getInternalState(this)[key]; } });\\n};\\n\\nvar get = function (view, count, index, isLittleEndian) {\\n  var intIndex = toIndex(index);\\n  var store = getInternalState(view);\\n  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);\\n  var bytes = getInternalState(store.buffer).bytes;\\n  var start = intIndex + store.byteOffset;\\n  var pack = bytes.slice(start, start + count);\\n  return isLittleEndian ? pack : pack.reverse();\\n};\\n\\nvar set = function (view, count, index, conversion, value, isLittleEndian) {\\n  var intIndex = toIndex(index);\\n  var store = getInternalState(view);\\n  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);\\n  var bytes = getInternalState(store.buffer).bytes;\\n  var start = intIndex + store.byteOffset;\\n  var pack = conversion(+value);\\n  for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];\\n};\\n\\nif (!NATIVE_ARRAY_BUFFER) {\\n  $ArrayBuffer = function ArrayBuffer(length) {\\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\\n    var byteLength = toIndex(length);\\n    setInternalState(this, {\\n      bytes: arrayFill.call(new Array(byteLength), 0),\\n      byteLength: byteLength\\n    });\\n    if (!DESCRIPTORS) this.byteLength = byteLength;\\n  };\\n\\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\\n    anInstance(this, $DataView, DATA_VIEW);\\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\\n    var bufferLength = getInternalState(buffer).byteLength;\\n    var offset = toInteger(byteOffset);\\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset');\\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\\n    setInternalState(this, {\\n      buffer: buffer,\\n      byteLength: byteLength,\\n      byteOffset: offset\\n    });\\n    if (!DESCRIPTORS) {\\n      this.buffer = buffer;\\n      this.byteLength = byteLength;\\n      this.byteOffset = offset;\\n    }\\n  };\\n\\n  if (DESCRIPTORS) {\\n    addGetter($ArrayBuffer, 'byteLength');\\n    addGetter($DataView, 'buffer');\\n    addGetter($DataView, 'byteLength');\\n    addGetter($DataView, 'byteOffset');\\n  }\\n\\n  redefineAll($DataView[PROTOTYPE], {\\n    getInt8: function getInt8(byteOffset) {\\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\\n    },\\n    getUint8: function getUint8(byteOffset) {\\n      return get(this, 1, byteOffset)[0];\\n    },\\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\\n      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);\\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\\n    },\\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\\n      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);\\n      return bytes[1] << 8 | bytes[0];\\n    },\\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\\n      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));\\n    },\\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\\n      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;\\n    },\\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\\n      return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);\\n    },\\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\\n      return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);\\n    },\\n    setInt8: function setInt8(byteOffset, value) {\\n      set(this, 1, byteOffset, packInt8, value);\\n    },\\n    setUint8: function setUint8(byteOffset, value) {\\n      set(this, 1, byteOffset, packInt8, value);\\n    },\\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\\n      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);\\n    },\\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\\n      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);\\n    },\\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\\n      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);\\n    },\\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\\n      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);\\n    },\\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\\n      set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);\\n    },\\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\\n      set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);\\n    }\\n  });\\n} else {\\n  /* eslint-disable no-new -- required for testing */\\n  if (!fails(function () {\\n    NativeArrayBuffer(1);\\n  }) || !fails(function () {\\n    new NativeArrayBuffer(-1);\\n  }) || fails(function () {\\n    new NativeArrayBuffer();\\n    new NativeArrayBuffer(1.5);\\n    new NativeArrayBuffer(NaN);\\n    return NativeArrayBuffer.name != ARRAY_BUFFER;\\n  })) {\\n  /* eslint-enable no-new -- required for testing */\\n    $ArrayBuffer = function ArrayBuffer(length) {\\n      anInstance(this, $ArrayBuffer);\\n      return new NativeArrayBuffer(toIndex(length));\\n    };\\n    var ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE] = NativeArrayBuffer[PROTOTYPE];\\n    for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {\\n      if (!((key = keys[j++]) in $ArrayBuffer)) {\\n        createNonEnumerableProperty($ArrayBuffer, key, NativeArrayBuffer[key]);\\n      }\\n    }\\n    ArrayBufferPrototype.constructor = $ArrayBuffer;\\n  }\\n\\n  // WebKit bug - the same parent prototype for typed arrays and data view\\n  if (setPrototypeOf && getPrototypeOf($DataViewPrototype) !== ObjectPrototype) {\\n    setPrototypeOf($DataViewPrototype, ObjectPrototype);\\n  }\\n\\n  // iOS Safari 7.x bug\\n  var testView = new $DataView(new $ArrayBuffer(2));\\n  var nativeSetInt8 = $DataViewPrototype.setInt8;\\n  testView.setInt8(0, 2147483648);\\n  testView.setInt8(1, 2147483649);\\n  if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll($DataViewPrototype, {\\n    setInt8: function setInt8(byteOffset, value) {\\n      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);\\n    },\\n    setUint8: function setUint8(byteOffset, value) {\\n      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);\\n    }\\n  }, { unsafe: true });\\n}\\n\\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\\nsetToStringTag($DataView, DATA_VIEW);\\n\\nmodule.exports = {\\n  ArrayBuffer: $ArrayBuffer,\\n  DataView: $DataView\\n};\\n\\n},{\\\"../internals/an-instance\\\":59,\\\"../internals/array-buffer-native\\\":61,\\\"../internals/array-fill\\\":64,\\\"../internals/create-non-enumerable-property\\\":77,\\\"../internals/descriptors\\\":81,\\\"../internals/fails\\\":89,\\\"../internals/global\\\":97,\\\"../internals/ieee754\\\":102,\\\"../internals/internal-state\\\":106,\\\"../internals/object-define-property\\\":122,\\\"../internals/object-get-own-property-names\\\":124,\\\"../internals/object-get-prototype-of\\\":126,\\\"../internals/object-set-prototype-of\\\":130,\\\"../internals/redefine-all\\\":133,\\\"../internals/set-to-string-tag\\\":143,\\\"../internals/to-index\\\":151,\\\"../internals/to-integer\\\":153,\\\"../internals/to-length\\\":154}],64:[function(require,module,exports){\\n'use strict';\\nvar toObject = require('../internals/to-object');\\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\\nvar toLength = require('../internals/to-length');\\n\\n// `Array.prototype.fill` method implementation\\n// https://tc39.es/ecma262/#sec-array.prototype.fill\\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\\n  var O = toObject(this);\\n  var length = toLength(O.length);\\n  var argumentsLength = arguments.length;\\n  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);\\n  var end = argumentsLength > 2 ? arguments[2] : undefined;\\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\\n  while (endPos > index) O[index++] = value;\\n  return O;\\n};\\n\\n},{\\\"../internals/to-absolute-index\\\":150,\\\"../internals/to-length\\\":154,\\\"../internals/to-object\\\":155}],65:[function(require,module,exports){\\n'use strict';\\nvar bind = require('../internals/function-bind-context');\\nvar toObject = require('../internals/to-object');\\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\\nvar toLength = require('../internals/to-length');\\nvar createProperty = require('../internals/create-property');\\nvar getIteratorMethod = require('../internals/get-iterator-method');\\n\\n// `Array.from` method implementation\\n// https://tc39.es/ecma262/#sec-array.from\\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\\n  var O = toObject(arrayLike);\\n  var C = typeof this == 'function' ? this : Array;\\n  var argumentsLength = arguments.length;\\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\\n  var mapping = mapfn !== undefined;\\n  var iteratorMethod = getIteratorMethod(O);\\n  var index = 0;\\n  var length, result, step, iterator, next, value;\\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\\n    iterator = iteratorMethod.call(O);\\n    next = iterator.next;\\n    result = new C();\\n    for (;!(step = next.call(iterator)).done; index++) {\\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\\n      createProperty(result, index, value);\\n    }\\n  } else {\\n    length = toLength(O.length);\\n    result = new C(length);\\n    for (;length > index; index++) {\\n      value = mapping ? mapfn(O[index], index) : O[index];\\n      createProperty(result, index, value);\\n    }\\n  }\\n  result.length = index;\\n  return result;\\n};\\n\\n},{\\\"../internals/call-with-safe-iteration-closing\\\":69,\\\"../internals/create-property\\\":79,\\\"../internals/function-bind-context\\\":91,\\\"../internals/get-iterator-method\\\":93,\\\"../internals/is-array-iterator-method\\\":107,\\\"../internals/to-length\\\":154,\\\"../internals/to-object\\\":155}],66:[function(require,module,exports){\\nvar toIndexedObject = require('../internals/to-indexed-object');\\nvar toLength = require('../internals/to-length');\\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\\n\\n// `Array.prototype.{ indexOf, includes }` methods implementation\\nvar createMethod = function (IS_INCLUDES) {\\n  return function ($this, el, fromIndex) {\\n    var O = toIndexedObject($this);\\n    var length = toLength(O.length);\\n    var index = toAbsoluteIndex(fromIndex, length);\\n    var value;\\n    // Array#includes uses SameValueZero equality algorithm\\n    // eslint-disable-next-line no-self-compare -- NaN check\\n    if (IS_INCLUDES && el != el) while (length > index) {\\n      value = O[index++];\\n      // eslint-disable-next-line no-self-compare -- NaN check\\n      if (value != value) return true;\\n    // Array#indexOf ignores holes, Array#includes - not\\n    } else for (;length > index; index++) {\\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\\n    } return !IS_INCLUDES && -1;\\n  };\\n};\\n\\nmodule.exports = {\\n  // `Array.prototype.includes` method\\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\\n  includes: createMethod(true),\\n  // `Array.prototype.indexOf` method\\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\\n  indexOf: createMethod(false)\\n};\\n\\n},{\\\"../internals/to-absolute-index\\\":150,\\\"../internals/to-indexed-object\\\":152,\\\"../internals/to-length\\\":154}],67:[function(require,module,exports){\\nvar bind = require('../internals/function-bind-context');\\nvar IndexedObject = require('../internals/indexed-object');\\nvar toObject = require('../internals/to-object');\\nvar toLength = require('../internals/to-length');\\nvar arraySpeciesCreate = require('../internals/array-species-create');\\n\\nvar push = [].push;\\n\\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation\\nvar createMethod = function (TYPE) {\\n  var IS_MAP = TYPE == 1;\\n  var IS_FILTER = TYPE == 2;\\n  var IS_SOME = TYPE == 3;\\n  var IS_EVERY = TYPE == 4;\\n  var IS_FIND_INDEX = TYPE == 6;\\n  var IS_FILTER_OUT = TYPE == 7;\\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\\n  return function ($this, callbackfn, that, specificCreate) {\\n    var O = toObject($this);\\n    var self = IndexedObject(O);\\n    var boundFunction = bind(callbackfn, that, 3);\\n    var length = toLength(self.length);\\n    var index = 0;\\n    var create = specificCreate || arraySpeciesCreate;\\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;\\n    var value, result;\\n    for (;length > index; index++) if (NO_HOLES || index in self) {\\n      value = self[index];\\n      result = boundFunction(value, index, O);\\n      if (TYPE) {\\n        if (IS_MAP) target[index] = result; // map\\n        else if (result) switch (TYPE) {\\n          case 3: return true;              // some\\n          case 5: return value;             // find\\n          case 6: return index;             // findIndex\\n          case 2: push.call(target, value); // filter\\n        } else switch (TYPE) {\\n          case 4: return false;             // every\\n          case 7: push.call(target, value); // filterOut\\n        }\\n      }\\n    }\\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\\n  };\\n};\\n\\nmodule.exports = {\\n  // `Array.prototype.forEach` method\\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\\n  forEach: createMethod(0),\\n  // `Array.prototype.map` method\\n  // https://tc39.es/ecma262/#sec-array.prototype.map\\n  map: createMethod(1),\\n  // `Array.prototype.filter` method\\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\\n  filter: createMethod(2),\\n  // `Array.prototype.some` method\\n  // https://tc39.es/ecma262/#sec-array.prototype.some\\n  some: createMethod(3),\\n  // `Array.prototype.every` method\\n  // https://tc39.es/ecma262/#sec-array.prototype.every\\n  every: createMethod(4),\\n  // `Array.prototype.find` method\\n  // https://tc39.es/ecma262/#sec-array.prototype.find\\n  find: createMethod(5),\\n  // `Array.prototype.findIndex` method\\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\\n  findIndex: createMethod(6),\\n  // `Array.prototype.filterOut` method\\n  // https://github.com/tc39/proposal-array-filtering\\n  filterOut: createMethod(7)\\n};\\n\\n},{\\\"../internals/array-species-create\\\":68,\\\"../internals/function-bind-context\\\":91,\\\"../internals/indexed-object\\\":103,\\\"../internals/to-length\\\":154,\\\"../internals/to-object\\\":155}],68:[function(require,module,exports){\\nvar isObject = require('../internals/is-object');\\nvar isArray = require('../internals/is-array');\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\n\\nvar SPECIES = wellKnownSymbol('species');\\n\\n// `ArraySpeciesCreate` abstract operation\\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\\nmodule.exports = function (originalArray, length) {\\n  var C;\\n  if (isArray(originalArray)) {\\n    C = originalArray.constructor;\\n    // cross-realm fallback\\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\\n    else if (isObject(C)) {\\n      C = C[SPECIES];\\n      if (C === null) C = undefined;\\n    }\\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\\n};\\n\\n},{\\\"../internals/is-array\\\":108,\\\"../internals/is-object\\\":110,\\\"../internals/well-known-symbol\\\":165}],69:[function(require,module,exports){\\nvar anObject = require('../internals/an-object');\\nvar iteratorClose = require('../internals/iterator-close');\\n\\n// call something on iterator step with safe closing on error\\nmodule.exports = function (iterator, fn, value, ENTRIES) {\\n  try {\\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\\n  // 7.4.6 IteratorClose(iterator, completion)\\n  } catch (error) {\\n    iteratorClose(iterator);\\n    throw error;\\n  }\\n};\\n\\n},{\\\"../internals/an-object\\\":60,\\\"../internals/iterator-close\\\":113}],70:[function(require,module,exports){\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\n\\nvar ITERATOR = wellKnownSymbol('iterator');\\nvar SAFE_CLOSING = false;\\n\\ntry {\\n  var called = 0;\\n  var iteratorWithReturn = {\\n    next: function () {\\n      return { done: !!called++ };\\n    },\\n    'return': function () {\\n      SAFE_CLOSING = true;\\n    }\\n  };\\n  iteratorWithReturn[ITERATOR] = function () {\\n    return this;\\n  };\\n  // eslint-disable-next-line no-throw-literal -- required for testing\\n  Array.from(iteratorWithReturn, function () { throw 2; });\\n} catch (error) { /* empty */ }\\n\\nmodule.exports = function (exec, SKIP_CLOSING) {\\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\\n  var ITERATION_SUPPORT = false;\\n  try {\\n    var object = {};\\n    object[ITERATOR] = function () {\\n      return {\\n        next: function () {\\n          return { done: ITERATION_SUPPORT = true };\\n        }\\n      };\\n    };\\n    exec(object);\\n  } catch (error) { /* empty */ }\\n  return ITERATION_SUPPORT;\\n};\\n\\n},{\\\"../internals/well-known-symbol\\\":165}],71:[function(require,module,exports){\\nvar toString = {}.toString;\\n\\nmodule.exports = function (it) {\\n  return toString.call(it).slice(8, -1);\\n};\\n\\n},{}],72:[function(require,module,exports){\\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\\nvar classofRaw = require('../internals/classof-raw');\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\n\\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\\n// ES3 wrong here\\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\\n\\n// fallback for IE11 Script Access Denied error\\nvar tryGet = function (it, key) {\\n  try {\\n    return it[key];\\n  } catch (error) { /* empty */ }\\n};\\n\\n// getting tag from ES6+ `Object.prototype.toString`\\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\\n  var O, tag, result;\\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\\n    // @@toStringTag case\\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\\n    // builtinTag case\\n    : CORRECT_ARGUMENTS ? classofRaw(O)\\n    // ES3 arguments fallback\\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\\n};\\n\\n},{\\\"../internals/classof-raw\\\":71,\\\"../internals/to-string-tag-support\\\":159,\\\"../internals/well-known-symbol\\\":165}],73:[function(require,module,exports){\\n'use strict';\\nvar anObject = require('../internals/an-object');\\nvar aFunction = require('../internals/a-function');\\n\\n// https://github.com/tc39/collection-methods\\nmodule.exports = function (/* ...elements */) {\\n  var collection = anObject(this);\\n  var remover = aFunction(collection['delete']);\\n  var allDeleted = true;\\n  var wasDeleted;\\n  for (var k = 0, len = arguments.length; k < len; k++) {\\n    wasDeleted = remover.call(collection, arguments[k]);\\n    allDeleted = allDeleted && wasDeleted;\\n  }\\n  return !!allDeleted;\\n};\\n\\n},{\\\"../internals/a-function\\\":55,\\\"../internals/an-object\\\":60}],74:[function(require,module,exports){\\nvar has = require('../internals/has');\\nvar ownKeys = require('../internals/own-keys');\\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\\nvar definePropertyModule = require('../internals/object-define-property');\\n\\nmodule.exports = function (target, source) {\\n  var keys = ownKeys(source);\\n  var defineProperty = definePropertyModule.f;\\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\\n  for (var i = 0; i < keys.length; i++) {\\n    var key = keys[i];\\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\\n  }\\n};\\n\\n},{\\\"../internals/has\\\":98,\\\"../internals/object-define-property\\\":122,\\\"../internals/object-get-own-property-descriptor\\\":123,\\\"../internals/own-keys\\\":131}],75:[function(require,module,exports){\\nvar fails = require('../internals/fails');\\n\\nmodule.exports = !fails(function () {\\n  function F() { /* empty */ }\\n  F.prototype.constructor = null;\\n  return Object.getPrototypeOf(new F()) !== F.prototype;\\n});\\n\\n},{\\\"../internals/fails\\\":89}],76:[function(require,module,exports){\\n'use strict';\\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\\nvar create = require('../internals/object-create');\\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\\nvar setToStringTag = require('../internals/set-to-string-tag');\\nvar Iterators = require('../internals/iterators');\\n\\nvar returnThis = function () { return this; };\\n\\nmodule.exports = function (IteratorConstructor, NAME, next) {\\n  var TO_STRING_TAG = NAME + ' Iterator';\\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\\n  Iterators[TO_STRING_TAG] = returnThis;\\n  return IteratorConstructor;\\n};\\n\\n},{\\\"../internals/create-property-descriptor\\\":78,\\\"../internals/iterators\\\":115,\\\"../internals/iterators-core\\\":114,\\\"../internals/object-create\\\":120,\\\"../internals/set-to-string-tag\\\":143}],77:[function(require,module,exports){\\nvar DESCRIPTORS = require('../internals/descriptors');\\nvar definePropertyModule = require('../internals/object-define-property');\\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\\n\\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\\n} : function (object, key, value) {\\n  object[key] = value;\\n  return object;\\n};\\n\\n},{\\\"../internals/create-property-descriptor\\\":78,\\\"../internals/descriptors\\\":81,\\\"../internals/object-define-property\\\":122}],78:[function(require,module,exports){\\nmodule.exports = function (bitmap, value) {\\n  return {\\n    enumerable: !(bitmap & 1),\\n    configurable: !(bitmap & 2),\\n    writable: !(bitmap & 4),\\n    value: value\\n  };\\n};\\n\\n},{}],79:[function(require,module,exports){\\n'use strict';\\nvar toPrimitive = require('../internals/to-primitive');\\nvar definePropertyModule = require('../internals/object-define-property');\\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\\n\\nmodule.exports = function (object, key, value) {\\n  var propertyKey = toPrimitive(key);\\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\\n  else object[propertyKey] = value;\\n};\\n\\n},{\\\"../internals/create-property-descriptor\\\":78,\\\"../internals/object-define-property\\\":122,\\\"../internals/to-primitive\\\":158}],80:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\\nvar setToStringTag = require('../internals/set-to-string-tag');\\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\\nvar redefine = require('../internals/redefine');\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\nvar IS_PURE = require('../internals/is-pure');\\nvar Iterators = require('../internals/iterators');\\nvar IteratorsCore = require('../internals/iterators-core');\\n\\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\\nvar ITERATOR = wellKnownSymbol('iterator');\\nvar KEYS = 'keys';\\nvar VALUES = 'values';\\nvar ENTRIES = 'entries';\\n\\nvar returnThis = function () { return this; };\\n\\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\\n  createIteratorConstructor(IteratorConstructor, NAME, next);\\n\\n  var getIterationMethod = function (KIND) {\\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\\n    switch (KIND) {\\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\\n    } return function () { return new IteratorConstructor(this); };\\n  };\\n\\n  var TO_STRING_TAG = NAME + ' Iterator';\\n  var INCORRECT_VALUES_NAME = false;\\n  var IterablePrototype = Iterable.prototype;\\n  var nativeIterator = IterablePrototype[ITERATOR]\\n    || IterablePrototype['@@iterator']\\n    || DEFAULT && IterablePrototype[DEFAULT];\\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\\n  var CurrentIteratorPrototype, methods, KEY;\\n\\n  // fix native\\n  if (anyNativeIterator) {\\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\\n        if (setPrototypeOf) {\\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\\n        }\\n      }\\n      // Set @@toStringTag to native iterators\\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\\n    }\\n  }\\n\\n  // fix Array#{values, @@iterator}.name in V8 / FF\\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\\n    INCORRECT_VALUES_NAME = true;\\n    defaultIterator = function values() { return nativeIterator.call(this); };\\n  }\\n\\n  // define iterator\\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\\n  }\\n  Iterators[NAME] = defaultIterator;\\n\\n  // export additional methods\\n  if (DEFAULT) {\\n    methods = {\\n      values: getIterationMethod(VALUES),\\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\\n      entries: getIterationMethod(ENTRIES)\\n    };\\n    if (FORCED) for (KEY in methods) {\\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\\n        redefine(IterablePrototype, KEY, methods[KEY]);\\n      }\\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\\n  }\\n\\n  return methods;\\n};\\n\\n},{\\\"../internals/create-iterator-constructor\\\":76,\\\"../internals/create-non-enumerable-property\\\":77,\\\"../internals/export\\\":88,\\\"../internals/is-pure\\\":111,\\\"../internals/iterators\\\":115,\\\"../internals/iterators-core\\\":114,\\\"../internals/object-get-prototype-of\\\":126,\\\"../internals/object-set-prototype-of\\\":130,\\\"../internals/redefine\\\":134,\\\"../internals/set-to-string-tag\\\":143,\\\"../internals/well-known-symbol\\\":165}],81:[function(require,module,exports){\\nvar fails = require('../internals/fails');\\n\\n// Detect IE8's incomplete defineProperty implementation\\nmodule.exports = !fails(function () {\\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\\n});\\n\\n},{\\\"../internals/fails\\\":89}],82:[function(require,module,exports){\\nvar global = require('../internals/global');\\nvar isObject = require('../internals/is-object');\\n\\nvar document = global.document;\\n// typeof document.createElement is 'object' in old IE\\nvar EXISTS = isObject(document) && isObject(document.createElement);\\n\\nmodule.exports = function (it) {\\n  return EXISTS ? document.createElement(it) : {};\\n};\\n\\n},{\\\"../internals/global\\\":97,\\\"../internals/is-object\\\":110}],83:[function(require,module,exports){\\n// iterable DOM collections\\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\\nmodule.exports = {\\n  CSSRuleList: 0,\\n  CSSStyleDeclaration: 0,\\n  CSSValueList: 0,\\n  ClientRectList: 0,\\n  DOMRectList: 0,\\n  DOMStringList: 0,\\n  DOMTokenList: 1,\\n  DataTransferItemList: 0,\\n  FileList: 0,\\n  HTMLAllCollection: 0,\\n  HTMLCollection: 0,\\n  HTMLFormElement: 0,\\n  HTMLSelectElement: 0,\\n  MediaList: 0,\\n  MimeTypeArray: 0,\\n  NamedNodeMap: 0,\\n  NodeList: 1,\\n  PaintRequestList: 0,\\n  Plugin: 0,\\n  PluginArray: 0,\\n  SVGLengthList: 0,\\n  SVGNumberList: 0,\\n  SVGPathSegList: 0,\\n  SVGPointList: 0,\\n  SVGStringList: 0,\\n  SVGTransformList: 0,\\n  SourceBufferList: 0,\\n  StyleSheetList: 0,\\n  TextTrackCueList: 0,\\n  TextTrackList: 0,\\n  TouchList: 0\\n};\\n\\n},{}],84:[function(require,module,exports){\\nvar classof = require('../internals/classof-raw');\\nvar global = require('../internals/global');\\n\\nmodule.exports = classof(global.process) == 'process';\\n\\n},{\\\"../internals/classof-raw\\\":71,\\\"../internals/global\\\":97}],85:[function(require,module,exports){\\nvar getBuiltIn = require('../internals/get-built-in');\\n\\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\\n\\n},{\\\"../internals/get-built-in\\\":92}],86:[function(require,module,exports){\\nvar global = require('../internals/global');\\nvar userAgent = require('../internals/engine-user-agent');\\n\\nvar process = global.process;\\nvar versions = process && process.versions;\\nvar v8 = versions && versions.v8;\\nvar match, version;\\n\\nif (v8) {\\n  match = v8.split('.');\\n  version = match[0] + match[1];\\n} else if (userAgent) {\\n  match = userAgent.match(/Edge\\\\/(\\\\d+)/);\\n  if (!match || match[1] >= 74) {\\n    match = userAgent.match(/Chrome\\\\/(\\\\d+)/);\\n    if (match) version = match[1];\\n  }\\n}\\n\\nmodule.exports = version && +version;\\n\\n},{\\\"../internals/engine-user-agent\\\":85,\\\"../internals/global\\\":97}],87:[function(require,module,exports){\\n// IE8- don't enum bug keys\\nmodule.exports = [\\n  'constructor',\\n  'hasOwnProperty',\\n  'isPrototypeOf',\\n  'propertyIsEnumerable',\\n  'toLocaleString',\\n  'toString',\\n  'valueOf'\\n];\\n\\n},{}],88:[function(require,module,exports){\\nvar global = require('../internals/global');\\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\\nvar redefine = require('../internals/redefine');\\nvar setGlobal = require('../internals/set-global');\\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\\nvar isForced = require('../internals/is-forced');\\n\\n/*\\n  options.target      - name of the target object\\n  options.global      - target is the global object\\n  options.stat        - export as static methods of target\\n  options.proto       - export as prototype methods of target\\n  options.real        - real prototype method for the `pure` version\\n  options.forced      - export even if the native feature is available\\n  options.bind        - bind methods to the target, required for the `pure` version\\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\\n  options.sham        - add a flag to not completely full polyfills\\n  options.enumerable  - export as enumerable property\\n  options.noTargetGet - prevent calling a getter on target\\n*/\\nmodule.exports = function (options, source) {\\n  var TARGET = options.target;\\n  var GLOBAL = options.global;\\n  var STATIC = options.stat;\\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\\n  if (GLOBAL) {\\n    target = global;\\n  } else if (STATIC) {\\n    target = global[TARGET] || setGlobal(TARGET, {});\\n  } else {\\n    target = (global[TARGET] || {}).prototype;\\n  }\\n  if (target) for (key in source) {\\n    sourceProperty = source[key];\\n    if (options.noTargetGet) {\\n      descriptor = getOwnPropertyDescriptor(target, key);\\n      targetProperty = descriptor && descriptor.value;\\n    } else targetProperty = target[key];\\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\\n    // contained in target\\n    if (!FORCED && targetProperty !== undefined) {\\n      if (typeof sourceProperty === typeof targetProperty) continue;\\n      copyConstructorProperties(sourceProperty, targetProperty);\\n    }\\n    // add a flag to not completely full polyfills\\n    if (options.sham || (targetProperty && targetProperty.sham)) {\\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\\n    }\\n    // extend global\\n    redefine(target, key, sourceProperty, options);\\n  }\\n};\\n\\n},{\\\"../internals/copy-constructor-properties\\\":74,\\\"../internals/create-non-enumerable-property\\\":77,\\\"../internals/global\\\":97,\\\"../internals/is-forced\\\":109,\\\"../internals/object-get-own-property-descriptor\\\":123,\\\"../internals/redefine\\\":134,\\\"../internals/set-global\\\":141}],89:[function(require,module,exports){\\nmodule.exports = function (exec) {\\n  try {\\n    return !!exec();\\n  } catch (error) {\\n    return true;\\n  }\\n};\\n\\n},{}],90:[function(require,module,exports){\\n'use strict';\\n// TODO: Remove from `core-js@4` since it's moved to entry points\\nrequire('../modules/es.regexp.exec');\\nvar redefine = require('../internals/redefine');\\nvar fails = require('../internals/fails');\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\nvar regexpExec = require('../internals/regexp-exec');\\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\\n\\nvar SPECIES = wellKnownSymbol('species');\\n\\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\\n  // #replace needs built-in support for named groups.\\n  // #match works fine because it just return the exec results, even if it has\\n  // a \\\"grops\\\" property.\\n  var re = /./;\\n  re.exec = function () {\\n    var result = [];\\n    result.groups = { a: '7' };\\n    return result;\\n  };\\n  return ''.replace(re, '$<a>') !== '7';\\n});\\n\\n// IE <= 11 replaces $0 with the whole match, as if it was $&\\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\\nvar REPLACE_KEEPS_$0 = (function () {\\n  return 'a'.replace(/./, '$0') === '$0';\\n})();\\n\\nvar REPLACE = wellKnownSymbol('replace');\\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\\n  if (/./[REPLACE]) {\\n    return /./[REPLACE]('a', '$0') === '';\\n  }\\n  return false;\\n})();\\n\\n// Chrome 51 has a buggy \\\"split\\\" implementation when RegExp#exec !== nativeExec\\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\\n  var re = /(?:)/;\\n  var originalExec = re.exec;\\n  re.exec = function () { return originalExec.apply(this, arguments); };\\n  var result = 'ab'.split(re);\\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\\n});\\n\\nmodule.exports = function (KEY, length, exec, sham) {\\n  var SYMBOL = wellKnownSymbol(KEY);\\n\\n  var DELEGATES_TO_SYMBOL = !fails(function () {\\n    // String methods call symbol-named RegEp methods\\n    var O = {};\\n    O[SYMBOL] = function () { return 7; };\\n    return ''[KEY](O) != 7;\\n  });\\n\\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\\n    // Symbol-named RegExp methods call .exec\\n    var execCalled = false;\\n    var re = /a/;\\n\\n    if (KEY === 'split') {\\n      // We can't use real regex here since it causes deoptimization\\n      // and serious performance degradation in V8\\n      // https://github.com/zloirock/core-js/issues/306\\n      re = {};\\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\\n      // a new one. We need to return the patched regex when creating the new one.\\n      re.constructor = {};\\n      re.constructor[SPECIES] = function () { return re; };\\n      re.flags = '';\\n      re[SYMBOL] = /./[SYMBOL];\\n    }\\n\\n    re.exec = function () { execCalled = true; return null; };\\n\\n    re[SYMBOL]('');\\n    return !execCalled;\\n  });\\n\\n  if (\\n    !DELEGATES_TO_SYMBOL ||\\n    !DELEGATES_TO_EXEC ||\\n    (KEY === 'replace' && !(\\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\\n      REPLACE_KEEPS_$0 &&\\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\\n    )) ||\\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\\n  ) {\\n    var nativeRegExpMethod = /./[SYMBOL];\\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\\n      if (regexp.exec === regexpExec) {\\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\\n          // The native String method already delegates to @@method (this\\n          // polyfilled function), leasing to infinite recursion.\\n          // We avoid it by directly calling the native @@method method.\\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\\n        }\\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\\n      }\\n      return { done: false };\\n    }, {\\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\\n    });\\n    var stringMethod = methods[0];\\n    var regexMethod = methods[1];\\n\\n    redefine(String.prototype, KEY, stringMethod);\\n    redefine(RegExp.prototype, SYMBOL, length == 2\\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\\n      // 21.2.5.6 RegExp.prototype[@@match](string)\\n      // 21.2.5.9 RegExp.prototype[@@search](string)\\n      : function (string) { return regexMethod.call(string, this); }\\n    );\\n  }\\n\\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\\n};\\n\\n},{\\\"../internals/create-non-enumerable-property\\\":77,\\\"../internals/fails\\\":89,\\\"../internals/redefine\\\":134,\\\"../internals/regexp-exec\\\":136,\\\"../internals/well-known-symbol\\\":165,\\\"../modules/es.regexp.exec\\\":167}],91:[function(require,module,exports){\\nvar aFunction = require('../internals/a-function');\\n\\n// optional / simple context binding\\nmodule.exports = function (fn, that, length) {\\n  aFunction(fn);\\n  if (that === undefined) return fn;\\n  switch (length) {\\n    case 0: return function () {\\n      return fn.call(that);\\n    };\\n    case 1: return function (a) {\\n      return fn.call(that, a);\\n    };\\n    case 2: return function (a, b) {\\n      return fn.call(that, a, b);\\n    };\\n    case 3: return function (a, b, c) {\\n      return fn.call(that, a, b, c);\\n    };\\n  }\\n  return function (/* ...args */) {\\n    return fn.apply(that, arguments);\\n  };\\n};\\n\\n},{\\\"../internals/a-function\\\":55}],92:[function(require,module,exports){\\nvar path = require('../internals/path');\\nvar global = require('../internals/global');\\n\\nvar aFunction = function (variable) {\\n  return typeof variable == 'function' ? variable : undefined;\\n};\\n\\nmodule.exports = function (namespace, method) {\\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\\n};\\n\\n},{\\\"../internals/global\\\":97,\\\"../internals/path\\\":132}],93:[function(require,module,exports){\\nvar classof = require('../internals/classof');\\nvar Iterators = require('../internals/iterators');\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\n\\nvar ITERATOR = wellKnownSymbol('iterator');\\n\\nmodule.exports = function (it) {\\n  if (it != undefined) return it[ITERATOR]\\n    || it['@@iterator']\\n    || Iterators[classof(it)];\\n};\\n\\n},{\\\"../internals/classof\\\":72,\\\"../internals/iterators\\\":115,\\\"../internals/well-known-symbol\\\":165}],94:[function(require,module,exports){\\nvar anObject = require('../internals/an-object');\\nvar getIteratorMethod = require('../internals/get-iterator-method');\\n\\nmodule.exports = function (it) {\\n  var iteratorMethod = getIteratorMethod(it);\\n  if (typeof iteratorMethod != 'function') {\\n    throw TypeError(String(it) + ' is not iterable');\\n  } return anObject(iteratorMethod.call(it));\\n};\\n\\n},{\\\"../internals/an-object\\\":60,\\\"../internals/get-iterator-method\\\":93}],95:[function(require,module,exports){\\nvar IS_PURE = require('../internals/is-pure');\\nvar getIterator = require('../internals/get-iterator');\\n\\nmodule.exports = IS_PURE ? getIterator : function (it) {\\n  // eslint-disable-next-line no-undef -- safe\\n  return Map.prototype.entries.call(it);\\n};\\n\\n},{\\\"../internals/get-iterator\\\":94,\\\"../internals/is-pure\\\":111}],96:[function(require,module,exports){\\nvar toObject = require('../internals/to-object');\\n\\nvar floor = Math.floor;\\nvar replace = ''.replace;\\nvar SUBSTITUTION_SYMBOLS = /\\\\$([$&'`]|\\\\d{1,2}|<[^>]*>)/g;\\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\\\$([$&'`]|\\\\d{1,2})/g;\\n\\n// https://tc39.es/ecma262/#sec-getsubstitution\\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\\n  var tailPos = position + matched.length;\\n  var m = captures.length;\\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\\n  if (namedCaptures !== undefined) {\\n    namedCaptures = toObject(namedCaptures);\\n    symbols = SUBSTITUTION_SYMBOLS;\\n  }\\n  return replace.call(replacement, symbols, function (match, ch) {\\n    var capture;\\n    switch (ch.charAt(0)) {\\n      case '$': return '$';\\n      case '&': return matched;\\n      case '`': return str.slice(0, position);\\n      case \\\"'\\\": return str.slice(tailPos);\\n      case '<':\\n        capture = namedCaptures[ch.slice(1, -1)];\\n        break;\\n      default: // \\\\d\\\\d?\\n        var n = +ch;\\n        if (n === 0) return match;\\n        if (n > m) {\\n          var f = floor(n / 10);\\n          if (f === 0) return match;\\n          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\\n          return match;\\n        }\\n        capture = captures[n - 1];\\n    }\\n    return capture === undefined ? '' : capture;\\n  });\\n};\\n\\n},{\\\"../internals/to-object\\\":155}],97:[function(require,module,exports){\\n(function (global){(function (){\\nvar check = function (it) {\\n  return it && it.Math == Math && it;\\n};\\n\\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\\nmodule.exports =\\n  /* global globalThis -- safe */\\n  check(typeof globalThis == 'object' && globalThis) ||\\n  check(typeof window == 'object' && window) ||\\n  check(typeof self == 'object' && self) ||\\n  check(typeof global == 'object' && global) ||\\n  // eslint-disable-next-line no-new-func -- fallback\\n  (function () { return this; })() || Function('return this')();\\n\\n}).call(this)}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\n},{}],98:[function(require,module,exports){\\nvar hasOwnProperty = {}.hasOwnProperty;\\n\\nmodule.exports = function (it, key) {\\n  return hasOwnProperty.call(it, key);\\n};\\n\\n},{}],99:[function(require,module,exports){\\nmodule.exports = {};\\n\\n},{}],100:[function(require,module,exports){\\nvar getBuiltIn = require('../internals/get-built-in');\\n\\nmodule.exports = getBuiltIn('document', 'documentElement');\\n\\n},{\\\"../internals/get-built-in\\\":92}],101:[function(require,module,exports){\\nvar DESCRIPTORS = require('../internals/descriptors');\\nvar fails = require('../internals/fails');\\nvar createElement = require('../internals/document-create-element');\\n\\n// Thank's IE8 for his funny defineProperty\\nmodule.exports = !DESCRIPTORS && !fails(function () {\\n  return Object.defineProperty(createElement('div'), 'a', {\\n    get: function () { return 7; }\\n  }).a != 7;\\n});\\n\\n},{\\\"../internals/descriptors\\\":81,\\\"../internals/document-create-element\\\":82,\\\"../internals/fails\\\":89}],102:[function(require,module,exports){\\n// IEEE754 conversions based on https://github.com/feross/ieee754\\nvar abs = Math.abs;\\nvar pow = Math.pow;\\nvar floor = Math.floor;\\nvar log = Math.log;\\nvar LN2 = Math.LN2;\\n\\nvar pack = function (number, mantissaLength, bytes) {\\n  var buffer = new Array(bytes);\\n  var exponentLength = bytes * 8 - mantissaLength - 1;\\n  var eMax = (1 << exponentLength) - 1;\\n  var eBias = eMax >> 1;\\n  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;\\n  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;\\n  var index = 0;\\n  var exponent, mantissa, c;\\n  number = abs(number);\\n  // eslint-disable-next-line no-self-compare -- NaN check\\n  if (number != number || number === Infinity) {\\n    // eslint-disable-next-line no-self-compare -- NaN check\\n    mantissa = number != number ? 1 : 0;\\n    exponent = eMax;\\n  } else {\\n    exponent = floor(log(number) / LN2);\\n    if (number * (c = pow(2, -exponent)) < 1) {\\n      exponent--;\\n      c *= 2;\\n    }\\n    if (exponent + eBias >= 1) {\\n      number += rt / c;\\n    } else {\\n      number += rt * pow(2, 1 - eBias);\\n    }\\n    if (number * c >= 2) {\\n      exponent++;\\n      c /= 2;\\n    }\\n    if (exponent + eBias >= eMax) {\\n      mantissa = 0;\\n      exponent = eMax;\\n    } else if (exponent + eBias >= 1) {\\n      mantissa = (number * c - 1) * pow(2, mantissaLength);\\n      exponent = exponent + eBias;\\n    } else {\\n      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);\\n      exponent = 0;\\n    }\\n  }\\n  for (; mantissaLength >= 8; buffer[index++] = mantissa & 255, mantissa /= 256, mantissaLength -= 8);\\n  exponent = exponent << mantissaLength | mantissa;\\n  exponentLength += mantissaLength;\\n  for (; exponentLength > 0; buffer[index++] = exponent & 255, exponent /= 256, exponentLength -= 8);\\n  buffer[--index] |= sign * 128;\\n  return buffer;\\n};\\n\\nvar unpack = function (buffer, mantissaLength) {\\n  var bytes = buffer.length;\\n  var exponentLength = bytes * 8 - mantissaLength - 1;\\n  var eMax = (1 << exponentLength) - 1;\\n  var eBias = eMax >> 1;\\n  var nBits = exponentLength - 7;\\n  var index = bytes - 1;\\n  var sign = buffer[index--];\\n  var exponent = sign & 127;\\n  var mantissa;\\n  sign >>= 7;\\n  for (; nBits > 0; exponent = exponent * 256 + buffer[index], index--, nBits -= 8);\\n  mantissa = exponent & (1 << -nBits) - 1;\\n  exponent >>= -nBits;\\n  nBits += mantissaLength;\\n  for (; nBits > 0; mantissa = mantissa * 256 + buffer[index], index--, nBits -= 8);\\n  if (exponent === 0) {\\n    exponent = 1 - eBias;\\n  } else if (exponent === eMax) {\\n    return mantissa ? NaN : sign ? -Infinity : Infinity;\\n  } else {\\n    mantissa = mantissa + pow(2, mantissaLength);\\n    exponent = exponent - eBias;\\n  } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);\\n};\\n\\nmodule.exports = {\\n  pack: pack,\\n  unpack: unpack\\n};\\n\\n},{}],103:[function(require,module,exports){\\nvar fails = require('../internals/fails');\\nvar classof = require('../internals/classof-raw');\\n\\nvar split = ''.split;\\n\\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\\nmodule.exports = fails(function () {\\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\\n  // eslint-disable-next-line no-prototype-builtins -- safe\\n  return !Object('z').propertyIsEnumerable(0);\\n}) ? function (it) {\\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\\n} : Object;\\n\\n},{\\\"../internals/classof-raw\\\":71,\\\"../internals/fails\\\":89}],104:[function(require,module,exports){\\nvar isObject = require('../internals/is-object');\\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\\n\\n// makes subclassing work correct for wrapped built-ins\\nmodule.exports = function ($this, dummy, Wrapper) {\\n  var NewTarget, NewTargetPrototype;\\n  if (\\n    // it can work only with native `setPrototypeOf`\\n    setPrototypeOf &&\\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\\n    typeof (NewTarget = dummy.constructor) == 'function' &&\\n    NewTarget !== Wrapper &&\\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\\n    NewTargetPrototype !== Wrapper.prototype\\n  ) setPrototypeOf($this, NewTargetPrototype);\\n  return $this;\\n};\\n\\n},{\\\"../internals/is-object\\\":110,\\\"../internals/object-set-prototype-of\\\":130}],105:[function(require,module,exports){\\nvar store = require('../internals/shared-store');\\n\\nvar functionToString = Function.toString;\\n\\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\\nif (typeof store.inspectSource != 'function') {\\n  store.inspectSource = function (it) {\\n    return functionToString.call(it);\\n  };\\n}\\n\\nmodule.exports = store.inspectSource;\\n\\n},{\\\"../internals/shared-store\\\":145}],106:[function(require,module,exports){\\nvar NATIVE_WEAK_MAP = require('../internals/native-weak-map');\\nvar global = require('../internals/global');\\nvar isObject = require('../internals/is-object');\\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\\nvar objectHas = require('../internals/has');\\nvar shared = require('../internals/shared-store');\\nvar sharedKey = require('../internals/shared-key');\\nvar hiddenKeys = require('../internals/hidden-keys');\\n\\nvar WeakMap = global.WeakMap;\\nvar set, get, has;\\n\\nvar enforce = function (it) {\\n  return has(it) ? get(it) : set(it, {});\\n};\\n\\nvar getterFor = function (TYPE) {\\n  return function (it) {\\n    var state;\\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\\n    } return state;\\n  };\\n};\\n\\nif (NATIVE_WEAK_MAP) {\\n  var store = shared.state || (shared.state = new WeakMap());\\n  var wmget = store.get;\\n  var wmhas = store.has;\\n  var wmset = store.set;\\n  set = function (it, metadata) {\\n    metadata.facade = it;\\n    wmset.call(store, it, metadata);\\n    return metadata;\\n  };\\n  get = function (it) {\\n    return wmget.call(store, it) || {};\\n  };\\n  has = function (it) {\\n    return wmhas.call(store, it);\\n  };\\n} else {\\n  var STATE = sharedKey('state');\\n  hiddenKeys[STATE] = true;\\n  set = function (it, metadata) {\\n    metadata.facade = it;\\n    createNonEnumerableProperty(it, STATE, metadata);\\n    return metadata;\\n  };\\n  get = function (it) {\\n    return objectHas(it, STATE) ? it[STATE] : {};\\n  };\\n  has = function (it) {\\n    return objectHas(it, STATE);\\n  };\\n}\\n\\nmodule.exports = {\\n  set: set,\\n  get: get,\\n  has: has,\\n  enforce: enforce,\\n  getterFor: getterFor\\n};\\n\\n},{\\\"../internals/create-non-enumerable-property\\\":77,\\\"../internals/global\\\":97,\\\"../internals/has\\\":98,\\\"../internals/hidden-keys\\\":99,\\\"../internals/is-object\\\":110,\\\"../internals/native-weak-map\\\":118,\\\"../internals/shared-key\\\":144,\\\"../internals/shared-store\\\":145}],107:[function(require,module,exports){\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\nvar Iterators = require('../internals/iterators');\\n\\nvar ITERATOR = wellKnownSymbol('iterator');\\nvar ArrayPrototype = Array.prototype;\\n\\n// check on default Array iterator\\nmodule.exports = function (it) {\\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\\n};\\n\\n},{\\\"../internals/iterators\\\":115,\\\"../internals/well-known-symbol\\\":165}],108:[function(require,module,exports){\\nvar classof = require('../internals/classof-raw');\\n\\n// `IsArray` abstract operation\\n// https://tc39.es/ecma262/#sec-isarray\\nmodule.exports = Array.isArray || function isArray(arg) {\\n  return classof(arg) == 'Array';\\n};\\n\\n},{\\\"../internals/classof-raw\\\":71}],109:[function(require,module,exports){\\nvar fails = require('../internals/fails');\\n\\nvar replacement = /#|\\\\.prototype\\\\./;\\n\\nvar isForced = function (feature, detection) {\\n  var value = data[normalize(feature)];\\n  return value == POLYFILL ? true\\n    : value == NATIVE ? false\\n    : typeof detection == 'function' ? fails(detection)\\n    : !!detection;\\n};\\n\\nvar normalize = isForced.normalize = function (string) {\\n  return String(string).replace(replacement, '.').toLowerCase();\\n};\\n\\nvar data = isForced.data = {};\\nvar NATIVE = isForced.NATIVE = 'N';\\nvar POLYFILL = isForced.POLYFILL = 'P';\\n\\nmodule.exports = isForced;\\n\\n},{\\\"../internals/fails\\\":89}],110:[function(require,module,exports){\\nmodule.exports = function (it) {\\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\\n};\\n\\n},{}],111:[function(require,module,exports){\\nmodule.exports = false;\\n\\n},{}],112:[function(require,module,exports){\\nvar anObject = require('../internals/an-object');\\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\\nvar toLength = require('../internals/to-length');\\nvar bind = require('../internals/function-bind-context');\\nvar getIteratorMethod = require('../internals/get-iterator-method');\\nvar iteratorClose = require('../internals/iterator-close');\\n\\nvar Result = function (stopped, result) {\\n  this.stopped = stopped;\\n  this.result = result;\\n};\\n\\nmodule.exports = function (iterable, unboundFunction, options) {\\n  var that = options && options.that;\\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\\n  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);\\n  var iterator, iterFn, index, length, result, next, step;\\n\\n  var stop = function (condition) {\\n    if (iterator) iteratorClose(iterator);\\n    return new Result(true, condition);\\n  };\\n\\n  var callFn = function (value) {\\n    if (AS_ENTRIES) {\\n      anObject(value);\\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\\n  };\\n\\n  if (IS_ITERATOR) {\\n    iterator = iterable;\\n  } else {\\n    iterFn = getIteratorMethod(iterable);\\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\\n    // optimisation for array iterators\\n    if (isArrayIteratorMethod(iterFn)) {\\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\\n        result = callFn(iterable[index]);\\n        if (result && result instanceof Result) return result;\\n      } return new Result(false);\\n    }\\n    iterator = iterFn.call(iterable);\\n  }\\n\\n  next = iterator.next;\\n  while (!(step = next.call(iterator)).done) {\\n    try {\\n      result = callFn(step.value);\\n    } catch (error) {\\n      iteratorClose(iterator);\\n      throw error;\\n    }\\n    if (typeof result == 'object' && result && result instanceof Result) return result;\\n  } return new Result(false);\\n};\\n\\n},{\\\"../internals/an-object\\\":60,\\\"../internals/function-bind-context\\\":91,\\\"../internals/get-iterator-method\\\":93,\\\"../internals/is-array-iterator-method\\\":107,\\\"../internals/iterator-close\\\":113,\\\"../internals/to-length\\\":154}],113:[function(require,module,exports){\\nvar anObject = require('../internals/an-object');\\n\\nmodule.exports = function (iterator) {\\n  var returnMethod = iterator['return'];\\n  if (returnMethod !== undefined) {\\n    return anObject(returnMethod.call(iterator)).value;\\n  }\\n};\\n\\n},{\\\"../internals/an-object\\\":60}],114:[function(require,module,exports){\\n'use strict';\\nvar fails = require('../internals/fails');\\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\\nvar has = require('../internals/has');\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\nvar IS_PURE = require('../internals/is-pure');\\n\\nvar ITERATOR = wellKnownSymbol('iterator');\\nvar BUGGY_SAFARI_ITERATORS = false;\\n\\nvar returnThis = function () { return this; };\\n\\n// `%IteratorPrototype%` object\\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\\n\\nif ([].keys) {\\n  arrayIterator = [].keys();\\n  // Safari 8 has buggy iterators w/o `next`\\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\\n  else {\\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\\n  }\\n}\\n\\nvar NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {\\n  var test = {};\\n  // FF44- legacy iterators case\\n  return IteratorPrototype[ITERATOR].call(test) !== test;\\n});\\n\\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\\n\\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\\nif ((!IS_PURE || NEW_ITERATOR_PROTOTYPE) && !has(IteratorPrototype, ITERATOR)) {\\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\\n}\\n\\nmodule.exports = {\\n  IteratorPrototype: IteratorPrototype,\\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\\n};\\n\\n},{\\\"../internals/create-non-enumerable-property\\\":77,\\\"../internals/fails\\\":89,\\\"../internals/has\\\":98,\\\"../internals/is-pure\\\":111,\\\"../internals/object-get-prototype-of\\\":126,\\\"../internals/well-known-symbol\\\":165}],115:[function(require,module,exports){\\narguments[4][99][0].apply(exports,arguments)\\n},{\\\"dup\\\":99}],116:[function(require,module,exports){\\nvar IS_NODE = require('../internals/engine-is-node');\\nvar V8_VERSION = require('../internals/engine-v8-version');\\nvar fails = require('../internals/fails');\\n\\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\\n  /* global Symbol -- required for testing */\\n  return !Symbol.sham &&\\n    // Chrome 38 Symbol has incorrect toString conversion\\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\\n    (IS_NODE ? V8_VERSION === 38 : V8_VERSION > 37 && V8_VERSION < 41);\\n});\\n\\n},{\\\"../internals/engine-is-node\\\":84,\\\"../internals/engine-v8-version\\\":86,\\\"../internals/fails\\\":89}],117:[function(require,module,exports){\\nvar fails = require('../internals/fails');\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\nvar IS_PURE = require('../internals/is-pure');\\n\\nvar ITERATOR = wellKnownSymbol('iterator');\\n\\nmodule.exports = !fails(function () {\\n  var url = new URL('b?a=1&b=2&c=3', 'http://a');\\n  var searchParams = url.searchParams;\\n  var result = '';\\n  url.pathname = 'c%20d';\\n  searchParams.forEach(function (value, key) {\\n    searchParams['delete']('b');\\n    result += key + value;\\n  });\\n  return (IS_PURE && !url.toJSON)\\n    || !searchParams.sort\\n    || url.href !== 'http://a/c%20d?a=1&c=3'\\n    || searchParams.get('c') !== '3'\\n    || String(new URLSearchParams('?a=1')) !== 'a=1'\\n    || !searchParams[ITERATOR]\\n    // throws in Edge\\n    || new URL('https://a@b').username !== 'a'\\n    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'\\n    // not punycoded in Edge\\n    || new URL('http://тест').host !== 'xn--e1aybc'\\n    // not escaped in Chrome 62-\\n    || new URL('http://a#б').hash !== '#%D0%B1'\\n    // fails in Chrome 66-\\n    || result !== 'a1c3'\\n    // throws in Safari\\n    || new URL('http://x', undefined).host !== 'x';\\n});\\n\\n},{\\\"../internals/fails\\\":89,\\\"../internals/is-pure\\\":111,\\\"../internals/well-known-symbol\\\":165}],118:[function(require,module,exports){\\nvar global = require('../internals/global');\\nvar inspectSource = require('../internals/inspect-source');\\n\\nvar WeakMap = global.WeakMap;\\n\\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\\n\\n},{\\\"../internals/global\\\":97,\\\"../internals/inspect-source\\\":105}],119:[function(require,module,exports){\\n'use strict';\\nvar DESCRIPTORS = require('../internals/descriptors');\\nvar fails = require('../internals/fails');\\nvar objectKeys = require('../internals/object-keys');\\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\\nvar toObject = require('../internals/to-object');\\nvar IndexedObject = require('../internals/indexed-object');\\n\\nvar nativeAssign = Object.assign;\\nvar defineProperty = Object.defineProperty;\\n\\n// `Object.assign` method\\n// https://tc39.es/ecma262/#sec-object.assign\\nmodule.exports = !nativeAssign || fails(function () {\\n  // should have correct order of operations (Edge bug)\\n  if (DESCRIPTORS && nativeAssign({ b: 1 }, nativeAssign(defineProperty({}, 'a', {\\n    enumerable: true,\\n    get: function () {\\n      defineProperty(this, 'b', {\\n        value: 3,\\n        enumerable: false\\n      });\\n    }\\n  }), { b: 2 })).b !== 1) return true;\\n  // should work with symbols and should have deterministic property order (V8 bug)\\n  var A = {};\\n  var B = {};\\n  /* global Symbol -- required for testing */\\n  var symbol = Symbol();\\n  var alphabet = 'abcdefghijklmnopqrst';\\n  A[symbol] = 7;\\n  alphabet.split('').forEach(function (chr) { B[chr] = chr; });\\n  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;\\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`\\n  var T = toObject(target);\\n  var argumentsLength = arguments.length;\\n  var index = 1;\\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\\n  var propertyIsEnumerable = propertyIsEnumerableModule.f;\\n  while (argumentsLength > index) {\\n    var S = IndexedObject(arguments[index++]);\\n    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\\n    var length = keys.length;\\n    var j = 0;\\n    var key;\\n    while (length > j) {\\n      key = keys[j++];\\n      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];\\n    }\\n  } return T;\\n} : nativeAssign;\\n\\n},{\\\"../internals/descriptors\\\":81,\\\"../internals/fails\\\":89,\\\"../internals/indexed-object\\\":103,\\\"../internals/object-get-own-property-symbols\\\":125,\\\"../internals/object-keys\\\":128,\\\"../internals/object-property-is-enumerable\\\":129,\\\"../internals/to-object\\\":155}],120:[function(require,module,exports){\\nvar anObject = require('../internals/an-object');\\nvar defineProperties = require('../internals/object-define-properties');\\nvar enumBugKeys = require('../internals/enum-bug-keys');\\nvar hiddenKeys = require('../internals/hidden-keys');\\nvar html = require('../internals/html');\\nvar documentCreateElement = require('../internals/document-create-element');\\nvar sharedKey = require('../internals/shared-key');\\n\\nvar GT = '>';\\nvar LT = '<';\\nvar PROTOTYPE = 'prototype';\\nvar SCRIPT = 'script';\\nvar IE_PROTO = sharedKey('IE_PROTO');\\n\\nvar EmptyConstructor = function () { /* empty */ };\\n\\nvar scriptTag = function (content) {\\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\\n};\\n\\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\\n  activeXDocument.write(scriptTag(''));\\n  activeXDocument.close();\\n  var temp = activeXDocument.parentWindow.Object;\\n  activeXDocument = null; // avoid memory leak\\n  return temp;\\n};\\n\\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\\nvar NullProtoObjectViaIFrame = function () {\\n  // Thrash, waste and sodomy: IE GC bug\\n  var iframe = documentCreateElement('iframe');\\n  var JS = 'java' + SCRIPT + ':';\\n  var iframeDocument;\\n  iframe.style.display = 'none';\\n  html.appendChild(iframe);\\n  // https://github.com/zloirock/core-js/issues/475\\n  iframe.src = String(JS);\\n  iframeDocument = iframe.contentWindow.document;\\n  iframeDocument.open();\\n  iframeDocument.write(scriptTag('document.F=Object'));\\n  iframeDocument.close();\\n  return iframeDocument.F;\\n};\\n\\n// Check for document.domain and active x support\\n// No need to use active x approach when document.domain is not set\\n// see https://github.com/es-shims/es5-shim/issues/150\\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\\n// avoid IE GC bug\\nvar activeXDocument;\\nvar NullProtoObject = function () {\\n  try {\\n    /* global ActiveXObject -- old IE */\\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\\n  } catch (error) { /* ignore */ }\\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\\n  var length = enumBugKeys.length;\\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\\n  return NullProtoObject();\\n};\\n\\nhiddenKeys[IE_PROTO] = true;\\n\\n// `Object.create` method\\n// https://tc39.es/ecma262/#sec-object.create\\nmodule.exports = Object.create || function create(O, Properties) {\\n  var result;\\n  if (O !== null) {\\n    EmptyConstructor[PROTOTYPE] = anObject(O);\\n    result = new EmptyConstructor();\\n    EmptyConstructor[PROTOTYPE] = null;\\n    // add \\\"__proto__\\\" for Object.getPrototypeOf polyfill\\n    result[IE_PROTO] = O;\\n  } else result = NullProtoObject();\\n  return Properties === undefined ? result : defineProperties(result, Properties);\\n};\\n\\n},{\\\"../internals/an-object\\\":60,\\\"../internals/document-create-element\\\":82,\\\"../internals/enum-bug-keys\\\":87,\\\"../internals/hidden-keys\\\":99,\\\"../internals/html\\\":100,\\\"../internals/object-define-properties\\\":121,\\\"../internals/shared-key\\\":144}],121:[function(require,module,exports){\\nvar DESCRIPTORS = require('../internals/descriptors');\\nvar definePropertyModule = require('../internals/object-define-property');\\nvar anObject = require('../internals/an-object');\\nvar objectKeys = require('../internals/object-keys');\\n\\n// `Object.defineProperties` method\\n// https://tc39.es/ecma262/#sec-object.defineproperties\\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\\n  anObject(O);\\n  var keys = objectKeys(Properties);\\n  var length = keys.length;\\n  var index = 0;\\n  var key;\\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\\n  return O;\\n};\\n\\n},{\\\"../internals/an-object\\\":60,\\\"../internals/descriptors\\\":81,\\\"../internals/object-define-property\\\":122,\\\"../internals/object-keys\\\":128}],122:[function(require,module,exports){\\nvar DESCRIPTORS = require('../internals/descriptors');\\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\\nvar anObject = require('../internals/an-object');\\nvar toPrimitive = require('../internals/to-primitive');\\n\\nvar nativeDefineProperty = Object.defineProperty;\\n\\n// `Object.defineProperty` method\\n// https://tc39.es/ecma262/#sec-object.defineproperty\\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\\n  anObject(O);\\n  P = toPrimitive(P, true);\\n  anObject(Attributes);\\n  if (IE8_DOM_DEFINE) try {\\n    return nativeDefineProperty(O, P, Attributes);\\n  } catch (error) { /* empty */ }\\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\\n  if ('value' in Attributes) O[P] = Attributes.value;\\n  return O;\\n};\\n\\n},{\\\"../internals/an-object\\\":60,\\\"../internals/descriptors\\\":81,\\\"../internals/ie8-dom-define\\\":101,\\\"../internals/to-primitive\\\":158}],123:[function(require,module,exports){\\nvar DESCRIPTORS = require('../internals/descriptors');\\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\\nvar toIndexedObject = require('../internals/to-indexed-object');\\nvar toPrimitive = require('../internals/to-primitive');\\nvar has = require('../internals/has');\\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\\n\\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\\n\\n// `Object.getOwnPropertyDescriptor` method\\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\\n  O = toIndexedObject(O);\\n  P = toPrimitive(P, true);\\n  if (IE8_DOM_DEFINE) try {\\n    return nativeGetOwnPropertyDescriptor(O, P);\\n  } catch (error) { /* empty */ }\\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\\n};\\n\\n},{\\\"../internals/create-property-descriptor\\\":78,\\\"../internals/descriptors\\\":81,\\\"../internals/has\\\":98,\\\"../internals/ie8-dom-define\\\":101,\\\"../internals/object-property-is-enumerable\\\":129,\\\"../internals/to-indexed-object\\\":152,\\\"../internals/to-primitive\\\":158}],124:[function(require,module,exports){\\nvar internalObjectKeys = require('../internals/object-keys-internal');\\nvar enumBugKeys = require('../internals/enum-bug-keys');\\n\\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\\n\\n// `Object.getOwnPropertyNames` method\\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\\n  return internalObjectKeys(O, hiddenKeys);\\n};\\n\\n},{\\\"../internals/enum-bug-keys\\\":87,\\\"../internals/object-keys-internal\\\":127}],125:[function(require,module,exports){\\nexports.f = Object.getOwnPropertySymbols;\\n\\n},{}],126:[function(require,module,exports){\\nvar has = require('../internals/has');\\nvar toObject = require('../internals/to-object');\\nvar sharedKey = require('../internals/shared-key');\\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\\n\\nvar IE_PROTO = sharedKey('IE_PROTO');\\nvar ObjectPrototype = Object.prototype;\\n\\n// `Object.getPrototypeOf` method\\n// https://tc39.es/ecma262/#sec-object.getprototypeof\\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\\n  O = toObject(O);\\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\\n    return O.constructor.prototype;\\n  } return O instanceof Object ? ObjectPrototype : null;\\n};\\n\\n},{\\\"../internals/correct-prototype-getter\\\":75,\\\"../internals/has\\\":98,\\\"../internals/shared-key\\\":144,\\\"../internals/to-object\\\":155}],127:[function(require,module,exports){\\nvar has = require('../internals/has');\\nvar toIndexedObject = require('../internals/to-indexed-object');\\nvar indexOf = require('../internals/array-includes').indexOf;\\nvar hiddenKeys = require('../internals/hidden-keys');\\n\\nmodule.exports = function (object, names) {\\n  var O = toIndexedObject(object);\\n  var i = 0;\\n  var result = [];\\n  var key;\\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\\n  // Don't enum bug & hidden keys\\n  while (names.length > i) if (has(O, key = names[i++])) {\\n    ~indexOf(result, key) || result.push(key);\\n  }\\n  return result;\\n};\\n\\n},{\\\"../internals/array-includes\\\":66,\\\"../internals/has\\\":98,\\\"../internals/hidden-keys\\\":99,\\\"../internals/to-indexed-object\\\":152}],128:[function(require,module,exports){\\nvar internalObjectKeys = require('../internals/object-keys-internal');\\nvar enumBugKeys = require('../internals/enum-bug-keys');\\n\\n// `Object.keys` method\\n// https://tc39.es/ecma262/#sec-object.keys\\nmodule.exports = Object.keys || function keys(O) {\\n  return internalObjectKeys(O, enumBugKeys);\\n};\\n\\n},{\\\"../internals/enum-bug-keys\\\":87,\\\"../internals/object-keys-internal\\\":127}],129:[function(require,module,exports){\\n'use strict';\\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\\n\\n// Nashorn ~ JDK8 bug\\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\\n\\n// `Object.prototype.propertyIsEnumerable` method implementation\\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\\n  var descriptor = getOwnPropertyDescriptor(this, V);\\n  return !!descriptor && descriptor.enumerable;\\n} : nativePropertyIsEnumerable;\\n\\n},{}],130:[function(require,module,exports){\\n/* eslint-disable no-proto -- safe */\\nvar anObject = require('../internals/an-object');\\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\\n\\n// `Object.setPrototypeOf` method\\n// https://tc39.es/ecma262/#sec-object.setprototypeof\\n// Works with __proto__ only. Old v8 can't work with null proto objects.\\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\\n  var CORRECT_SETTER = false;\\n  var test = {};\\n  var setter;\\n  try {\\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\\n    setter.call(test, []);\\n    CORRECT_SETTER = test instanceof Array;\\n  } catch (error) { /* empty */ }\\n  return function setPrototypeOf(O, proto) {\\n    anObject(O);\\n    aPossiblePrototype(proto);\\n    if (CORRECT_SETTER) setter.call(O, proto);\\n    else O.__proto__ = proto;\\n    return O;\\n  };\\n}() : undefined);\\n\\n},{\\\"../internals/a-possible-prototype\\\":56,\\\"../internals/an-object\\\":60}],131:[function(require,module,exports){\\nvar getBuiltIn = require('../internals/get-built-in');\\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\\nvar anObject = require('../internals/an-object');\\n\\n// all object keys, includes non-enumerable and symbols\\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\\n};\\n\\n},{\\\"../internals/an-object\\\":60,\\\"../internals/get-built-in\\\":92,\\\"../internals/object-get-own-property-names\\\":124,\\\"../internals/object-get-own-property-symbols\\\":125}],132:[function(require,module,exports){\\nvar global = require('../internals/global');\\n\\nmodule.exports = global;\\n\\n},{\\\"../internals/global\\\":97}],133:[function(require,module,exports){\\nvar redefine = require('../internals/redefine');\\n\\nmodule.exports = function (target, src, options) {\\n  for (var key in src) redefine(target, key, src[key], options);\\n  return target;\\n};\\n\\n},{\\\"../internals/redefine\\\":134}],134:[function(require,module,exports){\\nvar global = require('../internals/global');\\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\\nvar has = require('../internals/has');\\nvar setGlobal = require('../internals/set-global');\\nvar inspectSource = require('../internals/inspect-source');\\nvar InternalStateModule = require('../internals/internal-state');\\n\\nvar getInternalState = InternalStateModule.get;\\nvar enforceInternalState = InternalStateModule.enforce;\\nvar TEMPLATE = String(String).split('String');\\n\\n(module.exports = function (O, key, value, options) {\\n  var unsafe = options ? !!options.unsafe : false;\\n  var simple = options ? !!options.enumerable : false;\\n  var noTargetGet = options ? !!options.noTargetGet : false;\\n  var state;\\n  if (typeof value == 'function') {\\n    if (typeof key == 'string' && !has(value, 'name')) {\\n      createNonEnumerableProperty(value, 'name', key);\\n    }\\n    state = enforceInternalState(value);\\n    if (!state.source) {\\n      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');\\n    }\\n  }\\n  if (O === global) {\\n    if (simple) O[key] = value;\\n    else setGlobal(key, value);\\n    return;\\n  } else if (!unsafe) {\\n    delete O[key];\\n  } else if (!noTargetGet && O[key]) {\\n    simple = true;\\n  }\\n  if (simple) O[key] = value;\\n  else createNonEnumerableProperty(O, key, value);\\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\\n})(Function.prototype, 'toString', function toString() {\\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\\n});\\n\\n},{\\\"../internals/create-non-enumerable-property\\\":77,\\\"../internals/global\\\":97,\\\"../internals/has\\\":98,\\\"../internals/inspect-source\\\":105,\\\"../internals/internal-state\\\":106,\\\"../internals/set-global\\\":141}],135:[function(require,module,exports){\\nvar classof = require('./classof-raw');\\nvar regexpExec = require('./regexp-exec');\\n\\n// `RegExpExec` abstract operation\\n// https://tc39.es/ecma262/#sec-regexpexec\\nmodule.exports = function (R, S) {\\n  var exec = R.exec;\\n  if (typeof exec === 'function') {\\n    var result = exec.call(R, S);\\n    if (typeof result !== 'object') {\\n      throw TypeError('RegExp exec method returned something other than an Object or null');\\n    }\\n    return result;\\n  }\\n\\n  if (classof(R) !== 'RegExp') {\\n    throw TypeError('RegExp#exec called on incompatible receiver');\\n  }\\n\\n  return regexpExec.call(R, S);\\n};\\n\\n\\n},{\\\"./classof-raw\\\":71,\\\"./regexp-exec\\\":136}],136:[function(require,module,exports){\\n'use strict';\\nvar regexpFlags = require('./regexp-flags');\\nvar stickyHelpers = require('./regexp-sticky-helpers');\\n\\nvar nativeExec = RegExp.prototype.exec;\\n// This always refers to the native implementation, because the\\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\\n// which loads this file before patching the method.\\nvar nativeReplace = String.prototype.replace;\\n\\nvar patchedExec = nativeExec;\\n\\nvar UPDATES_LAST_INDEX_WRONG = (function () {\\n  var re1 = /a/;\\n  var re2 = /b*/g;\\n  nativeExec.call(re1, 'a');\\n  nativeExec.call(re2, 'a');\\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\\n})();\\n\\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\\n\\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\\n// eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group -- required for testing\\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\\n\\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\\n\\nif (PATCH) {\\n  patchedExec = function exec(str) {\\n    var re = this;\\n    var lastIndex, reCopy, match, i;\\n    var sticky = UNSUPPORTED_Y && re.sticky;\\n    var flags = regexpFlags.call(re);\\n    var source = re.source;\\n    var charsAdded = 0;\\n    var strCopy = str;\\n\\n    if (sticky) {\\n      flags = flags.replace('y', '');\\n      if (flags.indexOf('g') === -1) {\\n        flags += 'g';\\n      }\\n\\n      strCopy = String(str).slice(re.lastIndex);\\n      // Support anchored sticky behavior.\\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\\\n')) {\\n        source = '(?: ' + source + ')';\\n        strCopy = ' ' + strCopy;\\n        charsAdded++;\\n      }\\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\\n      // simulate the 'y' flag.\\n      reCopy = new RegExp('^(?:' + source + ')', flags);\\n    }\\n\\n    if (NPCG_INCLUDED) {\\n      reCopy = new RegExp('^' + source + '$(?!\\\\\\\\s)', flags);\\n    }\\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\\n\\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\\n\\n    if (sticky) {\\n      if (match) {\\n        match.input = match.input.slice(charsAdded);\\n        match[0] = match[0].slice(charsAdded);\\n        match.index = re.lastIndex;\\n        re.lastIndex += match[0].length;\\n      } else re.lastIndex = 0;\\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\\n    }\\n    if (NPCG_INCLUDED && match && match.length > 1) {\\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\\n      nativeReplace.call(match[0], reCopy, function () {\\n        for (i = 1; i < arguments.length - 2; i++) {\\n          if (arguments[i] === undefined) match[i] = undefined;\\n        }\\n      });\\n    }\\n\\n    return match;\\n  };\\n}\\n\\nmodule.exports = patchedExec;\\n\\n},{\\\"./regexp-flags\\\":137,\\\"./regexp-sticky-helpers\\\":138}],137:[function(require,module,exports){\\n'use strict';\\nvar anObject = require('../internals/an-object');\\n\\n// `RegExp.prototype.flags` getter implementation\\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\\nmodule.exports = function () {\\n  var that = anObject(this);\\n  var result = '';\\n  if (that.global) result += 'g';\\n  if (that.ignoreCase) result += 'i';\\n  if (that.multiline) result += 'm';\\n  if (that.dotAll) result += 's';\\n  if (that.unicode) result += 'u';\\n  if (that.sticky) result += 'y';\\n  return result;\\n};\\n\\n},{\\\"../internals/an-object\\\":60}],138:[function(require,module,exports){\\n'use strict';\\n\\nvar fails = require('./fails');\\n\\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\\n// so we use an intermediate function.\\nfunction RE(s, f) {\\n  return RegExp(s, f);\\n}\\n\\nexports.UNSUPPORTED_Y = fails(function () {\\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\\n  var re = RE('a', 'y');\\n  re.lastIndex = 2;\\n  return re.exec('abcd') != null;\\n});\\n\\nexports.BROKEN_CARET = fails(function () {\\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\\n  var re = RE('^r', 'gy');\\n  re.lastIndex = 2;\\n  return re.exec('str') != null;\\n});\\n\\n},{\\\"./fails\\\":89}],139:[function(require,module,exports){\\n// `RequireObjectCoercible` abstract operation\\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\\nmodule.exports = function (it) {\\n  if (it == undefined) throw TypeError(\\\"Can't call method on \\\" + it);\\n  return it;\\n};\\n\\n},{}],140:[function(require,module,exports){\\n// `SameValueZero` abstract operation\\n// https://tc39.es/ecma262/#sec-samevaluezero\\nmodule.exports = function (x, y) {\\n  // eslint-disable-next-line no-self-compare -- NaN check\\n  return x === y || x != x && y != y;\\n};\\n\\n},{}],141:[function(require,module,exports){\\nvar global = require('../internals/global');\\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\\n\\nmodule.exports = function (key, value) {\\n  try {\\n    createNonEnumerableProperty(global, key, value);\\n  } catch (error) {\\n    global[key] = value;\\n  } return value;\\n};\\n\\n},{\\\"../internals/create-non-enumerable-property\\\":77,\\\"../internals/global\\\":97}],142:[function(require,module,exports){\\n'use strict';\\nvar getBuiltIn = require('../internals/get-built-in');\\nvar definePropertyModule = require('../internals/object-define-property');\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\nvar DESCRIPTORS = require('../internals/descriptors');\\n\\nvar SPECIES = wellKnownSymbol('species');\\n\\nmodule.exports = function (CONSTRUCTOR_NAME) {\\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\\n  var defineProperty = definePropertyModule.f;\\n\\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\\n    defineProperty(Constructor, SPECIES, {\\n      configurable: true,\\n      get: function () { return this; }\\n    });\\n  }\\n};\\n\\n},{\\\"../internals/descriptors\\\":81,\\\"../internals/get-built-in\\\":92,\\\"../internals/object-define-property\\\":122,\\\"../internals/well-known-symbol\\\":165}],143:[function(require,module,exports){\\nvar defineProperty = require('../internals/object-define-property').f;\\nvar has = require('../internals/has');\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\n\\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\\n\\nmodule.exports = function (it, TAG, STATIC) {\\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\\n  }\\n};\\n\\n},{\\\"../internals/has\\\":98,\\\"../internals/object-define-property\\\":122,\\\"../internals/well-known-symbol\\\":165}],144:[function(require,module,exports){\\nvar shared = require('../internals/shared');\\nvar uid = require('../internals/uid');\\n\\nvar keys = shared('keys');\\n\\nmodule.exports = function (key) {\\n  return keys[key] || (keys[key] = uid(key));\\n};\\n\\n},{\\\"../internals/shared\\\":146,\\\"../internals/uid\\\":163}],145:[function(require,module,exports){\\nvar global = require('../internals/global');\\nvar setGlobal = require('../internals/set-global');\\n\\nvar SHARED = '__core-js_shared__';\\nvar store = global[SHARED] || setGlobal(SHARED, {});\\n\\nmodule.exports = store;\\n\\n},{\\\"../internals/global\\\":97,\\\"../internals/set-global\\\":141}],146:[function(require,module,exports){\\nvar IS_PURE = require('../internals/is-pure');\\nvar store = require('../internals/shared-store');\\n\\n(module.exports = function (key, value) {\\n  return store[key] || (store[key] = value !== undefined ? value : {});\\n})('versions', []).push({\\n  version: '3.9.1',\\n  mode: IS_PURE ? 'pure' : 'global',\\n  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'\\n});\\n\\n},{\\\"../internals/is-pure\\\":111,\\\"../internals/shared-store\\\":145}],147:[function(require,module,exports){\\nvar anObject = require('../internals/an-object');\\nvar aFunction = require('../internals/a-function');\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\n\\nvar SPECIES = wellKnownSymbol('species');\\n\\n// `SpeciesConstructor` abstract operation\\n// https://tc39.es/ecma262/#sec-speciesconstructor\\nmodule.exports = function (O, defaultConstructor) {\\n  var C = anObject(O).constructor;\\n  var S;\\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\\n};\\n\\n},{\\\"../internals/a-function\\\":55,\\\"../internals/an-object\\\":60,\\\"../internals/well-known-symbol\\\":165}],148:[function(require,module,exports){\\nvar toInteger = require('../internals/to-integer');\\nvar requireObjectCoercible = require('../internals/require-object-coercible');\\n\\n// `String.prototype.{ codePointAt, at }` methods implementation\\nvar createMethod = function (CONVERT_TO_STRING) {\\n  return function ($this, pos) {\\n    var S = String(requireObjectCoercible($this));\\n    var position = toInteger(pos);\\n    var size = S.length;\\n    var first, second;\\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\\n    first = S.charCodeAt(position);\\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\\n  };\\n};\\n\\nmodule.exports = {\\n  // `String.prototype.codePointAt` method\\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\\n  codeAt: createMethod(false),\\n  // `String.prototype.at` method\\n  // https://github.com/mathiasbynens/String.prototype.at\\n  charAt: createMethod(true)\\n};\\n\\n},{\\\"../internals/require-object-coercible\\\":139,\\\"../internals/to-integer\\\":153}],149:[function(require,module,exports){\\n'use strict';\\n// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js\\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\\nvar base = 36;\\nvar tMin = 1;\\nvar tMax = 26;\\nvar skew = 38;\\nvar damp = 700;\\nvar initialBias = 72;\\nvar initialN = 128; // 0x80\\nvar delimiter = '-'; // '\\\\x2D'\\nvar regexNonASCII = /[^\\\\0-\\\\u007E]/; // non-ASCII chars\\nvar regexSeparators = /[.\\\\u3002\\\\uFF0E\\\\uFF61]/g; // RFC 3490 separators\\nvar OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\\nvar baseMinusTMin = base - tMin;\\nvar floor = Math.floor;\\nvar stringFromCharCode = String.fromCharCode;\\n\\n/**\\n * Creates an array containing the numeric code points of each Unicode\\n * character in the string. While JavaScript uses UCS-2 internally,\\n * this function will convert a pair of surrogate halves (each of which\\n * UCS-2 exposes as separate characters) into a single code point,\\n * matching UTF-16.\\n */\\nvar ucs2decode = function (string) {\\n  var output = [];\\n  var counter = 0;\\n  var length = string.length;\\n  while (counter < length) {\\n    var value = string.charCodeAt(counter++);\\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\\n      // It's a high surrogate, and there is a next character.\\n      var extra = string.charCodeAt(counter++);\\n      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\\n      } else {\\n        // It's an unmatched surrogate; only append this code unit, in case the\\n        // next code unit is the high surrogate of a surrogate pair.\\n        output.push(value);\\n        counter--;\\n      }\\n    } else {\\n      output.push(value);\\n    }\\n  }\\n  return output;\\n};\\n\\n/**\\n * Converts a digit/integer into a basic code point.\\n */\\nvar digitToBasic = function (digit) {\\n  //  0..25 map to ASCII a..z or A..Z\\n  // 26..35 map to ASCII 0..9\\n  return digit + 22 + 75 * (digit < 26);\\n};\\n\\n/**\\n * Bias adaptation function as per section 3.4 of RFC 3492.\\n * https://tools.ietf.org/html/rfc3492#section-3.4\\n */\\nvar adapt = function (delta, numPoints, firstTime) {\\n  var k = 0;\\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\\n  delta += floor(delta / numPoints);\\n  for (; delta > baseMinusTMin * tMax >> 1; k += base) {\\n    delta = floor(delta / baseMinusTMin);\\n  }\\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\\n};\\n\\n/**\\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\\n * Punycode string of ASCII-only symbols.\\n */\\n// eslint-disable-next-line max-statements -- TODO\\nvar encode = function (input) {\\n  var output = [];\\n\\n  // Convert the input in UCS-2 to an array of Unicode code points.\\n  input = ucs2decode(input);\\n\\n  // Cache the length.\\n  var inputLength = input.length;\\n\\n  // Initialize the state.\\n  var n = initialN;\\n  var delta = 0;\\n  var bias = initialBias;\\n  var i, currentValue;\\n\\n  // Handle the basic code points.\\n  for (i = 0; i < input.length; i++) {\\n    currentValue = input[i];\\n    if (currentValue < 0x80) {\\n      output.push(stringFromCharCode(currentValue));\\n    }\\n  }\\n\\n  var basicLength = output.length; // number of basic code points.\\n  var handledCPCount = basicLength; // number of code points that have been handled;\\n\\n  // Finish the basic string with a delimiter unless it's empty.\\n  if (basicLength) {\\n    output.push(delimiter);\\n  }\\n\\n  // Main encoding loop:\\n  while (handledCPCount < inputLength) {\\n    // All non-basic code points < n have been handled already. Find the next larger one:\\n    var m = maxInt;\\n    for (i = 0; i < input.length; i++) {\\n      currentValue = input[i];\\n      if (currentValue >= n && currentValue < m) {\\n        m = currentValue;\\n      }\\n    }\\n\\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.\\n    var handledCPCountPlusOne = handledCPCount + 1;\\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\\n      throw RangeError(OVERFLOW_ERROR);\\n    }\\n\\n    delta += (m - n) * handledCPCountPlusOne;\\n    n = m;\\n\\n    for (i = 0; i < input.length; i++) {\\n      currentValue = input[i];\\n      if (currentValue < n && ++delta > maxInt) {\\n        throw RangeError(OVERFLOW_ERROR);\\n      }\\n      if (currentValue == n) {\\n        // Represent delta as a generalized variable-length integer.\\n        var q = delta;\\n        for (var k = base; /* no condition */; k += base) {\\n          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\\n          if (q < t) break;\\n          var qMinusT = q - t;\\n          var baseMinusT = base - t;\\n          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\\n          q = floor(qMinusT / baseMinusT);\\n        }\\n\\n        output.push(stringFromCharCode(digitToBasic(q)));\\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\\n        delta = 0;\\n        ++handledCPCount;\\n      }\\n    }\\n\\n    ++delta;\\n    ++n;\\n  }\\n  return output.join('');\\n};\\n\\nmodule.exports = function (input) {\\n  var encoded = [];\\n  var labels = input.toLowerCase().replace(regexSeparators, '\\\\u002E').split('.');\\n  var i, label;\\n  for (i = 0; i < labels.length; i++) {\\n    label = labels[i];\\n    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);\\n  }\\n  return encoded.join('.');\\n};\\n\\n},{}],150:[function(require,module,exports){\\nvar toInteger = require('../internals/to-integer');\\n\\nvar max = Math.max;\\nvar min = Math.min;\\n\\n// Helper for a popular repeating case of the spec:\\n// Let integer be ? ToInteger(index).\\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\\nmodule.exports = function (index, length) {\\n  var integer = toInteger(index);\\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\\n};\\n\\n},{\\\"../internals/to-integer\\\":153}],151:[function(require,module,exports){\\nvar toInteger = require('../internals/to-integer');\\nvar toLength = require('../internals/to-length');\\n\\n// `ToIndex` abstract operation\\n// https://tc39.es/ecma262/#sec-toindex\\nmodule.exports = function (it) {\\n  if (it === undefined) return 0;\\n  var number = toInteger(it);\\n  var length = toLength(number);\\n  if (number !== length) throw RangeError('Wrong length or index');\\n  return length;\\n};\\n\\n},{\\\"../internals/to-integer\\\":153,\\\"../internals/to-length\\\":154}],152:[function(require,module,exports){\\n// toObject with fallback for non-array-like ES3 strings\\nvar IndexedObject = require('../internals/indexed-object');\\nvar requireObjectCoercible = require('../internals/require-object-coercible');\\n\\nmodule.exports = function (it) {\\n  return IndexedObject(requireObjectCoercible(it));\\n};\\n\\n},{\\\"../internals/indexed-object\\\":103,\\\"../internals/require-object-coercible\\\":139}],153:[function(require,module,exports){\\nvar ceil = Math.ceil;\\nvar floor = Math.floor;\\n\\n// `ToInteger` abstract operation\\n// https://tc39.es/ecma262/#sec-tointeger\\nmodule.exports = function (argument) {\\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\\n};\\n\\n},{}],154:[function(require,module,exports){\\nvar toInteger = require('../internals/to-integer');\\n\\nvar min = Math.min;\\n\\n// `ToLength` abstract operation\\n// https://tc39.es/ecma262/#sec-tolength\\nmodule.exports = function (argument) {\\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\\n};\\n\\n},{\\\"../internals/to-integer\\\":153}],155:[function(require,module,exports){\\nvar requireObjectCoercible = require('../internals/require-object-coercible');\\n\\n// `ToObject` abstract operation\\n// https://tc39.es/ecma262/#sec-toobject\\nmodule.exports = function (argument) {\\n  return Object(requireObjectCoercible(argument));\\n};\\n\\n},{\\\"../internals/require-object-coercible\\\":139}],156:[function(require,module,exports){\\nvar toPositiveInteger = require('../internals/to-positive-integer');\\n\\nmodule.exports = function (it, BYTES) {\\n  var offset = toPositiveInteger(it);\\n  if (offset % BYTES) throw RangeError('Wrong offset');\\n  return offset;\\n};\\n\\n},{\\\"../internals/to-positive-integer\\\":157}],157:[function(require,module,exports){\\nvar toInteger = require('../internals/to-integer');\\n\\nmodule.exports = function (it) {\\n  var result = toInteger(it);\\n  if (result < 0) throw RangeError(\\\"The argument can't be less than 0\\\");\\n  return result;\\n};\\n\\n},{\\\"../internals/to-integer\\\":153}],158:[function(require,module,exports){\\nvar isObject = require('../internals/is-object');\\n\\n// `ToPrimitive` abstract operation\\n// https://tc39.es/ecma262/#sec-toprimitive\\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\\n// and the second argument - flag - preferred type is a string\\nmodule.exports = function (input, PREFERRED_STRING) {\\n  if (!isObject(input)) return input;\\n  var fn, val;\\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\\n  throw TypeError(\\\"Can't convert object to primitive value\\\");\\n};\\n\\n},{\\\"../internals/is-object\\\":110}],159:[function(require,module,exports){\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\n\\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\\nvar test = {};\\n\\ntest[TO_STRING_TAG] = 'z';\\n\\nmodule.exports = String(test) === '[object z]';\\n\\n},{\\\"../internals/well-known-symbol\\\":165}],160:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar global = require('../internals/global');\\nvar DESCRIPTORS = require('../internals/descriptors');\\nvar TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = require('../internals/typed-array-constructors-require-wrappers');\\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\\nvar ArrayBufferModule = require('../internals/array-buffer');\\nvar anInstance = require('../internals/an-instance');\\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\\nvar toLength = require('../internals/to-length');\\nvar toIndex = require('../internals/to-index');\\nvar toOffset = require('../internals/to-offset');\\nvar toPrimitive = require('../internals/to-primitive');\\nvar has = require('../internals/has');\\nvar classof = require('../internals/classof');\\nvar isObject = require('../internals/is-object');\\nvar create = require('../internals/object-create');\\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\\nvar typedArrayFrom = require('../internals/typed-array-from');\\nvar forEach = require('../internals/array-iteration').forEach;\\nvar setSpecies = require('../internals/set-species');\\nvar definePropertyModule = require('../internals/object-define-property');\\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\\nvar InternalStateModule = require('../internals/internal-state');\\nvar inheritIfRequired = require('../internals/inherit-if-required');\\n\\nvar getInternalState = InternalStateModule.get;\\nvar setInternalState = InternalStateModule.set;\\nvar nativeDefineProperty = definePropertyModule.f;\\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\\nvar round = Math.round;\\nvar RangeError = global.RangeError;\\nvar ArrayBuffer = ArrayBufferModule.ArrayBuffer;\\nvar DataView = ArrayBufferModule.DataView;\\nvar NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;\\nvar TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;\\nvar TypedArray = ArrayBufferViewCore.TypedArray;\\nvar TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;\\nvar aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;\\nvar isTypedArray = ArrayBufferViewCore.isTypedArray;\\nvar BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\\nvar WRONG_LENGTH = 'Wrong length';\\n\\nvar fromList = function (C, list) {\\n  var index = 0;\\n  var length = list.length;\\n  var result = new (aTypedArrayConstructor(C))(length);\\n  while (length > index) result[index] = list[index++];\\n  return result;\\n};\\n\\nvar addGetter = function (it, key) {\\n  nativeDefineProperty(it, key, { get: function () {\\n    return getInternalState(this)[key];\\n  } });\\n};\\n\\nvar isArrayBuffer = function (it) {\\n  var klass;\\n  return it instanceof ArrayBuffer || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';\\n};\\n\\nvar isTypedArrayIndex = function (target, key) {\\n  return isTypedArray(target)\\n    && typeof key != 'symbol'\\n    && key in target\\n    && String(+key) == String(key);\\n};\\n\\nvar wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {\\n  return isTypedArrayIndex(target, key = toPrimitive(key, true))\\n    ? createPropertyDescriptor(2, target[key])\\n    : nativeGetOwnPropertyDescriptor(target, key);\\n};\\n\\nvar wrappedDefineProperty = function defineProperty(target, key, descriptor) {\\n  if (isTypedArrayIndex(target, key = toPrimitive(key, true))\\n    && isObject(descriptor)\\n    && has(descriptor, 'value')\\n    && !has(descriptor, 'get')\\n    && !has(descriptor, 'set')\\n    // TODO: add validation descriptor w/o calling accessors\\n    && !descriptor.configurable\\n    && (!has(descriptor, 'writable') || descriptor.writable)\\n    && (!has(descriptor, 'enumerable') || descriptor.enumerable)\\n  ) {\\n    target[key] = descriptor.value;\\n    return target;\\n  } return nativeDefineProperty(target, key, descriptor);\\n};\\n\\nif (DESCRIPTORS) {\\n  if (!NATIVE_ARRAY_BUFFER_VIEWS) {\\n    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;\\n    definePropertyModule.f = wrappedDefineProperty;\\n    addGetter(TypedArrayPrototype, 'buffer');\\n    addGetter(TypedArrayPrototype, 'byteOffset');\\n    addGetter(TypedArrayPrototype, 'byteLength');\\n    addGetter(TypedArrayPrototype, 'length');\\n  }\\n\\n  $({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {\\n    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,\\n    defineProperty: wrappedDefineProperty\\n  });\\n\\n  module.exports = function (TYPE, wrapper, CLAMPED) {\\n    var BYTES = TYPE.match(/\\\\d+$/)[0] / 8;\\n    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';\\n    var GETTER = 'get' + TYPE;\\n    var SETTER = 'set' + TYPE;\\n    var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];\\n    var TypedArrayConstructor = NativeTypedArrayConstructor;\\n    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;\\n    var exported = {};\\n\\n    var getter = function (that, index) {\\n      var data = getInternalState(that);\\n      return data.view[GETTER](index * BYTES + data.byteOffset, true);\\n    };\\n\\n    var setter = function (that, index, value) {\\n      var data = getInternalState(that);\\n      if (CLAMPED) value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;\\n      data.view[SETTER](index * BYTES + data.byteOffset, value, true);\\n    };\\n\\n    var addElement = function (that, index) {\\n      nativeDefineProperty(that, index, {\\n        get: function () {\\n          return getter(this, index);\\n        },\\n        set: function (value) {\\n          return setter(this, index, value);\\n        },\\n        enumerable: true\\n      });\\n    };\\n\\n    if (!NATIVE_ARRAY_BUFFER_VIEWS) {\\n      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {\\n        anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);\\n        var index = 0;\\n        var byteOffset = 0;\\n        var buffer, byteLength, length;\\n        if (!isObject(data)) {\\n          length = toIndex(data);\\n          byteLength = length * BYTES;\\n          buffer = new ArrayBuffer(byteLength);\\n        } else if (isArrayBuffer(data)) {\\n          buffer = data;\\n          byteOffset = toOffset(offset, BYTES);\\n          var $len = data.byteLength;\\n          if ($length === undefined) {\\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\\n            byteLength = $len - byteOffset;\\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\\n          } else {\\n            byteLength = toLength($length) * BYTES;\\n            if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);\\n          }\\n          length = byteLength / BYTES;\\n        } else if (isTypedArray(data)) {\\n          return fromList(TypedArrayConstructor, data);\\n        } else {\\n          return typedArrayFrom.call(TypedArrayConstructor, data);\\n        }\\n        setInternalState(that, {\\n          buffer: buffer,\\n          byteOffset: byteOffset,\\n          byteLength: byteLength,\\n          length: length,\\n          view: new DataView(buffer)\\n        });\\n        while (index < length) addElement(that, index++);\\n      });\\n\\n      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);\\n      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);\\n    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {\\n      TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {\\n        anInstance(dummy, TypedArrayConstructor, CONSTRUCTOR_NAME);\\n        return inheritIfRequired(function () {\\n          if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));\\n          if (isArrayBuffer(data)) return $length !== undefined\\n            ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length)\\n            : typedArrayOffset !== undefined\\n              ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES))\\n              : new NativeTypedArrayConstructor(data);\\n          if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);\\n          return typedArrayFrom.call(TypedArrayConstructor, data);\\n        }(), dummy, TypedArrayConstructor);\\n      });\\n\\n      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);\\n      forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {\\n        if (!(key in TypedArrayConstructor)) {\\n          createNonEnumerableProperty(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);\\n        }\\n      });\\n      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;\\n    }\\n\\n    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {\\n      createNonEnumerableProperty(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);\\n    }\\n\\n    if (TYPED_ARRAY_TAG) {\\n      createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);\\n    }\\n\\n    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;\\n\\n    $({\\n      global: true, forced: TypedArrayConstructor != NativeTypedArrayConstructor, sham: !NATIVE_ARRAY_BUFFER_VIEWS\\n    }, exported);\\n\\n    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {\\n      createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);\\n    }\\n\\n    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {\\n      createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);\\n    }\\n\\n    setSpecies(CONSTRUCTOR_NAME);\\n  };\\n} else module.exports = function () { /* empty */ };\\n\\n},{\\\"../internals/an-instance\\\":59,\\\"../internals/array-buffer\\\":63,\\\"../internals/array-buffer-view-core\\\":62,\\\"../internals/array-iteration\\\":67,\\\"../internals/classof\\\":72,\\\"../internals/create-non-enumerable-property\\\":77,\\\"../internals/create-property-descriptor\\\":78,\\\"../internals/descriptors\\\":81,\\\"../internals/export\\\":88,\\\"../internals/global\\\":97,\\\"../internals/has\\\":98,\\\"../internals/inherit-if-required\\\":104,\\\"../internals/internal-state\\\":106,\\\"../internals/is-object\\\":110,\\\"../internals/object-create\\\":120,\\\"../internals/object-define-property\\\":122,\\\"../internals/object-get-own-property-descriptor\\\":123,\\\"../internals/object-get-own-property-names\\\":124,\\\"../internals/object-set-prototype-of\\\":130,\\\"../internals/set-species\\\":142,\\\"../internals/to-index\\\":151,\\\"../internals/to-length\\\":154,\\\"../internals/to-offset\\\":156,\\\"../internals/to-primitive\\\":158,\\\"../internals/typed-array-constructors-require-wrappers\\\":161,\\\"../internals/typed-array-from\\\":162}],161:[function(require,module,exports){\\n/* eslint-disable no-new -- required for testing */\\nvar global = require('../internals/global');\\nvar fails = require('../internals/fails');\\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\\nvar NATIVE_ARRAY_BUFFER_VIEWS = require('../internals/array-buffer-view-core').NATIVE_ARRAY_BUFFER_VIEWS;\\n\\nvar ArrayBuffer = global.ArrayBuffer;\\nvar Int8Array = global.Int8Array;\\n\\nmodule.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {\\n  Int8Array(1);\\n}) || !fails(function () {\\n  new Int8Array(-1);\\n}) || !checkCorrectnessOfIteration(function (iterable) {\\n  new Int8Array();\\n  new Int8Array(null);\\n  new Int8Array(1.5);\\n  new Int8Array(iterable);\\n}, true) || fails(function () {\\n  // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill\\n  return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;\\n});\\n\\n},{\\\"../internals/array-buffer-view-core\\\":62,\\\"../internals/check-correctness-of-iteration\\\":70,\\\"../internals/fails\\\":89,\\\"../internals/global\\\":97}],162:[function(require,module,exports){\\nvar toObject = require('../internals/to-object');\\nvar toLength = require('../internals/to-length');\\nvar getIteratorMethod = require('../internals/get-iterator-method');\\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\\nvar bind = require('../internals/function-bind-context');\\nvar aTypedArrayConstructor = require('../internals/array-buffer-view-core').aTypedArrayConstructor;\\n\\nmodule.exports = function from(source /* , mapfn, thisArg */) {\\n  var O = toObject(source);\\n  var argumentsLength = arguments.length;\\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\\n  var mapping = mapfn !== undefined;\\n  var iteratorMethod = getIteratorMethod(O);\\n  var i, length, result, step, iterator, next;\\n  if (iteratorMethod != undefined && !isArrayIteratorMethod(iteratorMethod)) {\\n    iterator = iteratorMethod.call(O);\\n    next = iterator.next;\\n    O = [];\\n    while (!(step = next.call(iterator)).done) {\\n      O.push(step.value);\\n    }\\n  }\\n  if (mapping && argumentsLength > 2) {\\n    mapfn = bind(mapfn, arguments[2], 2);\\n  }\\n  length = toLength(O.length);\\n  result = new (aTypedArrayConstructor(this))(length);\\n  for (i = 0; length > i; i++) {\\n    result[i] = mapping ? mapfn(O[i], i) : O[i];\\n  }\\n  return result;\\n};\\n\\n},{\\\"../internals/array-buffer-view-core\\\":62,\\\"../internals/function-bind-context\\\":91,\\\"../internals/get-iterator-method\\\":93,\\\"../internals/is-array-iterator-method\\\":107,\\\"../internals/to-length\\\":154,\\\"../internals/to-object\\\":155}],163:[function(require,module,exports){\\nvar id = 0;\\nvar postfix = Math.random();\\n\\nmodule.exports = function (key) {\\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\\n};\\n\\n},{}],164:[function(require,module,exports){\\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\\n\\nmodule.exports = NATIVE_SYMBOL\\n  /* global Symbol -- safe */\\n  && !Symbol.sham\\n  && typeof Symbol.iterator == 'symbol';\\n\\n},{\\\"../internals/native-symbol\\\":116}],165:[function(require,module,exports){\\nvar global = require('../internals/global');\\nvar shared = require('../internals/shared');\\nvar has = require('../internals/has');\\nvar uid = require('../internals/uid');\\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\\n\\nvar WellKnownSymbolsStore = shared('wks');\\nvar Symbol = global.Symbol;\\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\\n\\nmodule.exports = function (name) {\\n  if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\\n    if (NATIVE_SYMBOL && has(Symbol, name)) {\\n      WellKnownSymbolsStore[name] = Symbol[name];\\n    } else {\\n      WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\\n    }\\n  } return WellKnownSymbolsStore[name];\\n};\\n\\n},{\\\"../internals/global\\\":97,\\\"../internals/has\\\":98,\\\"../internals/native-symbol\\\":116,\\\"../internals/shared\\\":146,\\\"../internals/uid\\\":163,\\\"../internals/use-symbol-as-uid\\\":164}],166:[function(require,module,exports){\\n'use strict';\\nvar toIndexedObject = require('../internals/to-indexed-object');\\nvar addToUnscopables = require('../internals/add-to-unscopables');\\nvar Iterators = require('../internals/iterators');\\nvar InternalStateModule = require('../internals/internal-state');\\nvar defineIterator = require('../internals/define-iterator');\\n\\nvar ARRAY_ITERATOR = 'Array Iterator';\\nvar setInternalState = InternalStateModule.set;\\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\\n\\n// `Array.prototype.entries` method\\n// https://tc39.es/ecma262/#sec-array.prototype.entries\\n// `Array.prototype.keys` method\\n// https://tc39.es/ecma262/#sec-array.prototype.keys\\n// `Array.prototype.values` method\\n// https://tc39.es/ecma262/#sec-array.prototype.values\\n// `Array.prototype[@@iterator]` method\\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\\n// `CreateArrayIterator` internal method\\n// https://tc39.es/ecma262/#sec-createarrayiterator\\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\\n  setInternalState(this, {\\n    type: ARRAY_ITERATOR,\\n    target: toIndexedObject(iterated), // target\\n    index: 0,                          // next index\\n    kind: kind                         // kind\\n  });\\n// `%ArrayIteratorPrototype%.next` method\\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\\n}, function () {\\n  var state = getInternalState(this);\\n  var target = state.target;\\n  var kind = state.kind;\\n  var index = state.index++;\\n  if (!target || index >= target.length) {\\n    state.target = undefined;\\n    return { value: undefined, done: true };\\n  }\\n  if (kind == 'keys') return { value: index, done: false };\\n  if (kind == 'values') return { value: target[index], done: false };\\n  return { value: [index, target[index]], done: false };\\n}, 'values');\\n\\n// argumentsList[@@iterator] is %ArrayProto_values%\\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\\nIterators.Arguments = Iterators.Array;\\n\\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\\naddToUnscopables('keys');\\naddToUnscopables('values');\\naddToUnscopables('entries');\\n\\n},{\\\"../internals/add-to-unscopables\\\":57,\\\"../internals/define-iterator\\\":80,\\\"../internals/internal-state\\\":106,\\\"../internals/iterators\\\":115,\\\"../internals/to-indexed-object\\\":152}],167:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar exec = require('../internals/regexp-exec');\\n\\n// `RegExp.prototype.exec` method\\n// https://tc39.es/ecma262/#sec-regexp.prototype.exec\\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\\n  exec: exec\\n});\\n\\n},{\\\"../internals/export\\\":88,\\\"../internals/regexp-exec\\\":136}],168:[function(require,module,exports){\\n'use strict';\\nvar charAt = require('../internals/string-multibyte').charAt;\\nvar InternalStateModule = require('../internals/internal-state');\\nvar defineIterator = require('../internals/define-iterator');\\n\\nvar STRING_ITERATOR = 'String Iterator';\\nvar setInternalState = InternalStateModule.set;\\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\\n\\n// `String.prototype[@@iterator]` method\\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\\ndefineIterator(String, 'String', function (iterated) {\\n  setInternalState(this, {\\n    type: STRING_ITERATOR,\\n    string: String(iterated),\\n    index: 0\\n  });\\n// `%StringIteratorPrototype%.next` method\\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\\n}, function next() {\\n  var state = getInternalState(this);\\n  var string = state.string;\\n  var index = state.index;\\n  var point;\\n  if (index >= string.length) return { value: undefined, done: true };\\n  point = charAt(string, index);\\n  state.index += point.length;\\n  return { value: point, done: false };\\n});\\n\\n},{\\\"../internals/define-iterator\\\":80,\\\"../internals/internal-state\\\":106,\\\"../internals/string-multibyte\\\":148}],169:[function(require,module,exports){\\n'use strict';\\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\\nvar anObject = require('../internals/an-object');\\nvar toLength = require('../internals/to-length');\\nvar toInteger = require('../internals/to-integer');\\nvar requireObjectCoercible = require('../internals/require-object-coercible');\\nvar advanceStringIndex = require('../internals/advance-string-index');\\nvar getSubstitution = require('../internals/get-substitution');\\nvar regExpExec = require('../internals/regexp-exec-abstract');\\n\\nvar max = Math.max;\\nvar min = Math.min;\\n\\nvar maybeToString = function (it) {\\n  return it === undefined ? it : String(it);\\n};\\n\\n// @@replace logic\\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\\n\\n  return [\\n    // `String.prototype.replace` method\\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\\n    function replace(searchValue, replaceValue) {\\n      var O = requireObjectCoercible(this);\\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\\n      return replacer !== undefined\\n        ? replacer.call(searchValue, O, replaceValue)\\n        : nativeReplace.call(String(O), searchValue, replaceValue);\\n    },\\n    // `RegExp.prototype[@@replace]` method\\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\\n    function (regexp, replaceValue) {\\n      if (\\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\\n      ) {\\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\\n        if (res.done) return res.value;\\n      }\\n\\n      var rx = anObject(regexp);\\n      var S = String(this);\\n\\n      var functionalReplace = typeof replaceValue === 'function';\\n      if (!functionalReplace) replaceValue = String(replaceValue);\\n\\n      var global = rx.global;\\n      if (global) {\\n        var fullUnicode = rx.unicode;\\n        rx.lastIndex = 0;\\n      }\\n      var results = [];\\n      while (true) {\\n        var result = regExpExec(rx, S);\\n        if (result === null) break;\\n\\n        results.push(result);\\n        if (!global) break;\\n\\n        var matchStr = String(result[0]);\\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\\n      }\\n\\n      var accumulatedResult = '';\\n      var nextSourcePosition = 0;\\n      for (var i = 0; i < results.length; i++) {\\n        result = results[i];\\n\\n        var matched = String(result[0]);\\n        var position = max(min(toInteger(result.index), S.length), 0);\\n        var captures = [];\\n        // NOTE: This is equivalent to\\n        //   captures = result.slice(1).map(maybeToString)\\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\\n        // the slice polyfill when slicing native arrays) \\\"doesn't work\\\" in safari 9 and\\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\\n        var namedCaptures = result.groups;\\n        if (functionalReplace) {\\n          var replacerArgs = [matched].concat(captures, position, S);\\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\\n        } else {\\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\\n        }\\n        if (position >= nextSourcePosition) {\\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\\n          nextSourcePosition = position + matched.length;\\n        }\\n      }\\n      return accumulatedResult + S.slice(nextSourcePosition);\\n    }\\n  ];\\n});\\n\\n},{\\\"../internals/advance-string-index\\\":58,\\\"../internals/an-object\\\":60,\\\"../internals/fix-regexp-well-known-symbol-logic\\\":90,\\\"../internals/get-substitution\\\":96,\\\"../internals/regexp-exec-abstract\\\":135,\\\"../internals/require-object-coercible\\\":139,\\\"../internals/to-integer\\\":153,\\\"../internals/to-length\\\":154}],170:[function(require,module,exports){\\n'use strict';\\nvar TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = require('../internals/typed-array-constructors-require-wrappers');\\nvar exportTypedArrayStaticMethod = require('../internals/array-buffer-view-core').exportTypedArrayStaticMethod;\\nvar typedArrayFrom = require('../internals/typed-array-from');\\n\\n// `%TypedArray%.from` method\\n// https://tc39.es/ecma262/#sec-%typedarray%.from\\nexportTypedArrayStaticMethod('from', typedArrayFrom, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);\\n\\n},{\\\"../internals/array-buffer-view-core\\\":62,\\\"../internals/typed-array-constructors-require-wrappers\\\":161,\\\"../internals/typed-array-from\\\":162}],171:[function(require,module,exports){\\nvar createTypedArrayConstructor = require('../internals/typed-array-constructor');\\n\\n// `Uint8Array` constructor\\n// https://tc39.es/ecma262/#sec-typedarray-objects\\ncreateTypedArrayConstructor('Uint8', function (init) {\\n  return function Uint8Array(data, byteOffset, length) {\\n    return init(this, data, byteOffset, length);\\n  };\\n});\\n\\n},{\\\"../internals/typed-array-constructor\\\":160}],172:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar IS_PURE = require('../internals/is-pure');\\nvar collectionDeleteAll = require('../internals/collection-delete-all');\\n\\n// `Map.prototype.deleteAll` method\\n// https://github.com/tc39/proposal-collection-methods\\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\\n  deleteAll: function deleteAll(/* ...elements */) {\\n    return collectionDeleteAll.apply(this, arguments);\\n  }\\n});\\n\\n},{\\\"../internals/collection-delete-all\\\":73,\\\"../internals/export\\\":88,\\\"../internals/is-pure\\\":111}],173:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar IS_PURE = require('../internals/is-pure');\\nvar anObject = require('../internals/an-object');\\nvar bind = require('../internals/function-bind-context');\\nvar getMapIterator = require('../internals/get-map-iterator');\\nvar iterate = require('../internals/iterate');\\n\\n// `Map.prototype.every` method\\n// https://github.com/tc39/proposal-collection-methods\\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\\n  every: function every(callbackfn /* , thisArg */) {\\n    var map = anObject(this);\\n    var iterator = getMapIterator(map);\\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\\n    return !iterate(iterator, function (key, value, stop) {\\n      if (!boundFunction(value, key, map)) return stop();\\n    }, { AS_ENTRIES: true, IS_ITERATOR: true, INTERRUPTED: true }).stopped;\\n  }\\n});\\n\\n},{\\\"../internals/an-object\\\":60,\\\"../internals/export\\\":88,\\\"../internals/function-bind-context\\\":91,\\\"../internals/get-map-iterator\\\":95,\\\"../internals/is-pure\\\":111,\\\"../internals/iterate\\\":112}],174:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar IS_PURE = require('../internals/is-pure');\\nvar getBuiltIn = require('../internals/get-built-in');\\nvar anObject = require('../internals/an-object');\\nvar aFunction = require('../internals/a-function');\\nvar bind = require('../internals/function-bind-context');\\nvar speciesConstructor = require('../internals/species-constructor');\\nvar getMapIterator = require('../internals/get-map-iterator');\\nvar iterate = require('../internals/iterate');\\n\\n// `Map.prototype.filter` method\\n// https://github.com/tc39/proposal-collection-methods\\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\\n  filter: function filter(callbackfn /* , thisArg */) {\\n    var map = anObject(this);\\n    var iterator = getMapIterator(map);\\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\\n    var newMap = new (speciesConstructor(map, getBuiltIn('Map')))();\\n    var setter = aFunction(newMap.set);\\n    iterate(iterator, function (key, value) {\\n      if (boundFunction(value, key, map)) setter.call(newMap, key, value);\\n    }, { AS_ENTRIES: true, IS_ITERATOR: true });\\n    return newMap;\\n  }\\n});\\n\\n},{\\\"../internals/a-function\\\":55,\\\"../internals/an-object\\\":60,\\\"../internals/export\\\":88,\\\"../internals/function-bind-context\\\":91,\\\"../internals/get-built-in\\\":92,\\\"../internals/get-map-iterator\\\":95,\\\"../internals/is-pure\\\":111,\\\"../internals/iterate\\\":112,\\\"../internals/species-constructor\\\":147}],175:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar IS_PURE = require('../internals/is-pure');\\nvar anObject = require('../internals/an-object');\\nvar bind = require('../internals/function-bind-context');\\nvar getMapIterator = require('../internals/get-map-iterator');\\nvar iterate = require('../internals/iterate');\\n\\n// `Map.prototype.findKey` method\\n// https://github.com/tc39/proposal-collection-methods\\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\\n  findKey: function findKey(callbackfn /* , thisArg */) {\\n    var map = anObject(this);\\n    var iterator = getMapIterator(map);\\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\\n    return iterate(iterator, function (key, value, stop) {\\n      if (boundFunction(value, key, map)) return stop(key);\\n    }, { AS_ENTRIES: true, IS_ITERATOR: true, INTERRUPTED: true }).result;\\n  }\\n});\\n\\n},{\\\"../internals/an-object\\\":60,\\\"../internals/export\\\":88,\\\"../internals/function-bind-context\\\":91,\\\"../internals/get-map-iterator\\\":95,\\\"../internals/is-pure\\\":111,\\\"../internals/iterate\\\":112}],176:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar IS_PURE = require('../internals/is-pure');\\nvar anObject = require('../internals/an-object');\\nvar bind = require('../internals/function-bind-context');\\nvar getMapIterator = require('../internals/get-map-iterator');\\nvar iterate = require('../internals/iterate');\\n\\n// `Map.prototype.find` method\\n// https://github.com/tc39/proposal-collection-methods\\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\\n  find: function find(callbackfn /* , thisArg */) {\\n    var map = anObject(this);\\n    var iterator = getMapIterator(map);\\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\\n    return iterate(iterator, function (key, value, stop) {\\n      if (boundFunction(value, key, map)) return stop(value);\\n    }, { AS_ENTRIES: true, IS_ITERATOR: true, INTERRUPTED: true }).result;\\n  }\\n});\\n\\n},{\\\"../internals/an-object\\\":60,\\\"../internals/export\\\":88,\\\"../internals/function-bind-context\\\":91,\\\"../internals/get-map-iterator\\\":95,\\\"../internals/is-pure\\\":111,\\\"../internals/iterate\\\":112}],177:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar IS_PURE = require('../internals/is-pure');\\nvar anObject = require('../internals/an-object');\\nvar getMapIterator = require('../internals/get-map-iterator');\\nvar sameValueZero = require('../internals/same-value-zero');\\nvar iterate = require('../internals/iterate');\\n\\n// `Map.prototype.includes` method\\n// https://github.com/tc39/proposal-collection-methods\\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\\n  includes: function includes(searchElement) {\\n    return iterate(getMapIterator(anObject(this)), function (key, value, stop) {\\n      if (sameValueZero(value, searchElement)) return stop();\\n    }, { AS_ENTRIES: true, IS_ITERATOR: true, INTERRUPTED: true }).stopped;\\n  }\\n});\\n\\n},{\\\"../internals/an-object\\\":60,\\\"../internals/export\\\":88,\\\"../internals/get-map-iterator\\\":95,\\\"../internals/is-pure\\\":111,\\\"../internals/iterate\\\":112,\\\"../internals/same-value-zero\\\":140}],178:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar IS_PURE = require('../internals/is-pure');\\nvar anObject = require('../internals/an-object');\\nvar getMapIterator = require('../internals/get-map-iterator');\\nvar iterate = require('../internals/iterate');\\n\\n// `Map.prototype.includes` method\\n// https://github.com/tc39/proposal-collection-methods\\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\\n  keyOf: function keyOf(searchElement) {\\n    return iterate(getMapIterator(anObject(this)), function (key, value, stop) {\\n      if (value === searchElement) return stop(key);\\n    }, { AS_ENTRIES: true, IS_ITERATOR: true, INTERRUPTED: true }).result;\\n  }\\n});\\n\\n},{\\\"../internals/an-object\\\":60,\\\"../internals/export\\\":88,\\\"../internals/get-map-iterator\\\":95,\\\"../internals/is-pure\\\":111,\\\"../internals/iterate\\\":112}],179:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar IS_PURE = require('../internals/is-pure');\\nvar getBuiltIn = require('../internals/get-built-in');\\nvar anObject = require('../internals/an-object');\\nvar aFunction = require('../internals/a-function');\\nvar bind = require('../internals/function-bind-context');\\nvar speciesConstructor = require('../internals/species-constructor');\\nvar getMapIterator = require('../internals/get-map-iterator');\\nvar iterate = require('../internals/iterate');\\n\\n// `Map.prototype.mapKeys` method\\n// https://github.com/tc39/proposal-collection-methods\\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\\n  mapKeys: function mapKeys(callbackfn /* , thisArg */) {\\n    var map = anObject(this);\\n    var iterator = getMapIterator(map);\\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\\n    var newMap = new (speciesConstructor(map, getBuiltIn('Map')))();\\n    var setter = aFunction(newMap.set);\\n    iterate(iterator, function (key, value) {\\n      setter.call(newMap, boundFunction(value, key, map), value);\\n    }, { AS_ENTRIES: true, IS_ITERATOR: true });\\n    return newMap;\\n  }\\n});\\n\\n},{\\\"../internals/a-function\\\":55,\\\"../internals/an-object\\\":60,\\\"../internals/export\\\":88,\\\"../internals/function-bind-context\\\":91,\\\"../internals/get-built-in\\\":92,\\\"../internals/get-map-iterator\\\":95,\\\"../internals/is-pure\\\":111,\\\"../internals/iterate\\\":112,\\\"../internals/species-constructor\\\":147}],180:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar IS_PURE = require('../internals/is-pure');\\nvar getBuiltIn = require('../internals/get-built-in');\\nvar anObject = require('../internals/an-object');\\nvar aFunction = require('../internals/a-function');\\nvar bind = require('../internals/function-bind-context');\\nvar speciesConstructor = require('../internals/species-constructor');\\nvar getMapIterator = require('../internals/get-map-iterator');\\nvar iterate = require('../internals/iterate');\\n\\n// `Map.prototype.mapValues` method\\n// https://github.com/tc39/proposal-collection-methods\\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\\n  mapValues: function mapValues(callbackfn /* , thisArg */) {\\n    var map = anObject(this);\\n    var iterator = getMapIterator(map);\\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\\n    var newMap = new (speciesConstructor(map, getBuiltIn('Map')))();\\n    var setter = aFunction(newMap.set);\\n    iterate(iterator, function (key, value) {\\n      setter.call(newMap, key, boundFunction(value, key, map));\\n    }, { AS_ENTRIES: true, IS_ITERATOR: true });\\n    return newMap;\\n  }\\n});\\n\\n},{\\\"../internals/a-function\\\":55,\\\"../internals/an-object\\\":60,\\\"../internals/export\\\":88,\\\"../internals/function-bind-context\\\":91,\\\"../internals/get-built-in\\\":92,\\\"../internals/get-map-iterator\\\":95,\\\"../internals/is-pure\\\":111,\\\"../internals/iterate\\\":112,\\\"../internals/species-constructor\\\":147}],181:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar IS_PURE = require('../internals/is-pure');\\nvar anObject = require('../internals/an-object');\\nvar aFunction = require('../internals/a-function');\\nvar iterate = require('../internals/iterate');\\n\\n// `Map.prototype.merge` method\\n// https://github.com/tc39/proposal-collection-methods\\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\\n  merge: function merge(iterable /* ...iterbles */) {\\n    var map = anObject(this);\\n    var setter = aFunction(map.set);\\n    var i = 0;\\n    while (i < arguments.length) {\\n      iterate(arguments[i++], setter, { that: map, AS_ENTRIES: true });\\n    }\\n    return map;\\n  }\\n});\\n\\n},{\\\"../internals/a-function\\\":55,\\\"../internals/an-object\\\":60,\\\"../internals/export\\\":88,\\\"../internals/is-pure\\\":111,\\\"../internals/iterate\\\":112}],182:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar IS_PURE = require('../internals/is-pure');\\nvar anObject = require('../internals/an-object');\\nvar aFunction = require('../internals/a-function');\\nvar getMapIterator = require('../internals/get-map-iterator');\\nvar iterate = require('../internals/iterate');\\n\\n// `Map.prototype.reduce` method\\n// https://github.com/tc39/proposal-collection-methods\\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\\n  reduce: function reduce(callbackfn /* , initialValue */) {\\n    var map = anObject(this);\\n    var iterator = getMapIterator(map);\\n    var noInitial = arguments.length < 2;\\n    var accumulator = noInitial ? undefined : arguments[1];\\n    aFunction(callbackfn);\\n    iterate(iterator, function (key, value) {\\n      if (noInitial) {\\n        noInitial = false;\\n        accumulator = value;\\n      } else {\\n        accumulator = callbackfn(accumulator, value, key, map);\\n      }\\n    }, { AS_ENTRIES: true, IS_ITERATOR: true });\\n    if (noInitial) throw TypeError('Reduce of empty map with no initial value');\\n    return accumulator;\\n  }\\n});\\n\\n},{\\\"../internals/a-function\\\":55,\\\"../internals/an-object\\\":60,\\\"../internals/export\\\":88,\\\"../internals/get-map-iterator\\\":95,\\\"../internals/is-pure\\\":111,\\\"../internals/iterate\\\":112}],183:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar IS_PURE = require('../internals/is-pure');\\nvar anObject = require('../internals/an-object');\\nvar bind = require('../internals/function-bind-context');\\nvar getMapIterator = require('../internals/get-map-iterator');\\nvar iterate = require('../internals/iterate');\\n\\n// `Set.prototype.some` method\\n// https://github.com/tc39/proposal-collection-methods\\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\\n  some: function some(callbackfn /* , thisArg */) {\\n    var map = anObject(this);\\n    var iterator = getMapIterator(map);\\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\\n    return iterate(iterator, function (key, value, stop) {\\n      if (boundFunction(value, key, map)) return stop();\\n    }, { AS_ENTRIES: true, IS_ITERATOR: true, INTERRUPTED: true }).stopped;\\n  }\\n});\\n\\n},{\\\"../internals/an-object\\\":60,\\\"../internals/export\\\":88,\\\"../internals/function-bind-context\\\":91,\\\"../internals/get-map-iterator\\\":95,\\\"../internals/is-pure\\\":111,\\\"../internals/iterate\\\":112}],184:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\nvar IS_PURE = require('../internals/is-pure');\\nvar anObject = require('../internals/an-object');\\nvar aFunction = require('../internals/a-function');\\n\\n// `Set.prototype.update` method\\n// https://github.com/tc39/proposal-collection-methods\\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\\n  update: function update(key, callback /* , thunk */) {\\n    var map = anObject(this);\\n    var length = arguments.length;\\n    aFunction(callback);\\n    var isPresentInMap = map.has(key);\\n    if (!isPresentInMap && length < 3) {\\n      throw TypeError('Updating absent value');\\n    }\\n    var value = isPresentInMap ? map.get(key) : aFunction(length > 2 ? arguments[2] : undefined)(key, map);\\n    map.set(key, callback(value, key, map));\\n    return map;\\n  }\\n});\\n\\n},{\\\"../internals/a-function\\\":55,\\\"../internals/an-object\\\":60,\\\"../internals/export\\\":88,\\\"../internals/is-pure\\\":111}],185:[function(require,module,exports){\\nvar global = require('../internals/global');\\nvar DOMIterables = require('../internals/dom-iterables');\\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\n\\nvar ITERATOR = wellKnownSymbol('iterator');\\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\\nvar ArrayValues = ArrayIteratorMethods.values;\\n\\nfor (var COLLECTION_NAME in DOMIterables) {\\n  var Collection = global[COLLECTION_NAME];\\n  var CollectionPrototype = Collection && Collection.prototype;\\n  if (CollectionPrototype) {\\n    // some Chrome versions have non-configurable methods on DOMTokenList\\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\\n    } catch (error) {\\n      CollectionPrototype[ITERATOR] = ArrayValues;\\n    }\\n    if (!CollectionPrototype[TO_STRING_TAG]) {\\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\\n    }\\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\\n      // some Chrome versions have non-configurable methods on DOMTokenList\\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\\n      } catch (error) {\\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\\n      }\\n    }\\n  }\\n}\\n\\n},{\\\"../internals/create-non-enumerable-property\\\":77,\\\"../internals/dom-iterables\\\":83,\\\"../internals/global\\\":97,\\\"../internals/well-known-symbol\\\":165,\\\"../modules/es.array.iterator\\\":166}],186:[function(require,module,exports){\\n'use strict';\\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\\nrequire('../modules/es.array.iterator');\\nvar $ = require('../internals/export');\\nvar getBuiltIn = require('../internals/get-built-in');\\nvar USE_NATIVE_URL = require('../internals/native-url');\\nvar redefine = require('../internals/redefine');\\nvar redefineAll = require('../internals/redefine-all');\\nvar setToStringTag = require('../internals/set-to-string-tag');\\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\\nvar InternalStateModule = require('../internals/internal-state');\\nvar anInstance = require('../internals/an-instance');\\nvar hasOwn = require('../internals/has');\\nvar bind = require('../internals/function-bind-context');\\nvar classof = require('../internals/classof');\\nvar anObject = require('../internals/an-object');\\nvar isObject = require('../internals/is-object');\\nvar create = require('../internals/object-create');\\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\\nvar getIterator = require('../internals/get-iterator');\\nvar getIteratorMethod = require('../internals/get-iterator-method');\\nvar wellKnownSymbol = require('../internals/well-known-symbol');\\n\\nvar $fetch = getBuiltIn('fetch');\\nvar Headers = getBuiltIn('Headers');\\nvar ITERATOR = wellKnownSymbol('iterator');\\nvar URL_SEARCH_PARAMS = 'URLSearchParams';\\nvar URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';\\nvar setInternalState = InternalStateModule.set;\\nvar getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);\\nvar getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);\\n\\nvar plus = /\\\\+/g;\\nvar sequences = Array(4);\\n\\nvar percentSequence = function (bytes) {\\n  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\\\\\\\da-f]{2}){' + bytes + '})', 'gi'));\\n};\\n\\nvar percentDecode = function (sequence) {\\n  try {\\n    return decodeURIComponent(sequence);\\n  } catch (error) {\\n    return sequence;\\n  }\\n};\\n\\nvar deserialize = function (it) {\\n  var result = it.replace(plus, ' ');\\n  var bytes = 4;\\n  try {\\n    return decodeURIComponent(result);\\n  } catch (error) {\\n    while (bytes) {\\n      result = result.replace(percentSequence(bytes--), percentDecode);\\n    }\\n    return result;\\n  }\\n};\\n\\nvar find = /[!'()~]|%20/g;\\n\\nvar replace = {\\n  '!': '%21',\\n  \\\"'\\\": '%27',\\n  '(': '%28',\\n  ')': '%29',\\n  '~': '%7E',\\n  '%20': '+'\\n};\\n\\nvar replacer = function (match) {\\n  return replace[match];\\n};\\n\\nvar serialize = function (it) {\\n  return encodeURIComponent(it).replace(find, replacer);\\n};\\n\\nvar parseSearchParams = function (result, query) {\\n  if (query) {\\n    var attributes = query.split('&');\\n    var index = 0;\\n    var attribute, entry;\\n    while (index < attributes.length) {\\n      attribute = attributes[index++];\\n      if (attribute.length) {\\n        entry = attribute.split('=');\\n        result.push({\\n          key: deserialize(entry.shift()),\\n          value: deserialize(entry.join('='))\\n        });\\n      }\\n    }\\n  }\\n};\\n\\nvar updateSearchParams = function (query) {\\n  this.entries.length = 0;\\n  parseSearchParams(this.entries, query);\\n};\\n\\nvar validateArgumentsLength = function (passed, required) {\\n  if (passed < required) throw TypeError('Not enough arguments');\\n};\\n\\nvar URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {\\n  setInternalState(this, {\\n    type: URL_SEARCH_PARAMS_ITERATOR,\\n    iterator: getIterator(getInternalParamsState(params).entries),\\n    kind: kind\\n  });\\n}, 'Iterator', function next() {\\n  var state = getInternalIteratorState(this);\\n  var kind = state.kind;\\n  var step = state.iterator.next();\\n  var entry = step.value;\\n  if (!step.done) {\\n    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];\\n  } return step;\\n});\\n\\n// `URLSearchParams` constructor\\n// https://url.spec.whatwg.org/#interface-urlsearchparams\\nvar URLSearchParamsConstructor = function URLSearchParams(/* init */) {\\n  anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);\\n  var init = arguments.length > 0 ? arguments[0] : undefined;\\n  var that = this;\\n  var entries = [];\\n  var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;\\n\\n  setInternalState(that, {\\n    type: URL_SEARCH_PARAMS,\\n    entries: entries,\\n    updateURL: function () { /* empty */ },\\n    updateSearchParams: updateSearchParams\\n  });\\n\\n  if (init !== undefined) {\\n    if (isObject(init)) {\\n      iteratorMethod = getIteratorMethod(init);\\n      if (typeof iteratorMethod === 'function') {\\n        iterator = iteratorMethod.call(init);\\n        next = iterator.next;\\n        while (!(step = next.call(iterator)).done) {\\n          entryIterator = getIterator(anObject(step.value));\\n          entryNext = entryIterator.next;\\n          if (\\n            (first = entryNext.call(entryIterator)).done ||\\n            (second = entryNext.call(entryIterator)).done ||\\n            !entryNext.call(entryIterator).done\\n          ) throw TypeError('Expected sequence with length 2');\\n          entries.push({ key: first.value + '', value: second.value + '' });\\n        }\\n      } else for (key in init) if (hasOwn(init, key)) entries.push({ key: key, value: init[key] + '' });\\n    } else {\\n      parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');\\n    }\\n  }\\n};\\n\\nvar URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;\\n\\nredefineAll(URLSearchParamsPrototype, {\\n  // `URLSearchParams.prototype.append` method\\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-append\\n  append: function append(name, value) {\\n    validateArgumentsLength(arguments.length, 2);\\n    var state = getInternalParamsState(this);\\n    state.entries.push({ key: name + '', value: value + '' });\\n    state.updateURL();\\n  },\\n  // `URLSearchParams.prototype.delete` method\\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete\\n  'delete': function (name) {\\n    validateArgumentsLength(arguments.length, 1);\\n    var state = getInternalParamsState(this);\\n    var entries = state.entries;\\n    var key = name + '';\\n    var index = 0;\\n    while (index < entries.length) {\\n      if (entries[index].key === key) entries.splice(index, 1);\\n      else index++;\\n    }\\n    state.updateURL();\\n  },\\n  // `URLSearchParams.prototype.get` method\\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-get\\n  get: function get(name) {\\n    validateArgumentsLength(arguments.length, 1);\\n    var entries = getInternalParamsState(this).entries;\\n    var key = name + '';\\n    var index = 0;\\n    for (; index < entries.length; index++) {\\n      if (entries[index].key === key) return entries[index].value;\\n    }\\n    return null;\\n  },\\n  // `URLSearchParams.prototype.getAll` method\\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall\\n  getAll: function getAll(name) {\\n    validateArgumentsLength(arguments.length, 1);\\n    var entries = getInternalParamsState(this).entries;\\n    var key = name + '';\\n    var result = [];\\n    var index = 0;\\n    for (; index < entries.length; index++) {\\n      if (entries[index].key === key) result.push(entries[index].value);\\n    }\\n    return result;\\n  },\\n  // `URLSearchParams.prototype.has` method\\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-has\\n  has: function has(name) {\\n    validateArgumentsLength(arguments.length, 1);\\n    var entries = getInternalParamsState(this).entries;\\n    var key = name + '';\\n    var index = 0;\\n    while (index < entries.length) {\\n      if (entries[index++].key === key) return true;\\n    }\\n    return false;\\n  },\\n  // `URLSearchParams.prototype.set` method\\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-set\\n  set: function set(name, value) {\\n    validateArgumentsLength(arguments.length, 1);\\n    var state = getInternalParamsState(this);\\n    var entries = state.entries;\\n    var found = false;\\n    var key = name + '';\\n    var val = value + '';\\n    var index = 0;\\n    var entry;\\n    for (; index < entries.length; index++) {\\n      entry = entries[index];\\n      if (entry.key === key) {\\n        if (found) entries.splice(index--, 1);\\n        else {\\n          found = true;\\n          entry.value = val;\\n        }\\n      }\\n    }\\n    if (!found) entries.push({ key: key, value: val });\\n    state.updateURL();\\n  },\\n  // `URLSearchParams.prototype.sort` method\\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort\\n  sort: function sort() {\\n    var state = getInternalParamsState(this);\\n    var entries = state.entries;\\n    // Array#sort is not stable in some engines\\n    var slice = entries.slice();\\n    var entry, entriesIndex, sliceIndex;\\n    entries.length = 0;\\n    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {\\n      entry = slice[sliceIndex];\\n      for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {\\n        if (entries[entriesIndex].key > entry.key) {\\n          entries.splice(entriesIndex, 0, entry);\\n          break;\\n        }\\n      }\\n      if (entriesIndex === sliceIndex) entries.push(entry);\\n    }\\n    state.updateURL();\\n  },\\n  // `URLSearchParams.prototype.forEach` method\\n  forEach: function forEach(callback /* , thisArg */) {\\n    var entries = getInternalParamsState(this).entries;\\n    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);\\n    var index = 0;\\n    var entry;\\n    while (index < entries.length) {\\n      entry = entries[index++];\\n      boundFunction(entry.value, entry.key, this);\\n    }\\n  },\\n  // `URLSearchParams.prototype.keys` method\\n  keys: function keys() {\\n    return new URLSearchParamsIterator(this, 'keys');\\n  },\\n  // `URLSearchParams.prototype.values` method\\n  values: function values() {\\n    return new URLSearchParamsIterator(this, 'values');\\n  },\\n  // `URLSearchParams.prototype.entries` method\\n  entries: function entries() {\\n    return new URLSearchParamsIterator(this, 'entries');\\n  }\\n}, { enumerable: true });\\n\\n// `URLSearchParams.prototype[@@iterator]` method\\nredefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);\\n\\n// `URLSearchParams.prototype.toString` method\\n// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\\nredefine(URLSearchParamsPrototype, 'toString', function toString() {\\n  var entries = getInternalParamsState(this).entries;\\n  var result = [];\\n  var index = 0;\\n  var entry;\\n  while (index < entries.length) {\\n    entry = entries[index++];\\n    result.push(serialize(entry.key) + '=' + serialize(entry.value));\\n  } return result.join('&');\\n}, { enumerable: true });\\n\\nsetToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);\\n\\n$({ global: true, forced: !USE_NATIVE_URL }, {\\n  URLSearchParams: URLSearchParamsConstructor\\n});\\n\\n// Wrap `fetch` for correct work with polyfilled `URLSearchParams`\\n// https://github.com/zloirock/core-js/issues/674\\nif (!USE_NATIVE_URL && typeof $fetch == 'function' && typeof Headers == 'function') {\\n  $({ global: true, enumerable: true, forced: true }, {\\n    fetch: function fetch(input /* , init */) {\\n      var args = [input];\\n      var init, body, headers;\\n      if (arguments.length > 1) {\\n        init = arguments[1];\\n        if (isObject(init)) {\\n          body = init.body;\\n          if (classof(body) === URL_SEARCH_PARAMS) {\\n            headers = init.headers ? new Headers(init.headers) : new Headers();\\n            if (!headers.has('content-type')) {\\n              headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\\n            }\\n            init = create(init, {\\n              body: createPropertyDescriptor(0, String(body)),\\n              headers: createPropertyDescriptor(0, headers)\\n            });\\n          }\\n        }\\n        args.push(init);\\n      } return $fetch.apply(this, args);\\n    }\\n  });\\n}\\n\\nmodule.exports = {\\n  URLSearchParams: URLSearchParamsConstructor,\\n  getState: getInternalParamsState\\n};\\n\\n},{\\\"../internals/an-instance\\\":59,\\\"../internals/an-object\\\":60,\\\"../internals/classof\\\":72,\\\"../internals/create-iterator-constructor\\\":76,\\\"../internals/create-property-descriptor\\\":78,\\\"../internals/export\\\":88,\\\"../internals/function-bind-context\\\":91,\\\"../internals/get-built-in\\\":92,\\\"../internals/get-iterator\\\":94,\\\"../internals/get-iterator-method\\\":93,\\\"../internals/has\\\":98,\\\"../internals/internal-state\\\":106,\\\"../internals/is-object\\\":110,\\\"../internals/native-url\\\":117,\\\"../internals/object-create\\\":120,\\\"../internals/redefine\\\":134,\\\"../internals/redefine-all\\\":133,\\\"../internals/set-to-string-tag\\\":143,\\\"../internals/well-known-symbol\\\":165,\\\"../modules/es.array.iterator\\\":166}],187:[function(require,module,exports){\\n'use strict';\\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\\nrequire('../modules/es.string.iterator');\\nvar $ = require('../internals/export');\\nvar DESCRIPTORS = require('../internals/descriptors');\\nvar USE_NATIVE_URL = require('../internals/native-url');\\nvar global = require('../internals/global');\\nvar defineProperties = require('../internals/object-define-properties');\\nvar redefine = require('../internals/redefine');\\nvar anInstance = require('../internals/an-instance');\\nvar has = require('../internals/has');\\nvar assign = require('../internals/object-assign');\\nvar arrayFrom = require('../internals/array-from');\\nvar codeAt = require('../internals/string-multibyte').codeAt;\\nvar toASCII = require('../internals/string-punycode-to-ascii');\\nvar setToStringTag = require('../internals/set-to-string-tag');\\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\\nvar InternalStateModule = require('../internals/internal-state');\\n\\nvar NativeURL = global.URL;\\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\\nvar setInternalState = InternalStateModule.set;\\nvar getInternalURLState = InternalStateModule.getterFor('URL');\\nvar floor = Math.floor;\\nvar pow = Math.pow;\\n\\nvar INVALID_AUTHORITY = 'Invalid authority';\\nvar INVALID_SCHEME = 'Invalid scheme';\\nvar INVALID_HOST = 'Invalid host';\\nvar INVALID_PORT = 'Invalid port';\\n\\nvar ALPHA = /[A-Za-z]/;\\nvar ALPHANUMERIC = /[\\\\d+-.A-Za-z]/;\\nvar DIGIT = /\\\\d/;\\nvar HEX_START = /^(0x|0X)/;\\nvar OCT = /^[0-7]+$/;\\nvar DEC = /^\\\\d+$/;\\nvar HEX = /^[\\\\dA-Fa-f]+$/;\\n/* eslint-disable no-control-regex -- safe */\\nvar FORBIDDEN_HOST_CODE_POINT = /[\\\\u0000\\\\t\\\\u000A\\\\u000D #%/:?@[\\\\\\\\]]/;\\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\\\u0000\\\\t\\\\u000A\\\\u000D #/:?@[\\\\\\\\]]/;\\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\\\u0000-\\\\u001F ]+|[\\\\u0000-\\\\u001F ]+$/g;\\nvar TAB_AND_NEW_LINE = /[\\\\t\\\\u000A\\\\u000D]/g;\\n/* eslint-enable no-control-regex -- safe */\\nvar EOF;\\n\\nvar parseHost = function (url, input) {\\n  var result, codePoints, index;\\n  if (input.charAt(0) == '[') {\\n    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;\\n    result = parseIPv6(input.slice(1, -1));\\n    if (!result) return INVALID_HOST;\\n    url.host = result;\\n  // opaque host\\n  } else if (!isSpecial(url)) {\\n    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;\\n    result = '';\\n    codePoints = arrayFrom(input);\\n    for (index = 0; index < codePoints.length; index++) {\\n      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\\n    }\\n    url.host = result;\\n  } else {\\n    input = toASCII(input);\\n    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;\\n    result = parseIPv4(input);\\n    if (result === null) return INVALID_HOST;\\n    url.host = result;\\n  }\\n};\\n\\nvar parseIPv4 = function (input) {\\n  var parts = input.split('.');\\n  var partsLength, numbers, index, part, radix, number, ipv4;\\n  if (parts.length && parts[parts.length - 1] == '') {\\n    parts.pop();\\n  }\\n  partsLength = parts.length;\\n  if (partsLength > 4) return input;\\n  numbers = [];\\n  for (index = 0; index < partsLength; index++) {\\n    part = parts[index];\\n    if (part == '') return input;\\n    radix = 10;\\n    if (part.length > 1 && part.charAt(0) == '0') {\\n      radix = HEX_START.test(part) ? 16 : 8;\\n      part = part.slice(radix == 8 ? 1 : 2);\\n    }\\n    if (part === '') {\\n      number = 0;\\n    } else {\\n      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;\\n      number = parseInt(part, radix);\\n    }\\n    numbers.push(number);\\n  }\\n  for (index = 0; index < partsLength; index++) {\\n    number = numbers[index];\\n    if (index == partsLength - 1) {\\n      if (number >= pow(256, 5 - partsLength)) return null;\\n    } else if (number > 255) return null;\\n  }\\n  ipv4 = numbers.pop();\\n  for (index = 0; index < numbers.length; index++) {\\n    ipv4 += numbers[index] * pow(256, 3 - index);\\n  }\\n  return ipv4;\\n};\\n\\n// eslint-disable-next-line max-statements -- TODO\\nvar parseIPv6 = function (input) {\\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\\n  var pieceIndex = 0;\\n  var compress = null;\\n  var pointer = 0;\\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\\n\\n  var char = function () {\\n    return input.charAt(pointer);\\n  };\\n\\n  if (char() == ':') {\\n    if (input.charAt(1) != ':') return;\\n    pointer += 2;\\n    pieceIndex++;\\n    compress = pieceIndex;\\n  }\\n  while (char()) {\\n    if (pieceIndex == 8) return;\\n    if (char() == ':') {\\n      if (compress !== null) return;\\n      pointer++;\\n      pieceIndex++;\\n      compress = pieceIndex;\\n      continue;\\n    }\\n    value = length = 0;\\n    while (length < 4 && HEX.test(char())) {\\n      value = value * 16 + parseInt(char(), 16);\\n      pointer++;\\n      length++;\\n    }\\n    if (char() == '.') {\\n      if (length == 0) return;\\n      pointer -= length;\\n      if (pieceIndex > 6) return;\\n      numbersSeen = 0;\\n      while (char()) {\\n        ipv4Piece = null;\\n        if (numbersSeen > 0) {\\n          if (char() == '.' && numbersSeen < 4) pointer++;\\n          else return;\\n        }\\n        if (!DIGIT.test(char())) return;\\n        while (DIGIT.test(char())) {\\n          number = parseInt(char(), 10);\\n          if (ipv4Piece === null) ipv4Piece = number;\\n          else if (ipv4Piece == 0) return;\\n          else ipv4Piece = ipv4Piece * 10 + number;\\n          if (ipv4Piece > 255) return;\\n          pointer++;\\n        }\\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\\n        numbersSeen++;\\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\\n      }\\n      if (numbersSeen != 4) return;\\n      break;\\n    } else if (char() == ':') {\\n      pointer++;\\n      if (!char()) return;\\n    } else if (char()) return;\\n    address[pieceIndex++] = value;\\n  }\\n  if (compress !== null) {\\n    swaps = pieceIndex - compress;\\n    pieceIndex = 7;\\n    while (pieceIndex != 0 && swaps > 0) {\\n      swap = address[pieceIndex];\\n      address[pieceIndex--] = address[compress + swaps - 1];\\n      address[compress + --swaps] = swap;\\n    }\\n  } else if (pieceIndex != 8) return;\\n  return address;\\n};\\n\\nvar findLongestZeroSequence = function (ipv6) {\\n  var maxIndex = null;\\n  var maxLength = 1;\\n  var currStart = null;\\n  var currLength = 0;\\n  var index = 0;\\n  for (; index < 8; index++) {\\n    if (ipv6[index] !== 0) {\\n      if (currLength > maxLength) {\\n        maxIndex = currStart;\\n        maxLength = currLength;\\n      }\\n      currStart = null;\\n      currLength = 0;\\n    } else {\\n      if (currStart === null) currStart = index;\\n      ++currLength;\\n    }\\n  }\\n  if (currLength > maxLength) {\\n    maxIndex = currStart;\\n    maxLength = currLength;\\n  }\\n  return maxIndex;\\n};\\n\\nvar serializeHost = function (host) {\\n  var result, index, compress, ignore0;\\n  // ipv4\\n  if (typeof host == 'number') {\\n    result = [];\\n    for (index = 0; index < 4; index++) {\\n      result.unshift(host % 256);\\n      host = floor(host / 256);\\n    } return result.join('.');\\n  // ipv6\\n  } else if (typeof host == 'object') {\\n    result = '';\\n    compress = findLongestZeroSequence(host);\\n    for (index = 0; index < 8; index++) {\\n      if (ignore0 && host[index] === 0) continue;\\n      if (ignore0) ignore0 = false;\\n      if (compress === index) {\\n        result += index ? ':' : '::';\\n        ignore0 = true;\\n      } else {\\n        result += host[index].toString(16);\\n        if (index < 7) result += ':';\\n      }\\n    }\\n    return '[' + result + ']';\\n  } return host;\\n};\\n\\nvar C0ControlPercentEncodeSet = {};\\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\\n  ' ': 1, '\\\"': 1, '<': 1, '>': 1, '`': 1\\n});\\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\\n  '#': 1, '?': 1, '{': 1, '}': 1\\n});\\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\\n  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\\\\\\\': 1, ']': 1, '^': 1, '|': 1\\n});\\n\\nvar percentEncode = function (char, set) {\\n  var code = codeAt(char, 0);\\n  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);\\n};\\n\\nvar specialSchemes = {\\n  ftp: 21,\\n  file: null,\\n  http: 80,\\n  https: 443,\\n  ws: 80,\\n  wss: 443\\n};\\n\\nvar isSpecial = function (url) {\\n  return has(specialSchemes, url.scheme);\\n};\\n\\nvar includesCredentials = function (url) {\\n  return url.username != '' || url.password != '';\\n};\\n\\nvar cannotHaveUsernamePasswordPort = function (url) {\\n  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\\n};\\n\\nvar isWindowsDriveLetter = function (string, normalized) {\\n  var second;\\n  return string.length == 2 && ALPHA.test(string.charAt(0))\\n    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));\\n};\\n\\nvar startsWithWindowsDriveLetter = function (string) {\\n  var third;\\n  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (\\n    string.length == 2 ||\\n    ((third = string.charAt(2)) === '/' || third === '\\\\\\\\' || third === '?' || third === '#')\\n  );\\n};\\n\\nvar shortenURLsPath = function (url) {\\n  var path = url.path;\\n  var pathSize = path.length;\\n  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\\n    path.pop();\\n  }\\n};\\n\\nvar isSingleDot = function (segment) {\\n  return segment === '.' || segment.toLowerCase() === '%2e';\\n};\\n\\nvar isDoubleDot = function (segment) {\\n  segment = segment.toLowerCase();\\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\\n};\\n\\n// States:\\nvar SCHEME_START = {};\\nvar SCHEME = {};\\nvar NO_SCHEME = {};\\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\\nvar PATH_OR_AUTHORITY = {};\\nvar RELATIVE = {};\\nvar RELATIVE_SLASH = {};\\nvar SPECIAL_AUTHORITY_SLASHES = {};\\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\\nvar AUTHORITY = {};\\nvar HOST = {};\\nvar HOSTNAME = {};\\nvar PORT = {};\\nvar FILE = {};\\nvar FILE_SLASH = {};\\nvar FILE_HOST = {};\\nvar PATH_START = {};\\nvar PATH = {};\\nvar CANNOT_BE_A_BASE_URL_PATH = {};\\nvar QUERY = {};\\nvar FRAGMENT = {};\\n\\n// eslint-disable-next-line max-statements -- TODO\\nvar parseURL = function (url, input, stateOverride, base) {\\n  var state = stateOverride || SCHEME_START;\\n  var pointer = 0;\\n  var buffer = '';\\n  var seenAt = false;\\n  var seenBracket = false;\\n  var seenPasswordToken = false;\\n  var codePoints, char, bufferCodePoints, failure;\\n\\n  if (!stateOverride) {\\n    url.scheme = '';\\n    url.username = '';\\n    url.password = '';\\n    url.host = null;\\n    url.port = null;\\n    url.path = [];\\n    url.query = null;\\n    url.fragment = null;\\n    url.cannotBeABaseURL = false;\\n    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\\n  }\\n\\n  input = input.replace(TAB_AND_NEW_LINE, '');\\n\\n  codePoints = arrayFrom(input);\\n\\n  while (pointer <= codePoints.length) {\\n    char = codePoints[pointer];\\n    switch (state) {\\n      case SCHEME_START:\\n        if (char && ALPHA.test(char)) {\\n          buffer += char.toLowerCase();\\n          state = SCHEME;\\n        } else if (!stateOverride) {\\n          state = NO_SCHEME;\\n          continue;\\n        } else return INVALID_SCHEME;\\n        break;\\n\\n      case SCHEME:\\n        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {\\n          buffer += char.toLowerCase();\\n        } else if (char == ':') {\\n          if (stateOverride && (\\n            (isSpecial(url) != has(specialSchemes, buffer)) ||\\n            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||\\n            (url.scheme == 'file' && !url.host)\\n          )) return;\\n          url.scheme = buffer;\\n          if (stateOverride) {\\n            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\\n            return;\\n          }\\n          buffer = '';\\n          if (url.scheme == 'file') {\\n            state = FILE;\\n          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\\n            state = SPECIAL_RELATIVE_OR_AUTHORITY;\\n          } else if (isSpecial(url)) {\\n            state = SPECIAL_AUTHORITY_SLASHES;\\n          } else if (codePoints[pointer + 1] == '/') {\\n            state = PATH_OR_AUTHORITY;\\n            pointer++;\\n          } else {\\n            url.cannotBeABaseURL = true;\\n            url.path.push('');\\n            state = CANNOT_BE_A_BASE_URL_PATH;\\n          }\\n        } else if (!stateOverride) {\\n          buffer = '';\\n          state = NO_SCHEME;\\n          pointer = 0;\\n          continue;\\n        } else return INVALID_SCHEME;\\n        break;\\n\\n      case NO_SCHEME:\\n        if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;\\n        if (base.cannotBeABaseURL && char == '#') {\\n          url.scheme = base.scheme;\\n          url.path = base.path.slice();\\n          url.query = base.query;\\n          url.fragment = '';\\n          url.cannotBeABaseURL = true;\\n          state = FRAGMENT;\\n          break;\\n        }\\n        state = base.scheme == 'file' ? FILE : RELATIVE;\\n        continue;\\n\\n      case SPECIAL_RELATIVE_OR_AUTHORITY:\\n        if (char == '/' && codePoints[pointer + 1] == '/') {\\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\\n          pointer++;\\n        } else {\\n          state = RELATIVE;\\n          continue;\\n        } break;\\n\\n      case PATH_OR_AUTHORITY:\\n        if (char == '/') {\\n          state = AUTHORITY;\\n          break;\\n        } else {\\n          state = PATH;\\n          continue;\\n        }\\n\\n      case RELATIVE:\\n        url.scheme = base.scheme;\\n        if (char == EOF) {\\n          url.username = base.username;\\n          url.password = base.password;\\n          url.host = base.host;\\n          url.port = base.port;\\n          url.path = base.path.slice();\\n          url.query = base.query;\\n        } else if (char == '/' || (char == '\\\\\\\\' && isSpecial(url))) {\\n          state = RELATIVE_SLASH;\\n        } else if (char == '?') {\\n          url.username = base.username;\\n          url.password = base.password;\\n          url.host = base.host;\\n          url.port = base.port;\\n          url.path = base.path.slice();\\n          url.query = '';\\n          state = QUERY;\\n        } else if (char == '#') {\\n          url.username = base.username;\\n          url.password = base.password;\\n          url.host = base.host;\\n          url.port = base.port;\\n          url.path = base.path.slice();\\n          url.query = base.query;\\n          url.fragment = '';\\n          state = FRAGMENT;\\n        } else {\\n          url.username = base.username;\\n          url.password = base.password;\\n          url.host = base.host;\\n          url.port = base.port;\\n          url.path = base.path.slice();\\n          url.path.pop();\\n          state = PATH;\\n          continue;\\n        } break;\\n\\n      case RELATIVE_SLASH:\\n        if (isSpecial(url) && (char == '/' || char == '\\\\\\\\')) {\\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\\n        } else if (char == '/') {\\n          state = AUTHORITY;\\n        } else {\\n          url.username = base.username;\\n          url.password = base.password;\\n          url.host = base.host;\\n          url.port = base.port;\\n          state = PATH;\\n          continue;\\n        } break;\\n\\n      case SPECIAL_AUTHORITY_SLASHES:\\n        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\\n        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;\\n        pointer++;\\n        break;\\n\\n      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\\n        if (char != '/' && char != '\\\\\\\\') {\\n          state = AUTHORITY;\\n          continue;\\n        } break;\\n\\n      case AUTHORITY:\\n        if (char == '@') {\\n          if (seenAt) buffer = '%40' + buffer;\\n          seenAt = true;\\n          bufferCodePoints = arrayFrom(buffer);\\n          for (var i = 0; i < bufferCodePoints.length; i++) {\\n            var codePoint = bufferCodePoints[i];\\n            if (codePoint == ':' && !seenPasswordToken) {\\n              seenPasswordToken = true;\\n              continue;\\n            }\\n            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\\n            if (seenPasswordToken) url.password += encodedCodePoints;\\n            else url.username += encodedCodePoints;\\n          }\\n          buffer = '';\\n        } else if (\\n          char == EOF || char == '/' || char == '?' || char == '#' ||\\n          (char == '\\\\\\\\' && isSpecial(url))\\n        ) {\\n          if (seenAt && buffer == '') return INVALID_AUTHORITY;\\n          pointer -= arrayFrom(buffer).length + 1;\\n          buffer = '';\\n          state = HOST;\\n        } else buffer += char;\\n        break;\\n\\n      case HOST:\\n      case HOSTNAME:\\n        if (stateOverride && url.scheme == 'file') {\\n          state = FILE_HOST;\\n          continue;\\n        } else if (char == ':' && !seenBracket) {\\n          if (buffer == '') return INVALID_HOST;\\n          failure = parseHost(url, buffer);\\n          if (failure) return failure;\\n          buffer = '';\\n          state = PORT;\\n          if (stateOverride == HOSTNAME) return;\\n        } else if (\\n          char == EOF || char == '/' || char == '?' || char == '#' ||\\n          (char == '\\\\\\\\' && isSpecial(url))\\n        ) {\\n          if (isSpecial(url) && buffer == '') return INVALID_HOST;\\n          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\\n          failure = parseHost(url, buffer);\\n          if (failure) return failure;\\n          buffer = '';\\n          state = PATH_START;\\n          if (stateOverride) return;\\n          continue;\\n        } else {\\n          if (char == '[') seenBracket = true;\\n          else if (char == ']') seenBracket = false;\\n          buffer += char;\\n        } break;\\n\\n      case PORT:\\n        if (DIGIT.test(char)) {\\n          buffer += char;\\n        } else if (\\n          char == EOF || char == '/' || char == '?' || char == '#' ||\\n          (char == '\\\\\\\\' && isSpecial(url)) ||\\n          stateOverride\\n        ) {\\n          if (buffer != '') {\\n            var port = parseInt(buffer, 10);\\n            if (port > 0xFFFF) return INVALID_PORT;\\n            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;\\n            buffer = '';\\n          }\\n          if (stateOverride) return;\\n          state = PATH_START;\\n          continue;\\n        } else return INVALID_PORT;\\n        break;\\n\\n      case FILE:\\n        url.scheme = 'file';\\n        if (char == '/' || char == '\\\\\\\\') state = FILE_SLASH;\\n        else if (base && base.scheme == 'file') {\\n          if (char == EOF) {\\n            url.host = base.host;\\n            url.path = base.path.slice();\\n            url.query = base.query;\\n          } else if (char == '?') {\\n            url.host = base.host;\\n            url.path = base.path.slice();\\n            url.query = '';\\n            state = QUERY;\\n          } else if (char == '#') {\\n            url.host = base.host;\\n            url.path = base.path.slice();\\n            url.query = base.query;\\n            url.fragment = '';\\n            state = FRAGMENT;\\n          } else {\\n            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\\n              url.host = base.host;\\n              url.path = base.path.slice();\\n              shortenURLsPath(url);\\n            }\\n            state = PATH;\\n            continue;\\n          }\\n        } else {\\n          state = PATH;\\n          continue;\\n        } break;\\n\\n      case FILE_SLASH:\\n        if (char == '/' || char == '\\\\\\\\') {\\n          state = FILE_HOST;\\n          break;\\n        }\\n        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\\n          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);\\n          else url.host = base.host;\\n        }\\n        state = PATH;\\n        continue;\\n\\n      case FILE_HOST:\\n        if (char == EOF || char == '/' || char == '\\\\\\\\' || char == '?' || char == '#') {\\n          if (!stateOverride && isWindowsDriveLetter(buffer)) {\\n            state = PATH;\\n          } else if (buffer == '') {\\n            url.host = '';\\n            if (stateOverride) return;\\n            state = PATH_START;\\n          } else {\\n            failure = parseHost(url, buffer);\\n            if (failure) return failure;\\n            if (url.host == 'localhost') url.host = '';\\n            if (stateOverride) return;\\n            buffer = '';\\n            state = PATH_START;\\n          } continue;\\n        } else buffer += char;\\n        break;\\n\\n      case PATH_START:\\n        if (isSpecial(url)) {\\n          state = PATH;\\n          if (char != '/' && char != '\\\\\\\\') continue;\\n        } else if (!stateOverride && char == '?') {\\n          url.query = '';\\n          state = QUERY;\\n        } else if (!stateOverride && char == '#') {\\n          url.fragment = '';\\n          state = FRAGMENT;\\n        } else if (char != EOF) {\\n          state = PATH;\\n          if (char != '/') continue;\\n        } break;\\n\\n      case PATH:\\n        if (\\n          char == EOF || char == '/' ||\\n          (char == '\\\\\\\\' && isSpecial(url)) ||\\n          (!stateOverride && (char == '?' || char == '#'))\\n        ) {\\n          if (isDoubleDot(buffer)) {\\n            shortenURLsPath(url);\\n            if (char != '/' && !(char == '\\\\\\\\' && isSpecial(url))) {\\n              url.path.push('');\\n            }\\n          } else if (isSingleDot(buffer)) {\\n            if (char != '/' && !(char == '\\\\\\\\' && isSpecial(url))) {\\n              url.path.push('');\\n            }\\n          } else {\\n            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\\n              if (url.host) url.host = '';\\n              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter\\n            }\\n            url.path.push(buffer);\\n          }\\n          buffer = '';\\n          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {\\n            while (url.path.length > 1 && url.path[0] === '') {\\n              url.path.shift();\\n            }\\n          }\\n          if (char == '?') {\\n            url.query = '';\\n            state = QUERY;\\n          } else if (char == '#') {\\n            url.fragment = '';\\n            state = FRAGMENT;\\n          }\\n        } else {\\n          buffer += percentEncode(char, pathPercentEncodeSet);\\n        } break;\\n\\n      case CANNOT_BE_A_BASE_URL_PATH:\\n        if (char == '?') {\\n          url.query = '';\\n          state = QUERY;\\n        } else if (char == '#') {\\n          url.fragment = '';\\n          state = FRAGMENT;\\n        } else if (char != EOF) {\\n          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);\\n        } break;\\n\\n      case QUERY:\\n        if (!stateOverride && char == '#') {\\n          url.fragment = '';\\n          state = FRAGMENT;\\n        } else if (char != EOF) {\\n          if (char == \\\"'\\\" && isSpecial(url)) url.query += '%27';\\n          else if (char == '#') url.query += '%23';\\n          else url.query += percentEncode(char, C0ControlPercentEncodeSet);\\n        } break;\\n\\n      case FRAGMENT:\\n        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);\\n        break;\\n    }\\n\\n    pointer++;\\n  }\\n};\\n\\n// `URL` constructor\\n// https://url.spec.whatwg.org/#url-class\\nvar URLConstructor = function URL(url /* , base */) {\\n  var that = anInstance(this, URLConstructor, 'URL');\\n  var base = arguments.length > 1 ? arguments[1] : undefined;\\n  var urlString = String(url);\\n  var state = setInternalState(that, { type: 'URL' });\\n  var baseState, failure;\\n  if (base !== undefined) {\\n    if (base instanceof URLConstructor) baseState = getInternalURLState(base);\\n    else {\\n      failure = parseURL(baseState = {}, String(base));\\n      if (failure) throw TypeError(failure);\\n    }\\n  }\\n  failure = parseURL(state, urlString, null, baseState);\\n  if (failure) throw TypeError(failure);\\n  var searchParams = state.searchParams = new URLSearchParams();\\n  var searchParamsState = getInternalSearchParamsState(searchParams);\\n  searchParamsState.updateSearchParams(state.query);\\n  searchParamsState.updateURL = function () {\\n    state.query = String(searchParams) || null;\\n  };\\n  if (!DESCRIPTORS) {\\n    that.href = serializeURL.call(that);\\n    that.origin = getOrigin.call(that);\\n    that.protocol = getProtocol.call(that);\\n    that.username = getUsername.call(that);\\n    that.password = getPassword.call(that);\\n    that.host = getHost.call(that);\\n    that.hostname = getHostname.call(that);\\n    that.port = getPort.call(that);\\n    that.pathname = getPathname.call(that);\\n    that.search = getSearch.call(that);\\n    that.searchParams = getSearchParams.call(that);\\n    that.hash = getHash.call(that);\\n  }\\n};\\n\\nvar URLPrototype = URLConstructor.prototype;\\n\\nvar serializeURL = function () {\\n  var url = getInternalURLState(this);\\n  var scheme = url.scheme;\\n  var username = url.username;\\n  var password = url.password;\\n  var host = url.host;\\n  var port = url.port;\\n  var path = url.path;\\n  var query = url.query;\\n  var fragment = url.fragment;\\n  var output = scheme + ':';\\n  if (host !== null) {\\n    output += '//';\\n    if (includesCredentials(url)) {\\n      output += username + (password ? ':' + password : '') + '@';\\n    }\\n    output += serializeHost(host);\\n    if (port !== null) output += ':' + port;\\n  } else if (scheme == 'file') output += '//';\\n  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\\n  if (query !== null) output += '?' + query;\\n  if (fragment !== null) output += '#' + fragment;\\n  return output;\\n};\\n\\nvar getOrigin = function () {\\n  var url = getInternalURLState(this);\\n  var scheme = url.scheme;\\n  var port = url.port;\\n  if (scheme == 'blob') try {\\n    return new URL(scheme.path[0]).origin;\\n  } catch (error) {\\n    return 'null';\\n  }\\n  if (scheme == 'file' || !isSpecial(url)) return 'null';\\n  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\\n};\\n\\nvar getProtocol = function () {\\n  return getInternalURLState(this).scheme + ':';\\n};\\n\\nvar getUsername = function () {\\n  return getInternalURLState(this).username;\\n};\\n\\nvar getPassword = function () {\\n  return getInternalURLState(this).password;\\n};\\n\\nvar getHost = function () {\\n  var url = getInternalURLState(this);\\n  var host = url.host;\\n  var port = url.port;\\n  return host === null ? ''\\n    : port === null ? serializeHost(host)\\n    : serializeHost(host) + ':' + port;\\n};\\n\\nvar getHostname = function () {\\n  var host = getInternalURLState(this).host;\\n  return host === null ? '' : serializeHost(host);\\n};\\n\\nvar getPort = function () {\\n  var port = getInternalURLState(this).port;\\n  return port === null ? '' : String(port);\\n};\\n\\nvar getPathname = function () {\\n  var url = getInternalURLState(this);\\n  var path = url.path;\\n  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\\n};\\n\\nvar getSearch = function () {\\n  var query = getInternalURLState(this).query;\\n  return query ? '?' + query : '';\\n};\\n\\nvar getSearchParams = function () {\\n  return getInternalURLState(this).searchParams;\\n};\\n\\nvar getHash = function () {\\n  var fragment = getInternalURLState(this).fragment;\\n  return fragment ? '#' + fragment : '';\\n};\\n\\nvar accessorDescriptor = function (getter, setter) {\\n  return { get: getter, set: setter, configurable: true, enumerable: true };\\n};\\n\\nif (DESCRIPTORS) {\\n  defineProperties(URLPrototype, {\\n    // `URL.prototype.href` accessors pair\\n    // https://url.spec.whatwg.org/#dom-url-href\\n    href: accessorDescriptor(serializeURL, function (href) {\\n      var url = getInternalURLState(this);\\n      var urlString = String(href);\\n      var failure = parseURL(url, urlString);\\n      if (failure) throw TypeError(failure);\\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\\n    }),\\n    // `URL.prototype.origin` getter\\n    // https://url.spec.whatwg.org/#dom-url-origin\\n    origin: accessorDescriptor(getOrigin),\\n    // `URL.prototype.protocol` accessors pair\\n    // https://url.spec.whatwg.org/#dom-url-protocol\\n    protocol: accessorDescriptor(getProtocol, function (protocol) {\\n      var url = getInternalURLState(this);\\n      parseURL(url, String(protocol) + ':', SCHEME_START);\\n    }),\\n    // `URL.prototype.username` accessors pair\\n    // https://url.spec.whatwg.org/#dom-url-username\\n    username: accessorDescriptor(getUsername, function (username) {\\n      var url = getInternalURLState(this);\\n      var codePoints = arrayFrom(String(username));\\n      if (cannotHaveUsernamePasswordPort(url)) return;\\n      url.username = '';\\n      for (var i = 0; i < codePoints.length; i++) {\\n        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\\n      }\\n    }),\\n    // `URL.prototype.password` accessors pair\\n    // https://url.spec.whatwg.org/#dom-url-password\\n    password: accessorDescriptor(getPassword, function (password) {\\n      var url = getInternalURLState(this);\\n      var codePoints = arrayFrom(String(password));\\n      if (cannotHaveUsernamePasswordPort(url)) return;\\n      url.password = '';\\n      for (var i = 0; i < codePoints.length; i++) {\\n        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\\n      }\\n    }),\\n    // `URL.prototype.host` accessors pair\\n    // https://url.spec.whatwg.org/#dom-url-host\\n    host: accessorDescriptor(getHost, function (host) {\\n      var url = getInternalURLState(this);\\n      if (url.cannotBeABaseURL) return;\\n      parseURL(url, String(host), HOST);\\n    }),\\n    // `URL.prototype.hostname` accessors pair\\n    // https://url.spec.whatwg.org/#dom-url-hostname\\n    hostname: accessorDescriptor(getHostname, function (hostname) {\\n      var url = getInternalURLState(this);\\n      if (url.cannotBeABaseURL) return;\\n      parseURL(url, String(hostname), HOSTNAME);\\n    }),\\n    // `URL.prototype.port` accessors pair\\n    // https://url.spec.whatwg.org/#dom-url-port\\n    port: accessorDescriptor(getPort, function (port) {\\n      var url = getInternalURLState(this);\\n      if (cannotHaveUsernamePasswordPort(url)) return;\\n      port = String(port);\\n      if (port == '') url.port = null;\\n      else parseURL(url, port, PORT);\\n    }),\\n    // `URL.prototype.pathname` accessors pair\\n    // https://url.spec.whatwg.org/#dom-url-pathname\\n    pathname: accessorDescriptor(getPathname, function (pathname) {\\n      var url = getInternalURLState(this);\\n      if (url.cannotBeABaseURL) return;\\n      url.path = [];\\n      parseURL(url, pathname + '', PATH_START);\\n    }),\\n    // `URL.prototype.search` accessors pair\\n    // https://url.spec.whatwg.org/#dom-url-search\\n    search: accessorDescriptor(getSearch, function (search) {\\n      var url = getInternalURLState(this);\\n      search = String(search);\\n      if (search == '') {\\n        url.query = null;\\n      } else {\\n        if ('?' == search.charAt(0)) search = search.slice(1);\\n        url.query = '';\\n        parseURL(url, search, QUERY);\\n      }\\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\\n    }),\\n    // `URL.prototype.searchParams` getter\\n    // https://url.spec.whatwg.org/#dom-url-searchparams\\n    searchParams: accessorDescriptor(getSearchParams),\\n    // `URL.prototype.hash` accessors pair\\n    // https://url.spec.whatwg.org/#dom-url-hash\\n    hash: accessorDescriptor(getHash, function (hash) {\\n      var url = getInternalURLState(this);\\n      hash = String(hash);\\n      if (hash == '') {\\n        url.fragment = null;\\n        return;\\n      }\\n      if ('#' == hash.charAt(0)) hash = hash.slice(1);\\n      url.fragment = '';\\n      parseURL(url, hash, FRAGMENT);\\n    })\\n  });\\n}\\n\\n// `URL.prototype.toJSON` method\\n// https://url.spec.whatwg.org/#dom-url-tojson\\nredefine(URLPrototype, 'toJSON', function toJSON() {\\n  return serializeURL.call(this);\\n}, { enumerable: true });\\n\\n// `URL.prototype.toString` method\\n// https://url.spec.whatwg.org/#URL-stringification-behavior\\nredefine(URLPrototype, 'toString', function toString() {\\n  return serializeURL.call(this);\\n}, { enumerable: true });\\n\\nif (NativeURL) {\\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\\n  // `URL.createObjectURL` method\\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {\\n    return nativeCreateObjectURL.apply(NativeURL, arguments);\\n  });\\n  // `URL.revokeObjectURL` method\\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {\\n    return nativeRevokeObjectURL.apply(NativeURL, arguments);\\n  });\\n}\\n\\nsetToStringTag(URLConstructor, 'URL');\\n\\n$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {\\n  URL: URLConstructor\\n});\\n\\n},{\\\"../internals/an-instance\\\":59,\\\"../internals/array-from\\\":65,\\\"../internals/descriptors\\\":81,\\\"../internals/export\\\":88,\\\"../internals/global\\\":97,\\\"../internals/has\\\":98,\\\"../internals/internal-state\\\":106,\\\"../internals/native-url\\\":117,\\\"../internals/object-assign\\\":119,\\\"../internals/object-define-properties\\\":121,\\\"../internals/redefine\\\":134,\\\"../internals/set-to-string-tag\\\":143,\\\"../internals/string-multibyte\\\":148,\\\"../internals/string-punycode-to-ascii\\\":149,\\\"../modules/es.string.iterator\\\":168,\\\"../modules/web.url-search-params\\\":186}],188:[function(require,module,exports){\\n'use strict';\\nvar $ = require('../internals/export');\\n\\n// `URL.prototype.toJSON` method\\n// https://url.spec.whatwg.org/#dom-url-tojson\\n$({ target: 'URL', proto: true, enumerable: true }, {\\n  toJSON: function toJSON() {\\n    return URL.prototype.toString.call(this);\\n  }\\n});\\n\\n},{\\\"../internals/export\\\":88}],189:[function(require,module,exports){\\n/**\\n * Helpers.\\n */\\n\\nvar s = 1000;\\nvar m = s * 60;\\nvar h = m * 60;\\nvar d = h * 24;\\nvar w = d * 7;\\nvar y = d * 365.25;\\n\\n/**\\n * Parse or format the given `val`.\\n *\\n * Options:\\n *\\n *  - `long` verbose formatting [false]\\n *\\n * @param {String|Number} val\\n * @param {Object} [options]\\n * @throws {Error} throw an error if val is not a non-empty string or a number\\n * @return {String|Number}\\n * @api public\\n */\\n\\nmodule.exports = function(val, options) {\\n  options = options || {};\\n  var type = typeof val;\\n  if (type === 'string' && val.length > 0) {\\n    return parse(val);\\n  } else if (type === 'number' && isFinite(val)) {\\n    return options.long ? fmtLong(val) : fmtShort(val);\\n  }\\n  throw new Error(\\n    'val is not a non-empty string or a valid number. val=' +\\n      JSON.stringify(val)\\n  );\\n};\\n\\n/**\\n * Parse the given `str` and return milliseconds.\\n *\\n * @param {String} str\\n * @return {Number}\\n * @api private\\n */\\n\\nfunction parse(str) {\\n  str = String(str);\\n  if (str.length > 100) {\\n    return;\\n  }\\n  var match = /^(-?(?:\\\\d+)?\\\\.?\\\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\\n    str\\n  );\\n  if (!match) {\\n    return;\\n  }\\n  var n = parseFloat(match[1]);\\n  var type = (match[2] || 'ms').toLowerCase();\\n  switch (type) {\\n    case 'years':\\n    case 'year':\\n    case 'yrs':\\n    case 'yr':\\n    case 'y':\\n      return n * y;\\n    case 'weeks':\\n    case 'week':\\n    case 'w':\\n      return n * w;\\n    case 'days':\\n    case 'day':\\n    case 'd':\\n      return n * d;\\n    case 'hours':\\n    case 'hour':\\n    case 'hrs':\\n    case 'hr':\\n    case 'h':\\n      return n * h;\\n    case 'minutes':\\n    case 'minute':\\n    case 'mins':\\n    case 'min':\\n    case 'm':\\n      return n * m;\\n    case 'seconds':\\n    case 'second':\\n    case 'secs':\\n    case 'sec':\\n    case 's':\\n      return n * s;\\n    case 'milliseconds':\\n    case 'millisecond':\\n    case 'msecs':\\n    case 'msec':\\n    case 'ms':\\n      return n;\\n    default:\\n      return undefined;\\n  }\\n}\\n\\n/**\\n * Short format for `ms`.\\n *\\n * @param {Number} ms\\n * @return {String}\\n * @api private\\n */\\n\\nfunction fmtShort(ms) {\\n  var msAbs = Math.abs(ms);\\n  if (msAbs >= d) {\\n    return Math.round(ms / d) + 'd';\\n  }\\n  if (msAbs >= h) {\\n    return Math.round(ms / h) + 'h';\\n  }\\n  if (msAbs >= m) {\\n    return Math.round(ms / m) + 'm';\\n  }\\n  if (msAbs >= s) {\\n    return Math.round(ms / s) + 's';\\n  }\\n  return ms + 'ms';\\n}\\n\\n/**\\n * Long format for `ms`.\\n *\\n * @param {Number} ms\\n * @return {String}\\n * @api private\\n */\\n\\nfunction fmtLong(ms) {\\n  var msAbs = Math.abs(ms);\\n  if (msAbs >= d) {\\n    return plural(ms, msAbs, d, 'day');\\n  }\\n  if (msAbs >= h) {\\n    return plural(ms, msAbs, h, 'hour');\\n  }\\n  if (msAbs >= m) {\\n    return plural(ms, msAbs, m, 'minute');\\n  }\\n  if (msAbs >= s) {\\n    return plural(ms, msAbs, s, 'second');\\n  }\\n  return ms + ' ms';\\n}\\n\\n/**\\n * Pluralization helper.\\n */\\n\\nfunction plural(ms, msAbs, n, name) {\\n  var isPlural = msAbs >= n * 1.5;\\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\\n}\\n\\n},{}],190:[function(require,module,exports){\\n(function (process){(function (){\\n/* eslint-env browser */\\n\\n/**\\n * This is the web browser implementation of `debug()`.\\n */\\n\\nexports.formatArgs = formatArgs;\\nexports.save = save;\\nexports.load = load;\\nexports.useColors = useColors;\\nexports.storage = localstorage();\\nexports.destroy = (() => {\\n\\tlet warned = false;\\n\\n\\treturn () => {\\n\\t\\tif (!warned) {\\n\\t\\t\\twarned = true;\\n\\t\\t\\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\\n\\t\\t}\\n\\t};\\n})();\\n\\n/**\\n * Colors.\\n */\\n\\nexports.colors = [\\n\\t'#0000CC',\\n\\t'#0000FF',\\n\\t'#0033CC',\\n\\t'#0033FF',\\n\\t'#0066CC',\\n\\t'#0066FF',\\n\\t'#0099CC',\\n\\t'#0099FF',\\n\\t'#00CC00',\\n\\t'#00CC33',\\n\\t'#00CC66',\\n\\t'#00CC99',\\n\\t'#00CCCC',\\n\\t'#00CCFF',\\n\\t'#3300CC',\\n\\t'#3300FF',\\n\\t'#3333CC',\\n\\t'#3333FF',\\n\\t'#3366CC',\\n\\t'#3366FF',\\n\\t'#3399CC',\\n\\t'#3399FF',\\n\\t'#33CC00',\\n\\t'#33CC33',\\n\\t'#33CC66',\\n\\t'#33CC99',\\n\\t'#33CCCC',\\n\\t'#33CCFF',\\n\\t'#6600CC',\\n\\t'#6600FF',\\n\\t'#6633CC',\\n\\t'#6633FF',\\n\\t'#66CC00',\\n\\t'#66CC33',\\n\\t'#9900CC',\\n\\t'#9900FF',\\n\\t'#9933CC',\\n\\t'#9933FF',\\n\\t'#99CC00',\\n\\t'#99CC33',\\n\\t'#CC0000',\\n\\t'#CC0033',\\n\\t'#CC0066',\\n\\t'#CC0099',\\n\\t'#CC00CC',\\n\\t'#CC00FF',\\n\\t'#CC3300',\\n\\t'#CC3333',\\n\\t'#CC3366',\\n\\t'#CC3399',\\n\\t'#CC33CC',\\n\\t'#CC33FF',\\n\\t'#CC6600',\\n\\t'#CC6633',\\n\\t'#CC9900',\\n\\t'#CC9933',\\n\\t'#CCCC00',\\n\\t'#CCCC33',\\n\\t'#FF0000',\\n\\t'#FF0033',\\n\\t'#FF0066',\\n\\t'#FF0099',\\n\\t'#FF00CC',\\n\\t'#FF00FF',\\n\\t'#FF3300',\\n\\t'#FF3333',\\n\\t'#FF3366',\\n\\t'#FF3399',\\n\\t'#FF33CC',\\n\\t'#FF33FF',\\n\\t'#FF6600',\\n\\t'#FF6633',\\n\\t'#FF9900',\\n\\t'#FF9933',\\n\\t'#FFCC00',\\n\\t'#FFCC33'\\n];\\n\\n/**\\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\\n * and the Firebug extension (any Firefox version) are known\\n * to support \\\"%c\\\" CSS customizations.\\n *\\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\\n */\\n\\n// eslint-disable-next-line complexity\\nfunction useColors() {\\n\\t// NB: In an Electron preload script, document will be defined but not fully\\n\\t// initialized. Since we know we're in Chrome, we'll just detect this case\\n\\t// explicitly\\n\\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\\n\\t\\treturn true;\\n\\t}\\n\\n\\t// Internet Explorer and Edge do not support colors.\\n\\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\\\/(\\\\d+)/)) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\t// Is webkit? http://stackoverflow.com/a/16459606/376773\\n\\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\\n\\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\\n\\t\\t// Is firebug? http://stackoverflow.com/a/398120/376773\\n\\t\\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\\n\\t\\t// Is firefox >= v31?\\n\\t\\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\\n\\t\\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\\\/(\\\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\\n\\t\\t// Double check webkit in userAgent just in case we are in a worker\\n\\t\\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\\\/(\\\\d+)/));\\n}\\n\\n/**\\n * Colorize log arguments if enabled.\\n *\\n * @api public\\n */\\n\\nfunction formatArgs(args) {\\n\\targs[0] = (this.useColors ? '%c' : '') +\\n\\t\\tthis.namespace +\\n\\t\\t(this.useColors ? ' %c' : ' ') +\\n\\t\\targs[0] +\\n\\t\\t(this.useColors ? '%c ' : ' ') +\\n\\t\\t'+' + module.exports.humanize(this.diff);\\n\\n\\tif (!this.useColors) {\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst c = 'color: ' + this.color;\\n\\targs.splice(1, 0, c, 'color: inherit');\\n\\n\\t// The final \\\"%c\\\" is somewhat tricky, because there could be other\\n\\t// arguments passed either before or after the %c, so we need to\\n\\t// figure out the correct index to insert the CSS into\\n\\tlet index = 0;\\n\\tlet lastC = 0;\\n\\targs[0].replace(/%[a-zA-Z%]/g, match => {\\n\\t\\tif (match === '%%') {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tindex++;\\n\\t\\tif (match === '%c') {\\n\\t\\t\\t// We only are interested in the *last* %c\\n\\t\\t\\t// (the user may have provided their own)\\n\\t\\t\\tlastC = index;\\n\\t\\t}\\n\\t});\\n\\n\\targs.splice(lastC, 0, c);\\n}\\n\\n/**\\n * Invokes `console.debug()` when available.\\n * No-op when `console.debug` is not a \\\"function\\\".\\n * If `console.debug` is not available, falls back\\n * to `console.log`.\\n *\\n * @api public\\n */\\nexports.log = console.debug || console.log || (() => {});\\n\\n/**\\n * Save `namespaces`.\\n *\\n * @param {String} namespaces\\n * @api private\\n */\\nfunction save(namespaces) {\\n\\ttry {\\n\\t\\tif (namespaces) {\\n\\t\\t\\texports.storage.setItem('debug', namespaces);\\n\\t\\t} else {\\n\\t\\t\\texports.storage.removeItem('debug');\\n\\t\\t}\\n\\t} catch (error) {\\n\\t\\t// Swallow\\n\\t\\t// XXX (@Qix-) should we be logging these?\\n\\t}\\n}\\n\\n/**\\n * Load `namespaces`.\\n *\\n * @return {String} returns the previously persisted debug modes\\n * @api private\\n */\\nfunction load() {\\n\\tlet r;\\n\\ttry {\\n\\t\\tr = exports.storage.getItem('debug');\\n\\t} catch (error) {\\n\\t\\t// Swallow\\n\\t\\t// XXX (@Qix-) should we be logging these?\\n\\t}\\n\\n\\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\\n\\tif (!r && typeof process !== 'undefined' && 'env' in process) {\\n\\t\\tr = process.env.DEBUG;\\n\\t}\\n\\n\\treturn r;\\n}\\n\\n/**\\n * Localstorage attempts to return the localstorage.\\n *\\n * This is necessary because safari throws\\n * when a user disables cookies/localstorage\\n * and you attempt to access it.\\n *\\n * @return {LocalStorage}\\n * @api private\\n */\\n\\nfunction localstorage() {\\n\\ttry {\\n\\t\\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\\n\\t\\t// The Browser also has localStorage in the global context.\\n\\t\\treturn localStorage;\\n\\t} catch (error) {\\n\\t\\t// Swallow\\n\\t\\t// XXX (@Qix-) should we be logging these?\\n\\t}\\n}\\n\\nmodule.exports = require('./common')(exports);\\n\\nconst {formatters} = module.exports;\\n\\n/**\\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\\n */\\n\\nformatters.j = function (v) {\\n\\ttry {\\n\\t\\treturn JSON.stringify(v);\\n\\t} catch (error) {\\n\\t\\treturn '[UnexpectedJSONParseError]: ' + error.message;\\n\\t}\\n};\\n\\n}).call(this)}).call(this,require('_process'))\\n},{\\\"./common\\\":191,\\\"_process\\\":546}],191:[function(require,module,exports){\\n\\n/**\\n * This is the common logic for both the Node.js and web browser\\n * implementations of `debug()`.\\n */\\n\\nfunction setup(env) {\\n\\tcreateDebug.debug = createDebug;\\n\\tcreateDebug.default = createDebug;\\n\\tcreateDebug.coerce = coerce;\\n\\tcreateDebug.disable = disable;\\n\\tcreateDebug.enable = enable;\\n\\tcreateDebug.enabled = enabled;\\n\\tcreateDebug.humanize = require('ms');\\n\\tcreateDebug.destroy = destroy;\\n\\n\\tObject.keys(env).forEach(key => {\\n\\t\\tcreateDebug[key] = env[key];\\n\\t});\\n\\n\\t/**\\n\\t* The currently active debug mode names, and names to skip.\\n\\t*/\\n\\n\\tcreateDebug.names = [];\\n\\tcreateDebug.skips = [];\\n\\n\\t/**\\n\\t* Map of special \\\"%n\\\" handling functions, for the debug \\\"format\\\" argument.\\n\\t*\\n\\t* Valid key names are a single, lower or upper-case letter, i.e. \\\"n\\\" and \\\"N\\\".\\n\\t*/\\n\\tcreateDebug.formatters = {};\\n\\n\\t/**\\n\\t* Selects a color for a debug namespace\\n\\t* @param {String} namespace The namespace string for the for the debug instance to be colored\\n\\t* @return {Number|String} An ANSI color code for the given namespace\\n\\t* @api private\\n\\t*/\\n\\tfunction selectColor(namespace) {\\n\\t\\tlet hash = 0;\\n\\n\\t\\tfor (let i = 0; i < namespace.length; i++) {\\n\\t\\t\\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\\n\\t\\t\\thash |= 0; // Convert to 32bit integer\\n\\t\\t}\\n\\n\\t\\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\\n\\t}\\n\\tcreateDebug.selectColor = selectColor;\\n\\n\\t/**\\n\\t* Create a debugger with the given `namespace`.\\n\\t*\\n\\t* @param {String} namespace\\n\\t* @return {Function}\\n\\t* @api public\\n\\t*/\\n\\tfunction createDebug(namespace) {\\n\\t\\tlet prevTime;\\n\\t\\tlet enableOverride = null;\\n\\n\\t\\tfunction debug(...args) {\\n\\t\\t\\t// Disabled?\\n\\t\\t\\tif (!debug.enabled) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst self = debug;\\n\\n\\t\\t\\t// Set `diff` timestamp\\n\\t\\t\\tconst curr = Number(new Date());\\n\\t\\t\\tconst ms = curr - (prevTime || curr);\\n\\t\\t\\tself.diff = ms;\\n\\t\\t\\tself.prev = prevTime;\\n\\t\\t\\tself.curr = curr;\\n\\t\\t\\tprevTime = curr;\\n\\n\\t\\t\\targs[0] = createDebug.coerce(args[0]);\\n\\n\\t\\t\\tif (typeof args[0] !== 'string') {\\n\\t\\t\\t\\t// Anything else let's inspect with %O\\n\\t\\t\\t\\targs.unshift('%O');\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Apply any `formatters` transformations\\n\\t\\t\\tlet index = 0;\\n\\t\\t\\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\\n\\t\\t\\t\\t// If we encounter an escaped % then don't increase the array index\\n\\t\\t\\t\\tif (match === '%%') {\\n\\t\\t\\t\\t\\treturn '%';\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tindex++;\\n\\t\\t\\t\\tconst formatter = createDebug.formatters[format];\\n\\t\\t\\t\\tif (typeof formatter === 'function') {\\n\\t\\t\\t\\t\\tconst val = args[index];\\n\\t\\t\\t\\t\\tmatch = formatter.call(self, val);\\n\\n\\t\\t\\t\\t\\t// Now we need to remove `args[index]` since it's inlined in the `format`\\n\\t\\t\\t\\t\\targs.splice(index, 1);\\n\\t\\t\\t\\t\\tindex--;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn match;\\n\\t\\t\\t});\\n\\n\\t\\t\\t// Apply env-specific formatting (colors, etc.)\\n\\t\\t\\tcreateDebug.formatArgs.call(self, args);\\n\\n\\t\\t\\tconst logFn = self.log || createDebug.log;\\n\\t\\t\\tlogFn.apply(self, args);\\n\\t\\t}\\n\\n\\t\\tdebug.namespace = namespace;\\n\\t\\tdebug.useColors = createDebug.useColors();\\n\\t\\tdebug.color = createDebug.selectColor(namespace);\\n\\t\\tdebug.extend = extend;\\n\\t\\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\\n\\n\\t\\tObject.defineProperty(debug, 'enabled', {\\n\\t\\t\\tenumerable: true,\\n\\t\\t\\tconfigurable: false,\\n\\t\\t\\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\\n\\t\\t\\tset: v => {\\n\\t\\t\\t\\tenableOverride = v;\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\t// Env-specific initialization logic for debug instances\\n\\t\\tif (typeof createDebug.init === 'function') {\\n\\t\\t\\tcreateDebug.init(debug);\\n\\t\\t}\\n\\n\\t\\treturn debug;\\n\\t}\\n\\n\\tfunction extend(namespace, delimiter) {\\n\\t\\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\\n\\t\\tnewDebug.log = this.log;\\n\\t\\treturn newDebug;\\n\\t}\\n\\n\\t/**\\n\\t* Enables a debug mode by namespaces. This can include modes\\n\\t* separated by a colon and wildcards.\\n\\t*\\n\\t* @param {String} namespaces\\n\\t* @api public\\n\\t*/\\n\\tfunction enable(namespaces) {\\n\\t\\tcreateDebug.save(namespaces);\\n\\n\\t\\tcreateDebug.names = [];\\n\\t\\tcreateDebug.skips = [];\\n\\n\\t\\tlet i;\\n\\t\\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\\\s,]+/);\\n\\t\\tconst len = split.length;\\n\\n\\t\\tfor (i = 0; i < len; i++) {\\n\\t\\t\\tif (!split[i]) {\\n\\t\\t\\t\\t// ignore empty strings\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tnamespaces = split[i].replace(/\\\\*/g, '.*?');\\n\\n\\t\\t\\tif (namespaces[0] === '-') {\\n\\t\\t\\t\\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t* Disable debug output.\\n\\t*\\n\\t* @return {String} namespaces\\n\\t* @api public\\n\\t*/\\n\\tfunction disable() {\\n\\t\\tconst namespaces = [\\n\\t\\t\\t...createDebug.names.map(toNamespace),\\n\\t\\t\\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\\n\\t\\t].join(',');\\n\\t\\tcreateDebug.enable('');\\n\\t\\treturn namespaces;\\n\\t}\\n\\n\\t/**\\n\\t* Returns true if the given mode name is enabled, false otherwise.\\n\\t*\\n\\t* @param {String} name\\n\\t* @return {Boolean}\\n\\t* @api public\\n\\t*/\\n\\tfunction enabled(name) {\\n\\t\\tif (name[name.length - 1] === '*') {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\tlet i;\\n\\t\\tlet len;\\n\\n\\t\\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\\n\\t\\t\\tif (createDebug.skips[i].test(name)) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\\n\\t\\t\\tif (createDebug.names[i].test(name)) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\t/**\\n\\t* Convert regexp to namespace\\n\\t*\\n\\t* @param {RegExp} regxep\\n\\t* @return {String} namespace\\n\\t* @api private\\n\\t*/\\n\\tfunction toNamespace(regexp) {\\n\\t\\treturn regexp.toString()\\n\\t\\t\\t.substring(2, regexp.toString().length - 2)\\n\\t\\t\\t.replace(/\\\\.\\\\*\\\\?$/, '*');\\n\\t}\\n\\n\\t/**\\n\\t* Coerce `val`.\\n\\t*\\n\\t* @param {Mixed} val\\n\\t* @return {Mixed}\\n\\t* @api private\\n\\t*/\\n\\tfunction coerce(val) {\\n\\t\\tif (val instanceof Error) {\\n\\t\\t\\treturn val.stack || val.message;\\n\\t\\t}\\n\\t\\treturn val;\\n\\t}\\n\\n\\t/**\\n\\t* XXX DO NOT USE. This is a temporary stub function.\\n\\t* XXX It WILL be removed in the next major release.\\n\\t*/\\n\\tfunction destroy() {\\n\\t\\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\\n\\t}\\n\\n\\tcreateDebug.enable(createDebug.load());\\n\\n\\treturn createDebug;\\n}\\n\\nmodule.exports = setup;\\n\\n},{\\\"ms\\\":189}],192:[function(require,module,exports){\\n'use strict';\\n\\nvar keys = require('object-keys');\\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\\n\\nvar toStr = Object.prototype.toString;\\nvar concat = Array.prototype.concat;\\nvar origDefineProperty = Object.defineProperty;\\n\\nvar isFunction = function (fn) {\\n\\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\\n};\\n\\nvar arePropertyDescriptorsSupported = function () {\\n\\tvar obj = {};\\n\\ttry {\\n\\t\\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\\n\\t\\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\\n\\t\\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\treturn obj.x === obj;\\n\\t} catch (e) { /* this is IE 8. */\\n\\t\\treturn false;\\n\\t}\\n};\\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\\n\\nvar defineProperty = function (object, name, value, predicate) {\\n\\tif (name in object && (!isFunction(predicate) || !predicate())) {\\n\\t\\treturn;\\n\\t}\\n\\tif (supportsDescriptors) {\\n\\t\\torigDefineProperty(object, name, {\\n\\t\\t\\tconfigurable: true,\\n\\t\\t\\tenumerable: false,\\n\\t\\t\\tvalue: value,\\n\\t\\t\\twritable: true\\n\\t\\t});\\n\\t} else {\\n\\t\\tobject[name] = value;\\n\\t}\\n};\\n\\nvar defineProperties = function (object, map) {\\n\\tvar predicates = arguments.length > 2 ? arguments[2] : {};\\n\\tvar props = keys(map);\\n\\tif (hasSymbols) {\\n\\t\\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\\n\\t}\\n\\tfor (var i = 0; i < props.length; i += 1) {\\n\\t\\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\\n\\t}\\n};\\n\\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\\n\\nmodule.exports = defineProperties;\\n\\n},{\\\"object-keys\\\":541}],193:[function(require,module,exports){\\n'use strict';\\n\\nfunction assign(obj, props) {\\n    for (const key in props) {\\n        Object.defineProperty(obj, key, {\\n            value: props[key],\\n            enumerable: true,\\n            configurable: true,\\n        });\\n    }\\n\\n    return obj;\\n}\\n\\nfunction createError(err, code, props) {\\n    if (!err || typeof err === 'string') {\\n        throw new TypeError('Please pass an Error to err-code');\\n    }\\n\\n    if (!props) {\\n        props = {};\\n    }\\n\\n    if (typeof code === 'object') {\\n        props = code;\\n        code = undefined;\\n    }\\n\\n    if (code != null) {\\n        props.code = code;\\n    }\\n\\n    try {\\n        return assign(err, props);\\n    } catch (_) {\\n        props.message = err.message;\\n        props.stack = err.stack;\\n\\n        const ErrClass = function () {};\\n\\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\\n\\n        return assign(new ErrClass(), props);\\n    }\\n}\\n\\nmodule.exports = createError;\\n\\n},{}],194:[function(require,module,exports){\\n'use strict';\\n\\nvar matchOperatorsRe = /[|\\\\\\\\{}()[\\\\]^$+*?.]/g;\\n\\nmodule.exports = function (str) {\\n\\tif (typeof str !== 'string') {\\n\\t\\tthrow new TypeError('Expected a string');\\n\\t}\\n\\n\\treturn str.replace(matchOperatorsRe, '\\\\\\\\$&');\\n};\\n\\n},{}],195:[function(require,module,exports){\\n'use strict';\\n/* eslint-disable no-control-regex */\\n// TODO: remove parens when Node.js 6 is targeted. Node.js 4 barfs at it.\\nmodule.exports = () => (/[<>:\\\"\\\\/\\\\\\\\|?*\\\\x00-\\\\x1F]/g);\\nmodule.exports.windowsNames = () => (/^(con|prn|aux|nul|com[0-9]|lpt[0-9])$/i);\\n\\n},{}],196:[function(require,module,exports){\\n'use strict';\\nconst path = require('path');\\nconst filenamify = require('./filenamify');\\n\\nconst filenamifyPath = (filePath, options) => {\\n\\tfilePath = path.resolve(filePath);\\n\\treturn path.join(path.dirname(filePath), filenamify(path.basename(filePath), options));\\n};\\n\\nmodule.exports = filenamifyPath;\\n\\n},{\\\"./filenamify\\\":197,\\\"path\\\":545}],197:[function(require,module,exports){\\n'use strict';\\nconst trimRepeated = require('trim-repeated');\\nconst filenameReservedRegex = require('filename-reserved-regex');\\nconst stripOuter = require('strip-outer');\\n\\n// Doesn't make sense to have longer filenames\\nconst MAX_FILENAME_LENGTH = 100;\\n\\nconst reControlChars = /[\\\\u0000-\\\\u001f\\\\u0080-\\\\u009f]/g; // eslint-disable-line no-control-regex\\nconst reRelativePath = /^\\\\.+/;\\n\\nconst filenamify = (string, options = {}) => {\\n\\tif (typeof string !== 'string') {\\n\\t\\tthrow new TypeError('Expected a string');\\n\\t}\\n\\n\\tconst replacement = options.replacement === undefined ? '!' : options.replacement;\\n\\n\\tif (filenameReservedRegex().test(replacement) && reControlChars.test(replacement)) {\\n\\t\\tthrow new Error('Replacement string cannot contain reserved filename characters');\\n\\t}\\n\\n\\tstring = string.replace(filenameReservedRegex(), replacement);\\n\\tstring = string.replace(reControlChars, replacement);\\n\\tstring = string.replace(reRelativePath, replacement);\\n\\n\\tif (replacement.length > 0) {\\n\\t\\tstring = trimRepeated(string, replacement);\\n\\t\\tstring = string.length > 1 ? stripOuter(string, replacement) : string;\\n\\t}\\n\\n\\tstring = filenameReservedRegex.windowsNames().test(string) ? string + replacement : string;\\n\\tstring = string.slice(0, typeof options.maxLength === 'number' ? options.maxLength : MAX_FILENAME_LENGTH);\\n\\n\\treturn string;\\n};\\n\\nmodule.exports = filenamify;\\n\\n},{\\\"filename-reserved-regex\\\":195,\\\"strip-outer\\\":576,\\\"trim-repeated\\\":577}],198:[function(require,module,exports){\\n'use strict';\\nconst filenamify = require('./filenamify');\\nconst filenamifyPath = require('./filenamify-path');\\n\\nconst filenamifyCombined = filenamify;\\nfilenamifyCombined.path = filenamifyPath;\\n\\nmodule.exports = filenamify;\\n\\n},{\\\"./filenamify\\\":197,\\\"./filenamify-path\\\":196}],199:[function(require,module,exports){\\n/* eslint no-negated-condition: 0, no-new-func: 0 */\\n\\n'use strict';\\n\\nif (typeof self !== 'undefined') {\\n\\tmodule.exports = self;\\n} else if (typeof window !== 'undefined') {\\n\\tmodule.exports = window;\\n} else {\\n\\tmodule.exports = Function('return this')();\\n}\\n\\n},{}],200:[function(require,module,exports){\\n'use strict';\\n\\nvar defineProperties = require('define-properties');\\n\\nvar implementation = require('./implementation');\\nvar getPolyfill = require('./polyfill');\\nvar shim = require('./shim');\\n\\nvar polyfill = getPolyfill();\\n\\nvar getGlobal = function () { return polyfill; };\\n\\ndefineProperties(getGlobal, {\\n\\tgetPolyfill: getPolyfill,\\n\\timplementation: implementation,\\n\\tshim: shim\\n});\\n\\nmodule.exports = getGlobal;\\n\\n},{\\\"./implementation\\\":199,\\\"./polyfill\\\":201,\\\"./shim\\\":202,\\\"define-properties\\\":192}],201:[function(require,module,exports){\\n(function (global){(function (){\\n'use strict';\\n\\nvar implementation = require('./implementation');\\n\\nmodule.exports = function getPolyfill() {\\n\\tif (typeof global !== 'object' || !global || global.Math !== Math || global.Array !== Array) {\\n\\t\\treturn implementation;\\n\\t}\\n\\treturn global;\\n};\\n\\n}).call(this)}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\n},{\\\"./implementation\\\":199}],202:[function(require,module,exports){\\n'use strict';\\n\\nvar define = require('define-properties');\\nvar getPolyfill = require('./polyfill');\\n\\nmodule.exports = function shimGlobal() {\\n\\tvar polyfill = getPolyfill();\\n\\tif (define.supportsDescriptors) {\\n\\t\\tvar descriptor = Object.getOwnPropertyDescriptor(polyfill, 'globalThis');\\n\\t\\tif (!descriptor || (descriptor.configurable && (descriptor.enumerable || descriptor.writable || globalThis !== polyfill))) { // eslint-disable-line max-len\\n\\t\\t\\tObject.defineProperty(polyfill, 'globalThis', {\\n\\t\\t\\t\\tconfigurable: true,\\n\\t\\t\\t\\tenumerable: false,\\n\\t\\t\\t\\tvalue: polyfill,\\n\\t\\t\\t\\twritable: false\\n\\t\\t\\t});\\n\\t\\t}\\n\\t} else if (typeof globalThis !== 'object' || globalThis !== polyfill) {\\n\\t\\tpolyfill.globalThis = polyfill;\\n\\t}\\n\\treturn polyfill;\\n};\\n\\n},{\\\"./polyfill\\\":201,\\\"define-properties\\\":192}],203:[function(require,module,exports){\\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\\n  var e, m\\n  var eLen = (nBytes * 8) - mLen - 1\\n  var eMax = (1 << eLen) - 1\\n  var eBias = eMax >> 1\\n  var nBits = -7\\n  var i = isLE ? (nBytes - 1) : 0\\n  var d = isLE ? -1 : 1\\n  var s = buffer[offset + i]\\n\\n  i += d\\n\\n  e = s & ((1 << (-nBits)) - 1)\\n  s >>= (-nBits)\\n  nBits += eLen\\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\\n\\n  m = e & ((1 << (-nBits)) - 1)\\n  e >>= (-nBits)\\n  nBits += mLen\\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\\n\\n  if (e === 0) {\\n    e = 1 - eBias\\n  } else if (e === eMax) {\\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\\n  } else {\\n    m = m + Math.pow(2, mLen)\\n    e = e - eBias\\n  }\\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\\n}\\n\\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\\n  var e, m, c\\n  var eLen = (nBytes * 8) - mLen - 1\\n  var eMax = (1 << eLen) - 1\\n  var eBias = eMax >> 1\\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\\n  var i = isLE ? 0 : (nBytes - 1)\\n  var d = isLE ? 1 : -1\\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\\n\\n  value = Math.abs(value)\\n\\n  if (isNaN(value) || value === Infinity) {\\n    m = isNaN(value) ? 1 : 0\\n    e = eMax\\n  } else {\\n    e = Math.floor(Math.log(value) / Math.LN2)\\n    if (value * (c = Math.pow(2, -e)) < 1) {\\n      e--\\n      c *= 2\\n    }\\n    if (e + eBias >= 1) {\\n      value += rt / c\\n    } else {\\n      value += rt * Math.pow(2, 1 - eBias)\\n    }\\n    if (value * c >= 2) {\\n      e++\\n      c /= 2\\n    }\\n\\n    if (e + eBias >= eMax) {\\n      m = 0\\n      e = eMax\\n    } else if (e + eBias >= 1) {\\n      m = ((value * c) - 1) * Math.pow(2, mLen)\\n      e = e + eBias\\n    } else {\\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\\n      e = 0\\n    }\\n  }\\n\\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\\n\\n  e = (e << mLen) | m\\n  eLen += mLen\\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\\n\\n  buffer[offset + i - d] |= s * 128\\n}\\n\\n},{}],204:[function(require,module,exports){\\n'use strict';\\n\\nconst word = '[a-fA-F\\\\\\\\d:]';\\nconst b = options => options && options.includeBoundaries ?\\n\\t`(?:(?<=\\\\\\\\s|^)(?=${word})|(?<=${word})(?=\\\\\\\\s|$))` :\\n\\t'';\\n\\nconst v4 = '(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]\\\\\\\\d|\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]\\\\\\\\d|\\\\\\\\d)){3}';\\n\\nconst v6seg = '[a-fA-F\\\\\\\\d]{1,4}';\\nconst v6 = `\\n(\\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\\n(?:${v6seg}:){5}(?::${v4}|(:${v6seg}){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\\n(?:${v6seg}:){4}(?:(:${v6seg}){0,1}:${v4}|(:${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\\n(?:${v6seg}:){3}(?:(:${v6seg}){0,2}:${v4}|(:${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\\n(?:${v6seg}:){2}(?:(:${v6seg}){0,3}:${v4}|(:${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\\n(?:${v6seg}:){1}(?:(:${v6seg}){0,4}:${v4}|(:${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\\n(?::((?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\\n)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1\\n`.replace(/\\\\s*\\\\/\\\\/.*$/gm, '').replace(/\\\\n/g, '').trim();\\n\\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\\nconst v4exact = new RegExp(`^${v4}$`);\\nconst v6exact = new RegExp(`^${v6}$`);\\n\\nconst ip = options => options && options.exact ?\\n\\tv46Exact :\\n\\tnew RegExp(`(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(options)})`, 'g');\\n\\nip.v4 = options => options && options.exact ? v4exact : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\\nip.v6 = options => options && options.exact ? v6exact : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\\n\\nmodule.exports = ip;\\n\\n},{}],205:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\\n *\\n * @param {Array<ArrayLike<number>>} arrays\\n * @param {number} [length]\\n * @returns {Uint8Array}\\n */\\nfunction concat (arrays, length) {\\n  if (!length) {\\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0)\\n  }\\n\\n  const output = new Uint8Array(length)\\n  let offset = 0\\n\\n  for (const arr of arrays) {\\n    output.set(arr, offset)\\n    offset += arr.length\\n  }\\n\\n  return output\\n}\\n\\nmodule.exports = concat\\n\\n},{}],206:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * Returns true if the two passed Uint8Arrays have the same content\\n *\\n * @param {Uint8Array} a\\n * @param {Uint8Array} b\\n * @returns {boolean}\\n */\\nfunction equals (a, b) {\\n  if (a === b) {\\n    return true\\n  }\\n\\n  if (a.byteLength !== b.byteLength) {\\n    return false\\n  }\\n\\n  for (let i = 0; i < a.byteLength; i++) {\\n    if (a[i] !== b[i]) {\\n      return false\\n    }\\n  }\\n\\n  return true\\n}\\n\\nmodule.exports = equals\\n\\n},{}],207:[function(require,module,exports){\\n'use strict'\\n\\nconst { encoding: getCodec } = require('multibase')\\nconst { TextDecoder } = require('web-encoding')\\nconst utf8Decoder = new TextDecoder('utf8')\\n\\n/**\\n * @typedef {import('multibase/src/types').BaseName} BaseName\\n */\\n\\n/**\\n * Turns a Uint8Array of bytes into a string with each\\n * character being the char code of the corresponding byte\\n *\\n * @param {Uint8Array} array - The array to turn into a string\\n * @returns {string}\\n */\\nfunction uint8ArrayToAsciiString (array) {\\n  let string = ''\\n\\n  for (let i = 0; i < array.length; i++) {\\n    string += String.fromCharCode(array[i])\\n  }\\n  return string\\n}\\n\\n/**\\n * Turns a `Uint8Array` into a string.\\n *\\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\\n *\\n * Also `ascii` which is similar to node's 'binary' encoding.\\n *\\n * @param {Uint8Array} array - The array to turn into a string\\n * @param {BaseName | 'utf8' | 'utf-8' | 'ascii'} [encoding=utf8] - The encoding to use\\n * @returns {string}\\n */\\nfunction toString (array, encoding = 'utf8') {\\n  if (encoding === 'utf8' || encoding === 'utf-8') {\\n    return utf8Decoder.decode(array)\\n  }\\n\\n  if (encoding === 'ascii') {\\n    return uint8ArrayToAsciiString(array)\\n  }\\n\\n  return getCodec(encoding).encode(array)\\n}\\n\\nmodule.exports = toString\\n\\n},{\\\"multibase\\\":501,\\\"web-encoding\\\":595}],208:[function(require,module,exports){\\narguments[4][52][0].apply(exports,arguments)\\n},{\\\"dup\\\":52,\\\"multihashes\\\":526}],209:[function(require,module,exports){\\n'use strict'\\n\\nconst mh = require('multihashes')\\nconst multibase = require('multibase')\\nconst multicodec = require('multicodec')\\nconst { baseTable: codecs } = require('multicodec/src/base-table.js')\\nconst CIDUtil = require('./cid-util')\\nconst uint8ArrayConcat = require('uint8arrays/concat')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\nconst uint8ArrayEquals = require('uint8arrays/equals')\\n\\nconst codecInts = /** @type {CodecName[]} */(Object.keys(codecs)).reduce((p, name) => {\\n  p[codecs[name]] = name\\n  return p\\n}, /** @type {Record<CodecNumber, CodecName>} */({}))\\n\\nconst symbol = Symbol.for('@ipld/js-cid/CID')\\n\\n/**\\n * @typedef {Object} SerializedCID\\n * @property {string} codec\\n * @property {number} version\\n * @property {Uint8Array} hash\\n */\\n/**\\n * @typedef {0|1} CIDVersion\\n * @typedef {import('multibase').BaseNameOrCode} BaseNameOrCode\\n * @typedef {import('multicodec').CodecName} CodecName\\n * @typedef {import('multicodec').CodecNumber} CodecNumber\\n */\\n\\n/**\\n * Class representing a CID `<mbase><version><mcodec><mhash>`\\n * , as defined in [ipld/cid](https://github.com/multiformats/cid).\\n *\\n * @class CID\\n */\\nclass CID {\\n  /**\\n   * Create a new CID.\\n   *\\n   * The algorithm for argument input is roughly:\\n   * ```\\n   * if (cid)\\n   *   -> create a copy\\n   * else if (str)\\n   *   if (1st char is on multibase table) -> CID String\\n   *   else -> bs58 encoded multihash\\n   * else if (Uint8Array)\\n   *   if (1st byte is 0 or 1) -> CID\\n   *   else -> multihash\\n   * else if (Number)\\n   *   -> construct CID by parts\\n   * ```\\n   *\\n   * @param {CIDVersion | string | Uint8Array | CID} version\\n   * @param {string|number} [codec]\\n   * @param {Uint8Array} [multihash]\\n   * @param {string} [multibaseName]\\n   *\\n   * @example\\n   * new CID(<version>, <codec>, <multihash>, <multibaseName>)\\n   * new CID(<cidStr>)\\n   * new CID(<cid.bytes>)\\n   * new CID(<multihash>)\\n   * new CID(<bs58 encoded multihash>)\\n   * new CID(<cid>)\\n   */\\n  constructor (version, codec, multihash, multibaseName) {\\n    // We have below three blank field accessors only because\\n    // otherwise TS will not pick them up if done after assignemnts\\n\\n    /**\\n     * The version of the CID.\\n     *\\n     * @type {CIDVersion}\\n     */\\n    // eslint-disable-next-line no-unused-expressions\\n    this.version\\n\\n    /**\\n     * The codec of the CID.\\n     *\\n     * @deprecated\\n     * @type {CodecName}\\n     */\\n    // eslint-disable-next-line no-unused-expressions\\n    this.codec\\n\\n    /**\\n     * The multihash of the CID.\\n     *\\n     * @type {Uint8Array}\\n     */\\n    // eslint-disable-next-line no-unused-expressions\\n    this.multihash\\n\\n    Object.defineProperty(this, symbol, { value: true })\\n    if (CID.isCID(version)) {\\n      // version is an exising CID instance\\n      const cid = /** @type {CID} */(version)\\n      this.version = cid.version\\n      this.codec = cid.codec\\n      this.multihash = cid.multihash\\n      // Default guard for when a CID < 0.7 is passed with no multibaseName\\n      // @ts-ignore\\n      this.multibaseName = cid.multibaseName || (cid.version === 0 ? 'base58btc' : 'base32')\\n      return\\n    }\\n\\n    if (typeof version === 'string') {\\n      // e.g. 'base32' or false\\n      const baseName = multibase.isEncoded(version)\\n      if (baseName) {\\n        // version is a CID String encoded with multibase, so v1\\n        const cid = multibase.decode(version)\\n        this.version = /** @type {CIDVersion} */(parseInt(cid[0].toString(), 16))\\n        this.codec = multicodec.getCodec(cid.slice(1))\\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\\n        this.multibaseName = baseName\\n      } else {\\n        // version is a base58btc string multihash, so v0\\n        this.version = 0\\n        this.codec = 'dag-pb'\\n        this.multihash = mh.fromB58String(version)\\n        this.multibaseName = 'base58btc'\\n      }\\n      CID.validateCID(this)\\n      Object.defineProperty(this, 'string', { value: version })\\n      return\\n    }\\n\\n    if (version instanceof Uint8Array) {\\n      const v = parseInt(version[0].toString(), 16)\\n      if (v === 1) {\\n        // version is a CID Uint8Array\\n        const cid = version\\n        this.version = v\\n        this.codec = multicodec.getCodec(cid.slice(1))\\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\\n        this.multibaseName = 'base32'\\n      } else {\\n        // version is a raw multihash Uint8Array, so v0\\n        this.version = 0\\n        this.codec = 'dag-pb'\\n        this.multihash = version\\n        this.multibaseName = 'base58btc'\\n      }\\n      CID.validateCID(this)\\n      return\\n    }\\n\\n    // otherwise, assemble the CID from the parameters\\n\\n    this.version = version\\n\\n    if (typeof codec === 'number') {\\n      // @ts-ignore\\n      codec = codecInts[codec]\\n    }\\n\\n    this.codec = /** @type {CodecName} */ (codec)\\n\\n    this.multihash = /** @type {Uint8Array} */ (multihash)\\n\\n    /**\\n     * Multibase name as string.\\n     *\\n     * @deprecated\\n     * @type {string}\\n     */\\n    this.multibaseName = multibaseName || (version === 0 ? 'base58btc' : 'base32')\\n\\n    CID.validateCID(this)\\n  }\\n\\n  /**\\n   * The CID as a `Uint8Array`\\n   *\\n   * @returns {Uint8Array}\\n   *\\n   */\\n  get bytes () {\\n    // @ts-ignore\\n    let bytes = this._bytes\\n\\n    if (!bytes) {\\n      if (this.version === 0) {\\n        bytes = this.multihash\\n      } else if (this.version === 1) {\\n        const codec = multicodec.getCodeVarint(this.codec)\\n        bytes = uint8ArrayConcat([\\n          [1], codec, this.multihash\\n        ], 1 + codec.byteLength + this.multihash.byteLength)\\n      } else {\\n        throw new Error('unsupported version')\\n      }\\n\\n      // Cache this Uint8Array so it doesn't have to be recreated\\n      Object.defineProperty(this, '_bytes', { value: bytes })\\n    }\\n\\n    return bytes\\n  }\\n\\n  /**\\n   * The prefix of the CID.\\n   *\\n   * @returns {Uint8Array}\\n   */\\n  get prefix () {\\n    const codec = multicodec.getCodeVarint(this.codec)\\n    const multihash = mh.prefix(this.multihash)\\n    const prefix = uint8ArrayConcat([\\n      [this.version], codec, multihash\\n    ], 1 + codec.byteLength + multihash.byteLength)\\n\\n    return prefix\\n  }\\n\\n  /**\\n   * The codec of the CID in its number form.\\n   *\\n   * @returns {CodecNumber}\\n   */\\n  get code () {\\n    return codecs[this.codec]\\n  }\\n\\n  /**\\n   * Convert to a CID of version `0`.\\n   *\\n   * @returns {CID}\\n   */\\n  toV0 () {\\n    if (this.codec !== 'dag-pb') {\\n      throw new Error('Cannot convert a non dag-pb CID to CIDv0')\\n    }\\n\\n    const { name, length } = mh.decode(this.multihash)\\n\\n    if (name !== 'sha2-256') {\\n      throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\\n    }\\n\\n    if (length !== 32) {\\n      throw new Error('Cannot convert non 32 byte multihash CID to CIDv0')\\n    }\\n\\n    return new CID(0, this.codec, this.multihash)\\n  }\\n\\n  /**\\n   * Convert to a CID of version `1`.\\n   *\\n   * @returns {CID}\\n   */\\n  toV1 () {\\n    return new CID(1, this.codec, this.multihash)\\n  }\\n\\n  /**\\n   * Encode the CID into a string.\\n   *\\n   * @param {BaseNameOrCode} [base=this.multibaseName] - Base encoding to use.\\n   * @returns {string}\\n   */\\n  toBaseEncodedString (base = this.multibaseName) {\\n    // @ts-ignore non enumerable cache property\\n    if (this.string && this.string.length !== 0 && base === this.multibaseName) {\\n      // @ts-ignore non enumerable cache property\\n      return this.string\\n    }\\n    let str\\n    if (this.version === 0) {\\n      if (base !== 'base58btc') {\\n        throw new Error('not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()')\\n      }\\n      str = mh.toB58String(this.multihash)\\n    } else if (this.version === 1) {\\n      str = uint8ArrayToString(multibase.encode(base, this.bytes))\\n    } else {\\n      throw new Error('unsupported version')\\n    }\\n    if (base === this.multibaseName) {\\n      // cache the string value\\n      Object.defineProperty(this, 'string', { value: str })\\n    }\\n    return str\\n  }\\n\\n  /**\\n   * CID(QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n)\\n   *\\n   * @returns {string}\\n   */\\n  [Symbol.for('nodejs.util.inspect.custom')] () {\\n    return 'CID(' + this.toString() + ')'\\n  }\\n\\n  /**\\n   * Encode the CID into a string.\\n   *\\n   * @param {BaseNameOrCode} [base=this.multibaseName] - Base encoding to use.\\n   * @returns {string}\\n   */\\n  toString (base) {\\n    return this.toBaseEncodedString(base)\\n  }\\n\\n  /**\\n   * Serialize to a plain object.\\n   *\\n   * @returns {SerializedCID}\\n   */\\n  toJSON () {\\n    return {\\n      codec: this.codec,\\n      version: this.version,\\n      hash: this.multihash\\n    }\\n  }\\n\\n  /**\\n   * Compare equality with another CID.\\n   *\\n   * @param {CID} other\\n   * @returns {boolean}\\n   */\\n  equals (other) {\\n    return this.codec === other.codec &&\\n      this.version === other.version &&\\n      uint8ArrayEquals(this.multihash, other.multihash)\\n  }\\n\\n  /**\\n   * Test if the given input is a valid CID object.\\n   * Throws if it is not.\\n   *\\n   * @param {any} other - The other CID.\\n   * @returns {void}\\n   */\\n  static validateCID (other) {\\n    const errorMsg = CIDUtil.checkCIDComponents(other)\\n    if (errorMsg) {\\n      throw new Error(errorMsg)\\n    }\\n  }\\n\\n  /**\\n   * Check if object is a CID instance\\n   *\\n   * @param {any} value\\n   * @returns {value is CID}\\n   */\\n  static isCID (value) {\\n    return value instanceof CID || Boolean(value && value[symbol])\\n  }\\n}\\n\\nCID.codecs = codecs\\n\\nmodule.exports = CID\\n\\n},{\\\"./cid-util\\\":208,\\\"multibase\\\":501,\\\"multicodec\\\":513,\\\"multicodec/src/base-table.js\\\":511,\\\"multihashes\\\":526,\\\"uint8arrays/concat\\\":205,\\\"uint8arrays/equals\\\":206,\\\"uint8arrays/to-string\\\":207}],210:[function(require,module,exports){\\n'use strict'\\n\\nconst normaliseContent = require('./normalise-content.browser')\\nconst normaliseInput = require('./normalise-input')\\n\\n/**\\n * Transforms any of the `ipfs.add` input types into\\n *\\n * ```\\n * AsyncIterable<{ path, mode, mtime, content: Blob }>\\n * ```\\n *\\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\\n *\\n * @param {import('ipfs-core-types/src/files').ImportSource} input\\n * @returns {AsyncIterable<import('ipfs-core-types/src/files').Entry<Blob>>}\\n */\\nmodule.exports = (input) => normaliseInput(input, normaliseContent)\\n\\n},{\\\"./normalise-content.browser\\\":211,\\\"./normalise-input\\\":212}],211:[function(require,module,exports){\\n'use strict'\\n\\nconst errCode = require('err-code')\\nconst itPeekable = require('it-peekable')\\nconst browserStreamToIt = require('browser-readablestream-to-it')\\nconst all = require('it-all')\\n\\nconst {\\n  isBytes,\\n  isBlob,\\n  isReadableStream\\n} = require('./utils')\\n\\n/**\\n * @param {import('./normalise-input').ToContent} input\\n * @returns {Promise<Blob>}\\n */\\nasync function toBlob (input) {\\n  // Bytes\\n  if (isBytes(input)) {\\n    return new Blob([input])\\n  }\\n\\n  // String\\n  if (typeof input === 'string' || input instanceof String) {\\n    return new Blob([input.toString()])\\n  }\\n\\n  // Blob | File\\n  if (isBlob(input)) {\\n    return input\\n  }\\n\\n  // Browser stream\\n  if (isReadableStream(input)) {\\n    input = browserStreamToIt(input)\\n  }\\n\\n  // (Async)Iterator<?>\\n  if (input[Symbol.iterator] || input[Symbol.asyncIterator]) {\\n    /** @type {any} peekable */\\n    const peekable = itPeekable(input)\\n\\n    /** @type {any} value **/\\n    const { value, done } = await peekable.peek()\\n\\n    if (done) {\\n      // make sure empty iterators result in empty files\\n      return itToBlob(peekable)\\n    }\\n\\n    peekable.push(value)\\n\\n    // (Async)Iterable<Number>\\n    if (Number.isInteger(value)) {\\n      return new Blob([Uint8Array.from(await all(peekable))])\\n    }\\n\\n    // (Async)Iterable<Bytes|String>\\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\\n      return itToBlob(peekable)\\n    }\\n  }\\n\\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\\n}\\n\\n/**\\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\\n * @returns {Promise<Blob>}\\n */\\nasync function itToBlob (stream) {\\n  const parts = []\\n\\n  for await (const chunk of stream) {\\n    parts.push(chunk)\\n  }\\n\\n  return new Blob(parts)\\n}\\n\\nmodule.exports = toBlob\\n\\n},{\\\"./utils\\\":213,\\\"browser-readablestream-to-it\\\":37,\\\"err-code\\\":193,\\\"it-all\\\":471,\\\"it-peekable\\\":475}],212:[function(require,module,exports){\\n'use strict'\\n\\nconst errCode = require('err-code')\\nconst browserStreamToIt = require('browser-readablestream-to-it')\\nconst itPeekable = require('it-peekable')\\nconst map = require('it-map')\\nconst {\\n  isBytes,\\n  isBlob,\\n  isReadableStream,\\n  isFileObject,\\n  mtimeToObject,\\n  modeToNumber\\n} = require('./utils')\\n\\n// eslint-disable-next-line complexity\\n\\n/**\\n * @typedef {import('ipfs-core-types/src/files').ToContent} ToContent\\n */\\n/**\\n * @template {Blob|AsyncIterable<Uint8Array>} Content\\n * @param {import('ipfs-core-types/src/files').ImportSource} input\\n * @param {(content:ToContent) => Content|Promise<Content>} normaliseContent\\n * @returns {AsyncIterable<import('ipfs-core-types/src/files').Entry<Content>>}\\n */\\n// eslint-disable-next-line complexity\\nmodule.exports = async function * normaliseInput (input, normaliseContent) {\\n  // must give us something\\n  if (input === null || input === undefined) {\\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\\n  }\\n\\n  // String\\n  if (typeof input === 'string' || input instanceof String) {\\n    yield toFileObject(input.toString(), normaliseContent)\\n    return\\n  }\\n\\n  // Uint8Array|ArrayBuffer|TypedArray\\n  // Blob|File\\n  if (isBytes(input) || isBlob(input)) {\\n    yield toFileObject(input, normaliseContent)\\n    return\\n  }\\n\\n  // Browser ReadableStream\\n  if (isReadableStream(input)) {\\n    input = browserStreamToIt(input)\\n  }\\n\\n  // Iterable<?>\\n  if (input[Symbol.iterator] || input[Symbol.asyncIterator]) {\\n    /** @type {any} peekable */\\n    const peekable = itPeekable(input)\\n\\n    /** @type {any} value **/\\n    const { value, done } = await peekable.peek()\\n\\n    if (done) {\\n      // make sure empty iterators result in empty files\\n      yield * []\\n      return\\n    }\\n\\n    peekable.push(value)\\n\\n    // (Async)Iterable<Number>\\n    // (Async)Iterable<Bytes>\\n    if (Number.isInteger(value) || isBytes(value)) {\\n      yield toFileObject(peekable, normaliseContent)\\n      return\\n    }\\n\\n    // (Async)Iterable<Blob>\\n    // (Async)Iterable<String>\\n    // (Async)Iterable<{ path, content }>\\n    if (isFileObject(value) || isBlob(value) || typeof value === 'string' || value instanceof String) {\\n      yield * map(peekable, (value) => toFileObject(value, normaliseContent))\\n      return\\n    }\\n\\n    // (Async)Iterable<(Async)Iterable<?>>\\n    // (Async)Iterable<ReadableStream<?>>\\n    // ReadableStream<(Async)Iterable<?>>\\n    // ReadableStream<ReadableStream<?>>\\n    if (value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value)) {\\n      yield * map(peekable, (value) => toFileObject(value, normaliseContent))\\n      return\\n    }\\n  }\\n\\n  // { path, content: ? }\\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js streams have a\\n  // `path` property that passes this check.\\n  if (isFileObject(input)) {\\n    yield toFileObject(input, normaliseContent)\\n    return\\n  }\\n\\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\\n}\\n\\n/**\\n * @template {Blob|AsyncIterable<Uint8Array>} Content\\n * @param {import('ipfs-core-types/src/files').ToEntry} input\\n * @param {(content:ToContent) => Content|Promise<Content>} normaliseContent\\n * @returns {Promise<import('ipfs-core-types/src/files').Entry<Content>>}\\n */\\nasync function toFileObject (input, normaliseContent) {\\n  // @ts-ignore - Those properties don't exist on most input types\\n  const { path, mode, mtime, content } = input\\n\\n  const file = { path: path || '', mode: modeToNumber(mode), mtime: mtimeToObject(mtime) }\\n\\n  if (content) {\\n    file.content = await normaliseContent(content)\\n  } else if (!path) { // Not already a file object with path or content prop\\n    // @ts-ignore - input still can be different ToContent\\n    file.content = await normaliseContent(input)\\n  }\\n\\n  return file\\n}\\n\\n},{\\\"./utils\\\":213,\\\"browser-readablestream-to-it\\\":37,\\\"err-code\\\":193,\\\"it-map\\\":474,\\\"it-peekable\\\":475}],213:[function(require,module,exports){\\n'use strict'\\n\\nconst { Blob } = globalThis\\n\\n/**\\n * @param {any} obj\\n * @returns {obj is ArrayBufferView|ArrayBuffer}\\n */\\nfunction isBytes (obj) {\\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\\n}\\n\\n/**\\n * @param {any} obj\\n * @returns {obj is Blob}\\n */\\nfunction isBlob (obj) {\\n  return typeof Blob !== 'undefined' && obj instanceof Blob\\n}\\n\\n/**\\n * An object with a path or content property\\n *\\n * @param {any} obj\\n * @returns {obj is import('ipfs-core-types/src/files').ToEntry}\\n */\\nfunction isFileObject (obj) {\\n  return typeof obj === 'object' && (obj.path || obj.content)\\n}\\n\\n/**\\n * @param {any} value\\n * @returns {value is ReadableStream}\\n */\\nconst isReadableStream = (value) =>\\n  value && typeof value.getReader === 'function'\\n\\n/**\\n * @param {any} mtime\\n * @returns {{secs:number, nsecs:number}|undefined}\\n */\\nfunction mtimeToObject (mtime) {\\n  if (mtime == null) {\\n    return undefined\\n  }\\n\\n  // Javascript Date\\n  if (mtime instanceof Date) {\\n    const ms = mtime.getTime()\\n    const secs = Math.floor(ms / 1000)\\n\\n    return {\\n      secs: secs,\\n      nsecs: (ms - (secs * 1000)) * 1000\\n    }\\n  }\\n\\n  // { secs, nsecs }\\n  if (Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\\n    return {\\n      secs: mtime.secs,\\n      nsecs: mtime.nsecs\\n    }\\n  }\\n\\n  // UnixFS TimeSpec\\n  if (Object.prototype.hasOwnProperty.call(mtime, 'Seconds')) {\\n    return {\\n      secs: mtime.Seconds,\\n      nsecs: mtime.FractionalNanoseconds\\n    }\\n  }\\n\\n  // process.hrtime()\\n  if (Array.isArray(mtime)) {\\n    return {\\n      secs: mtime[0],\\n      nsecs: mtime[1]\\n    }\\n  }\\n  /*\\n  TODO: https://github.com/ipfs/aegir/issues/487\\n\\n  // process.hrtime.bigint()\\n  if (typeof mtime === 'bigint') {\\n    const secs = mtime / BigInt(1e9)\\n    const nsecs = mtime - (secs * BigInt(1e9))\\n\\n    return {\\n      secs: parseInt(secs),\\n      nsecs: parseInt(nsecs)\\n    }\\n  }\\n  */\\n}\\n\\n/**\\n * @param {any} mode\\n * @returns {number|undefined}\\n */\\nfunction modeToNumber (mode) {\\n  if (mode == null) {\\n    return undefined\\n  }\\n\\n  if (typeof mode === 'number') {\\n    return mode\\n  }\\n\\n  mode = mode.toString()\\n\\n  if (mode.substring(0, 1) === '0') {\\n    // octal string\\n    return parseInt(mode, 8)\\n  }\\n\\n  // decimal string\\n  return parseInt(mode, 10)\\n}\\n\\nmodule.exports = {\\n  isBytes,\\n  isBlob,\\n  isFileObject,\\n  isReadableStream,\\n  mtimeToObject,\\n  modeToNumber\\n}\\n\\n},{}],214:[function(require,module,exports){\\n'use strict'\\n\\nconst errCode = require('err-code')\\nconst CID = require('cids')\\n\\n/**\\n * Transform one of:\\n *\\n * ```ts\\n * CID\\n * String\\n * { cid: CID recursive, metadata }\\n * { path: String recursive, metadata }\\n * Iterable<CID>\\n * Iterable<String>\\n * Iterable<{ cid: CID recursive, metadata }>\\n * Iterable<{ path: String recursive, metadata }>\\n * AsyncIterable<CID>\\n * AsyncIterable<String>\\n * AsyncIterable<{ cid: CID recursive, metadata }>\\n * AsyncIterable<{ path: String recursive, metadata }>\\n * ```\\n * Into:\\n *\\n * ```ts\\n * AsyncIterable<{ path: CID|String, recursive:boolean, metadata }>\\n * ```\\n *\\n * @param {Source} input\\n * @returns {AsyncIterable<Pin>}\\n */\\n// eslint-disable-next-line complexity\\nmodule.exports = async function * normaliseInput (input) {\\n  // must give us something\\n  if (input === null || input === undefined) {\\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\\n  }\\n\\n  // CID|String\\n  if (CID.isCID(input)) {\\n    yield toPin({ cid: input })\\n    return\\n  }\\n\\n  if (input instanceof String || typeof input === 'string') {\\n    yield toPin({ path: input })\\n    return\\n  }\\n\\n  // { cid: CID recursive, metadata }\\n  // @ts-ignore - it still could be iterable or async iterable\\n  if (input.cid != null || input.path != null) {\\n    // @ts-ignore\\n    return yield toPin(input)\\n  }\\n\\n  // Iterable<?>\\n  if (input[Symbol.iterator]) {\\n    const iterator = input[Symbol.iterator]()\\n    const first = iterator.next()\\n    if (first.done) return iterator\\n\\n    // Iterable<CID|String>\\n    if (CID.isCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\\n      yield toPin({ cid: first.value })\\n      for (const cid of iterator) {\\n        yield toPin({ cid })\\n      }\\n      return\\n    }\\n\\n    // Iterable<{ cid: CID recursive, metadata }>\\n    if (first.value.cid != null || first.value.path != null) {\\n      yield toPin(first.value)\\n      for (const obj of iterator) {\\n        yield toPin(obj)\\n      }\\n      return\\n    }\\n\\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\\n  }\\n\\n  // AsyncIterable<?>\\n  if (input[Symbol.asyncIterator]) {\\n    const iterator = input[Symbol.asyncIterator]()\\n    const first = await iterator.next()\\n    if (first.done) return iterator\\n\\n    // AsyncIterable<CID|String>\\n    if (CID.isCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\\n      yield toPin({ cid: first.value })\\n      for await (const cid of iterator) {\\n        yield toPin({ cid })\\n      }\\n      return\\n    }\\n\\n    // AsyncIterable<{ cid: CID|String recursive, metadata }>\\n    if (first.value.cid != null || first.value.path != null) {\\n      yield toPin(first.value)\\n      for await (const obj of iterator) {\\n        yield toPin(obj)\\n      }\\n      return\\n    }\\n\\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\\n  }\\n\\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\\n}\\n\\n/**\\n * @param {ToPinWithPath|ToPinWithCID} input\\n * @returns {Pin}\\n */\\nfunction toPin (input) {\\n  const pin = {\\n    path: input.path == null ? input.cid : `${input.path}`,\\n    recursive: input.recursive !== false\\n  }\\n\\n  if (input.metadata != null) {\\n    pin.metadata = input.metadata\\n  }\\n\\n  return pin\\n}\\n\\n/**\\n * @typedef {Object} ToPinWithPath\\n * @property {string | InstanceType<typeof window.String> | CID} path\\n * @property {undefined} [cid]\\n * @property {boolean} [recursive]\\n * @property {any} [metadata]\\n *\\n * @typedef {Object} ToPinWithCID\\n * @property {undefined} [path]\\n * @property {CID} cid\\n * @property {boolean} [recursive]\\n * @property {any} [metadata]\\n *\\n * @typedef {CID|string|InstanceType<typeof window.String>|ToPinWithPath|ToPinWithPath} ToPin\\n * @typedef {ToPin|Iterable<ToPin>|AsyncIterable<ToPin>} Source\\n *\\n * @typedef {Object} Pin\\n * @property {string|CID} path\\n * @property {boolean} recursive\\n * @property {any} [metadata]\\n */\\n\\n},{\\\"cids\\\":209,\\\"err-code\\\":193}],215:[function(require,module,exports){\\n'use strict'\\n\\nconst multiaddr = require('multiaddr')\\nconst multiAddrToUri = require('multiaddr-to-uri')\\n\\n/**\\n * @param {string|Multiaddr|URL} url - A string, multiaddr or URL to convert to a url string\\n * @returns {string}\\n */\\nmodule.exports = (url) => {\\n  try {\\n    // @ts-expect-error\\n    url = multiAddrToUri(multiaddr(url))\\n  } catch (err) { }\\n\\n  url = url.toString()\\n\\n  return url\\n}\\n\\n/**\\n * @typedef {import('multiaddr')} Multiaddr\\n */\\n\\n},{\\\"multiaddr\\\":496,\\\"multiaddr-to-uri\\\":484}],216:[function(require,module,exports){\\nconst { AbortController } = require('native-abort-controller')\\n\\n/**\\n * Takes an array of AbortSignals and returns a single signal.\\n * If any signals are aborted, the returned signal will be aborted.\\n * @param {Array<AbortSignal>} signals\\n * @returns {AbortSignal}\\n */\\nfunction anySignal (signals) {\\n  const controller = new AbortController()\\n\\n  function onAbort () {\\n    controller.abort()\\n\\n    for (const signal of signals) {\\n      if (!signal || !signal.removeEventListener) continue\\n      signal.removeEventListener('abort', onAbort)\\n    }\\n  }\\n\\n  for (const signal of signals) {\\n    if (!signal || !signal.addEventListener) continue\\n    if (signal.aborted) {\\n      onAbort()\\n      break\\n    }\\n    signal.addEventListener('abort', onAbort)\\n  }\\n\\n  return controller.signal\\n}\\n\\nmodule.exports = anySignal\\nmodule.exports.anySignal = anySignal\\n\\n},{\\\"native-abort-controller\\\":537}],217:[function(require,module,exports){\\narguments[4][40][0].apply(exports,arguments)\\n},{\\\"./util\\\":221,\\\"dup\\\":40}],218:[function(require,module,exports){\\narguments[4][41][0].apply(exports,arguments)\\n},{\\\"./base.js\\\":217,\\\"./rfc4648\\\":220,\\\"./util\\\":221,\\\"@multiformats/base-x\\\":7,\\\"dup\\\":41}],219:[function(require,module,exports){\\n/**\\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\\n *\\n */\\n'use strict'\\n\\nconst constants = require('./constants')\\nconst { encodeText, decodeText, concat } = require('./util')\\n\\n/** @typedef {import('./base')} Base */\\n/** @typedef {import(\\\"./types\\\").BaseNameOrCode} BaseNameOrCode */\\n/** @typedef {import(\\\"./types\\\").BaseCode} BaseCode */\\n/** @typedef {import(\\\"./types\\\").BaseName} BaseName */\\n\\n/**\\n * Create a new Uint8Array with the multibase varint+code.\\n *\\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\\n * @param {Uint8Array} buf - The data to be prefixed with multibase.\\n * @returns {Uint8Array}\\n * @throws {Error} Will throw if the encoding is not supported\\n */\\nfunction multibase (nameOrCode, buf) {\\n  if (!buf) {\\n    throw new Error('requires an encoded Uint8Array')\\n  }\\n  const { name, codeBuf } = encoding(nameOrCode)\\n  validEncode(name, buf)\\n\\n  return concat([codeBuf, buf], codeBuf.length + buf.length)\\n}\\n\\n/**\\n * Encode data with the specified base and add the multibase prefix.\\n *\\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\\n * @param {Uint8Array} buf - The data to be encoded.\\n * @returns {Uint8Array}\\n * @throws {Error} Will throw if the encoding is not supported\\n *\\n */\\nfunction encode (nameOrCode, buf) {\\n  const enc = encoding(nameOrCode)\\n  const data = encodeText(enc.encode(buf))\\n\\n  return concat([enc.codeBuf, data], enc.codeBuf.length + data.length)\\n}\\n\\n/**\\n * Takes a Uint8Array or string encoded with multibase header, decodes it and\\n * returns the decoded buffer\\n *\\n * @param {Uint8Array|string} data\\n * @returns {Uint8Array}\\n * @throws {Error} Will throw if the encoding is not supported\\n *\\n */\\nfunction decode (data) {\\n  if (data instanceof Uint8Array) {\\n    data = decodeText(data)\\n  }\\n  const prefix = data[0]\\n\\n  // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\\n  if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\\n    data = data.toLowerCase()\\n  }\\n  const enc = encoding(/** @type {BaseCode} */(data[0]))\\n  return enc.decode(data.substring(1))\\n}\\n\\n/**\\n * Is the given data multibase encoded?\\n *\\n * @param {Uint8Array|string} data\\n * @returns {false | string}\\n */\\nfunction isEncoded (data) {\\n  if (data instanceof Uint8Array) {\\n    data = decodeText(data)\\n  }\\n\\n  // Ensure bufOrString is a string\\n  if (Object.prototype.toString.call(data) !== '[object String]') {\\n    return false\\n  }\\n\\n  try {\\n    const enc = encoding(/** @type {BaseCode} */(data[0]))\\n    return enc.name\\n  } catch (err) {\\n    return false\\n  }\\n}\\n\\n/**\\n * Validate encoded data\\n *\\n * @param {BaseNameOrCode} name\\n * @param {Uint8Array} buf\\n * @returns {void}\\n * @throws {Error} Will throw if the encoding is not supported\\n */\\nfunction validEncode (name, buf) {\\n  const enc = encoding(name)\\n  enc.decode(decodeText(buf))\\n}\\n\\n/**\\n * Get the encoding by name or code\\n *\\n * @param {BaseNameOrCode} nameOrCode\\n * @returns {Base}\\n * @throws {Error} Will throw if the encoding is not supported\\n */\\nfunction encoding (nameOrCode) {\\n  if (constants.names[/** @type {BaseName} */(nameOrCode)]) {\\n    return constants.names[/** @type {BaseName} */(nameOrCode)]\\n  } else if (constants.codes[/** @type {BaseCode} */(nameOrCode)]) {\\n    return constants.codes[/** @type {BaseCode} */(nameOrCode)]\\n  } else {\\n    throw new Error(`Unsupported encoding: ${nameOrCode}`)\\n  }\\n}\\n\\n/**\\n * Get encoding from data\\n *\\n * @param {string|Uint8Array} data\\n * @returns {Base}\\n * @throws {Error} Will throw if the encoding is not supported\\n */\\nfunction encodingFromData (data) {\\n  if (data instanceof Uint8Array) {\\n    data = decodeText(data)\\n  }\\n\\n  return encoding(/** @type {BaseCode} */(data[0]))\\n}\\n\\nexports = module.exports = multibase\\nexports.encode = encode\\nexports.decode = decode\\nexports.isEncoded = isEncoded\\nexports.encoding = encoding\\nexports.encodingFromData = encodingFromData\\nexports.names = Object.freeze(constants.names)\\nexports.codes = Object.freeze(constants.codes)\\n\\n},{\\\"./constants\\\":218,\\\"./util\\\":221}],220:[function(require,module,exports){\\narguments[4][43][0].apply(exports,arguments)\\n},{\\\"dup\\\":43}],221:[function(require,module,exports){\\narguments[4][44][0].apply(exports,arguments)\\n},{\\\"dup\\\":44,\\\"web-encoding\\\":242}],222:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\\n *\\n * @param {Array<ArrayLike<number>>} arrays\\n * @param {Number} length\\n * @returns {Uint8Array}\\n */\\nfunction concat (arrays, length) {\\n  if (!length) {\\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0)\\n  }\\n\\n  const output = new Uint8Array(length)\\n  let offset = 0\\n\\n  for (const arr of arrays) {\\n    output.set(arr, offset)\\n    offset += arr.length\\n  }\\n\\n  return output\\n}\\n\\nmodule.exports = concat\\n\\n},{}],223:[function(require,module,exports){\\n'use strict'\\n\\nconst { names } = require('multibase/src/constants')\\nconst { TextEncoder } = require('web-encoding')\\nconst utf8Encoder = new TextEncoder()\\n\\n/**\\n * Interperets each character in a string as a byte and\\n * returns a Uint8Array of those bytes.\\n *\\n * @param {String} string The string to turn into an array\\n * @returns {Uint8Array}\\n */\\nfunction asciiStringToUint8Array (string) {\\n  const array = new Uint8Array(string.length)\\n\\n  for (let i = 0; i < string.length; i++) {\\n    array[i] = string.charCodeAt(i)\\n  }\\n\\n  return array\\n}\\n\\n/**\\n * Create a `Uint8Array` from the passed string\\n *\\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\\n *\\n * Also `ascii` which is similar to node's 'binary' encoding.\\n *\\n * @param {String} string\\n * @param {String} [encoding=utf8] utf8, base16, base64, base64urlpad, etc\\n * @returns {Uint8Array}\\n * @see {@link https://www.npmjs.com/package/multibase|multibase} for supported encodings other than `utf8`\\n */\\nfunction fromString (string, encoding = 'utf8') {\\n  if (encoding === 'utf8' || encoding === 'utf-8') {\\n    return utf8Encoder.encode(string)\\n  }\\n\\n  if (encoding === 'ascii') {\\n    return asciiStringToUint8Array(string)\\n  }\\n\\n  const codec = names[encoding]\\n\\n  if (!codec) {\\n    throw new Error('Unknown base')\\n  }\\n\\n  return codec.decode(string)\\n}\\n\\nmodule.exports = fromString\\n\\n},{\\\"multibase/src/constants\\\":218,\\\"web-encoding\\\":242}],224:[function(require,module,exports){\\n'use strict'\\n\\nconst { names } = require('multibase/src/constants')\\nconst { TextDecoder } = require('web-encoding')\\nconst utf8Decoder = new TextDecoder('utf8')\\n\\n/**\\n * Turns a Uint8Array of bytes into a string with each\\n * character being the char code of the corresponding byte\\n *\\n * @param {Uint8Array} array The array to turn into a string\\n * @returns {String}\\n */\\nfunction uint8ArrayToAsciiString (array) {\\n  let string = ''\\n\\n  for (let i = 0; i < array.length; i++) {\\n    string += String.fromCharCode(array[i])\\n  }\\n  return string\\n}\\n\\n/**\\n * Turns a `Uint8Array` into a string.\\n *\\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\\n *\\n * Also `ascii` which is similar to node's 'binary' encoding.\\n *\\n * @param {Uint8Array} array The array to turn into a string\\n * @param {String} [encoding=utf8] The encoding to use\\n * @returns {String}\\n * @see {@link https://www.npmjs.com/package/multibase|multibase} for supported encodings other than `utf8`\\n */\\nfunction toString (array, encoding = 'utf8') {\\n  if (encoding === 'utf8' || encoding === 'utf-8') {\\n    return utf8Decoder.decode(array)\\n  }\\n\\n  if (encoding === 'ascii') {\\n    return uint8ArrayToAsciiString(array)\\n  }\\n\\n  const codec = names[encoding]\\n\\n  if (!codec) {\\n    throw new Error('Unknown base')\\n  }\\n\\n  return codec.encode(array)\\n}\\n\\nmodule.exports = toString\\n\\n},{\\\"multibase/src/constants\\\":218,\\\"web-encoding\\\":242}],225:[function(require,module,exports){\\n// DO NOT CHANGE THIS FILE. IT IS GENERATED BY tools/update-table.js\\n/* eslint quote-props: off */\\n'use strict'\\n\\n/**\\n * @type {import('./generated-types').NameNumberMap}\\n */\\nconst baseTable = Object.freeze({\\n  'identity': 0x00,\\n  'cidv1': 0x01,\\n  'cidv2': 0x02,\\n  'cidv3': 0x03,\\n  'ip4': 0x04,\\n  'tcp': 0x06,\\n  'sha1': 0x11,\\n  'sha2-256': 0x12,\\n  'sha2-512': 0x13,\\n  'sha3-512': 0x14,\\n  'sha3-384': 0x15,\\n  'sha3-256': 0x16,\\n  'sha3-224': 0x17,\\n  'shake-128': 0x18,\\n  'shake-256': 0x19,\\n  'keccak-224': 0x1a,\\n  'keccak-256': 0x1b,\\n  'keccak-384': 0x1c,\\n  'keccak-512': 0x1d,\\n  'blake3': 0x1e,\\n  'dccp': 0x21,\\n  'murmur3-128': 0x22,\\n  'murmur3-32': 0x23,\\n  'ip6': 0x29,\\n  'ip6zone': 0x2a,\\n  'path': 0x2f,\\n  'multicodec': 0x30,\\n  'multihash': 0x31,\\n  'multiaddr': 0x32,\\n  'multibase': 0x33,\\n  'dns': 0x35,\\n  'dns4': 0x36,\\n  'dns6': 0x37,\\n  'dnsaddr': 0x38,\\n  'protobuf': 0x50,\\n  'cbor': 0x51,\\n  'raw': 0x55,\\n  'dbl-sha2-256': 0x56,\\n  'rlp': 0x60,\\n  'bencode': 0x63,\\n  'dag-pb': 0x70,\\n  'dag-cbor': 0x71,\\n  'libp2p-key': 0x72,\\n  'git-raw': 0x78,\\n  'torrent-info': 0x7b,\\n  'torrent-file': 0x7c,\\n  'leofcoin-block': 0x81,\\n  'leofcoin-tx': 0x82,\\n  'leofcoin-pr': 0x83,\\n  'sctp': 0x84,\\n  'dag-jose': 0x85,\\n  'dag-cose': 0x86,\\n  'eth-block': 0x90,\\n  'eth-block-list': 0x91,\\n  'eth-tx-trie': 0x92,\\n  'eth-tx': 0x93,\\n  'eth-tx-receipt-trie': 0x94,\\n  'eth-tx-receipt': 0x95,\\n  'eth-state-trie': 0x96,\\n  'eth-account-snapshot': 0x97,\\n  'eth-storage-trie': 0x98,\\n  'bitcoin-block': 0xb0,\\n  'bitcoin-tx': 0xb1,\\n  'bitcoin-witness-commitment': 0xb2,\\n  'zcash-block': 0xc0,\\n  'zcash-tx': 0xc1,\\n  'docid': 0xce,\\n  'stellar-block': 0xd0,\\n  'stellar-tx': 0xd1,\\n  'md4': 0xd4,\\n  'md5': 0xd5,\\n  'bmt': 0xd6,\\n  'decred-block': 0xe0,\\n  'decred-tx': 0xe1,\\n  'ipld-ns': 0xe2,\\n  'ipfs-ns': 0xe3,\\n  'swarm-ns': 0xe4,\\n  'ipns-ns': 0xe5,\\n  'zeronet': 0xe6,\\n  'secp256k1-pub': 0xe7,\\n  'bls12_381-g1-pub': 0xea,\\n  'bls12_381-g2-pub': 0xeb,\\n  'x25519-pub': 0xec,\\n  'ed25519-pub': 0xed,\\n  'bls12_381-g1g2-pub': 0xee,\\n  'dash-block': 0xf0,\\n  'dash-tx': 0xf1,\\n  'swarm-manifest': 0xfa,\\n  'swarm-feed': 0xfb,\\n  'udp': 0x0111,\\n  'p2p-webrtc-star': 0x0113,\\n  'p2p-webrtc-direct': 0x0114,\\n  'p2p-stardust': 0x0115,\\n  'p2p-circuit': 0x0122,\\n  'dag-json': 0x0129,\\n  'udt': 0x012d,\\n  'utp': 0x012e,\\n  'unix': 0x0190,\\n  'p2p': 0x01a5,\\n  'ipfs': 0x01a5,\\n  'https': 0x01bb,\\n  'onion': 0x01bc,\\n  'onion3': 0x01bd,\\n  'garlic64': 0x01be,\\n  'garlic32': 0x01bf,\\n  'tls': 0x01c0,\\n  'quic': 0x01cc,\\n  'ws': 0x01dd,\\n  'wss': 0x01de,\\n  'p2p-websocket-star': 0x01df,\\n  'http': 0x01e0,\\n  'json': 0x0200,\\n  'messagepack': 0x0201,\\n  'libp2p-peer-record': 0x0301,\\n  'sha2-256-trunc254-padded': 0x1012,\\n  'ripemd-128': 0x1052,\\n  'ripemd-160': 0x1053,\\n  'ripemd-256': 0x1054,\\n  'ripemd-320': 0x1055,\\n  'x11': 0x1100,\\n  'p256-pub': 0x1200,\\n  'p384-pub': 0x1201,\\n  'p521-pub': 0x1202,\\n  'ed448-pub': 0x1203,\\n  'x448-pub': 0x1204,\\n  'ed25519-priv': 0x1300,\\n  'kangarootwelve': 0x1d01,\\n  'sm3-256': 0x534d,\\n  'blake2b-8': 0xb201,\\n  'blake2b-16': 0xb202,\\n  'blake2b-24': 0xb203,\\n  'blake2b-32': 0xb204,\\n  'blake2b-40': 0xb205,\\n  'blake2b-48': 0xb206,\\n  'blake2b-56': 0xb207,\\n  'blake2b-64': 0xb208,\\n  'blake2b-72': 0xb209,\\n  'blake2b-80': 0xb20a,\\n  'blake2b-88': 0xb20b,\\n  'blake2b-96': 0xb20c,\\n  'blake2b-104': 0xb20d,\\n  'blake2b-112': 0xb20e,\\n  'blake2b-120': 0xb20f,\\n  'blake2b-128': 0xb210,\\n  'blake2b-136': 0xb211,\\n  'blake2b-144': 0xb212,\\n  'blake2b-152': 0xb213,\\n  'blake2b-160': 0xb214,\\n  'blake2b-168': 0xb215,\\n  'blake2b-176': 0xb216,\\n  'blake2b-184': 0xb217,\\n  'blake2b-192': 0xb218,\\n  'blake2b-200': 0xb219,\\n  'blake2b-208': 0xb21a,\\n  'blake2b-216': 0xb21b,\\n  'blake2b-224': 0xb21c,\\n  'blake2b-232': 0xb21d,\\n  'blake2b-240': 0xb21e,\\n  'blake2b-248': 0xb21f,\\n  'blake2b-256': 0xb220,\\n  'blake2b-264': 0xb221,\\n  'blake2b-272': 0xb222,\\n  'blake2b-280': 0xb223,\\n  'blake2b-288': 0xb224,\\n  'blake2b-296': 0xb225,\\n  'blake2b-304': 0xb226,\\n  'blake2b-312': 0xb227,\\n  'blake2b-320': 0xb228,\\n  'blake2b-328': 0xb229,\\n  'blake2b-336': 0xb22a,\\n  'blake2b-344': 0xb22b,\\n  'blake2b-352': 0xb22c,\\n  'blake2b-360': 0xb22d,\\n  'blake2b-368': 0xb22e,\\n  'blake2b-376': 0xb22f,\\n  'blake2b-384': 0xb230,\\n  'blake2b-392': 0xb231,\\n  'blake2b-400': 0xb232,\\n  'blake2b-408': 0xb233,\\n  'blake2b-416': 0xb234,\\n  'blake2b-424': 0xb235,\\n  'blake2b-432': 0xb236,\\n  'blake2b-440': 0xb237,\\n  'blake2b-448': 0xb238,\\n  'blake2b-456': 0xb239,\\n  'blake2b-464': 0xb23a,\\n  'blake2b-472': 0xb23b,\\n  'blake2b-480': 0xb23c,\\n  'blake2b-488': 0xb23d,\\n  'blake2b-496': 0xb23e,\\n  'blake2b-504': 0xb23f,\\n  'blake2b-512': 0xb240,\\n  'blake2s-8': 0xb241,\\n  'blake2s-16': 0xb242,\\n  'blake2s-24': 0xb243,\\n  'blake2s-32': 0xb244,\\n  'blake2s-40': 0xb245,\\n  'blake2s-48': 0xb246,\\n  'blake2s-56': 0xb247,\\n  'blake2s-64': 0xb248,\\n  'blake2s-72': 0xb249,\\n  'blake2s-80': 0xb24a,\\n  'blake2s-88': 0xb24b,\\n  'blake2s-96': 0xb24c,\\n  'blake2s-104': 0xb24d,\\n  'blake2s-112': 0xb24e,\\n  'blake2s-120': 0xb24f,\\n  'blake2s-128': 0xb250,\\n  'blake2s-136': 0xb251,\\n  'blake2s-144': 0xb252,\\n  'blake2s-152': 0xb253,\\n  'blake2s-160': 0xb254,\\n  'blake2s-168': 0xb255,\\n  'blake2s-176': 0xb256,\\n  'blake2s-184': 0xb257,\\n  'blake2s-192': 0xb258,\\n  'blake2s-200': 0xb259,\\n  'blake2s-208': 0xb25a,\\n  'blake2s-216': 0xb25b,\\n  'blake2s-224': 0xb25c,\\n  'blake2s-232': 0xb25d,\\n  'blake2s-240': 0xb25e,\\n  'blake2s-248': 0xb25f,\\n  'blake2s-256': 0xb260,\\n  'skein256-8': 0xb301,\\n  'skein256-16': 0xb302,\\n  'skein256-24': 0xb303,\\n  'skein256-32': 0xb304,\\n  'skein256-40': 0xb305,\\n  'skein256-48': 0xb306,\\n  'skein256-56': 0xb307,\\n  'skein256-64': 0xb308,\\n  'skein256-72': 0xb309,\\n  'skein256-80': 0xb30a,\\n  'skein256-88': 0xb30b,\\n  'skein256-96': 0xb30c,\\n  'skein256-104': 0xb30d,\\n  'skein256-112': 0xb30e,\\n  'skein256-120': 0xb30f,\\n  'skein256-128': 0xb310,\\n  'skein256-136': 0xb311,\\n  'skein256-144': 0xb312,\\n  'skein256-152': 0xb313,\\n  'skein256-160': 0xb314,\\n  'skein256-168': 0xb315,\\n  'skein256-176': 0xb316,\\n  'skein256-184': 0xb317,\\n  'skein256-192': 0xb318,\\n  'skein256-200': 0xb319,\\n  'skein256-208': 0xb31a,\\n  'skein256-216': 0xb31b,\\n  'skein256-224': 0xb31c,\\n  'skein256-232': 0xb31d,\\n  'skein256-240': 0xb31e,\\n  'skein256-248': 0xb31f,\\n  'skein256-256': 0xb320,\\n  'skein512-8': 0xb321,\\n  'skein512-16': 0xb322,\\n  'skein512-24': 0xb323,\\n  'skein512-32': 0xb324,\\n  'skein512-40': 0xb325,\\n  'skein512-48': 0xb326,\\n  'skein512-56': 0xb327,\\n  'skein512-64': 0xb328,\\n  'skein512-72': 0xb329,\\n  'skein512-80': 0xb32a,\\n  'skein512-88': 0xb32b,\\n  'skein512-96': 0xb32c,\\n  'skein512-104': 0xb32d,\\n  'skein512-112': 0xb32e,\\n  'skein512-120': 0xb32f,\\n  'skein512-128': 0xb330,\\n  'skein512-136': 0xb331,\\n  'skein512-144': 0xb332,\\n  'skein512-152': 0xb333,\\n  'skein512-160': 0xb334,\\n  'skein512-168': 0xb335,\\n  'skein512-176': 0xb336,\\n  'skein512-184': 0xb337,\\n  'skein512-192': 0xb338,\\n  'skein512-200': 0xb339,\\n  'skein512-208': 0xb33a,\\n  'skein512-216': 0xb33b,\\n  'skein512-224': 0xb33c,\\n  'skein512-232': 0xb33d,\\n  'skein512-240': 0xb33e,\\n  'skein512-248': 0xb33f,\\n  'skein512-256': 0xb340,\\n  'skein512-264': 0xb341,\\n  'skein512-272': 0xb342,\\n  'skein512-280': 0xb343,\\n  'skein512-288': 0xb344,\\n  'skein512-296': 0xb345,\\n  'skein512-304': 0xb346,\\n  'skein512-312': 0xb347,\\n  'skein512-320': 0xb348,\\n  'skein512-328': 0xb349,\\n  'skein512-336': 0xb34a,\\n  'skein512-344': 0xb34b,\\n  'skein512-352': 0xb34c,\\n  'skein512-360': 0xb34d,\\n  'skein512-368': 0xb34e,\\n  'skein512-376': 0xb34f,\\n  'skein512-384': 0xb350,\\n  'skein512-392': 0xb351,\\n  'skein512-400': 0xb352,\\n  'skein512-408': 0xb353,\\n  'skein512-416': 0xb354,\\n  'skein512-424': 0xb355,\\n  'skein512-432': 0xb356,\\n  'skein512-440': 0xb357,\\n  'skein512-448': 0xb358,\\n  'skein512-456': 0xb359,\\n  'skein512-464': 0xb35a,\\n  'skein512-472': 0xb35b,\\n  'skein512-480': 0xb35c,\\n  'skein512-488': 0xb35d,\\n  'skein512-496': 0xb35e,\\n  'skein512-504': 0xb35f,\\n  'skein512-512': 0xb360,\\n  'skein1024-8': 0xb361,\\n  'skein1024-16': 0xb362,\\n  'skein1024-24': 0xb363,\\n  'skein1024-32': 0xb364,\\n  'skein1024-40': 0xb365,\\n  'skein1024-48': 0xb366,\\n  'skein1024-56': 0xb367,\\n  'skein1024-64': 0xb368,\\n  'skein1024-72': 0xb369,\\n  'skein1024-80': 0xb36a,\\n  'skein1024-88': 0xb36b,\\n  'skein1024-96': 0xb36c,\\n  'skein1024-104': 0xb36d,\\n  'skein1024-112': 0xb36e,\\n  'skein1024-120': 0xb36f,\\n  'skein1024-128': 0xb370,\\n  'skein1024-136': 0xb371,\\n  'skein1024-144': 0xb372,\\n  'skein1024-152': 0xb373,\\n  'skein1024-160': 0xb374,\\n  'skein1024-168': 0xb375,\\n  'skein1024-176': 0xb376,\\n  'skein1024-184': 0xb377,\\n  'skein1024-192': 0xb378,\\n  'skein1024-200': 0xb379,\\n  'skein1024-208': 0xb37a,\\n  'skein1024-216': 0xb37b,\\n  'skein1024-224': 0xb37c,\\n  'skein1024-232': 0xb37d,\\n  'skein1024-240': 0xb37e,\\n  'skein1024-248': 0xb37f,\\n  'skein1024-256': 0xb380,\\n  'skein1024-264': 0xb381,\\n  'skein1024-272': 0xb382,\\n  'skein1024-280': 0xb383,\\n  'skein1024-288': 0xb384,\\n  'skein1024-296': 0xb385,\\n  'skein1024-304': 0xb386,\\n  'skein1024-312': 0xb387,\\n  'skein1024-320': 0xb388,\\n  'skein1024-328': 0xb389,\\n  'skein1024-336': 0xb38a,\\n  'skein1024-344': 0xb38b,\\n  'skein1024-352': 0xb38c,\\n  'skein1024-360': 0xb38d,\\n  'skein1024-368': 0xb38e,\\n  'skein1024-376': 0xb38f,\\n  'skein1024-384': 0xb390,\\n  'skein1024-392': 0xb391,\\n  'skein1024-400': 0xb392,\\n  'skein1024-408': 0xb393,\\n  'skein1024-416': 0xb394,\\n  'skein1024-424': 0xb395,\\n  'skein1024-432': 0xb396,\\n  'skein1024-440': 0xb397,\\n  'skein1024-448': 0xb398,\\n  'skein1024-456': 0xb399,\\n  'skein1024-464': 0xb39a,\\n  'skein1024-472': 0xb39b,\\n  'skein1024-480': 0xb39c,\\n  'skein1024-488': 0xb39d,\\n  'skein1024-496': 0xb39e,\\n  'skein1024-504': 0xb39f,\\n  'skein1024-512': 0xb3a0,\\n  'skein1024-520': 0xb3a1,\\n  'skein1024-528': 0xb3a2,\\n  'skein1024-536': 0xb3a3,\\n  'skein1024-544': 0xb3a4,\\n  'skein1024-552': 0xb3a5,\\n  'skein1024-560': 0xb3a6,\\n  'skein1024-568': 0xb3a7,\\n  'skein1024-576': 0xb3a8,\\n  'skein1024-584': 0xb3a9,\\n  'skein1024-592': 0xb3aa,\\n  'skein1024-600': 0xb3ab,\\n  'skein1024-608': 0xb3ac,\\n  'skein1024-616': 0xb3ad,\\n  'skein1024-624': 0xb3ae,\\n  'skein1024-632': 0xb3af,\\n  'skein1024-640': 0xb3b0,\\n  'skein1024-648': 0xb3b1,\\n  'skein1024-656': 0xb3b2,\\n  'skein1024-664': 0xb3b3,\\n  'skein1024-672': 0xb3b4,\\n  'skein1024-680': 0xb3b5,\\n  'skein1024-688': 0xb3b6,\\n  'skein1024-696': 0xb3b7,\\n  'skein1024-704': 0xb3b8,\\n  'skein1024-712': 0xb3b9,\\n  'skein1024-720': 0xb3ba,\\n  'skein1024-728': 0xb3bb,\\n  'skein1024-736': 0xb3bc,\\n  'skein1024-744': 0xb3bd,\\n  'skein1024-752': 0xb3be,\\n  'skein1024-760': 0xb3bf,\\n  'skein1024-768': 0xb3c0,\\n  'skein1024-776': 0xb3c1,\\n  'skein1024-784': 0xb3c2,\\n  'skein1024-792': 0xb3c3,\\n  'skein1024-800': 0xb3c4,\\n  'skein1024-808': 0xb3c5,\\n  'skein1024-816': 0xb3c6,\\n  'skein1024-824': 0xb3c7,\\n  'skein1024-832': 0xb3c8,\\n  'skein1024-840': 0xb3c9,\\n  'skein1024-848': 0xb3ca,\\n  'skein1024-856': 0xb3cb,\\n  'skein1024-864': 0xb3cc,\\n  'skein1024-872': 0xb3cd,\\n  'skein1024-880': 0xb3ce,\\n  'skein1024-888': 0xb3cf,\\n  'skein1024-896': 0xb3d0,\\n  'skein1024-904': 0xb3d1,\\n  'skein1024-912': 0xb3d2,\\n  'skein1024-920': 0xb3d3,\\n  'skein1024-928': 0xb3d4,\\n  'skein1024-936': 0xb3d5,\\n  'skein1024-944': 0xb3d6,\\n  'skein1024-952': 0xb3d7,\\n  'skein1024-960': 0xb3d8,\\n  'skein1024-968': 0xb3d9,\\n  'skein1024-976': 0xb3da,\\n  'skein1024-984': 0xb3db,\\n  'skein1024-992': 0xb3dc,\\n  'skein1024-1000': 0xb3dd,\\n  'skein1024-1008': 0xb3de,\\n  'skein1024-1016': 0xb3df,\\n  'skein1024-1024': 0xb3e0,\\n  'poseidon-bls12_381-a2-fc1': 0xb401,\\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402,\\n  'zeroxcert-imprint-256': 0xce11,\\n  'fil-commitment-unsealed': 0xf101,\\n  'fil-commitment-sealed': 0xf102,\\n  'holochain-adr-v0': 0x807124,\\n  'holochain-adr-v1': 0x817124,\\n  'holochain-key-v0': 0x947124,\\n  'holochain-key-v1': 0x957124,\\n  'holochain-sig-v0': 0xa27124,\\n  'holochain-sig-v1': 0xa37124,\\n  'skynet-ns': 0xb19910\\n})\\n\\nmodule.exports = { baseTable }\\n\\n},{}],226:[function(require,module,exports){\\n'use strict'\\n\\n/** @typedef {import('./generated-types').ConstantNumberMap} ConstantNumberMap */\\n\\nconst { baseTable } = require('./base-table')\\n\\nconst constants = /** @type {ConstantNumberMap} */({})\\n\\nfor (const [name, code] of Object.entries(baseTable)) {\\n  const constant = name.toUpperCase().replace(/-/g, '_')\\n  constants[constant] = code\\n}\\n\\nmodule.exports = Object.freeze(constants)\\n\\n},{\\\"./base-table\\\":225}],227:[function(require,module,exports){\\n/**\\n * Implementation of the multicodec specification.\\n *\\n * @module multicodec\\n * @example\\n * const multicodec = require('multicodec')\\n *\\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\\n * // prefixedProtobuf 0x50...\\n *\\n */\\n'use strict'\\n\\n/** @typedef {import('./generated-types').CodecName} CodecName */\\n/** @typedef {import('./generated-types').CodecNumber} CodecNumber */\\n\\nconst varint = require('varint')\\nconst intTable = require('./int-table')\\nconst codecNameToCodeVarint = require('./varint-table')\\nconst util = require('./util')\\nconst uint8ArrayConcat = require('uint8arrays/concat')\\n\\n/**\\n * Prefix a buffer with a multicodec-packed.\\n *\\n * @param {CodecName|Uint8Array} multicodecStrOrCode\\n * @param {Uint8Array} data\\n * @returns {Uint8Array}\\n */\\nfunction addPrefix (multicodecStrOrCode, data) {\\n  let prefix\\n\\n  if (multicodecStrOrCode instanceof Uint8Array) {\\n    prefix = util.varintUint8ArrayEncode(multicodecStrOrCode)\\n  } else {\\n    if (codecNameToCodeVarint[multicodecStrOrCode]) {\\n      prefix = codecNameToCodeVarint[multicodecStrOrCode]\\n    } else {\\n      throw new Error('multicodec not recognized')\\n    }\\n  }\\n  return uint8ArrayConcat([prefix, data], prefix.length + data.length)\\n}\\n\\n/**\\n * Decapsulate the multicodec-packed prefix from the data.\\n *\\n * @param {Uint8Array} data\\n * @returns {Uint8Array}\\n */\\nfunction rmPrefix (data) {\\n  varint.decode(data)\\n  return data.slice(varint.decode.bytes)\\n}\\n\\n/**\\n * Get the codec of the prefixed data.\\n *\\n * @param {Uint8Array} prefixedData\\n * @returns {CodecName}\\n */\\nfunction getCodec (prefixedData) {\\n  const code = varint.decode(prefixedData)\\n  const codecName = intTable.get(code)\\n  if (codecName === undefined) {\\n    throw new Error(`Code ${code} not found`)\\n  }\\n  return codecName\\n}\\n\\n/**\\n * Get the name of the codec.\\n *\\n * @param {CodecNumber} codec\\n * @returns {CodecName|undefined}\\n */\\nfunction getName (codec) {\\n  return intTable.get(codec)\\n}\\n\\n/**\\n * Get the code of the codec\\n *\\n * @param {CodecName} name\\n * @returns {CodecNumber}\\n */\\nfunction getNumber (name) {\\n  const code = codecNameToCodeVarint[name]\\n  if (code === undefined) {\\n    throw new Error('Codec `' + name + '` not found')\\n  }\\n  return varint.decode(code)\\n}\\n\\n/**\\n * Get the code of the prefixed data.\\n *\\n * @param {Uint8Array} prefixedData\\n * @returns {CodecNumber}\\n */\\nfunction getCode (prefixedData) {\\n  return varint.decode(prefixedData)\\n}\\n\\n/**\\n * Get the code as varint of a codec name.\\n *\\n * @param {CodecName} codecName\\n * @returns {Uint8Array}\\n */\\nfunction getCodeVarint (codecName) {\\n  const code = codecNameToCodeVarint[codecName]\\n  if (code === undefined) {\\n    throw new Error('Codec `' + codecName + '` not found')\\n  }\\n  return code\\n}\\n\\n/**\\n * Get the varint of a code.\\n *\\n * @param {CodecNumber} code\\n * @returns {Array.<number>}\\n */\\nfunction getVarint (code) {\\n  return varint.encode(code)\\n}\\n\\n// Make the constants top-level constants\\nconst constants = require('./constants')\\n\\n// Human friendly names for printing, e.g. in error messages\\nconst print = require('./print')\\n\\nmodule.exports = {\\n  addPrefix,\\n  rmPrefix,\\n  getCodec,\\n  getName,\\n  getNumber,\\n  getCode,\\n  getCodeVarint,\\n  getVarint,\\n  print,\\n  ...constants\\n}\\n\\n},{\\\"./constants\\\":226,\\\"./int-table\\\":228,\\\"./print\\\":229,\\\"./util\\\":230,\\\"./varint-table\\\":231,\\\"uint8arrays/concat\\\":222,\\\"varint\\\":240}],228:[function(require,module,exports){\\n'use strict'\\n\\n/** @typedef {import('./generated-types').CodecName} CodecName */\\n/** @typedef {import('./generated-types').CodecNumber} CodecNumber */\\n\\nconst { baseTable } = require('./base-table')\\n\\n/**\\n * @type {Map<CodecNumber,CodecName>}\\n */\\nconst nameTable = new Map()\\n\\nfor (const encodingName in baseTable) {\\n  const code = baseTable[encodingName]\\n  nameTable.set(code, /** @type {CodecName} */(encodingName))\\n}\\n\\nmodule.exports = Object.freeze(nameTable)\\n\\n},{\\\"./base-table\\\":225}],229:[function(require,module,exports){\\n'use strict'\\n\\n/** @typedef {import('./generated-types').CodecName} CodecName */\\n/** @typedef {import('./generated-types').NumberNameMap} NumberNameMap */\\n\\nconst { baseTable } = require('./base-table')\\n\\nconst tableByCode = /** @type {NumberNameMap} */({})\\n\\nfor (const [name, code] of Object.entries(baseTable)) {\\n  if (tableByCode[code] === undefined) {\\n    tableByCode[code] = /** @type {CodecName} **/(name)\\n  }\\n}\\n\\nmodule.exports = /** @type {NumberNameMap} */(Object.freeze(tableByCode))\\n\\n},{\\\"./base-table\\\":225}],230:[function(require,module,exports){\\n'use strict'\\n\\nconst varint = require('varint')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\n\\nmodule.exports = {\\n  numberToUint8Array,\\n  uint8ArrayToNumber,\\n  varintUint8ArrayEncode,\\n  varintEncode\\n}\\n\\nfunction uint8ArrayToNumber (buf) {\\n  return parseInt(uint8ArrayToString(buf, 'base16'), 16)\\n}\\n\\nfunction numberToUint8Array (num) {\\n  let hexString = num.toString(16)\\n  if (hexString.length % 2 === 1) {\\n    hexString = '0' + hexString\\n  }\\n  return uint8ArrayFromString(hexString, 'base16')\\n}\\n\\nfunction varintUint8ArrayEncode (input) {\\n  return Uint8Array.from(varint.encode(uint8ArrayToNumber(input)))\\n}\\n\\nfunction varintEncode (num) {\\n  return Uint8Array.from(varint.encode(num))\\n}\\n\\n},{\\\"uint8arrays/from-string\\\":223,\\\"uint8arrays/to-string\\\":224,\\\"varint\\\":240}],231:[function(require,module,exports){\\n'use strict'\\n\\n/** @typedef {import('./generated-types').NameUint8ArrayMap} NameUint8ArrayMap */\\n\\nconst { baseTable } = require('./base-table')\\nconst varintEncode = require('./util').varintEncode\\n\\nconst varintTable = /** @type {NameUint8ArrayMap} */ ({})\\n\\nfor (const encodingName in baseTable) {\\n  const code = baseTable[encodingName]\\n  varintTable[encodingName] = varintEncode(code)\\n}\\n\\nmodule.exports = Object.freeze(varintTable)\\n\\n},{\\\"./base-table\\\":225,\\\"./util\\\":230}],232:[function(require,module,exports){\\narguments[4][49][0].apply(exports,arguments)\\n},{\\\"dup\\\":49}],233:[function(require,module,exports){\\n/**\\n * Multihash implementation in JavaScript.\\n *\\n * @module multihash\\n */\\n'use strict'\\n\\nconst multibase = require('multibase')\\nconst varint = require('varint')\\nconst { names } = require('./constants')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\nconst uint8ArrayConcat = require('uint8arrays/concat')\\n\\nconst codes = /** @type {import('./types').CodeNameMap} */({})\\n\\n// eslint-disable-next-line guard-for-in\\nfor (const key in names) {\\n  const name = /** @type {HashName} */(key)\\n  codes[names[name]] = name\\n}\\n\\n/**\\n * Convert the given multihash to a hex encoded string.\\n *\\n * @param {Uint8Array} hash\\n * @returns {string}\\n */\\nfunction toHexString (hash) {\\n  if (!(hash instanceof Uint8Array)) {\\n    throw new Error('must be passed a Uint8Array')\\n  }\\n\\n  return uint8ArrayToString(hash, 'base16')\\n}\\n\\n/**\\n * Convert the given hex encoded string to a multihash.\\n *\\n * @param {string} hash\\n * @returns {Uint8Array}\\n */\\nfunction fromHexString (hash) {\\n  return uint8ArrayFromString(hash, 'base16')\\n}\\n\\n/**\\n * Convert the given multihash to a base58 encoded string.\\n *\\n * @param {Uint8Array} hash\\n * @returns {string}\\n */\\nfunction toB58String (hash) {\\n  if (!(hash instanceof Uint8Array)) {\\n    throw new Error('must be passed a Uint8Array')\\n  }\\n\\n  return uint8ArrayToString(multibase.encode('base58btc', hash)).slice(1)\\n}\\n\\n/**\\n * Convert the given base58 encoded string to a multihash.\\n *\\n * @param {string|Uint8Array} hash\\n * @returns {Uint8Array}\\n */\\nfunction fromB58String (hash) {\\n  const encoded = hash instanceof Uint8Array\\n    ? uint8ArrayToString(hash)\\n    : hash\\n\\n  return multibase.decode('z' + encoded)\\n}\\n\\n/**\\n * Decode a hash from the given multihash.\\n *\\n * @param {Uint8Array} bytes\\n * @returns {{code: HashCode, name: HashName, length: number, digest: Uint8Array}} result\\n */\\nfunction decode (bytes) {\\n  if (!(bytes instanceof Uint8Array)) {\\n    throw new Error('multihash must be a Uint8Array')\\n  }\\n\\n  if (bytes.length < 2) {\\n    throw new Error('multihash too short. must be > 2 bytes.')\\n  }\\n\\n  const code = /** @type {HashCode} */(varint.decode(bytes))\\n  if (!isValidCode(code)) {\\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\\n  }\\n  bytes = bytes.slice(varint.decode.bytes)\\n\\n  const len = varint.decode(bytes)\\n  if (len < 0) {\\n    throw new Error(`multihash invalid length: ${len}`)\\n  }\\n  bytes = bytes.slice(varint.decode.bytes)\\n\\n  if (bytes.length !== len) {\\n    throw new Error(`multihash length inconsistent: 0x${uint8ArrayToString(bytes, 'base16')}`)\\n  }\\n\\n  return {\\n    code,\\n    name: codes[code],\\n    length: len,\\n    digest: bytes\\n  }\\n}\\n\\n/**\\n * Encode a hash digest along with the specified function code.\\n *\\n * > **Note:** the length is derived from the length of the digest itself.\\n *\\n * @param {Uint8Array} digest\\n * @param {HashName | HashCode} code\\n * @param {number} [length]\\n * @returns {Uint8Array}\\n */\\nfunction encode (digest, code, length) {\\n  if (!digest || code === undefined) {\\n    throw new Error('multihash encode requires at least two args: digest, code')\\n  }\\n\\n  // ensure it's a hashfunction code.\\n  const hashfn = coerceCode(code)\\n\\n  if (!(digest instanceof Uint8Array)) {\\n    throw new Error('digest should be a Uint8Array')\\n  }\\n\\n  if (length == null) {\\n    length = digest.length\\n  }\\n\\n  if (length && digest.length !== length) {\\n    throw new Error('digest length should be equal to specified length.')\\n  }\\n\\n  const hash = varint.encode(hashfn)\\n  const len = varint.encode(length)\\n  return uint8ArrayConcat([hash, len, digest], hash.length + len.length + digest.length)\\n}\\n\\n/**\\n * Converts a hash function name into the matching code.\\n * If passed a number it will return the number if it's a valid code.\\n *\\n * @param {HashName | number} name\\n * @returns {number}\\n */\\nfunction coerceCode (name) {\\n  let code = name\\n\\n  if (typeof name === 'string') {\\n    if (names[name] === undefined) {\\n      throw new Error(`Unrecognized hash function named: ${name}`)\\n    }\\n    code = names[name]\\n  }\\n\\n  if (typeof code !== 'number') {\\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\\n  }\\n\\n  // @ts-ignore\\n  if (codes[code] === undefined && !isAppCode(code)) {\\n    throw new Error(`Unrecognized function code: ${code}`)\\n  }\\n\\n  return code\\n}\\n\\n/**\\n * Checks if a code is part of the app range\\n *\\n * @param {number} code\\n * @returns {boolean}\\n */\\nfunction isAppCode (code) {\\n  return code > 0 && code < 0x10\\n}\\n\\n/**\\n * Checks whether a multihash code is valid.\\n *\\n * @param {HashCode} code\\n * @returns {boolean}\\n */\\nfunction isValidCode (code) {\\n  if (isAppCode(code)) {\\n    return true\\n  }\\n\\n  if (codes[code]) {\\n    return true\\n  }\\n\\n  return false\\n}\\n\\n/**\\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\\n *\\n * @param {Uint8Array} multihash\\n * @returns {void}\\n * @throws {Error}\\n */\\nfunction validate (multihash) {\\n  decode(multihash) // throws if bad.\\n}\\n\\n/**\\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\\n *\\n * @param {Uint8Array} multihash\\n * @returns {Uint8Array}\\n * @throws {Error}\\n */\\nfunction prefix (multihash) {\\n  validate(multihash)\\n\\n  return multihash.subarray(0, 2)\\n}\\n\\nmodule.exports = {\\n  names,\\n  codes: Object.freeze(codes),\\n  toHexString,\\n  fromHexString,\\n  toB58String,\\n  fromB58String,\\n  decode,\\n  encode,\\n  coerceCode,\\n  isAppCode,\\n  validate,\\n  prefix,\\n  isValidCode\\n}\\n\\n/**\\n * @typedef { import(\\\"./constants\\\").HashCode } HashCode\\n * @typedef { import(\\\"./constants\\\").HashName } HashName\\n */\\n\\n},{\\\"./constants\\\":232,\\\"multibase\\\":219,\\\"uint8arrays/concat\\\":234,\\\"uint8arrays/from-string\\\":236,\\\"uint8arrays/to-string\\\":237,\\\"varint\\\":240}],234:[function(require,module,exports){\\narguments[4][205][0].apply(exports,arguments)\\n},{\\\"dup\\\":205}],235:[function(require,module,exports){\\narguments[4][206][0].apply(exports,arguments)\\n},{\\\"dup\\\":206}],236:[function(require,module,exports){\\n'use strict'\\n\\nconst { encoding: getCodec } = require('multibase')\\nconst { TextEncoder } = require('web-encoding')\\nconst utf8Encoder = new TextEncoder()\\n\\n/**\\n * @typedef {import('multibase/src/types').BaseName} BaseName\\n */\\n\\n/**\\n * Interprets each character in a string as a byte and\\n * returns a Uint8Array of those bytes.\\n *\\n * @param {string} string - The string to turn into an array\\n * @returns {Uint8Array}\\n */\\nfunction asciiStringToUint8Array (string) {\\n  const array = new Uint8Array(string.length)\\n\\n  for (let i = 0; i < string.length; i++) {\\n    array[i] = string.charCodeAt(i)\\n  }\\n\\n  return array\\n}\\n\\n/**\\n * Create a `Uint8Array` from the passed string\\n *\\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\\n *\\n * Also `ascii` which is similar to node's 'binary' encoding.\\n *\\n * @param {string} string\\n * @param {BaseName | 'utf8' | 'utf-8' | 'ascii'} [encoding=utf8] - utf8, base16, base64, base64urlpad, etc\\n * @returns {Uint8Array}\\n */\\nfunction fromString (string, encoding = 'utf8') {\\n  if (encoding === 'utf8' || encoding === 'utf-8') {\\n    return utf8Encoder.encode(string)\\n  }\\n\\n  if (encoding === 'ascii') {\\n    return asciiStringToUint8Array(string)\\n  }\\n\\n  return getCodec(encoding).decode(string)\\n}\\n\\nmodule.exports = fromString\\n\\n},{\\\"multibase\\\":219,\\\"web-encoding\\\":242}],237:[function(require,module,exports){\\narguments[4][207][0].apply(exports,arguments)\\n},{\\\"dup\\\":207,\\\"multibase\\\":219,\\\"web-encoding\\\":242}],238:[function(require,module,exports){\\nmodule.exports = read\\n\\nvar MSB = 0x80\\n  , REST = 0x7F\\n\\nfunction read(buf, offset) {\\n  var res    = 0\\n    , offset = offset || 0\\n    , shift  = 0\\n    , counter = offset\\n    , b\\n    , l = buf.length\\n\\n  do {\\n    if (counter >= l || shift > 49) {\\n      read.bytes = 0\\n      throw new RangeError('Could not decode varint')\\n    }\\n    b = buf[counter++]\\n    res += shift < 28\\n      ? (b & REST) << shift\\n      : (b & REST) * Math.pow(2, shift)\\n    shift += 7\\n  } while (b >= MSB)\\n\\n  read.bytes = counter - offset\\n\\n  return res\\n}\\n\\n},{}],239:[function(require,module,exports){\\nmodule.exports = encode\\n\\nvar MSB = 0x80\\n  , REST = 0x7F\\n  , MSBALL = ~REST\\n  , INT = Math.pow(2, 31)\\n\\nfunction encode(num, out, offset) {\\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\\n    encode.bytes = 0\\n    throw new RangeError('Could not encode varint')\\n  }\\n  out = out || []\\n  offset = offset || 0\\n  var oldOffset = offset\\n\\n  while(num >= INT) {\\n    out[offset++] = (num & 0xFF) | MSB\\n    num /= 128\\n  }\\n  while(num & MSBALL) {\\n    out[offset++] = (num & 0xFF) | MSB\\n    num >>>= 7\\n  }\\n  out[offset] = num | 0\\n  \\n  encode.bytes = offset - oldOffset + 1\\n  \\n  return out\\n}\\n\\n},{}],240:[function(require,module,exports){\\nmodule.exports = {\\n    encode: require('./encode.js')\\n  , decode: require('./decode.js')\\n  , encodingLength: require('./length.js')\\n}\\n\\n},{\\\"./decode.js\\\":238,\\\"./encode.js\\\":239,\\\"./length.js\\\":241}],241:[function(require,module,exports){\\n\\nvar N1 = Math.pow(2,  7)\\nvar N2 = Math.pow(2, 14)\\nvar N3 = Math.pow(2, 21)\\nvar N4 = Math.pow(2, 28)\\nvar N5 = Math.pow(2, 35)\\nvar N6 = Math.pow(2, 42)\\nvar N7 = Math.pow(2, 49)\\nvar N8 = Math.pow(2, 56)\\nvar N9 = Math.pow(2, 63)\\n\\nmodule.exports = function (value) {\\n  return (\\n    value < N1 ? 1\\n  : value < N2 ? 2\\n  : value < N3 ? 3\\n  : value < N4 ? 4\\n  : value < N5 ? 5\\n  : value < N6 ? 6\\n  : value < N7 ? 7\\n  : value < N8 ? 8\\n  : value < N9 ? 9\\n  :              10\\n  )\\n}\\n\\n},{}],242:[function(require,module,exports){\\narguments[4][51][0].apply(exports,arguments)\\n},{\\\"dup\\\":51}],243:[function(require,module,exports){\\narguments[4][52][0].apply(exports,arguments)\\n},{\\\"dup\\\":52,\\\"multihashes\\\":233}],244:[function(require,module,exports){\\narguments[4][209][0].apply(exports,arguments)\\n},{\\\"./cid-util\\\":243,\\\"dup\\\":209,\\\"multibase\\\":219,\\\"multicodec\\\":227,\\\"multicodec/src/base-table.js\\\":225,\\\"multihashes\\\":233,\\\"uint8arrays/concat\\\":234,\\\"uint8arrays/equals\\\":235,\\\"uint8arrays/to-string\\\":237}],245:[function(require,module,exports){\\narguments[4][40][0].apply(exports,arguments)\\n},{\\\"./util\\\":249,\\\"dup\\\":40}],246:[function(require,module,exports){\\narguments[4][41][0].apply(exports,arguments)\\n},{\\\"./base.js\\\":245,\\\"./rfc4648\\\":248,\\\"./util\\\":249,\\\"@multiformats/base-x\\\":7,\\\"dup\\\":41}],247:[function(require,module,exports){\\narguments[4][42][0].apply(exports,arguments)\\n},{\\\"./constants\\\":246,\\\"./util\\\":249,\\\"dup\\\":42}],248:[function(require,module,exports){\\narguments[4][43][0].apply(exports,arguments)\\n},{\\\"dup\\\":43}],249:[function(require,module,exports){\\narguments[4][44][0].apply(exports,arguments)\\n},{\\\"dup\\\":44,\\\"web-encoding\\\":261}],250:[function(require,module,exports){\\narguments[4][45][0].apply(exports,arguments)\\n},{\\\"dup\\\":45}],251:[function(require,module,exports){\\narguments[4][46][0].apply(exports,arguments)\\n},{\\\"./maps\\\":252,\\\"./util\\\":253,\\\"dup\\\":46,\\\"uint8arrays/concat\\\":579,\\\"varint\\\":593}],252:[function(require,module,exports){\\narguments[4][47][0].apply(exports,arguments)\\n},{\\\"./generated-table\\\":250,\\\"./util\\\":253,\\\"dup\\\":47}],253:[function(require,module,exports){\\narguments[4][48][0].apply(exports,arguments)\\n},{\\\"dup\\\":48,\\\"uint8arrays/from-string\\\":581,\\\"uint8arrays/to-string\\\":589,\\\"varint\\\":593}],254:[function(require,module,exports){\\narguments[4][40][0].apply(exports,arguments)\\n},{\\\"./util\\\":258,\\\"dup\\\":40}],255:[function(require,module,exports){\\narguments[4][41][0].apply(exports,arguments)\\n},{\\\"./base.js\\\":254,\\\"./rfc4648\\\":257,\\\"./util\\\":258,\\\"@multiformats/base-x\\\":7,\\\"dup\\\":41}],256:[function(require,module,exports){\\narguments[4][42][0].apply(exports,arguments)\\n},{\\\"./constants\\\":255,\\\"./util\\\":258,\\\"dup\\\":42}],257:[function(require,module,exports){\\narguments[4][43][0].apply(exports,arguments)\\n},{\\\"dup\\\":43}],258:[function(require,module,exports){\\narguments[4][44][0].apply(exports,arguments)\\n},{\\\"dup\\\":44,\\\"web-encoding\\\":261}],259:[function(require,module,exports){\\narguments[4][49][0].apply(exports,arguments)\\n},{\\\"dup\\\":49}],260:[function(require,module,exports){\\narguments[4][50][0].apply(exports,arguments)\\n},{\\\"./constants\\\":259,\\\"dup\\\":50,\\\"multibase\\\":256,\\\"uint8arrays/concat\\\":579,\\\"uint8arrays/from-string\\\":581,\\\"uint8arrays/to-string\\\":589,\\\"varint\\\":593}],261:[function(require,module,exports){\\narguments[4][51][0].apply(exports,arguments)\\n},{\\\"dup\\\":51}],262:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst toCamel = require('./lib/object-to-camel')\\nconst configure = require('./lib/configure')\\nconst multipartRequest = require('./lib/multipart-request')\\nconst toUrlSearchParams = require('./lib/to-url-search-params')\\nconst abortSignal = require('./lib/abort-signal')\\nconst { AbortController } = require('native-abort-controller')\\n\\n/**\\n * @typedef {import('ipfs-utils/src/types').ProgressFn} IPFSUtilsHttpUploadProgressFn\\n * @typedef {import('ipfs-core-types/src/root').AddProgressFn} IPFSCoreAddProgressFn\\n */\\n\\nmodule.exports = configure((api) => {\\n  /**\\n   * @type {import('.').Implements<typeof import('ipfs-core/src/components/add-all/index')>}\\n   */\\n  async function * addAll (source, options = {}) {\\n    // allow aborting requests on body errors\\n    const controller = new AbortController()\\n    const signal = abortSignal(controller.signal, options.signal)\\n    const { headers, body, total, parts } =\\n      await multipartRequest(source, controller, options.headers)\\n\\n    // In browser response body only starts streaming once upload is\\n    // complete, at which point all the progress updates are invalid. If\\n    // length of the content is computable we can interpret progress from\\n    // `{ total, loaded}` passed to `onUploadProgress` and `multipart.total`\\n    // in which case we disable progress updates to be written out.\\n    const [progressFn, onUploadProgress] = typeof options.progress === 'function'\\n      ? createProgressHandler(total, parts, options.progress)\\n      : [undefined, undefined]\\n\\n    const res = await api.post('add', {\\n      searchParams: toUrlSearchParams({\\n        'stream-channels': true,\\n        ...options,\\n        progress: Boolean(progressFn)\\n      }),\\n      timeout: options.timeout,\\n      onUploadProgress,\\n      signal,\\n      headers,\\n      body\\n    })\\n\\n    for await (let file of res.ndjson()) {\\n      file = toCamel(file)\\n\\n      if (file.hash !== undefined) {\\n        yield toCoreInterface(file)\\n      } else if (progressFn) {\\n        progressFn(file.bytes || 0, file.name)\\n      }\\n    }\\n  }\\n  return addAll\\n})\\n\\n/**\\n * Returns simple progress callback when content length isn't computable or a\\n * progress event handler that calculates progress from upload progress events.\\n *\\n * @param {number} total\\n * @param {{name:string, start:number, end:number}[]|null} parts\\n * @param {IPFSCoreAddProgressFn} progress\\n * @returns {[IPFSCoreAddProgressFn|undefined, IPFSUtilsHttpUploadProgressFn|undefined]}\\n */\\nconst createProgressHandler = (total, parts, progress) =>\\n  parts ? [undefined, createOnUploadProgress(total, parts, progress)] : [progress, undefined]\\n\\n/**\\n * Creates a progress handler that interpolates progress from upload progress\\n * events and total size of the content that is added.\\n *\\n * @param {number} size - actual content size\\n * @param {{name:string, start:number, end:number}[]} parts\\n * @param {IPFSCoreAddProgressFn} progress\\n * @returns {IPFSUtilsHttpUploadProgressFn}\\n */\\nconst createOnUploadProgress = (size, parts, progress) => {\\n  let index = 0\\n  const count = parts.length\\n  return ({ loaded, total }) => {\\n    // Derive position from the current progress.\\n    const position = Math.floor(loaded / total * size)\\n    while (index < count) {\\n      const { start, end, name } = parts[index]\\n      // If within current part range report progress and break the loop\\n      if (position < end) {\\n        progress(position - start, name)\\n        break\\n      // If passed current part range report final byte for the chunk and\\n      // move to next one.\\n      } else {\\n        progress(end - start, name)\\n        index += 1\\n      }\\n    }\\n  }\\n}\\n\\n/**\\n * @param {any} input\\n * @returns {import('ipfs-core-types/src/files').UnixFSEntry}\\n */\\nfunction toCoreInterface ({ name, hash, size, mode, mtime, mtimeNsecs }) {\\n  const output = {\\n    path: name,\\n    cid: new CID(hash),\\n    size: parseInt(size)\\n  }\\n\\n  if (mode != null) {\\n    output.mode = parseInt(mode, 8)\\n  }\\n\\n  if (mtime != null) {\\n    output.mtime = {\\n      secs: mtime,\\n      nsecs: mtimeNsecs || 0\\n    }\\n  }\\n\\n  // @ts-ignore\\n  return output\\n}\\n\\n},{\\\"./lib/abort-signal\\\":330,\\\"./lib/configure\\\":331,\\\"./lib/multipart-request\\\":335,\\\"./lib/object-to-camel\\\":337,\\\"./lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"native-abort-controller\\\":537}],263:[function(require,module,exports){\\n'use strict'\\n\\nconst addAll = require('./add-all')\\nconst last = require('it-last')\\nconst configure = require('./lib/configure')\\n\\n/**\\n * @param {import(\\\"./lib/core\\\").ClientOptions} options\\n */\\nmodule.exports = (options) => {\\n  const all = addAll(options)\\n  return configure(() => {\\n    /**\\n     * @type {import('.').Implements<typeof import('ipfs-core/src/components/add')>}\\n     */\\n    async function add (input, options = {}) {\\n      // @ts-ignore - last may return undefind if source is empty\\n      return await last(all(input, options))\\n    }\\n    return add\\n  })(options)\\n}\\n\\n},{\\\"./add-all\\\":262,\\\"./lib/configure\\\":331,\\\"it-last\\\":473}],264:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  wantlist: require('./wantlist')(config),\\n  wantlistForPeer: require('./wantlist-for-peer')(config),\\n  stat: require('./stat')(config),\\n  unwant: require('./unwant')(config)\\n})\\n\\n},{\\\"./stat\\\":265,\\\"./unwant\\\":266,\\\"./wantlist\\\":268,\\\"./wantlist-for-peer\\\":267}],265:[function(require,module,exports){\\n'use strict'\\n\\nconst { BigNumber } = require('bignumber.js')\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/stat')>}\\n   */\\n  async function stat (options = {}) {\\n    const res = await api.post('bitswap/stat', {\\n      searchParams: toUrlSearchParams(options),\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      headers: options.headers\\n    })\\n\\n    return toCoreInterface(await res.json())\\n  }\\n  return stat\\n})\\n\\nfunction toCoreInterface (res) {\\n  return {\\n    provideBufLen: res.ProvideBufLen,\\n    wantlist: (res.Wantlist || []).map(k => new CID(k['/'])),\\n    peers: (res.Peers || []),\\n    blocksReceived: new BigNumber(res.BlocksReceived),\\n    dataReceived: new BigNumber(res.DataReceived),\\n    blocksSent: new BigNumber(res.BlocksSent),\\n    dataSent: new BigNumber(res.DataSent),\\n    dupBlksReceived: new BigNumber(res.DupBlksReceived),\\n    dupDataReceived: new BigNumber(res.DupDataReceived)\\n  }\\n}\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"bignumber.js\\\":19,\\\"cids\\\":244}],266:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/unwant')>}\\n   */\\n  async function unwant (cid, options = {}) {\\n    const res = await api.post('bitswap/unwant', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        // @ts-ignore - CID|string seems to confuse typedef\\n        arg: typeof cid === 'string' ? cid : new CID(cid).toString(),\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    return res.json()\\n  }\\n  return unwant\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],267:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/wantlist-for-peer')>}\\n   */\\n  async function wantlistForPeer (peerId, options = {}) {\\n    // @ts-ignore - CID|string seems to confuse typedef\\n    peerId = typeof peerId === 'string' ? peerId : new CID(peerId).toString()\\n\\n    const res = await (await api.post('bitswap/wantlist', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        ...options,\\n        peer: peerId\\n      }),\\n      headers: options.headers\\n    })).json()\\n\\n    return (res.Keys || []).map(k => new CID(k['/']))\\n  }\\n  return wantlistForPeer\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],268:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/wantlist')>}\\n   */\\n  async function wantlist (options = {}) {\\n    const res = await (await api.post('bitswap/wantlist', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })).json()\\n\\n    return (res.Keys || []).map(k => new CID(k['/']))\\n  }\\n  return wantlist\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],269:[function(require,module,exports){\\n'use strict'\\n\\nconst Block = require('ipld-block')\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/block/get')>}\\n   */\\n  async function get (cid, options = {}) {\\n    // @ts-ignore - CID|string seems to confuse typedef\\n    cid = new CID(cid)\\n\\n    const res = await api.post('block/get', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: cid.toString(),\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    return new Block(new Uint8Array(await res.arrayBuffer()), cid)\\n  }\\n  return get\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"ipld-block\\\":421}],270:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  get: require('./get')(config),\\n  stat: require('./stat')(config),\\n  put: require('./put')(config),\\n  rm: require('./rm')(config)\\n})\\n\\n},{\\\"./get\\\":269,\\\"./put\\\":271,\\\"./rm\\\":272,\\\"./stat\\\":273}],271:[function(require,module,exports){\\n'use strict'\\n\\nconst Block = require('ipld-block')\\nconst CID = require('cids')\\nconst multihash = require('multihashes')\\nconst multipartRequest = require('../lib/multipart-request')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst abortSignal = require('../lib/abort-signal')\\nconst { AbortController } = require('native-abort-controller')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/block/put')>}\\n   */\\n  async function put (data, options = {}) {\\n    if (Block.isBlock(data)) {\\n      const { name, length } = multihash.decode(data.cid.multihash)\\n      options = {\\n        ...options,\\n        format: data.cid.codec,\\n        mhtype: name,\\n        mhlen: length,\\n        version: data.cid.version\\n      }\\n      // @ts-ignore - data is typed as block so TS complains about\\n      // Uint8Array assignment.\\n      data = data.data\\n    } else if (options.cid) {\\n      const cid = new CID(options.cid)\\n      const { name, length } = multihash.decode(cid.multihash)\\n      options = {\\n        ...options,\\n        format: cid.codec,\\n        mhtype: name,\\n        mhlen: length,\\n        version: cid.version\\n      }\\n      delete options.cid\\n    }\\n\\n    // allow aborting requests on body errors\\n    const controller = new AbortController()\\n    const signal = abortSignal(controller.signal, options.signal)\\n\\n    let res\\n    try {\\n      // @ts-ignore https://github.com/ipfs/js-ipfs-utils/issues/90\\n      const response = await api.post('block/put', {\\n        timeout: options.timeout,\\n        signal: signal,\\n        searchParams: toUrlSearchParams(options),\\n        ...(\\n          await multipartRequest(data, controller, options.headers)\\n        )\\n      })\\n      res = await response.json()\\n    } catch (err) {\\n      // Retry with \\\"protobuf\\\"/\\\"cbor\\\" format for go-ipfs\\n      // TODO: remove when https://github.com/ipfs/go-cid/issues/75 resolved\\n      if (options.format === 'dag-pb') {\\n        return put(data, { ...options, format: 'protobuf' })\\n      } else if (options.format === 'dag-cbor') {\\n        return put(data, { ...options, format: 'cbor' })\\n      }\\n\\n      throw err\\n    }\\n\\n    return new Block(/** @type {Uint8Array} */(data), new CID(res.Key))\\n  }\\n\\n  return put\\n})\\n\\n},{\\\"../lib/abort-signal\\\":330,\\\"../lib/configure\\\":331,\\\"../lib/multipart-request\\\":335,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"ipld-block\\\":421,\\\"multihashes\\\":260,\\\"native-abort-controller\\\":537}],272:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/block/rm')>}\\n   */\\n  async function * rm (cid, options = {}) {\\n    if (!Array.isArray(cid)) {\\n      cid = [cid]\\n    }\\n\\n    const res = await api.post('block/rm', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: cid.map(cid => new CID(cid).toString()),\\n        'stream-channels': true,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    for await (const removed of res.ndjson()) {\\n      yield toCoreInterface(removed)\\n    }\\n  }\\n\\n  return rm\\n})\\n\\nfunction toCoreInterface (removed) {\\n  const out = {\\n    cid: new CID(removed.Hash)\\n  }\\n\\n  if (removed.Error) {\\n    out.error = new Error(removed.Error)\\n  }\\n\\n  return out\\n}\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],273:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/block/stat')>}\\n   */\\n  async function stat (cid, options = {}) {\\n    const res = await api.post('block/stat', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: new CID(cid).toString(),\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return { cid: new CID(data.Key), size: data.Size }\\n  }\\n\\n  return stat\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],274:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst Multiaddr = require('multiaddr')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bootstrap/add')>}\\n   */\\n  async function add (addr, options = {}) {\\n    const res = await api.post('bootstrap/add', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: addr,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    const { Peers } = await res.json()\\n\\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) }\\n  }\\n\\n  return add\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"multiaddr\\\":496}],275:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst Multiaddr = require('multiaddr')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bootstrap/clear')>}\\n   */\\n  async function clear (options = {}) {\\n    const res = await api.post('bootstrap/rm', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        ...options,\\n        all: true\\n      }),\\n      headers: options.headers\\n    })\\n\\n    const { Peers } = await res.json()\\n\\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) }\\n  }\\n\\n  return clear\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"multiaddr\\\":496}],276:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  add: require('./add')(config),\\n  clear: require('./clear')(config),\\n  rm: require('./rm')(config),\\n  reset: require('./reset')(config),\\n  list: require('./list')(config)\\n})\\n\\n},{\\\"./add\\\":274,\\\"./clear\\\":275,\\\"./list\\\":277,\\\"./reset\\\":278,\\\"./rm\\\":279}],277:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst Multiaddr = require('multiaddr')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bootstrap/list')>}\\n   */\\n  async function list (options = {}) {\\n    const res = await api.post('bootstrap/list', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n\\n    const { Peers } = await res.json()\\n\\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) }\\n  }\\n\\n  return list\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"multiaddr\\\":496}],278:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst Multiaddr = require('multiaddr')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bootstrap/reset')>}\\n   */\\n  async function reset (options = {}) {\\n    const res = await api.post('bootstrap/add', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        ...options,\\n        default: true\\n      }),\\n      headers: options.headers\\n    })\\n\\n    const { Peers } = await res.json()\\n\\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) }\\n  }\\n\\n  return reset\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"multiaddr\\\":496}],279:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst Multiaddr = require('multiaddr')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bootstrap/rm')>}\\n   */\\n  async function rm (addr, options = {}) {\\n    const res = await api.post('bootstrap/rm', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: addr,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    const { Peers } = await res.json()\\n\\n    return { Peers: Peers.map(ma => new Multiaddr(ma)) }\\n  }\\n\\n  return rm\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"multiaddr\\\":496}],280:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('./lib/configure')\\nconst toUrlSearchParams = require('./lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('.').Implements<typeof import('ipfs-core/src/components/cat')>}\\n   */\\n  async function * cat (path, options = {}) {\\n    const res = await api.post('cat', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: typeof path === 'string' ? path : new CID(path).toString(),\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    yield * res.iterator()\\n  }\\n\\n  return cat\\n})\\n\\n},{\\\"./lib/configure\\\":331,\\\"./lib/to-url-search-params\\\":338,\\\"cids\\\":244}],281:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('./lib/configure')\\nconst toUrlSearchParams = require('./lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('commands', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n\\n    return res.json()\\n  }\\n})\\n\\n},{\\\"./lib/configure\\\":331,\\\"./lib/to-url-search-params\\\":338}],282:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').ImplementsMethod<'get', import('ipfs-core/src/components/config')>}\\n   */\\n  const get = async (key, options = {}) => {\\n    if (!key) {\\n      throw new Error('key argument is required')\\n    }\\n\\n    const res = await api.post('config', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: key,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return data.Value\\n  }\\n\\n  return get\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],283:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').ImplementsMethod<'getAll', import('ipfs-core/src/components/config')>}\\n   */\\n  const getAll = async (options = {}) => {\\n    const res = await api.post('config/show', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return data\\n  }\\n\\n  return getAll\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],284:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  getAll: require('./getAll')(config),\\n  get: require('./get')(config),\\n  set: require('./set')(config),\\n  replace: require('./replace')(config),\\n  profiles: require('./profiles')(config)\\n})\\n\\n},{\\\"./get\\\":282,\\\"./getAll\\\":283,\\\"./profiles\\\":286,\\\"./replace\\\":288,\\\"./set\\\":289}],285:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../../lib/configure')\\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  async function apply (profile, options = {}) {\\n    const res = await api.post('config/profile/apply', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: profile,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return {\\n      original: data.OldCfg, updated: data.NewCfg\\n    }\\n  }\\n\\n  return apply\\n})\\n\\n},{\\\"../../lib/configure\\\":331,\\\"../../lib/to-url-search-params\\\":338}],286:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  apply: require('./apply')(config),\\n  list: require('./list')(config)\\n})\\n\\n},{\\\"./apply\\\":285,\\\"./list\\\":287}],287:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('../../lib/object-to-camel')\\nconst configure = require('../../lib/configure')\\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('config/profile/list', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n\\n    const data = await res.json()\\n\\n    return data.map(profile => toCamel(profile))\\n  }\\n})\\n\\n},{\\\"../../lib/configure\\\":331,\\\"../../lib/object-to-camel\\\":337,\\\"../../lib/to-url-search-params\\\":338}],288:[function(require,module,exports){\\n'use strict'\\n\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\nconst multipartRequest = require('../lib/multipart-request')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst abortSignal = require('../lib/abort-signal')\\nconst { AbortController } = require('native-abort-controller')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').ImplementsMethod<'replace', import('ipfs-core/src/components/config')>}\\n   */\\n  const replace = async (config, options = {}) => {\\n    // allow aborting requests on body errors\\n    const controller = new AbortController()\\n    const signal = abortSignal(controller.signal, options.signal)\\n\\n    // @ts-ignore https://github.com/ipfs/js-ipfs-utils/issues/90\\n    const res = await api.post('config/replace', {\\n      timeout: options.timeout,\\n      signal,\\n      searchParams: toUrlSearchParams(options),\\n      ...(\\n        await multipartRequest(uint8ArrayFromString(JSON.stringify(config)), controller, options.headers)\\n      )\\n    })\\n\\n    await res.text()\\n  }\\n\\n  return replace\\n})\\n\\n},{\\\"../lib/abort-signal\\\":330,\\\"../lib/configure\\\":331,\\\"../lib/multipart-request\\\":335,\\\"../lib/to-url-search-params\\\":338,\\\"native-abort-controller\\\":537,\\\"uint8arrays/from-string\\\":581}],289:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('../lib/object-to-camel')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').ImplementsMethod<'set', import('ipfs-core/src/components/config')>}\\n   */\\n  const set = async (key, value, options = {}) => {\\n    if (typeof key !== 'string') {\\n      throw new Error('Invalid key type')\\n    }\\n\\n    const params = {\\n      ...options,\\n      ...encodeParam(key, value)\\n    }\\n\\n    const res = await api.post('config', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(params),\\n      headers: options.headers\\n    })\\n\\n    return toCamel(await res.json())\\n  }\\n\\n  return set\\n})\\n\\nconst encodeParam = (key, value) => {\\n  switch (typeof value) {\\n    case 'boolean':\\n      return { arg: [key, value.toString()], bool: true }\\n    case 'string':\\n      return { arg: [key, value] }\\n    default:\\n      return { arg: [key, JSON.stringify(value)], json: true }\\n  }\\n}\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel\\\":337,\\\"../lib/to-url-search-params\\\":338}],290:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst multicodec = require('multicodec')\\nconst loadFormat = require('../lib/ipld-formats')\\n\\nmodule.exports = configure((api, opts) => {\\n  const getBlock = require('../block/get')(opts)\\n  const dagResolve = require('./resolve')(opts)\\n  const load = loadFormat(opts.ipld)\\n\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/dag/get')>}\\n   */\\n  const get = async (cid, options = {}) => {\\n    const resolved = await dagResolve(cid, options)\\n    const block = await getBlock(resolved.cid, options)\\n\\n    const codecName = multicodec.getName(resolved.cid.code)\\n    const format = await load(codecName)\\n\\n    if (resolved.cid.code === multicodec.RAW && !resolved.remainderPath) {\\n      resolved.remainderPath = '/'\\n    }\\n\\n    return format.resolver.resolve(block.data, resolved.remainderPath)\\n  }\\n\\n  return get\\n})\\n\\n},{\\\"../block/get\\\":269,\\\"../lib/configure\\\":331,\\\"../lib/ipld-formats\\\":333,\\\"./resolve\\\":293,\\\"multicodec\\\":251}],291:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  get: require('./get')(config),\\n  put: require('./put')(config),\\n  resolve: require('./resolve')(config)\\n})\\n\\n},{\\\"./get\\\":290,\\\"./put\\\":292,\\\"./resolve\\\":293}],292:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst multihash = require('multihashes')\\nconst configure = require('../lib/configure')\\nconst multipartRequest = require('../lib/multipart-request')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst abortSignal = require('../lib/abort-signal')\\nconst { AbortController } = require('native-abort-controller')\\nconst multicodec = require('multicodec')\\nconst loadFormat = require('../lib/ipld-formats')\\n\\nmodule.exports = configure((api, opts) => {\\n  const load = loadFormat(opts.ipld)\\n\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/dag/put')>}\\n   */\\n  const put = async (dagNode, options = {}) => {\\n    if (options.cid && (options.format || options.hashAlg)) {\\n      throw new Error('Failed to put DAG node. Provide either `cid` OR `format` and `hashAlg` options')\\n    } else if ((options.format && !options.hashAlg) || (!options.format && options.hashAlg)) {\\n      throw new Error('Failed to put DAG node. Provide `format` AND `hashAlg` options')\\n    }\\n\\n    let encodingOptions\\n    if (options.cid) {\\n      const cid = new CID(options.cid)\\n      encodingOptions = {\\n        ...options,\\n        format: multicodec.getName(cid.code),\\n        hashAlg: multihash.decode(cid.multihash).name\\n      }\\n      delete options.cid\\n    } else {\\n      encodingOptions = options\\n    }\\n\\n    const settings = {\\n      format: 'dag-cbor',\\n      hashAlg: 'sha2-256',\\n      inputEnc: 'raw',\\n      ...encodingOptions\\n    }\\n\\n    const format = await load(settings.format)\\n    const serialized = format.util.serialize(dagNode)\\n\\n    // allow aborting requests on body errors\\n    const controller = new AbortController()\\n    const signal = abortSignal(controller.signal, settings.signal)\\n\\n    // @ts-ignore https://github.com/ipfs/js-ipfs-utils/issues/90\\n    const res = await api.post('dag/put', {\\n      timeout: settings.timeout,\\n      signal,\\n      searchParams: toUrlSearchParams(settings),\\n      ...(\\n        await multipartRequest(serialized, controller, settings.headers)\\n      )\\n    })\\n    const data = await res.json()\\n\\n    return new CID(data.Cid['/'])\\n  }\\n\\n  return put\\n})\\n\\n},{\\\"../lib/abort-signal\\\":330,\\\"../lib/configure\\\":331,\\\"../lib/ipld-formats\\\":333,\\\"../lib/multipart-request\\\":335,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"multicodec\\\":251,\\\"multihashes\\\":260,\\\"native-abort-controller\\\":537}],293:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/dag/resolve')>}\\n   */\\n  const resolve = async (ipfsPath, options = {}) => {\\n    const res = await api.post('dag/resolve', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\\\\/[/]+/g, '/') : ''}`,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    const data = await res.json()\\n\\n    return { cid: new CID(data.Cid['/']), remainderPath: data.RemPath }\\n  }\\n\\n  return resolve\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],294:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst multiaddr = require('multiaddr')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst { FinalPeer } = require('./response-types')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').ImplementsMethod<'findPeer', import('ipfs-core/src/components/dht')>}\\n   */\\n  async function findPeer (peerId, options = {}) {\\n    const res = await api.post('dht/findpeer', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: `${peerId instanceof Uint8Array ? new CID(peerId) : peerId}`,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    for await (const data of res.ndjson()) {\\n      if (data.Type === FinalPeer && data.Responses) {\\n        const { ID, Addrs } = data.Responses[0]\\n        return {\\n          id: ID,\\n          addrs: (Addrs || []).map(a => multiaddr(a))\\n        }\\n      }\\n    }\\n\\n    throw new Error('not found')\\n  }\\n\\n  return findPeer\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"./response-types\\\":301,\\\"cids\\\":244,\\\"multiaddr\\\":496}],295:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst multiaddr = require('multiaddr')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst { Provider } = require('./response-types')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').ImplementsMethod<'findProvs', import('ipfs-core/src/components/dht')>}\\n   */\\n  async function * findProvs (cid, options = {}) {\\n    const res = await api.post('dht/findprovs', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: `${new CID(cid)}`,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    for await (const message of res.ndjson()) {\\n      if (message.Type === Provider && message.Responses) {\\n        for (const { ID, Addrs } of message.Responses) {\\n          yield {\\n            id: ID,\\n            addrs: (Addrs || []).map(a => multiaddr(a))\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  return findProvs\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"./response-types\\\":301,\\\"cids\\\":244,\\\"multiaddr\\\":496}],296:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst { Value } = require('./response-types')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').ImplementsMethod<'get', import('ipfs-core/src/components/dht')>}\\n   */\\n  async function get (key, options = {}) {\\n    const res = await api.post('dht/get', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    for await (const message of res.ndjson()) {\\n      if (message.Type === Value) {\\n        return uint8ArrayFromString(message.Extra, 'base64pad')\\n      }\\n    }\\n\\n    throw new Error('not found')\\n  }\\n\\n  return get\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"./response-types\\\":301,\\\"uint8arrays/from-string\\\":581,\\\"uint8arrays/to-string\\\":589}],297:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  get: require('./get')(config),\\n  put: require('./put')(config),\\n  findProvs: require('./find-provs')(config),\\n  findPeer: require('./find-peer')(config),\\n  provide: require('./provide')(config),\\n  // find closest peerId to given peerId\\n  query: require('./query')(config)\\n})\\n\\n},{\\\"./find-peer\\\":294,\\\"./find-provs\\\":295,\\\"./get\\\":296,\\\"./provide\\\":298,\\\"./put\\\":299,\\\"./query\\\":300}],298:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst multiaddr = require('multiaddr')\\nconst toCamel = require('../lib/object-to-camel')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').ImplementsMethod<'provide', import('ipfs-core/src/components/dht')>}\\n   */\\n  async function * provide (cids, options = {}) {\\n    cids = Array.isArray(cids) ? cids : [cids]\\n\\n    const res = await api.post('dht/provide', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: cids.map(cid => new CID(cid).toString()),\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    for await (let message of res.ndjson()) {\\n      message = toCamel(message)\\n      message.id = new CID(message.id)\\n      if (message.responses) {\\n        message.responses = message.responses.map(({ ID, Addrs }) => ({\\n          id: ID,\\n          addrs: (Addrs || []).map(a => multiaddr(a))\\n        }))\\n      } else {\\n        message.responses = []\\n      }\\n      yield message\\n    }\\n  }\\n\\n  return provide\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel\\\":337,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"multiaddr\\\":496}],299:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst multiaddr = require('multiaddr')\\nconst toCamel = require('../lib/object-to-camel')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst multipartRequest = require('../lib/multipart-request')\\nconst abortSignal = require('../lib/abort-signal')\\nconst { AbortController } = require('native-abort-controller')\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').ImplementsMethod<'put', import('ipfs-core/src/components/dht')>}\\n   */\\n  async function * put (key, value, options = {}) {\\n    // allow aborting requests on body errors\\n    const controller = new AbortController()\\n    const signal = abortSignal(controller.signal, options.signal)\\n\\n    // @ts-ignore https://github.com/ipfs/js-ipfs-utils/issues/90\\n    const res = await api.post('dht/put', {\\n      timeout: options.timeout,\\n      signal,\\n      searchParams: toUrlSearchParams({\\n        arg: key,\\n        ...options\\n      }),\\n      ...(\\n        await multipartRequest(value, controller, options.headers)\\n      )\\n    })\\n\\n    for await (let message of res.ndjson()) {\\n      message = toCamel(message)\\n      message.id = new CID(message.id)\\n      if (message.responses) {\\n        message.responses = message.responses.map(({ ID, Addrs }) => ({\\n          id: ID,\\n          addrs: (Addrs || []).map(a => multiaddr(a))\\n        }))\\n      }\\n      yield message\\n    }\\n  }\\n\\n  return put\\n})\\n\\n},{\\\"../lib/abort-signal\\\":330,\\\"../lib/configure\\\":331,\\\"../lib/multipart-request\\\":335,\\\"../lib/object-to-camel\\\":337,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"multiaddr\\\":496,\\\"native-abort-controller\\\":537}],300:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst multiaddr = require('multiaddr')\\nconst toCamel = require('../lib/object-to-camel')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').ImplementsMethod<'query', import('ipfs-core/src/components/dht')>}\\n   */\\n  async function * query (peerId, options = {}) {\\n    const res = await api.post('dht/query', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: new CID(`${peerId}`),\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    for await (let message of res.ndjson()) {\\n      message = toCamel(message)\\n      message.id = new CID(message.id)\\n      message.responses = (message.responses || []).map(({ ID, Addrs }) => ({\\n        id: ID,\\n        addrs: (Addrs || []).map(a => multiaddr(a))\\n      }))\\n      yield message\\n    }\\n  }\\n\\n  return query\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel\\\":337,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"multiaddr\\\":496}],301:[function(require,module,exports){\\n'use strict'\\n\\n// Response types are defined here:\\n// https://github.com/libp2p/go-libp2p-core/blob/6e566d10f4a5447317a66d64c7459954b969bdab/routing/query.go#L15-L24\\nmodule.exports = {\\n  SendingQuery: 0,\\n  PeerResponse: 1,\\n  FinalPeer: 2,\\n  QueryError: 3,\\n  Provider: 4,\\n  Value: 5,\\n  AddingPeer: 6,\\n  DialingPeer: 7\\n}\\n\\n},{}],302:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('diag/cmds', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n\\n    return res.json()\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],303:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  net: require('./net')(config),\\n  sys: require('./sys')(config),\\n  cmds: require('./cmds')(config)\\n})\\n\\n},{\\\"./cmds\\\":302,\\\"./net\\\":304,\\\"./sys\\\":305}],304:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('diag/net', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n    return res.json()\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],305:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('diag/sys', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n\\n    return res.json()\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],306:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('./lib/configure')\\nconst toUrlSearchParams = require('./lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('.').Implements<typeof import('ipfs-core/src/components/dns')>}\\n   */\\n  const dns = async (domain, options = {}) => {\\n    const res = await api.post('dns', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: domain,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return data.Path\\n  }\\n\\n  return dns\\n})\\n\\n},{\\\"./lib/configure\\\":331,\\\"./lib/to-url-search-params\\\":338}],307:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/chmod')>}\\n   */\\n  async function chmod (path, mode, options = {}) {\\n    const res = await api.post('files/chmod', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: path,\\n        mode,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    await res.text()\\n  }\\n\\n  return chmod\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],308:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst { findSources } = require('./utils')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/cp')>}\\n   */\\n  async function cp (...args) {\\n    const { sources, options } = findSources(args)\\n\\n    const res = await api.post('files/cp', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: sources.map(src => CID.isCID(src) ? `/ipfs/${src}` : src),\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    await res.text()\\n  }\\n\\n  return cp\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"./utils\\\":318,\\\"cids\\\":244}],309:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/flush')>}\\n   */\\n  async function flush (path, options = {}) {\\n    if (!path || typeof path !== 'string') {\\n      throw new Error('ipfs.files.flush requires a path')\\n    }\\n\\n    const res = await api.post('files/flush', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: path,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return new CID(data.Cid)\\n  }\\n\\n  return flush\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],310:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  chmod: require('./chmod')(config),\\n  cp: require('./cp')(config),\\n  flush: require('./flush')(config),\\n  ls: require('./ls')(config),\\n  mkdir: require('./mkdir')(config),\\n  mv: require('./mv')(config),\\n  read: require('./read')(config),\\n  rm: require('./rm')(config),\\n  stat: require('./stat')(config),\\n  touch: require('./touch')(config),\\n  write: require('./write')(config)\\n})\\n\\n},{\\\"./chmod\\\":307,\\\"./cp\\\":308,\\\"./flush\\\":309,\\\"./ls\\\":311,\\\"./mkdir\\\":312,\\\"./mv\\\":313,\\\"./read\\\":314,\\\"./rm\\\":315,\\\"./stat\\\":316,\\\"./touch\\\":317,\\\"./write\\\":319}],311:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst toCamelWithMetadata = require('../lib/object-to-camel-with-metadata')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/ls')>}\\n   */\\n  async function * ls (path, options = {}) {\\n    if (!path || typeof path !== 'string') {\\n      throw new Error('ipfs.files.ls requires a path')\\n    }\\n\\n    const res = await api.post('files/ls', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: CID.isCID(path) ? `/ipfs/${path}` : path,\\n        // default long to true, diverges from go-ipfs where its false by default\\n        long: true,\\n        ...options,\\n        stream: true\\n      }),\\n      headers: options.headers\\n    })\\n\\n    for await (const result of res.ndjson()) {\\n      // go-ipfs does not yet support the \\\"stream\\\" option\\n      if ('Entries' in result) {\\n        for (const entry of result.Entries || []) {\\n          yield toCoreInterface(toCamelWithMetadata(entry))\\n        }\\n      } else {\\n        yield toCoreInterface(toCamelWithMetadata(result))\\n      }\\n    }\\n  }\\n\\n  return ls\\n})\\n\\nfunction toCoreInterface (entry) {\\n  if (entry.hash) {\\n    entry.cid = new CID(entry.hash)\\n  }\\n\\n  delete entry.hash\\n\\n  entry.type = entry.type === 1 ? 'directory' : 'file'\\n\\n  return entry\\n}\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel-with-metadata\\\":336,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],312:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/mkdir')>}\\n   */\\n  async function mkdir (path, options = {}) {\\n    const res = await api.post('files/mkdir', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: path,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    await res.text()\\n  }\\n\\n  return mkdir\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],313:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst { findSources } = require('./utils')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/mv')>}\\n   */\\n  async function mv (...args) {\\n    const { sources, options } = findSources(args)\\n\\n    const res = await api.post('files/mv', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: sources.map(src => CID.isCID(src) ? `/ipfs/${src}` : src),\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    await res.text()\\n  }\\n\\n  return mv\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"./utils\\\":318,\\\"cids\\\":244}],314:[function(require,module,exports){\\n'use strict'\\n\\nconst toIterable = require('stream-to-it/source')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/read')>}\\n   */\\n  async function * read (path, options = {}) {\\n    const res = await api.post('files/read', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: path,\\n        count: options.length,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    yield * toIterable(res.body)\\n  }\\n\\n  return read\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"stream-to-it/source\\\":575}],315:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst { findSources } = require('./utils')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/rm')>}\\n   */\\n  async function rm (...args) {\\n    const { sources, options } = findSources(args)\\n\\n    const res = await api.post('files/rm', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: sources,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    await res.text()\\n  }\\n\\n  return rm\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"./utils\\\":318}],316:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst toCamelWithMetadata = require('../lib/object-to-camel-with-metadata')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/stat')>}\\n   */\\n  async function stat (path, options = {}) {\\n    if (typeof path !== 'string') {\\n      options = path || {}\\n      path = '/'\\n    }\\n\\n    const res = await api.post('files/stat', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: path,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    data.WithLocality = data.WithLocality || false\\n    return toCoreInterface(toCamelWithMetadata(data))\\n  }\\n\\n  return stat\\n})\\n\\nfunction toCoreInterface (entry) {\\n  entry.cid = new CID(entry.hash)\\n  delete entry.hash\\n  return entry\\n}\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel-with-metadata\\\":336,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],317:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/touch')>}\\n   */\\n  async function touch (path, options = {}) {\\n    const res = await api.post('files/touch', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: path,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    await res.text()\\n  }\\n\\n  return touch\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],318:[function(require,module,exports){\\n'use strict'\\n\\nexports.findSources = (args) => {\\n  /** @type {Record<any, any>} */\\n  let options = {}\\n  let sources = []\\n\\n  if (!Array.isArray(args[args.length - 1]) && typeof args[args.length - 1] === 'object') {\\n    options = args.pop()\\n  }\\n\\n  if (args.length === 1 && Array.isArray(args[0])) {\\n    // support ipfs.files.cp([src, dest], opts)\\n    sources = args[0]\\n  } else {\\n    // support ipfs.files.cp(src, dest, opts) and ipfs.files.cp(src1, src2, dest, opts)\\n    sources = args\\n  }\\n\\n  return {\\n    sources,\\n    options\\n  }\\n}\\n\\n},{}],319:[function(require,module,exports){\\n'use strict'\\n\\nconst modeToString = require('../lib/mode-to-string')\\nconst { mtimeToObject } = require('ipfs-core-utils/src/files/normalise-input/utils')\\nconst configure = require('../lib/configure')\\nconst multipartRequest = require('../lib/multipart-request')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst abortSignal = require('../lib/abort-signal')\\nconst { AbortController } = require('native-abort-controller')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/write')>}\\n   */\\n  async function write (path, input, options = {}) {\\n    // allow aborting requests on body errors\\n    const controller = new AbortController()\\n    const signal = abortSignal(controller.signal, options.signal)\\n\\n    // @ts-ignore https://github.com/ipfs/js-ipfs-utils/issues/90\\n    const res = await api.post('files/write', {\\n      timeout: options.timeout,\\n      signal,\\n      searchParams: toUrlSearchParams({\\n        arg: path,\\n        streamChannels: true,\\n        count: options.length,\\n        ...options\\n      }),\\n      ...(\\n        await multipartRequest({\\n          content: input,\\n          path: 'arg',\\n          mode: modeToString(options.mode),\\n          mtime: mtimeToObject(options.mtime)\\n        }, controller, options.headers)\\n      )\\n    })\\n\\n    await res.text()\\n  }\\n\\n  return write\\n})\\n\\n},{\\\"../lib/abort-signal\\\":330,\\\"../lib/configure\\\":331,\\\"../lib/mode-to-string\\\":334,\\\"../lib/multipart-request\\\":335,\\\"../lib/to-url-search-params\\\":338,\\\"ipfs-core-utils/src/files/normalise-input/utils\\\":213,\\\"native-abort-controller\\\":537}],320:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('./lib/configure')\\n\\nmodule.exports = configure(api => {\\n  return () => {\\n    const url = new URL(api.opts.base || '')\\n    return {\\n      host: url.hostname,\\n      port: url.port,\\n      protocol: url.protocol,\\n      pathname: url.pathname,\\n      'api-path': url.pathname\\n    }\\n  }\\n})\\n\\n},{\\\"./lib/configure\\\":331}],321:[function(require,module,exports){\\n'use strict'\\n\\nconst Tar = require('it-tar')\\nconst CID = require('cids')\\nconst configure = require('./lib/configure')\\nconst toUrlSearchParams = require('./lib/to-url-search-params')\\nconst map = require('it-map')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('.').Implements<typeof import('ipfs-core/src/components/get')>}\\n   */\\n  async function * get (path, options = {}) {\\n    const res = await api.post('get', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: `${path instanceof Uint8Array ? new CID(path) : path}`,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    const extractor = Tar.extract()\\n\\n    for await (const { header, body } of extractor(res.iterator())) {\\n      if (header.type === 'directory') {\\n        // @ts-ignore - Missing the following properties from type 'Directory':\\n        // cid, name, size, depthts\\n        yield {\\n          type: 'dir',\\n          path: header.name\\n        }\\n      } else {\\n        // @ts-ignore - Missing the following properties from type 'File':\\n        // cid, name, size, depthts\\n        yield {\\n          type: 'file',\\n          path: header.name,\\n          content: map(body, (chunk) => chunk.slice()) // convert bl to Buffer/Uint8Array\\n        }\\n      }\\n    }\\n  }\\n\\n  return get\\n})\\n\\n},{\\\"./lib/configure\\\":331,\\\"./lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"it-map\\\":474,\\\"it-tar\\\":479}],322:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('./lib/object-to-camel')\\nconst multiaddr = require('multiaddr')\\nconst configure = require('./lib/configure')\\nconst toUrlSearchParams = require('./lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('.').Implements<typeof import('ipfs-core/src/components/id')>}\\n   */\\n  async function id (options = {}) {\\n    const res = await api.post('id', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    const output = toCamel(data)\\n\\n    if (output.addresses) {\\n      output.addresses = output.addresses.map(ma => multiaddr(ma))\\n    }\\n\\n    return output\\n  }\\n  return id\\n})\\n\\n},{\\\"./lib/configure\\\":331,\\\"./lib/object-to-camel\\\":337,\\\"./lib/to-url-search-params\\\":338,\\\"multiaddr\\\":496}],323:[function(require,module,exports){\\n'use strict'\\n/* eslint-env browser */\\n\\nconst CID = require('cids')\\nconst multiaddr = require('multiaddr')\\nconst multibase = require('multibase')\\nconst multicodec = require('multicodec')\\nconst multihash = require('multihashes')\\nconst globSource = require('ipfs-utils/src/files/glob-source')\\nconst urlSource = require('ipfs-utils/src/files/url-source')\\n\\n/**\\n * @param {import(\\\"./lib/core\\\").ClientOptions} options\\n */\\nfunction ipfsClient (options = {}) {\\n  return {\\n    add: require('./add')(options),\\n    addAll: require('./add-all')(options),\\n    bitswap: require('./bitswap')(options),\\n    block: require('./block')(options),\\n    bootstrap: require('./bootstrap')(options),\\n    cat: require('./cat')(options),\\n    commands: require('./commands')(options),\\n    config: require('./config')(options),\\n    dag: require('./dag')(options),\\n    dht: require('./dht')(options),\\n    diag: require('./diag')(options),\\n    dns: require('./dns')(options),\\n    files: require('./files')(options),\\n    get: require('./get')(options),\\n    getEndpointConfig: require('./get-endpoint-config')(options),\\n    id: require('./id')(options),\\n    key: require('./key')(options),\\n    log: require('./log')(options),\\n    ls: require('./ls')(options),\\n    mount: require('./mount')(options),\\n    name: require('./name')(options),\\n    object: require('./object')(options),\\n    pin: require('./pin')(options),\\n    ping: require('./ping')(options),\\n    pubsub: require('./pubsub')(options),\\n    refs: require('./refs')(options),\\n    repo: require('./repo')(options),\\n    resolve: require('./resolve')(options),\\n    stats: require('./stats')(options),\\n    stop: require('./stop')(options),\\n    shutdown: require('./stop')(options),\\n    swarm: require('./swarm')(options),\\n    version: require('./version')(options)\\n  }\\n}\\n\\nObject.assign(ipfsClient, { CID, multiaddr, multibase, multicodec, multihash, globSource, urlSource })\\n\\nmodule.exports = ipfsClient\\n\\n/**\\n * @typedef {Object} HttpOptions\\n * @property {Headers | Record<string, string>} [headers] - An object or [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers) instance that can be used to set custom HTTP headers. Note that this option can also be [configured globally](#custom-headers) via the constructor options.\\n * @property {URLSearchParams | Record<string, string>} [searchParams] - An object or [`URLSearchParams`](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams) instance that can be used to add additional query parameters to the query string sent with each request.\\n *\\n * @typedef {import('ipfs-core/src/utils').AbortOptions} AbortOptions}\\n */\\n\\n/**\\n * This is an utility type that can be used to derive type of the HTTP Client\\n * API from the Core API. It takes type of the API factory (from ipfs-core),\\n * derives API from it's return type and extends it last `options` parameter\\n * with `HttpOptions`.\\n *\\n * This can be used to avoid (re)typing API interface when implementing it in\\n * http client e.g you can annotate `ipfs.addAll` implementation with\\n *\\n * `@type {Implements<typeof import('ipfs-core/src/components/add-all')>}`\\n *\\n * **Caution**: This supports APIs with up to four parameters and last optional\\n * `options` parameter, anything else will result to `never` type.\\n *\\n * @template {(config:any) => any} APIFactory\\n * @typedef {APIWithExtraOptions<ReturnType<APIFactory>, HttpOptions>} Implements\\n */\\n\\n/**\\n * @template Key\\n * @template {(config:any) => any} APIFactory\\n * @typedef {import('./interface').APIMethodWithExtraOptions<ReturnType<APIFactory>, Key, HttpOptions>} ImplementsMethod\\n */\\n\\n/**\\n * @template API, Extra\\n * @typedef {import('./interface').APIWithExtraOptions<API, Extra>} APIWithExtraOptions\\n */\\n\\n},{\\\"./add\\\":263,\\\"./add-all\\\":262,\\\"./bitswap\\\":264,\\\"./block\\\":270,\\\"./bootstrap\\\":276,\\\"./cat\\\":280,\\\"./commands\\\":281,\\\"./config\\\":284,\\\"./dag\\\":291,\\\"./dht\\\":297,\\\"./diag\\\":303,\\\"./dns\\\":306,\\\"./files\\\":310,\\\"./get\\\":321,\\\"./get-endpoint-config\\\":320,\\\"./id\\\":322,\\\"./key\\\":326,\\\"./log\\\":339,\\\"./ls\\\":343,\\\"./mount\\\":344,\\\"./name\\\":345,\\\"./object\\\":354,\\\"./pin\\\":366,\\\"./ping\\\":372,\\\"./pubsub\\\":373,\\\"./refs\\\":380,\\\"./repo\\\":383,\\\"./resolve\\\":386,\\\"./stats\\\":388,\\\"./stop\\\":389,\\\"./swarm\\\":393,\\\"./version\\\":396,\\\"cids\\\":244,\\\"ipfs-utils/src/files/glob-source\\\":38,\\\"ipfs-utils/src/files/url-source\\\":410,\\\"multiaddr\\\":496,\\\"multibase\\\":247,\\\"multicodec\\\":251,\\\"multihashes\\\":260}],324:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('../lib/object-to-camel')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (name, options = {}) => {\\n    const res = await api.post('key/gen', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: name,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return toCamel(data)\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel\\\":337,\\\"../lib/to-url-search-params\\\":338}],325:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('../lib/object-to-camel')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (name, pem, password, options = {}) => {\\n    if (typeof password !== 'string') {\\n      options = password || {}\\n      password = null\\n    }\\n\\n    const res = await api.post('key/import', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: name,\\n        pem,\\n        password,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return toCamel(data)\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel\\\":337,\\\"../lib/to-url-search-params\\\":338}],326:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  gen: require('./gen')(config),\\n  list: require('./list')(config),\\n  rename: require('./rename')(config),\\n  rm: require('./rm')(config),\\n  import: require('./import')(config)\\n})\\n\\n},{\\\"./gen\\\":324,\\\"./import\\\":325,\\\"./list\\\":327,\\\"./rename\\\":328,\\\"./rm\\\":329}],327:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('../lib/object-to-camel')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('key/list', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return (data.Keys || []).map(k => toCamel(k))\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel\\\":337,\\\"../lib/to-url-search-params\\\":338}],328:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('../lib/object-to-camel')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (oldName, newName, options = {}) => {\\n    const res = await api.post('key/rename', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: [\\n          oldName,\\n          newName\\n        ],\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    return toCamel(await res.json())\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel\\\":337,\\\"../lib/to-url-search-params\\\":338}],329:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('../lib/object-to-camel')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (name, options = {}) => {\\n    const res = await api.post('key/rm', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: name,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return toCamel(data.Keys[0])\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel\\\":337,\\\"../lib/to-url-search-params\\\":338}],330:[function(require,module,exports){\\n'use strict'\\n\\nconst { anySignal } = require('any-signal')\\n\\n/**\\n * @typedef {AbortSignal | undefined} MaybeSignal\\n *\\n * @param  {MaybeSignal[]} signals\\n * @returns {AbortSignal[]}\\n */\\nfunction filter (signals) {\\n  // @ts-ignore\\n  return signals.filter(Boolean)\\n}\\n\\n/**\\n * @param  {...AbortSignal|undefined} signals\\n */\\nmodule.exports = (...signals) => {\\n  return anySignal(filter(signals))\\n}\\n\\n},{\\\"any-signal\\\":216}],331:[function(require,module,exports){\\n'use strict'\\n/* eslint-env browser */\\n\\nconst Client = require('./core')\\n\\n// Set default configuration and call create function with them\\n/**\\n * @typedef { import(\\\"./core\\\").ClientOptions } ClientOptions\\n */\\n\\n/**\\n * @template T\\n * @typedef {(client: Client, clientOptions: ClientOptions) => T} Fn\\n */\\n\\n/**\\n * @template T\\n * @typedef {(clientOptions: ClientOptions) => T} Factory\\n */\\n\\n/**\\n * @template T\\n * @param {Fn<T>} fn\\n * @returns {Factory<T>}\\n */\\nconst configure = (fn) => {\\n  return (options) => {\\n    return fn(new Client(options), options)\\n  }\\n}\\nmodule.exports = configure\\n\\n},{\\\"./core\\\":332}],332:[function(require,module,exports){\\n'use strict'\\n/* eslint-env browser */\\nconst Multiaddr = require('multiaddr')\\nconst { isBrowser, isWebWorker, isNode } = require('ipfs-utils/src/env')\\nconst { default: parseDuration } = require('parse-duration')\\nconst log = require('debug')('ipfs-http-client:lib:error-handler')\\nconst HTTP = require('ipfs-utils/src/http')\\nconst merge = require('merge-options')\\nconst toUrlString = require('ipfs-core-utils/src/to-url-string')\\nconst http = require('http')\\nconst https = require('https')\\n\\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http'\\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost'\\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001'\\n\\n/**\\n * @param {ClientOptions|URL|Multiaddr|string} [options]\\n * @returns {ClientOptions}\\n */\\nconst normalizeOptions = (options = {}) => {\\n  let url\\n  let opts = {}\\n  let agent\\n\\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\\n    url = new URL(toUrlString(options))\\n  } else if (options instanceof URL) {\\n    url = options\\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\\n    url = new URL(toUrlString(options.url))\\n    opts = options\\n  } else if (options.url instanceof URL) {\\n    url = options.url\\n    opts = options\\n  } else {\\n    opts = options || {}\\n\\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '')\\n    const host = (opts.host || DEFAULT_HOST).split(':')[0]\\n    const port = (opts.port || DEFAULT_PORT)\\n\\n    url = new URL(`${protocol}://${host}:${port}`)\\n  }\\n\\n  if (opts.apiPath) {\\n    url.pathname = opts.apiPath\\n  } else if (url.pathname === '/' || url.pathname === undefined) {\\n    url.pathname = 'api/v0'\\n  }\\n\\n  if (isNode) {\\n    const Agent = url.protocol.startsWith('https') ? https.Agent : http.Agent\\n\\n    agent = opts.agent || new Agent({\\n      keepAlive: true,\\n      // Similar to browsers which limit connections to six per host\\n      maxSockets: 6\\n    })\\n  }\\n\\n  return {\\n    ...opts,\\n    host: url.host,\\n    protocol: url.protocol.replace(':', ''),\\n    port: Number(url.port),\\n    apiPath: url.pathname,\\n    url,\\n    agent\\n  }\\n}\\n\\nconst errorHandler = async (response) => {\\n  let msg\\n\\n  try {\\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\\n      const data = await response.json()\\n      log(data)\\n      msg = data.Message || data.message\\n    } else {\\n      msg = await response.text()\\n    }\\n  } catch (err) {\\n    log('Failed to parse error response', err)\\n    // Failed to extract/parse error message from response\\n    msg = err.message\\n  }\\n\\n  /** @type {Error} */\\n  let error = new HTTP.HTTPError(response)\\n\\n  // This is what go-ipfs returns where there's a timeout\\n  if (msg && msg.includes('context deadline exceeded')) {\\n    error = new HTTP.TimeoutError(response)\\n  }\\n\\n  // This also gets returned\\n  if (msg && msg.includes('request timed out')) {\\n    error = new HTTP.TimeoutError(response)\\n  }\\n\\n  // If we managed to extract a message from the response, use it\\n  if (msg) {\\n    error.message = msg\\n  }\\n\\n  throw error\\n}\\n\\nconst KEBAB_REGEX = /[A-Z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00DE]/g\\nconst kebabCase = (str) => {\\n  return str.replace(KEBAB_REGEX, function (match) {\\n    return '-' + match.toLowerCase()\\n  })\\n}\\n\\nconst parseTimeout = (value) => {\\n  return typeof value === 'string' ? parseDuration(value) : value\\n}\\n\\n/**\\n * @typedef {import('http').Agent} HttpAgent\\n * @typedef {import('https').Agent} HttpsAgent\\n *\\n * @typedef {Object} ClientOptions\\n * @property {string} [host]\\n * @property {number} [port]\\n * @property {string} [protocol]\\n * @property {Headers|Record<string, string>} [headers] - Request headers.\\n * @property {number|string} [timeout] - Amount of time until request should timeout in ms or humand readable. https://www.npmjs.com/package/parse-duration for valid string values.\\n * @property {string} [apiPath] - Path to the API.\\n * @property {URL|string|Multiaddr} [url] - Full API URL.\\n * @property {object} [ipld]\\n * @property {any[]} [ipld.formats] - An array of additional [IPLD formats](https://github.com/ipld/interface-ipld-format) to support\\n * @property {(format: string) => Promise<any>} [ipld.loadFormat] - an async function that takes the name of an [IPLD format](https://github.com/ipld/interface-ipld-format) as a string and should return the implementation of that codec\\n * @property {HttpAgent|HttpsAgent} [agent] - A [http.Agent](https://nodejs.org/api/http.html#http_class_http_agent) used to control connection persistence and reuse for HTTP clients (only supported in node.js)\\n */\\nclass Client extends HTTP {\\n  /**\\n   * @param {ClientOptions|URL|Multiaddr|string} [options]\\n   */\\n  constructor (options = {}) {\\n    const opts = normalizeOptions(options)\\n\\n    super({\\n      timeout: parseTimeout(opts.timeout) || 60000 * 20,\\n      headers: opts.headers,\\n      base: `${opts.url}`,\\n      handleError: errorHandler,\\n      transformSearchParams: (search) => {\\n        const out = new URLSearchParams()\\n\\n        // @ts-ignore https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\\n        for (const [key, value] of search) {\\n          if (\\n            value !== 'undefined' &&\\n            value !== 'null' &&\\n            key !== 'signal'\\n          ) {\\n            out.append(kebabCase(key), value)\\n          }\\n\\n          // @ts-ignore server timeouts are strings\\n          if (key === 'timeout' && !isNaN(value)) {\\n            out.append(kebabCase(key), value)\\n          }\\n        }\\n\\n        return out\\n      },\\n      // @ts-ignore this can be a https agent or a http agent\\n      agent: opts.agent\\n    })\\n\\n    // @ts-ignore\\n    delete this.get\\n    // @ts-ignore\\n    delete this.put\\n    // @ts-ignore\\n    delete this.delete\\n    // @ts-ignore\\n    delete this.options\\n\\n    const fetch = this.fetch\\n\\n    this.fetch = (resource, options = {}) => {\\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\\n        resource = `${opts.url}/${resource}`\\n      }\\n\\n      return fetch.call(this, resource, merge(options, {\\n        method: 'POST'\\n      }))\\n    }\\n  }\\n}\\n\\nClient.errorHandler = errorHandler\\n\\nmodule.exports = Client\\n\\n},{\\\"debug\\\":190,\\\"http\\\":38,\\\"https\\\":38,\\\"ipfs-core-utils/src/to-url-string\\\":215,\\\"ipfs-utils/src/env\\\":408,\\\"ipfs-utils/src/http\\\":411,\\\"merge-options\\\":483,\\\"multiaddr\\\":496,\\\"parse-duration\\\":544}],333:[function(require,module,exports){\\n'use strict'\\n\\nconst dagPB = require('ipld-dag-pb')\\nconst dagCBOR = require('ipld-dag-cbor')\\nconst raw = require('ipld-raw')\\nconst multicodec = require('multicodec')\\n\\nconst noop = () => {}\\n\\n/**\\n * @typedef {import('cids')} CID\\n */\\n\\n/**\\n * Return an object containing supported IPLD Formats\\n *\\n * @param {object} [options] - IPLD options passed to the http client constructor\\n * @param {Array} [options.formats] - A list of IPLD Formats to use\\n * @param {Function} [options.loadFormat] - An async function that can load a format when passed a codec number\\n * @returns {Function}\\n */\\nmodule.exports = ({ formats = [], loadFormat = noop } = {}) => {\\n  formats = formats || []\\n  loadFormat = loadFormat || noop\\n\\n  const configuredFormats = {\\n    [multicodec.DAG_PB]: dagPB,\\n    [multicodec.DAG_CBOR]: dagCBOR,\\n    [multicodec.RAW]: raw\\n  }\\n\\n  formats.forEach(format => {\\n    configuredFormats[format.codec] = format\\n  })\\n\\n  /**\\n   * Attempts to load an IPLD format for the passed CID\\n   *\\n   * @param {import('multicodec').CodecName} codec - The code to load the format for\\n   * @returns {Promise<object>} - An IPLD format\\n   */\\n  const loadResolver = async (codec) => {\\n    // @ts-ignore - codec is a string and not a CodecName\\n    const number = multicodec.getNumber(codec)\\n    const format = configuredFormats[number] || await loadFormat(codec)\\n\\n    if (!format) {\\n      throw Object.assign(\\n        new Error(`Missing IPLD format \\\"${codec}\\\"`),\\n        { missingMulticodec: codec }\\n      )\\n    }\\n\\n    return format\\n  }\\n\\n  return loadResolver\\n}\\n\\n},{\\\"ipld-dag-cbor\\\":429,\\\"ipld-dag-pb\\\":452,\\\"ipld-raw\\\":461,\\\"multicodec\\\":251}],334:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = (mode) => {\\n  if (mode === undefined || mode === null) {\\n    return undefined\\n  }\\n\\n  if (typeof mode === 'string' || mode instanceof String) {\\n    return mode\\n  }\\n\\n  return mode.toString(8).padStart(4, '0')\\n}\\n\\n},{}],335:[function(require,module,exports){\\n'use strict'\\n\\n// Import browser version otherwise electron-renderer will end up with node\\n// version and fail.\\nconst normaliseInput = require('ipfs-core-utils/src/files/normalise-input/index.browser')\\nconst modeToString = require('./mode-to-string')\\n\\nasync function multipartRequest (source = '', abortController, headers = {}) {\\n  const parts = []\\n  const formData = new FormData()\\n  let index = 0\\n  let total = 0\\n\\n  for await (const { content, path, mode, mtime } of normaliseInput(source)) {\\n    let fileSuffix = ''\\n    const type = content ? 'file' : 'dir'\\n\\n    if (index > 0) {\\n      fileSuffix = `-${index}`\\n    }\\n\\n    let fieldName = type + fileSuffix\\n    const qs = []\\n\\n    if (mode !== null && mode !== undefined) {\\n      qs.push(`mode=${modeToString(mode)}`)\\n    }\\n\\n    if ((mtime) != null) {\\n      const { secs, nsecs } = (mtime)\\n\\n      qs.push(`mtime=${secs}`)\\n\\n      if (nsecs != null) {\\n        qs.push(`mtime-nsecs=${nsecs}`)\\n      }\\n    }\\n\\n    if (qs.length) {\\n      fieldName = `${fieldName}?${qs.join('&')}`\\n    }\\n\\n    if (content) {\\n      formData.set(fieldName, content, encodeURIComponent(path))\\n      const end = total + content.size\\n      parts.push({ name: path, start: total, end })\\n      total = end\\n    } else {\\n      formData.set(fieldName, new File([''], encodeURIComponent(path), { type: 'application/x-directory' }))\\n    }\\n\\n    index++\\n  }\\n\\n  return {\\n    total,\\n    parts,\\n    headers,\\n    body: formData\\n  }\\n}\\n\\nmodule.exports = multipartRequest\\n\\n},{\\\"./mode-to-string\\\":334,\\\"ipfs-core-utils/src/files/normalise-input/index.browser\\\":210}],336:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('./object-to-camel')\\n\\nfunction toCamelWithMetadata (entry) {\\n  const file = toCamel(entry)\\n\\n  if (Object.prototype.hasOwnProperty.call(file, 'mode')) {\\n    file.mode = parseInt(file.mode, 8)\\n  }\\n\\n  if (Object.prototype.hasOwnProperty.call(file, 'mtime')) {\\n    file.mtime = {\\n      secs: file.mtime,\\n      nsecs: file.mtimeNsecs || 0\\n    }\\n\\n    delete file.mtimeNsecs\\n  }\\n\\n  return file\\n}\\n\\nmodule.exports = toCamelWithMetadata\\n\\n},{\\\"./object-to-camel\\\":337}],337:[function(require,module,exports){\\n'use strict'\\n\\n// Convert object properties to camel case.\\n// NOT recursive!\\n// e.g.\\n// AgentVersion => agentVersion\\n// ID => id\\nmodule.exports = obj => {\\n  if (obj == null) return obj\\n  const caps = /^[A-Z]+$/\\n  return Object.keys(obj).reduce((camelObj, k) => {\\n    if (caps.test(k)) { // all caps\\n      camelObj[k.toLowerCase()] = obj[k]\\n    } else if (caps.test(k[0])) { // pascal\\n      camelObj[k[0].toLowerCase() + k.slice(1)] = obj[k]\\n    } else {\\n      camelObj[k] = obj[k]\\n    }\\n    return camelObj\\n  }, {})\\n}\\n\\n},{}],338:[function(require,module,exports){\\n'use strict'\\n\\nconst modeToString = require('./mode-to-string')\\nconst { mtimeToObject } = require('ipfs-core-utils/src/files/normalise-input/utils')\\n\\n/**\\n * @param {*} params\\n * @returns {URLSearchParams}\\n */\\nmodule.exports = ({ arg, searchParams, hashAlg, mtime, mode, ...options } = {}) => {\\n  if (searchParams) {\\n    options = {\\n      ...options,\\n      ...searchParams\\n    }\\n  }\\n\\n  if (hashAlg) {\\n    options.hash = hashAlg\\n  }\\n\\n  if (mtime != null) {\\n    mtime = mtimeToObject(mtime)\\n\\n    options.mtime = mtime.secs\\n    options.mtimeNsecs = mtime.nsecs\\n  }\\n\\n  if (mode != null) {\\n    options.mode = modeToString(mode)\\n  }\\n\\n  if (options.timeout && !isNaN(options.timeout)) {\\n    // server API expects timeouts as strings\\n    options.timeout = `${options.timeout}ms`\\n  }\\n\\n  if (arg === undefined || arg === null) {\\n    arg = []\\n  } else if (!Array.isArray(arg)) {\\n    arg = [arg]\\n  }\\n\\n  const urlSearchParams = new URLSearchParams(options)\\n\\n  arg.forEach(arg => urlSearchParams.append('arg', arg))\\n\\n  return urlSearchParams\\n}\\n\\n},{\\\"./mode-to-string\\\":334,\\\"ipfs-core-utils/src/files/normalise-input/utils\\\":213}],339:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  tail: require('./tail')(config),\\n  ls: require('./ls')(config),\\n  level: require('./level')(config)\\n})\\n\\n},{\\\"./level\\\":340,\\\"./ls\\\":341,\\\"./tail\\\":342}],340:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('../lib/object-to-camel')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (subsystem, level, options = {}) => {\\n    const res = await api.post('log/level', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: [\\n          subsystem,\\n          level\\n        ],\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    return toCamel(await res.json())\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel\\\":337,\\\"../lib/to-url-search-params\\\":338}],341:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('log/ls', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n\\n    const data = await res.json()\\n    return data.Strings\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],342:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async function * tail (options = {}) {\\n    const res = await api.post('log/tail', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n\\n    yield * res.ndjson()\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],343:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('./lib/configure')\\nconst toUrlSearchParams = require('./lib/to-url-search-params')\\nconst stat = require('./files/stat')\\n\\nmodule.exports = configure((api, opts) => {\\n  return async function * ls (path, options = {}) {\\n    const pathStr = `${path instanceof Uint8Array ? new CID(path) : path}`\\n\\n    async function mapLink (link) {\\n      let hash = link.Hash\\n\\n      if (hash.includes('/')) {\\n        // the hash is a path, but we need the CID\\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${hash}`\\n        const stats = await stat(opts)(ipfsPath)\\n\\n        hash = stats.cid\\n      }\\n\\n      const entry = {\\n        name: link.Name,\\n        path: pathStr + (link.Name ? `/${link.Name}` : ''),\\n        size: link.Size,\\n        cid: new CID(hash),\\n        type: typeOf(link),\\n        depth: link.Depth || 1\\n      }\\n\\n      if (link.Mode) {\\n        entry.mode = parseInt(link.Mode, 8)\\n      }\\n\\n      if (link.Mtime !== undefined && link.Mtime !== null) {\\n        entry.mtime = {\\n          secs: link.Mtime\\n        }\\n\\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\\n          entry.mtime.nsecs = link.MtimeNsecs\\n        }\\n      }\\n\\n      return entry\\n    }\\n\\n    const res = await api.post('ls', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: pathStr,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    for await (let result of res.ndjson()) {\\n      result = result.Objects\\n\\n      if (!result) {\\n        throw new Error('expected .Objects in results')\\n      }\\n\\n      result = result[0]\\n      if (!result) {\\n        throw new Error('expected one array in results.Objects')\\n      }\\n\\n      const links = result.Links\\n      if (!Array.isArray(links)) {\\n        throw new Error('expected one array in results.Objects[0].Links')\\n      }\\n\\n      if (!links.length) {\\n        // no links, this is a file, yield a single result\\n        yield mapLink(result)\\n\\n        return\\n      }\\n\\n      yield * links.map(mapLink)\\n    }\\n  }\\n})\\n\\nfunction typeOf (link) {\\n  switch (link.Type) {\\n    case 1:\\n    case 5:\\n      return 'dir'\\n    case 2:\\n      return 'file'\\n    default:\\n      return 'unknown'\\n  }\\n}\\n\\n},{\\\"./files/stat\\\":316,\\\"./lib/configure\\\":331,\\\"./lib/to-url-search-params\\\":338,\\\"cids\\\":244}],344:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('./lib/object-to-camel')\\nconst configure = require('./lib/configure')\\nconst toUrlSearchParams = require('./lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('dns', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n\\n    return toCamel(await res.json())\\n  }\\n})\\n\\n},{\\\"./lib/configure\\\":331,\\\"./lib/object-to-camel\\\":337,\\\"./lib/to-url-search-params\\\":338}],345:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  publish: require('./publish')(config),\\n  resolve: require('./resolve')(config),\\n  pubsub: require('./pubsub')(config)\\n})\\n\\n},{\\\"./publish\\\":346,\\\"./pubsub\\\":348,\\\"./resolve\\\":351}],346:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('../lib/object-to-camel')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (path, options = {}) => {\\n    const res = await api.post('name/publish', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: path,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    return toCamel(await res.json())\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel\\\":337,\\\"../lib/to-url-search-params\\\":338}],347:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('../../lib/object-to-camel')\\nconst configure = require('../../lib/configure')\\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (name, options = {}) => {\\n    const res = await api.post('name/pubsub/cancel', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: name,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    return toCamel(await res.json())\\n  }\\n})\\n\\n},{\\\"../../lib/configure\\\":331,\\\"../../lib/object-to-camel\\\":337,\\\"../../lib/to-url-search-params\\\":338}],348:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  cancel: require('./cancel')(config),\\n  state: require('./state')(config),\\n  subs: require('./subs')(config)\\n})\\n\\n},{\\\"./cancel\\\":347,\\\"./state\\\":349,\\\"./subs\\\":350}],349:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('../../lib/object-to-camel')\\nconst configure = require('../../lib/configure')\\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('name/pubsub/state', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n\\n    return toCamel(await res.json())\\n  }\\n})\\n\\n},{\\\"../../lib/configure\\\":331,\\\"../../lib/object-to-camel\\\":337,\\\"../../lib/to-url-search-params\\\":338}],350:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../../lib/configure')\\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('name/pubsub/subs', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return data.Strings || []\\n  }\\n})\\n\\n},{\\\"../../lib/configure\\\":331,\\\"../../lib/to-url-search-params\\\":338}],351:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async function * (path, options = {}) {\\n    const res = await api.post('name/resolve', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: path,\\n        stream: true,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    for await (const result of res.ndjson()) {\\n      yield result.Path\\n    }\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],352:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async function data (cid, options = {}) {\\n    const res = await api.post('object/data', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: `${cid instanceof Uint8Array ? new CID(cid) : cid}`,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const data = await res.arrayBuffer()\\n\\n    return new Uint8Array(data, 0, data.byteLength)\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],353:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst { DAGNode, DAGLink } = require('ipld-dag-pb')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\n\\nmodule.exports = configure(api => {\\n  return async (cid, options = {}) => {\\n    const res = await api.post('object/get', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: `${cid instanceof Uint8Array ? new CID(cid) : cid}`,\\n        dataEncoding: 'base64',\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return new DAGNode(\\n      uint8ArrayFromString(data.Data, 'base64pad'),\\n      (data.Links || []).map(l => new DAGLink(l.Name, l.Size, l.Hash))\\n    )\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"ipld-dag-pb\\\":452,\\\"uint8arrays/from-string\\\":581}],354:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  data: require('./data')(config),\\n  get: require('./get')(config),\\n  links: require('./links')(config),\\n  new: require('./new')(config),\\n  patch: require('./patch')(config),\\n  put: require('./put')(config),\\n  stat: require('./stat')(config)\\n})\\n\\n},{\\\"./data\\\":352,\\\"./get\\\":353,\\\"./links\\\":355,\\\"./new\\\":356,\\\"./patch\\\":359,\\\"./put\\\":362,\\\"./stat\\\":363}],355:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst { DAGLink } = require('ipld-dag-pb')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (cid, options = {}) => {\\n    const res = await api.post('object/links', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: `${cid instanceof Uint8Array ? new CID(cid) : cid}`,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return (data.Links || []).map(l => new DAGLink(l.Name, l.Size, l.Hash))\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"ipld-dag-pb\\\":452}],356:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('object/new', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: options.template,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    const { Hash } = await res.json()\\n\\n    return new CID(Hash)\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],357:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../../lib/configure')\\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (cid, dLink, options = {}) => {\\n    const res = await api.post('object/patch/add-link', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: [\\n          `${cid instanceof Uint8Array ? new CID(cid) : cid}`,\\n          dLink.Name || dLink.name || '',\\n          (dLink.Hash || dLink.cid || '').toString() || null\\n        ],\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    const { Hash } = await res.json()\\n\\n    return new CID(Hash)\\n  }\\n})\\n\\n},{\\\"../../lib/configure\\\":331,\\\"../../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],358:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst multipartRequest = require('../../lib/multipart-request')\\nconst configure = require('../../lib/configure')\\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\\nconst abortSignal = require('../../lib/abort-signal')\\nconst { AbortController } = require('native-abort-controller')\\n\\nmodule.exports = configure(api => {\\n  return async (cid, data, options = {}) => {\\n    // allow aborting requests on body errors\\n    const controller = new AbortController()\\n    const signal = abortSignal(controller.signal, options.signal)\\n\\n    // @ts-ignore https://github.com/ipfs/js-ipfs-utils/issues/90\\n    const res = await api.post('object/patch/append-data', {\\n      timeout: options.timeout,\\n      signal,\\n      searchParams: toUrlSearchParams({\\n        arg: `${cid instanceof Uint8Array ? new CID(cid) : cid}`,\\n        ...options\\n      }),\\n      ...(\\n        await multipartRequest(data, controller, options.headers)\\n      )\\n    })\\n\\n    const { Hash } = await res.json()\\n\\n    return new CID(Hash)\\n  }\\n})\\n\\n},{\\\"../../lib/abort-signal\\\":330,\\\"../../lib/configure\\\":331,\\\"../../lib/multipart-request\\\":335,\\\"../../lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"native-abort-controller\\\":537}],359:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  addLink: require('./add-link')(config),\\n  appendData: require('./append-data')(config),\\n  rmLink: require('./rm-link')(config),\\n  setData: require('./set-data')(config)\\n})\\n\\n},{\\\"./add-link\\\":357,\\\"./append-data\\\":358,\\\"./rm-link\\\":360,\\\"./set-data\\\":361}],360:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../../lib/configure')\\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (cid, dLink, options = {}) => {\\n    const res = await api.post('object/patch/rm-link', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: [\\n          `${cid instanceof Uint8Array ? new CID(cid) : cid}`,\\n          dLink.Name || dLink.name || null\\n        ],\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    const { Hash } = await res.json()\\n\\n    return new CID(Hash)\\n  }\\n})\\n\\n},{\\\"../../lib/configure\\\":331,\\\"../../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],361:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst multipartRequest = require('../../lib/multipart-request')\\nconst configure = require('../../lib/configure')\\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\\nconst abortSignal = require('../../lib/abort-signal')\\nconst { AbortController } = require('native-abort-controller')\\n\\nmodule.exports = configure(api => {\\n  return async (cid, data, options = {}) => {\\n    // allow aborting requests on body errors\\n    const controller = new AbortController()\\n    const signal = abortSignal(controller.signal, options.signal)\\n\\n    // @ts-ignore https://github.com/ipfs/js-ipfs-utils/issues/90\\n    const { Hash } = await (await api.post('object/patch/set-data', {\\n      timeout: options.timeout,\\n      signal,\\n      searchParams: toUrlSearchParams({\\n        arg: [\\n          `${cid instanceof Uint8Array ? new CID(cid) : cid}`\\n        ],\\n        ...options\\n      }),\\n      ...(\\n        await multipartRequest(data, controller, options.headers)\\n      )\\n    })).json()\\n\\n    return new CID(Hash)\\n  }\\n})\\n\\n},{\\\"../../lib/abort-signal\\\":330,\\\"../../lib/configure\\\":331,\\\"../../lib/multipart-request\\\":335,\\\"../../lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"native-abort-controller\\\":537}],362:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst { DAGNode } = require('ipld-dag-pb')\\nconst multipartRequest = require('../lib/multipart-request')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst abortSignal = require('../lib/abort-signal')\\nconst { AbortController } = require('native-abort-controller')\\nconst unit8ArrayToString = require('uint8arrays/to-string')\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\n\\nmodule.exports = configure(api => {\\n  return async (obj, options = {}) => {\\n    let tmpObj = {\\n      Links: []\\n    }\\n\\n    if (obj instanceof Uint8Array) {\\n      if (!options.enc) {\\n        tmpObj = {\\n          Data: unit8ArrayToString(obj),\\n          Links: []\\n        }\\n      }\\n    } else if (DAGNode.isDAGNode(obj)) {\\n      tmpObj = {\\n        Data: unit8ArrayToString(obj.Data),\\n        Links: obj.Links.map(l => ({\\n          Name: l.Name,\\n          Hash: l.Hash.toString(),\\n          Size: l.Tsize\\n        }))\\n      }\\n    } else if (typeof obj === 'object') {\\n      tmpObj.Data = unit8ArrayToString(obj.Data)\\n      tmpObj.Links = obj.Links\\n    } else {\\n      throw new Error('obj not recognized')\\n    }\\n\\n    let buf\\n    if (obj instanceof Uint8Array && options.enc) {\\n      buf = obj\\n    } else {\\n      options.enc = 'json'\\n      buf = uint8ArrayFromString(JSON.stringify(tmpObj))\\n    }\\n\\n    // allow aborting requests on body errors\\n    const controller = new AbortController()\\n    const signal = abortSignal(controller.signal, options.signal)\\n\\n    // @ts-ignore https://github.com/ipfs/js-ipfs-utils/issues/90\\n    const res = await api.post('object/put', {\\n      timeout: options.timeout,\\n      signal,\\n      searchParams: toUrlSearchParams(options),\\n      ...(\\n        await multipartRequest(buf, controller, options.headers)\\n      )\\n    })\\n\\n    const { Hash } = await res.json()\\n\\n    return new CID(Hash)\\n  }\\n})\\n\\n},{\\\"../lib/abort-signal\\\":330,\\\"../lib/configure\\\":331,\\\"../lib/multipart-request\\\":335,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"ipld-dag-pb\\\":452,\\\"native-abort-controller\\\":537,\\\"uint8arrays/from-string\\\":581,\\\"uint8arrays/to-string\\\":589}],363:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (cid, options = {}) => {\\n    const res = await api.post('object/stat', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: `${cid instanceof Uint8Array ? new CID(cid) : cid}`,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    return res.json()\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],364:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst normaliseInput = require('ipfs-core-utils/src/pins/normalise-input')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async function * addAll (source, options = {}) {\\n    for await (const { path, recursive, metadata } of normaliseInput(source)) {\\n      const res = await api.post('pin/add', {\\n        timeout: options.timeout,\\n        signal: options.signal,\\n        searchParams: toUrlSearchParams({\\n          ...options,\\n          arg: path,\\n          recursive,\\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\\n          stream: true\\n        }),\\n        headers: options.headers\\n      })\\n\\n      for await (const pin of res.ndjson()) {\\n        if (pin.Pins) { // non-streaming response\\n          for (const cid of pin.Pins) {\\n            yield new CID(cid)\\n          }\\n          continue\\n        }\\n\\n        yield new CID(pin)\\n      }\\n    }\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"ipfs-core-utils/src/pins/normalise-input\\\":214}],365:[function(require,module,exports){\\n'use strict'\\n\\nconst addAll = require('./add-all')\\nconst last = require('it-last')\\nconst configure = require('../lib/configure')\\n\\nmodule.exports = (options) => {\\n  const all = addAll(options)\\n\\n  return configure(() => {\\n    return async function add (path, options = {}) { // eslint-disable-line require-await\\n      return last(all({\\n        path,\\n        ...options\\n      }, options))\\n    }\\n  })(options)\\n}\\n\\n},{\\\"../lib/configure\\\":331,\\\"./add-all\\\":364,\\\"it-last\\\":473}],366:[function(require,module,exports){\\n'use strict'\\n\\nconst Remote = require('./remote')\\n\\nmodule.exports = config => ({\\n  add: require('./add')(config),\\n  addAll: require('./add-all')(config),\\n  ls: require('./ls')(config),\\n  rm: require('./rm')(config),\\n  rmAll: require('./rm-all')(config),\\n  remote: new Remote(config)\\n})\\n\\n},{\\\"./add\\\":365,\\\"./add-all\\\":364,\\\"./ls\\\":367,\\\"./remote\\\":368,\\\"./rm\\\":371,\\\"./rm-all\\\":370}],367:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nfunction toPin (type, cid, metadata) {\\n  const pin = {\\n    type,\\n    cid: new CID(cid)\\n  }\\n\\n  if (metadata) {\\n    pin.metadata = metadata\\n  }\\n\\n  return pin\\n}\\n\\nmodule.exports = configure(api => {\\n  return async function * ls (options = {}) {\\n    if (options.paths) {\\n      options.paths = Array.isArray(options.paths) ? options.paths : [options.paths]\\n    }\\n\\n    const res = await api.post('pin/ls', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        ...options,\\n        arg: (options.paths || []).map(path => `${path}`),\\n        stream: true\\n      }),\\n      headers: options.headers\\n    })\\n\\n    for await (const pin of res.ndjson()) {\\n      if (pin.Keys) { // non-streaming response\\n        for (const cid of Object.keys(pin.Keys)) {\\n          yield toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata)\\n        }\\n        return\\n      }\\n\\n      yield toPin(pin.Type, pin.Cid, pin.Metadata)\\n    }\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],368:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst Client = require('../../lib/core')\\nconst Service = require('./service')\\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\\n\\n/**\\n * @typedef {import('../..').HttpOptions} HttpOptions\\n * @typedef {import('../../lib/core').ClientOptions} ClientOptions\\n * @typedef {import('ipfs-core-types/src/basic').AbortOptions} AbortOptions\\n * @typedef {import('ipfs-core-types/src/pin/remote').API} API\\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\\n *\\n * @implements {API}\\n */\\nclass Remote {\\n  /**\\n   * @param {ClientOptions} options\\n   */\\n  constructor (options) {\\n    /** @private */\\n    this.client = new Client(options)\\n    /** @readonly */\\n    this.service = new Service(options)\\n  }\\n\\n  /**\\n   * Stores an IPFS object(s) from a given path to a remote pinning service.\\n   *\\n   * @param {CID} cid\\n   * @param {AddOptions & AbortOptions & HttpOptions} options\\n   * @returns {Promise<Pin>}\\n   */\\n  add (cid, options) {\\n    return Remote.add(this.client, cid, options)\\n  }\\n\\n  /**\\n   * @param {Client} client\\n   * @param {CID} cid\\n   * @param {AddOptions & AbortOptions & HttpOptions} options\\n   */\\n  static async add (client, cid, { timeout, signal, headers, ...options }) {\\n    const response = await client.post('pin/remote/add', {\\n      timeout,\\n      signal,\\n      headers,\\n      searchParams: encodeAddParams({ cid, ...options })\\n    })\\n\\n    return Remote.decodePin(await response.json())\\n  }\\n\\n  /**\\n   * @param {Object} json\\n   * @param {string} json.Name\\n   * @param {string} json.Cid\\n   * @param {Status} json.Status\\n   * @returns {Pin}\\n   */\\n  static decodePin ({ Name: name, Status: status, Cid: cid }) {\\n    return {\\n      cid: new CID(cid),\\n      name,\\n      status\\n    }\\n  }\\n\\n  /**\\n   * Returns a list of matching pins on the remote pinning service.\\n   *\\n   * @param {Query & AbortOptions & HttpOptions} query\\n   */\\n  ls (query) {\\n    return Remote.ls(this.client, query)\\n  }\\n\\n  /**\\n   *\\n   * @param {Client} client\\n   * @param {Query & AbortOptions & HttpOptions} options\\n   * @returns {AsyncIterable<Pin>}\\n   */\\n  static async * ls (client, { timeout, signal, headers, ...query }) {\\n    const response = await client.post('pin/remote/ls', {\\n      signal,\\n      timeout,\\n      headers,\\n      searchParams: encodeQuery(query)\\n    })\\n\\n    for await (const pin of response.ndjson()) {\\n      yield Remote.decodePin(pin)\\n    }\\n  }\\n\\n  /**\\n   * Removes a single pin object matching query allowing it to be garbage\\n   * collected (if needed). Will error if multiple pins mtach provided\\n   * query. To remove all matches use `rmAll` instead.\\n   *\\n   * @param {Query & AbortOptions & HttpOptions} query\\n   */\\n  rm (query) {\\n    return Remote.rm(this.client, { ...query, all: false })\\n  }\\n\\n  /**\\n   * Removes all pin object that match given query allowing them to be garbage\\n   * collected if needed.\\n   *\\n   * @param {Query & AbortOptions & HttpOptions} query\\n   */\\n  rmAll (query) {\\n    return Remote.rm(this.client, { ...query, all: true })\\n  }\\n\\n  /**\\n   *\\n   * @param {Client} client\\n   * @param {{all: boolean} & Query & AbortOptions & HttpOptions} options\\n   */\\n  static async rm (client, { timeout, signal, headers, ...query }) {\\n    await client.post('pin/remote/rm', {\\n      timeout,\\n      signal,\\n      headers,\\n      searchParams: encodeQuery(query)\\n    })\\n  }\\n}\\n\\n/**\\n * @param {any} service\\n * @returns {string}\\n */\\nconst encodeService = (service) => {\\n  if (typeof service === 'string' && service !== '') {\\n    return service\\n  } else {\\n    throw new TypeError('service name must be passed')\\n  }\\n}\\n\\n/**\\n * @param {any} cid\\n * @returns {string}\\n */\\nconst encodeCID = (cid) => {\\n  if (CID.isCID(cid)) {\\n    return cid.toString()\\n  } else {\\n    throw new TypeError(`CID instance expected instead of ${cid}`)\\n  }\\n}\\n\\n/**\\n * @param {Query & { all?: boolean }} query\\n * @returns {URLSearchParams}\\n */\\nconst encodeQuery = ({ service, cid, name, status, all }) => {\\n  const query = toUrlSearchParams({\\n    service: encodeService(service),\\n    name,\\n    force: all ? true : undefined\\n  })\\n\\n  if (cid) {\\n    for (const value of cid) {\\n      query.append('cid', encodeCID(value))\\n    }\\n  }\\n\\n  if (status) {\\n    for (const value of status) {\\n      query.append('status', value)\\n    }\\n  }\\n\\n  return query\\n}\\n\\n/**\\n * @param {AddOptions & {cid:CID}} options\\n * @returns {URLSearchParams}\\n */\\nconst encodeAddParams = ({ cid, service, background, name, origins }) => {\\n  const params = toUrlSearchParams({\\n    arg: encodeCID(cid),\\n    service: encodeService(service),\\n    name,\\n    background: background ? true : undefined\\n  })\\n\\n  if (origins) {\\n    for (const origin of origins) {\\n      params.append('origin', origin.toString())\\n    }\\n  }\\n\\n  return params\\n}\\n\\nmodule.exports = Remote\\n\\n},{\\\"../../lib/core\\\":332,\\\"../../lib/to-url-search-params\\\":338,\\\"./service\\\":369,\\\"cids\\\":244}],369:[function(require,module,exports){\\n'use strict'\\n\\nconst Client = require('../../lib/core')\\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\\n\\n/**\\n * @typedef {import('../../lib/core').ClientOptions} ClientOptions\\n * @typedef {import('../..').HttpOptions} HttpOptions\\n * @typedef {import('ipfs-core-types/src/basic').AbortOptions} AbortOptions\\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API} API\\n * @typedef {import('ipfs-core-types/src/pin/remote/service').Credentials} Credentials\\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinService} RemotePinService\\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinServiceWithStat} RemotePinServiceWithStat\\n * @implements {API}\\n */\\nclass Service {\\n  /**\\n   * @param {ClientOptions} options\\n   */\\n  constructor (options) {\\n    /** @private */\\n    this.client = new Client(options)\\n  }\\n\\n  /**\\n   * @param {Client} client\\n   * @param {string} name\\n   * @param {Credentials & AbortOptions & HttpOptions} options\\n   */\\n  static async add (client, name, options) {\\n    const { endpoint, key, headers, timeout, signal } = options\\n    await client.post('pin/remote/service/add', {\\n      timeout,\\n      signal,\\n      searchParams: toUrlSearchParams({\\n        arg: [name, Service.encodeEndpoint(endpoint), key]\\n      }),\\n      headers\\n    })\\n  }\\n\\n  /**\\n   * @param {URL} url\\n   */\\n  static encodeEndpoint (url) {\\n    const href = String(url)\\n    if (href === 'undefined') {\\n      throw Error('endpoint is required')\\n    }\\n    // Workaround trailing `/` issue in go-ipfs\\n    // @see https://github.com/ipfs/go-ipfs/issues/7826\\n    return href[href.length - 1] === '/' ? href.slice(0, -1) : href\\n  }\\n\\n  /**\\n   * @param {Client} client\\n   * @param {string} name\\n   * @param {AbortOptions & HttpOptions} [options]\\n   */\\n  static async rm (client, name, { timeout, signal, headers } = {}) {\\n    await client.post('pin/remote/service/rm', {\\n      timeout,\\n      signal,\\n      headers,\\n      searchParams: toUrlSearchParams({\\n        arg: name\\n      })\\n    })\\n  }\\n\\n  /**\\n   * @template {true} Stat\\n   * @param {Client} client\\n   * @param {{ stat?: Stat } & AbortOptions & HttpOptions} [options]\\n   */\\n  static async ls (client, { stat, timeout, signal, headers } = {}) {\\n    const response = await client.post('pin/remote/service/ls', {\\n      searchParams: stat === true ? toUrlSearchParams({ stat }) : undefined,\\n      timeout,\\n      signal,\\n      headers\\n    })\\n\\n    /** @type {{RemoteServices: Object[]}} */\\n    const { RemoteServices } = await response.json()\\n\\n    /** @type {Stat extends true ? RemotePinServiceWithStat[] : RemotePinService []} */\\n    return (RemoteServices.map(Service.decodeRemoteService))\\n  }\\n\\n  /**\\n   * @param {Object} json\\n   * @returns {RemotePinServiceWithStat}\\n   */\\n  static decodeRemoteService (json) {\\n    return {\\n      service: json.Service,\\n      endpoint: new URL(json.ApiEndpoint),\\n      ...(json.Stat && { stat: Service.decodeStat(json.Stat) })\\n    }\\n  }\\n\\n  /**\\n   * @param {Object} json\\n   * @returns {import('ipfs-core-types/src/pin/remote/service').Stat}\\n   */\\n  static decodeStat (json) {\\n    switch (json.Status) {\\n      case 'valid': {\\n        const { Pinning, Pinned, Queued, Failed } = json.PinCount\\n        return {\\n          status: 'valid',\\n          pinCount: {\\n            queued: Queued,\\n            pinning: Pinning,\\n            pinned: Pinned,\\n            failed: Failed\\n          }\\n        }\\n      }\\n      case 'invalid': {\\n        return { status: 'invalid' }\\n      }\\n      default: {\\n        return { status: json.Status }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Registers remote pinning service with a given name. Errors if service\\n   * with the given name is already registered.\\n   *\\n   * @param {string} name\\n   * @param {Credentials & AbortOptions & HttpOptions} options\\n   */\\n  add (name, options) {\\n    return Service.add(this.client, name, options)\\n  }\\n\\n  /**\\n   * Unregisteres remote pinning service with a given name. If service with such\\n   * name isn't registerede this is a noop.\\n   *\\n   * @param {string} name\\n   * @param {AbortOptions & HttpOptions} [options]\\n   */\\n  rm (name, options) {\\n    return Service.rm(this.client, name, options)\\n  }\\n\\n  /**\\n   * List registered remote pinning services.\\n   *\\n   * @param {{ stat?: true } & AbortOptions & HttpOptions} [options]\\n   */\\n  ls (options) {\\n    return Service.ls(this.client, options)\\n  }\\n}\\n\\nmodule.exports = Service\\n\\n},{\\\"../../lib/core\\\":332,\\\"../../lib/to-url-search-params\\\":338}],370:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst normaliseInput = require('ipfs-core-utils/src/pins/normalise-input')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async function * rmAll (source, options = {}) {\\n    for await (const { path, recursive } of normaliseInput(source)) {\\n      const searchParams = new URLSearchParams(options.searchParams)\\n      searchParams.append('arg', `${path}`)\\n\\n      if (recursive != null) searchParams.set('recursive', String(recursive))\\n\\n      const res = await api.post('pin/rm', {\\n        timeout: options.timeout,\\n        signal: options.signal,\\n        headers: options.headers,\\n        searchParams: toUrlSearchParams({\\n          ...options,\\n          arg: `${path}`,\\n          recursive\\n        })\\n      })\\n\\n      for await (const pin of res.ndjson()) {\\n        if (pin.Pins) { // non-streaming response\\n          yield * pin.Pins.map(cid => new CID(cid))\\n          continue\\n        }\\n        yield new CID(pin)\\n      }\\n    }\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244,\\\"ipfs-core-utils/src/pins/normalise-input\\\":214}],371:[function(require,module,exports){\\n'use strict'\\n\\nconst rmAll = require('./rm-all')\\nconst last = require('it-last')\\nconst configure = require('../lib/configure')\\n\\nmodule.exports = (options) => {\\n  const all = rmAll(options)\\n\\n  return configure(() => {\\n    return async function rm (path, options = {}) { // eslint-disable-line require-await\\n      return last(all({\\n        path,\\n        ...options\\n      }, options))\\n    }\\n  })(options)\\n}\\n\\n},{\\\"../lib/configure\\\":331,\\\"./rm-all\\\":370,\\\"it-last\\\":473}],372:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('./lib/object-to-camel')\\nconst configure = require('./lib/configure')\\nconst toUrlSearchParams = require('./lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async function * ping (peerId, options = {}) {\\n    const res = await api.post('ping', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: `${peerId}`,\\n        ...options\\n      }),\\n      headers: options.headers,\\n      transform: toCamel\\n    })\\n\\n    yield * res.ndjson()\\n  }\\n})\\n\\n},{\\\"./lib/configure\\\":331,\\\"./lib/object-to-camel\\\":337,\\\"./lib/to-url-search-params\\\":338}],373:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  ls: require('./ls')(config),\\n  peers: require('./peers')(config),\\n  publish: require('./publish')(config),\\n  subscribe: require('./subscribe')(config),\\n  unsubscribe: require('./unsubscribe')(config)\\n})\\n\\n},{\\\"./ls\\\":374,\\\"./peers\\\":375,\\\"./publish\\\":376,\\\"./subscribe\\\":377,\\\"./unsubscribe\\\":379}],374:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const { Strings } = await (await api.post('pubsub/ls', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })).json()\\n\\n    return Strings || []\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],375:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (topic, options = {}) => {\\n    if (!options && typeof topic === 'object') {\\n      options = topic || {}\\n      topic = null\\n    }\\n\\n    const res = await api.post('pubsub/peers', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: topic,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n\\n    const { Strings } = await res.json()\\n\\n    return Strings || []\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],376:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\nconst multipartRequest = require('../lib/multipart-request')\\nconst abortSignal = require('../lib/abort-signal')\\nconst { AbortController } = require('native-abort-controller')\\n\\nmodule.exports = configure(api => {\\n  return async (topic, data, options = {}) => {\\n    const searchParams = toUrlSearchParams({\\n      arg: topic,\\n      ...options\\n    })\\n\\n    // allow aborting requests on body errors\\n    const controller = new AbortController()\\n    const signal = abortSignal(controller.signal, options.signal)\\n\\n    // @ts-ignore https://github.com/ipfs/js-ipfs-utils/issues/90\\n    const res = await api.post('pubsub/pub', {\\n      timeout: options.timeout,\\n      signal,\\n      searchParams,\\n      ...(\\n        await multipartRequest(data, controller, options.headers)\\n      )\\n    })\\n\\n    await res.text()\\n  }\\n})\\n\\n},{\\\"../lib/abort-signal\\\":330,\\\"../lib/configure\\\":331,\\\"../lib/multipart-request\\\":335,\\\"../lib/to-url-search-params\\\":338,\\\"native-abort-controller\\\":537}],377:[function(require,module,exports){\\n'use strict'\\n\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\nconst log = require('debug')('ipfs-http-client:pubsub:subscribe')\\nconst SubscriptionTracker = require('./subscription-tracker')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure((api, options) => {\\n  const subsTracker = SubscriptionTracker.singleton()\\n\\n  return async (topic, handler, options = {}) => { // eslint-disable-line require-await\\n    options.signal = subsTracker.subscribe(topic, handler, options.signal)\\n\\n    let done\\n    let fail\\n\\n    const result = new Promise((resolve, reject) => {\\n      done = resolve\\n      fail = reject\\n    })\\n\\n    // In Firefox, the initial call to fetch does not resolve until some data\\n    // is received. If this doesn't happen within 1 second assume success\\n    const ffWorkaround = setTimeout(() => done(), 1000)\\n\\n    // Do this async to not block Firefox\\n    setTimeout(() => {\\n      api.post('pubsub/sub', {\\n        timeout: options.timeout,\\n        signal: options.signal,\\n        searchParams: toUrlSearchParams({\\n          arg: topic,\\n          ...options\\n        }),\\n        headers: options.headers\\n      })\\n        .catch((err) => {\\n          // Initial subscribe fail, ensure we clean up\\n          subsTracker.unsubscribe(topic, handler)\\n\\n          fail(err)\\n        })\\n        .then((response) => {\\n          clearTimeout(ffWorkaround)\\n\\n          if (!response) {\\n            // if there was no response, the subscribe failed\\n            return\\n          }\\n\\n          readMessages(response.ndjson(), {\\n            onMessage: handler,\\n            onEnd: () => subsTracker.unsubscribe(topic, handler),\\n            onError: options.onError\\n          })\\n\\n          done()\\n        })\\n    }, 0)\\n\\n    return result\\n  }\\n})\\n\\nasync function readMessages (msgStream, { onMessage, onEnd, onError }) {\\n  onError = onError || log\\n\\n  try {\\n    for await (const msg of msgStream) {\\n      try {\\n        if (!msg.from) {\\n          continue\\n        }\\n\\n        onMessage({\\n          from: uint8ArrayToString(uint8ArrayFromString(msg.from, 'base64pad'), 'base58btc'),\\n          data: uint8ArrayFromString(msg.data, 'base64pad'),\\n          seqno: uint8ArrayFromString(msg.seqno, 'base64pad'),\\n          topicIDs: msg.topicIDs\\n        })\\n      } catch (err) {\\n        err.message = `Failed to parse pubsub message: ${err.message}`\\n        onError(err, false, msg) // Not fatal\\n      }\\n    }\\n  } catch (err) {\\n    // FIXME: In testing with Chrome, err.type is undefined (should not be!)\\n    // Temporarily use the name property instead.\\n    if (err.type !== 'aborted' && err.name !== 'AbortError') {\\n      onError(err, true) // Fatal\\n    }\\n  } finally {\\n    onEnd()\\n  }\\n}\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"./subscription-tracker\\\":378,\\\"debug\\\":190,\\\"uint8arrays/from-string\\\":581,\\\"uint8arrays/to-string\\\":589}],378:[function(require,module,exports){\\n'use strict'\\n\\nconst { AbortController } = require('native-abort-controller')\\n\\nclass SubscriptionTracker {\\n  constructor () {\\n    this._subs = new Map()\\n  }\\n\\n  static singleton () {\\n    if (SubscriptionTracker.instance) return SubscriptionTracker.instance\\n    SubscriptionTracker.instance = new SubscriptionTracker()\\n    return SubscriptionTracker.instance\\n  }\\n\\n  subscribe (topic, handler, signal) {\\n    const topicSubs = this._subs.get(topic) || []\\n\\n    if (topicSubs.find(s => s.handler === handler)) {\\n      throw new Error(`Already subscribed to ${topic} with this handler`)\\n    }\\n\\n    // Create controller so a call to unsubscribe can cancel the request\\n    const controller = new AbortController()\\n\\n    this._subs.set(topic, [{ handler, controller }].concat(topicSubs))\\n\\n    // If there is an external signal, forward the abort event\\n    if (signal) {\\n      signal.addEventListener('abort', () => this.unsubscribe(topic, handler))\\n    }\\n\\n    return controller.signal\\n  }\\n\\n  unsubscribe (topic, handler) {\\n    const subs = this._subs.get(topic) || []\\n    let unsubs\\n\\n    if (handler) {\\n      this._subs.set(topic, subs.filter(s => s.handler !== handler))\\n      unsubs = subs.filter(s => s.handler === handler)\\n    } else {\\n      this._subs.set(topic, [])\\n      unsubs = subs\\n    }\\n\\n    unsubs.forEach(s => s.controller.abort())\\n  }\\n}\\n\\nSubscriptionTracker.instance = null\\n\\nmodule.exports = SubscriptionTracker\\n\\n},{\\\"native-abort-controller\\\":537}],379:[function(require,module,exports){\\n'use strict'\\n\\nconst SubscriptionTracker = require('./subscription-tracker')\\n\\nmodule.exports = api => {\\n  const subsTracker = SubscriptionTracker.singleton()\\n  // eslint-disable-next-line require-await\\n  return async (topic, handler) => subsTracker.unsubscribe(topic, handler)\\n}\\n\\n},{\\\"./subscription-tracker\\\":378}],380:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst toCamel = require('../lib/object-to-camel')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure((api, options) => {\\n  const refs = async function * (args, options = {}) {\\n    if (!Array.isArray(args)) {\\n      args = [args]\\n    }\\n\\n    const res = await api.post('refs', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: args.map(arg => `${arg instanceof Uint8Array ? new CID(arg) : arg}`),\\n        ...options\\n      }),\\n      headers: options.headers,\\n      transform: toCamel\\n    })\\n\\n    yield * res.ndjson()\\n  }\\n  refs.local = require('./local')(options)\\n\\n  return refs\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel\\\":337,\\\"../lib/to-url-search-params\\\":338,\\\"./local\\\":381,\\\"cids\\\":244}],381:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('../lib/object-to-camel')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async function * refsLocal (options = {}) {\\n    const res = await api.post('refs/local', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      transform: toCamel,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n\\n    yield * res.ndjson()\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/object-to-camel\\\":337,\\\"../lib/to-url-search-params\\\":338}],382:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async function * gc (options = {}) {\\n    const res = await api.post('repo/gc', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers,\\n      transform: (res) => {\\n        return {\\n          err: res.Error ? new Error(res.Error) : null,\\n          cid: (res.Key || {})['/'] ? new CID(res.Key['/']) : null\\n        }\\n      }\\n    })\\n\\n    yield * res.ndjson()\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"cids\\\":244}],383:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  gc: require('./gc')(config),\\n  stat: require('./stat')(config),\\n  version: require('./version')(config)\\n})\\n\\n},{\\\"./gc\\\":382,\\\"./stat\\\":384,\\\"./version\\\":385}],384:[function(require,module,exports){\\n'use strict'\\n\\nconst { BigNumber } = require('bignumber.js')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('repo/stat', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n    const data = await res.json()\\n\\n    return {\\n      numObjects: new BigNumber(data.NumObjects),\\n      repoSize: new BigNumber(data.RepoSize),\\n      repoPath: data.RepoPath,\\n      version: data.Version,\\n      storageMax: new BigNumber(data.StorageMax)\\n    }\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"bignumber.js\\\":19}],385:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await (await api.post('repo/version', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })).json()\\n\\n    return res.Version\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],386:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('./lib/configure')\\nconst toUrlSearchParams = require('./lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('.').Implements<typeof import('ipfs-core/src/components/resolve')>}\\n   */\\n  async function resolve (path, options = {}) {\\n    const res = await api.post('resolve', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: path,\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const { Path } = await res.json()\\n    return Path\\n  }\\n  return resolve\\n})\\n\\n},{\\\"./lib/configure\\\":331,\\\"./lib/to-url-search-params\\\":338}],387:[function(require,module,exports){\\n'use strict'\\n\\nconst { BigNumber } = require('bignumber.js')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async function * bw (options = {}) {\\n    const res = await api.post('stats/bw', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers,\\n      transform: (stats) => ({\\n        totalIn: new BigNumber(stats.TotalIn),\\n        totalOut: new BigNumber(stats.TotalOut),\\n        rateIn: new BigNumber(stats.RateIn),\\n        rateOut: new BigNumber(stats.RateOut)\\n      })\\n    })\\n\\n    yield * res.ndjson()\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"bignumber.js\\\":19}],388:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  bitswap: require('../bitswap/stat')(config),\\n  bw: require('./bw')(config),\\n  repo: require('../repo/stat')(config)\\n})\\n\\n},{\\\"../bitswap/stat\\\":265,\\\"../repo/stat\\\":384,\\\"./bw\\\":387}],389:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('./lib/configure')\\nconst toUrlSearchParams = require('./lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('shutdown', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n\\n    await res.text()\\n  }\\n})\\n\\n},{\\\"./lib/configure\\\":331,\\\"./lib/to-url-search-params\\\":338}],390:[function(require,module,exports){\\n'use strict'\\n\\nconst multiaddr = require('multiaddr')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('swarm/addrs', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n    const { Addrs } = await res.json()\\n\\n    return Object.keys(Addrs).map(id => ({\\n      id,\\n      addrs: (Addrs[id] || []).map(a => multiaddr(a))\\n    }))\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"multiaddr\\\":496}],391:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (addrs, options = {}) => {\\n    addrs = Array.isArray(addrs) ? addrs : [addrs]\\n\\n    const res = await api.post('swarm/connect', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: addrs.map(addr => `${addr}`),\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const { Strings } = await res.json()\\n\\n    return Strings || []\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],392:[function(require,module,exports){\\n'use strict'\\n\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (addrs, options = {}) => {\\n    addrs = Array.isArray(addrs) ? addrs : [addrs]\\n\\n    const res = await api.post('swarm/disconnect', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams({\\n        arg: addrs.map(addr => `${addr}`),\\n        ...options\\n      }),\\n      headers: options.headers\\n    })\\n    const { Strings } = await res.json()\\n\\n    return Strings || []\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338}],393:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = config => ({\\n  addrs: require('./addrs')(config),\\n  connect: require('./connect')(config),\\n  disconnect: require('./disconnect')(config),\\n  localAddrs: require('./localAddrs')(config),\\n  peers: require('./peers')(config)\\n})\\n\\n},{\\\"./addrs\\\":390,\\\"./connect\\\":391,\\\"./disconnect\\\":392,\\\"./localAddrs\\\":394,\\\"./peers\\\":395}],394:[function(require,module,exports){\\n'use strict'\\n\\nconst multiaddr = require('multiaddr')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await api.post('swarm/addrs/local', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n    const { Strings } = await res.json()\\n\\n    return (Strings || []).map(a => multiaddr(a))\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"multiaddr\\\":496}],395:[function(require,module,exports){\\n'use strict'\\n\\nconst multiaddr = require('multiaddr')\\nconst configure = require('../lib/configure')\\nconst toUrlSearchParams = require('../lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  return async (options = {}) => {\\n    const res = await (await api.post('swarm/peers', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })).json()\\n\\n    return (res.Peers || []).map(peer => {\\n      const info = {}\\n      try {\\n        info.addr = multiaddr(peer.Addr)\\n        info.peer = peer.Peer\\n      } catch (error) {\\n        info.error = error\\n        info.rawPeerInfo = peer\\n      }\\n      if (peer.Muxer) {\\n        info.muxer = peer.Muxer\\n      }\\n      if (peer.Latency) {\\n        info.latency = peer.Latency\\n      }\\n      if (peer.Streams) {\\n        info.streams = peer.Streams\\n      }\\n      if (peer.Direction != null) {\\n        info.direction = peer.Direction\\n      }\\n      return info\\n    })\\n  }\\n})\\n\\n},{\\\"../lib/configure\\\":331,\\\"../lib/to-url-search-params\\\":338,\\\"multiaddr\\\":496}],396:[function(require,module,exports){\\n'use strict'\\n\\nconst toCamel = require('./lib/object-to-camel')\\nconst configure = require('./lib/configure')\\nconst toUrlSearchParams = require('./lib/to-url-search-params')\\n\\nmodule.exports = configure(api => {\\n  /**\\n   * @type {import('.').Implements<typeof import('ipfs-core/src/components/version')>}\\n   */\\n  async function version (options = {}) {\\n    const res = await api.post('version', {\\n      timeout: options.timeout,\\n      signal: options.signal,\\n      searchParams: toUrlSearchParams(options),\\n      headers: options.headers\\n    })\\n\\n    return toCamel(await res.json())\\n  }\\n\\n  return version\\n})\\n\\n},{\\\"./lib/configure\\\":331,\\\"./lib/object-to-camel\\\":337,\\\"./lib/to-url-search-params\\\":338}],397:[function(require,module,exports){\\narguments[4][25][0].apply(exports,arguments)\\n},{\\\"./src/relative\\\":398,\\\"./src/url\\\":399,\\\"dup\\\":25}],398:[function(require,module,exports){\\narguments[4][26][0].apply(exports,arguments)\\n},{\\\"./url\\\":399,\\\"dup\\\":26}],399:[function(require,module,exports){\\narguments[4][27][0].apply(exports,arguments)\\n},{\\\"dup\\\":27}],400:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = {\\n  DEFAULT_HTTP_API: '/ip4/127.0.0.1/tcp/5001'\\n}\\n\\n},{}],401:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = {\\n  httpClient: 'httpClient',\\n  windowIpfs: 'windowIpfs',\\n  jsIpfs: 'jsIpfs',\\n  webExt: 'webExt'\\n}\\n\\n},{}],402:[function(require,module,exports){\\n(function (global){(function (){\\n'use strict'\\n/* global self */\\n\\n// Establish the root object, `window` in the browser, `self` in Service Worker. or `global` on the server.\\n// Credit: https://github.com/megawac/underscore/commit/365311c9a440438531ca1c6bfd49e3c7c5f46079\\nmodule.exports = (typeof self === 'object' && self.self === self && self) ||\\n  (typeof global === 'object' && global.global === global && global) ||\\n  this\\n\\n}).call(this)}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\n},{}],403:[function(require,module,exports){\\n'use strict'\\n\\nconst root = require('./constants/root')\\nconst mergeOptions = require('merge-options')\\nconst tryWebExt = require('./providers/webext')\\nconst tryWindow = require('./providers/window-ipfs')\\nconst tryHttpClient = require('./providers/http-client')\\nconst tryJsIpfs = require('./providers/js-ipfs')\\n\\nconst defaultGlobalOpts = {\\n  connectionTest: async (ipfs) => {\\n    // ipfs connection is working if we can fetch data via async iterator API\\n    const cid = 'QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn'\\n    for await (const file of ipfs.get(cid)) {\\n      return file.type === 'dir' && file.name === cid\\n    }\\n  }\\n}\\n\\nconst makeProvider = (fn, defaults = {}) => {\\n  return (options = {}) => {\\n    return (globalOpts) => {\\n      options = mergeOptions(defaultGlobalOpts, defaults, globalOpts, options)\\n      return fn(options)\\n    }\\n  }\\n}\\n\\nconst providers = {\\n  httpClient: makeProvider((options) => {\\n    return tryHttpClient({ root, ...options })\\n  }),\\n  windowIpfs: makeProvider(options => {\\n    return tryWindow({ root, ...options })\\n  }),\\n  jsIpfs: makeProvider(options => {\\n    return tryJsIpfs(options)\\n  }),\\n  webExt: makeProvider(options => {\\n    return tryWebExt({ root, ...options })\\n  })\\n}\\n\\nconst defaultProviders = [\\n  providers.windowIpfs(),\\n  providers.httpClient()\\n]\\n\\nasync function getIpfs ({ providers = defaultProviders, ...options } = {}) {\\n  for (const provider of providers) {\\n    try {\\n      const res = await provider(options)\\n      if (res) return res\\n    } catch (err) {\\n      // provider failed unexpectedly, log error and move to the next one\\n      console.error('[ipfs-provider]', err) // eslint-disable-line no-console\\n    }\\n  }\\n}\\n\\nmodule.exports = {\\n  getIpfs,\\n  providers,\\n  makeProvider\\n}\\n\\n},{\\\"./constants/root\\\":402,\\\"./providers/http-client\\\":404,\\\"./providers/js-ipfs\\\":405,\\\"./providers/webext\\\":406,\\\"./providers/window-ipfs\\\":407,\\\"merge-options\\\":483}],404:[function(require,module,exports){\\n'use strict'\\n\\nconst { URL } = require('iso-url')\\nconst PROVIDERS = require('../constants/providers')\\nconst { DEFAULT_HTTP_API } = require('../constants/defaults')\\n\\n/*\\n * This provider lazy-loads https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs-http-client\\n * so it is not included as a dependency if not used.\\n *\\n * HTTP Client init fallback:\\n * 1. Use constructor returned by loadHttpClientModule function\\n * 2. Fallback to window.IpfsHttpClient\\n *\\n * API URL fallback order:\\n * 1. Try user specified API address\\n * 2. Try current origin\\n * 3. Try DEFAULT_HTTP_API\\n*/\\nasync function tryHttpClient ({ loadHttpClientModule, apiAddress, root, connectionTest }) {\\n  // Find HTTP client\\n  let httpClient\\n  if (loadHttpClientModule) httpClient = await loadHttpClientModule()\\n\\n  // Final fallback to window.IpfsHttpClient or error\\n  if (!httpClient) {\\n    if (root.IpfsHttpClient) {\\n      httpClient = root.IpfsHttpClient\\n    } else {\\n      throw new Error('ipfs-provider could not initialize js-ipfs-http-client: make sure its constructor is returned by loadHttpClientModule function or exposed at window.IpfsHttpClient')\\n    }\\n  }\\n\\n  // Allow the use of `import` or `require` on `loadHttpClientModule` fn\\n  httpClient = httpClient.default || httpClient // TODO: create 'import' demo in examples/\\n\\n  // If explicit custom apiAddress provided, only try that.\\n  if (apiAddress) {\\n    return maybeApi({ apiAddress, connectionTest, httpClient })\\n  }\\n\\n  // Current origin is not localhost:5001 so try with current origin info\\n  const { location } = root\\n  if (location && !(location.port === '5001' && location.hostname.match(/^127.0.0.1$|^localhost$/))) {\\n    const origin = new URL(location.origin)\\n    origin.pathname = '/'\\n    const res = await maybeApi({\\n      apiAddress: origin.toString(),\\n      connectionTest,\\n      httpClient\\n    })\\n    if (res) return res\\n  }\\n\\n  // ...otherwise try /ip4/127.0.0.1/tcp/5001\\n  return maybeApi({ apiAddress: DEFAULT_HTTP_API, connectionTest, httpClient })\\n}\\n\\n// Init and test an api client against provided API address.\\n// Returns js-ipfs-http-client instance or null\\nasync function maybeApi ({ apiAddress, connectionTest, httpClient }) {\\n  try {\\n    const ipfs = httpClient(copyIfObject(apiAddress))\\n    await connectionTest(ipfs)\\n    return { ipfs, provider: PROVIDERS.httpClient, apiAddress }\\n  } catch (error) {\\n    // Failed to connect to ipfs-api in `apiAddress`\\n    // console.error('[ipfs-provider:httpClient]', error)\\n    return null\\n  }\\n}\\n\\n// Some versions of js-ipfs-http-client mutate the object passed instead of\\n// URL/multiaddr string. This wrapper preserves the original config to ensure one can\\n// compare objects returned apiAddress to tell which provider was successful\\nconst copyIfObject = (apiAddress) => {\\n  return (typeof apiAddress === 'object')\\n    ? JSON.parse(JSON.stringify(apiAddress))\\n    : apiAddress\\n}\\n\\nmodule.exports = tryHttpClient\\n\\n},{\\\"../constants/defaults\\\":400,\\\"../constants/providers\\\":401,\\\"iso-url\\\":397}],405:[function(require,module,exports){\\n'use strict'\\n\\nconst PROVIDERS = require('../constants/providers')\\n\\nfunction createIpfs (ipfsModule, opts) {\\n  // Allow the use of `import` or `require` on `getJsIpfs` fn\\n  ipfsModule = ipfsModule.default || ipfsModule\\n  return ipfsModule.create(opts)\\n}\\n\\nasync function tryJsIpfs ({ connectionTest, loadJsIpfsModule, options, init = createIpfs }) {\\n  const ipfsModule = await loadJsIpfsModule()\\n  const ipfs = await init(ipfsModule, options)\\n  await connectionTest(ipfs)\\n  return { ipfs, provider: PROVIDERS.jsIpfs }\\n}\\n\\nmodule.exports = tryJsIpfs\\n\\n},{\\\"../constants/providers\\\":401}],406:[function(require,module,exports){\\n'use strict'\\n\\nconst PROVIDERS = require('../constants/providers')\\n\\nasync function tryWebExt ({ root, connectionTest }) {\\n  // Opportunistic optimizations when running inside of web extension (eg. ipfs-companion)\\n  if (typeof root.chrome === 'object' && root.chrome.extension && root.chrome.extension.getBackgroundPage) {\\n    // Note: under some vendors getBackgroundPage() will return null if window is in incognito mode\\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1329304\\n    let bg = null\\n    try {\\n      bg = root.chrome.extension.getBackgroundPage()\\n    } catch (err) {\\n      // not in browser extension\\n      return null\\n    }\\n    // If extension is exposing IPFS API as `ipfs` on the background page\\n    // it can be used directly for the best performance\\n    if (bg && bg.ipfs) {\\n      const { ipfs } = bg\\n      await connectionTest(ipfs)\\n      return { ipfs, provider: PROVIDERS.webExt }\\n    }\\n    /*  Other endpoints can be added here in the future.\\n        For example, Companion could provide API for other browser extensions:\\n        https://github.com/ipfs-shipyard/ipfs-companion/issues/307 */\\n  }\\n}\\n\\nmodule.exports = tryWebExt\\n\\n},{\\\"../constants/providers\\\":401}],407:[function(require,module,exports){\\n'use strict'\\n\\nconst PROVIDERS = require('../constants/providers')\\n\\nasync function tryWindow ({ root, permissions, connectionTest }) {\\n  if (root.ipfs) {\\n    // files.get is required for testing if API works, ensure we request it\\n    if (!(permissions && permissions.commands && permissions.commands.includes('files.get'))) {\\n      permissions = permissions || {}\\n      permissions = JSON.parse(JSON.stringify(permissions)) // deep copy to work with freezed objects\\n      permissions.commands = permissions.commands || []\\n      permissions.commands.push('files.get')\\n    }\\n    // try window.ipfs.enable first: https://github.com/ipfs-shipyard/ipfs-companion/issues/589\\n    const ipfs = typeof root.ipfs.enable === 'function'\\n      ? await root.ipfs.enable(permissions)\\n      : root.ipfs\\n    await connectionTest(ipfs)\\n    return { ipfs, provider: PROVIDERS.windowIpfs }\\n  }\\n}\\n\\nmodule.exports = tryWindow\\n\\n},{\\\"../constants/providers\\\":401}],408:[function(require,module,exports){\\n(function (process){(function (){\\n'use strict'\\nconst isElectron = require('is-electron')\\n\\nconst IS_ENV_WITH_DOM = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\\nconst IS_ELECTRON = isElectron()\\nconst IS_BROWSER = IS_ENV_WITH_DOM && !IS_ELECTRON\\nconst IS_ELECTRON_MAIN = IS_ELECTRON && !IS_ENV_WITH_DOM\\nconst IS_ELECTRON_RENDERER = IS_ELECTRON && IS_ENV_WITH_DOM\\nconst IS_NODE = typeof require === 'function' && typeof process !== 'undefined' && typeof process.release !== 'undefined' && process.release.name === 'node' && !IS_ELECTRON\\n// @ts-ignore - we either ignore worker scope or dom scope\\nconst IS_WEBWORKER = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\\nconst IS_TEST = typeof process !== 'undefined' && typeof process.env !== 'undefined' && process.env.NODE_ENV === 'test'\\n\\nmodule.exports = {\\n  isTest: IS_TEST,\\n  isElectron: IS_ELECTRON,\\n  isElectronMain: IS_ELECTRON_MAIN,\\n  isElectronRenderer: IS_ELECTRON_RENDERER,\\n  isNode: IS_NODE,\\n  /**\\n   * Detects browser main thread  **NOT** web worker or service worker\\n   */\\n  isBrowser: IS_BROWSER,\\n  isWebWorker: IS_WEBWORKER,\\n  isEnvWithDom: IS_ENV_WITH_DOM\\n}\\n\\n}).call(this)}).call(this,require('_process'))\\n},{\\\"_process\\\":546,\\\"is-electron\\\":464}],409:[function(require,module,exports){\\n'use strict'\\n\\nconst { isElectronMain } = require('./env')\\n\\nif (isElectronMain) {\\n  module.exports = require('electron-fetch')\\n} else {\\n// use window.fetch if it is available, fall back to node-fetch if not\\n  module.exports = require('native-fetch')\\n}\\n\\n},{\\\"./env\\\":408,\\\"electron-fetch\\\":38,\\\"native-fetch\\\":538}],410:[function(require,module,exports){\\n'use strict'\\n\\nconst HTTP = require('../http')\\n\\n/**\\n *\\n * @param {string} url\\n * @param {import(\\\"../types\\\").HTTPOptions} [options]\\n * @returns {{ path: string; content?: AsyncIterable<Uint8Array> }}\\n */\\nconst urlSource = (url, options) => {\\n  return {\\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\\n    content: readURLContent(url, options)\\n  }\\n}\\n\\n/**\\n *\\n * @param {string} url\\n * @param {import(\\\"../types\\\").HTTPOptions} [options]\\n * @returns {AsyncIterable<Uint8Array>}\\n */\\nasync function * readURLContent (url, options) {\\n  const http = new HTTP()\\n  const response = await http.get(url, options)\\n\\n  yield * response.iterator()\\n}\\n\\nmodule.exports = urlSource\\n\\n},{\\\"../http\\\":411}],411:[function(require,module,exports){\\n/* eslint-disable no-undef */\\n'use strict'\\n\\nconst { fetch, Request, Headers } = require('./http/fetch')\\nconst { TimeoutError, HTTPError } = require('./http/error')\\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\\nconst { URL, URLSearchParams } = require('iso-url')\\nconst TextDecoder = require('./text-decoder')\\nconst { AbortController } = require('native-abort-controller')\\nconst anySignal = require('any-signal')\\n\\n/**\\n * @typedef {import('electron-fetch').Response} Response\\n * @typedef {import('stream').Readable} NodeReadableStream\\n * @typedef {import('stream').Duplex} NodeDuplexStream\\n * @typedef {import('./types').HTTPOptions} HTTPOptions\\n */\\n\\n/**\\n * @template TResponse\\n * @param {Promise<TResponse>} promise\\n * @param {number | undefined} ms\\n * @param {AbortController} abortController\\n * @returns {Promise<TResponse>}\\n */\\nconst timeout = (promise, ms, abortController) => {\\n  if (ms === undefined) {\\n    return promise\\n  }\\n\\n  const start = Date.now()\\n\\n  const timedOut = () => {\\n    const time = Date.now() - start\\n\\n    return time >= ms\\n  }\\n\\n  return new Promise((resolve, reject) => {\\n    const timeoutID = setTimeout(() => {\\n      if (timedOut()) {\\n        reject(new TimeoutError())\\n        abortController.abort()\\n      }\\n    }, ms)\\n\\n    /**\\n     * @param {(value: any) => void } next\\n     */\\n    const after = (next) => {\\n      /**\\n       * @param {any} res\\n       */\\n      const fn = (res) => {\\n        clearTimeout(timeoutID)\\n\\n        if (timedOut()) {\\n          reject(new TimeoutError())\\n          return\\n        }\\n\\n        next(res)\\n      }\\n      return fn\\n    }\\n\\n    promise\\n      .then(after(resolve), after(reject))\\n  })\\n}\\n\\nconst defaults = {\\n  throwHttpErrors: true,\\n  credentials: 'same-origin'\\n}\\n\\nclass HTTP {\\n  /**\\n   *\\n   * @param {HTTPOptions} options\\n   */\\n  constructor (options = {}) {\\n    /** @type {HTTPOptions} */\\n    this.opts = merge(defaults, options)\\n  }\\n\\n  /**\\n   * Fetch\\n   *\\n   * @param {string | Request} resource\\n   * @param {HTTPOptions} options\\n   * @returns {Promise<Response>}\\n   */\\n  async fetch (resource, options = {}) {\\n    /** @type {HTTPOptions} */\\n    const opts = merge(this.opts, options)\\n    const headers = new Headers(opts.headers)\\n\\n    // validate resource type\\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\\n      throw new TypeError('`resource` must be a string, URL, or Request')\\n    }\\n\\n    const url = new URL(resource.toString(), opts.base)\\n\\n    const {\\n      searchParams,\\n      transformSearchParams,\\n      json\\n    } = opts\\n\\n    if (searchParams) {\\n      if (typeof transformSearchParams === 'function') {\\n        // @ts-ignore\\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\\n      } else {\\n        // @ts-ignore\\n        url.search = new URLSearchParams(opts.searchParams)\\n      }\\n    }\\n\\n    if (json) {\\n      opts.body = JSON.stringify(opts.json)\\n      headers.set('content-type', 'application/json')\\n    }\\n\\n    const abortController = new AbortController()\\n    // @ts-ignore\\n    const signal = anySignal([abortController.signal, opts.signal])\\n\\n    const response = await timeout(\\n      fetch(\\n        url.toString(),\\n        {\\n          ...opts,\\n          signal,\\n          timeout: undefined,\\n          headers\\n        }\\n      ),\\n      opts.timeout,\\n      abortController\\n    )\\n\\n    if (!response.ok && opts.throwHttpErrors) {\\n      if (opts.handleError) {\\n        await opts.handleError(response)\\n      }\\n      throw new HTTPError(response)\\n    }\\n\\n    response.iterator = function () {\\n      return fromStream(response.body)\\n    }\\n\\n    response.ndjson = async function * () {\\n      for await (const chunk of ndjson(response.iterator())) {\\n        if (options.transform) {\\n          yield options.transform(chunk)\\n        } else {\\n          yield chunk\\n        }\\n      }\\n    }\\n\\n    return response\\n  }\\n\\n  /**\\n   * @param {string | Request} resource\\n   * @param {HTTPOptions} options\\n   * @returns {Promise<Response>}\\n   */\\n  post (resource, options = {}) {\\n    return this.fetch(resource, { ...options, method: 'POST' })\\n  }\\n\\n  /**\\n   * @param {string | Request} resource\\n   * @param {HTTPOptions} options\\n   * @returns {Promise<Response>}\\n   */\\n  get (resource, options = {}) {\\n    return this.fetch(resource, { ...options, method: 'GET' })\\n  }\\n\\n  /**\\n   * @param {string | Request} resource\\n   * @param {HTTPOptions} options\\n   * @returns {Promise<Response>}\\n   */\\n  put (resource, options = {}) {\\n    return this.fetch(resource, { ...options, method: 'PUT' })\\n  }\\n\\n  /**\\n   * @param {string | Request} resource\\n   * @param {HTTPOptions} options\\n   * @returns {Promise<Response>}\\n   */\\n  delete (resource, options = {}) {\\n    return this.fetch(resource, { ...options, method: 'DELETE' })\\n  }\\n\\n  /**\\n   * @param {string | Request} resource\\n   * @param {HTTPOptions} options\\n   * @returns {Promise<Response>}\\n   */\\n  options (resource, options = {}) {\\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\\n  }\\n}\\n\\n/**\\n * Parses NDJSON chunks from an iterator\\n *\\n * @param {AsyncIterable<Uint8Array>} source\\n * @returns {AsyncIterable<any>}\\n */\\nconst ndjson = async function * (source) {\\n  const decoder = new TextDecoder()\\n  let buf = ''\\n\\n  for await (const chunk of source) {\\n    buf += decoder.decode(chunk, { stream: true })\\n    const lines = buf.split(/\\\\r?\\\\n/)\\n\\n    for (let i = 0; i < lines.length - 1; i++) {\\n      const l = lines[i].trim()\\n      if (l.length > 0) {\\n        yield JSON.parse(l)\\n      }\\n    }\\n    buf = lines[lines.length - 1]\\n  }\\n  buf += decoder.decode()\\n  buf = buf.trim()\\n  if (buf.length !== 0) {\\n    yield JSON.parse(buf)\\n  }\\n}\\n\\n/**\\n * Stream to AsyncIterable\\n *\\n * @template TChunk\\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\\n * @returns {AsyncIterable<TChunk>}\\n */\\nconst fromStream = (source) => {\\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\\n  if (isNodeReadableStream(source)) {\\n    const iter = source[Symbol.asyncIterator]()\\n    return {\\n      [Symbol.asyncIterator] () {\\n        return {\\n          next: iter.next.bind(iter),\\n          return (value) {\\n            source.destroy()\\n            if (typeof iter.return === 'function') {\\n              return iter.return()\\n            }\\n            return Promise.resolve({ done: true, value })\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  if (isWebReadableStream(source)) {\\n    const reader = source.getReader()\\n    return (async function * () {\\n      try {\\n        while (true) {\\n          // Read from the stream\\n          const { done, value } = await reader.read()\\n          // Exit if we're done\\n          if (done) return\\n          // Else yield the chunk\\n          if (value) {\\n            yield value\\n          }\\n        }\\n      } finally {\\n        reader.releaseLock()\\n      }\\n    })()\\n  }\\n\\n  if (isAsyncIterable(source)) {\\n    return source\\n  }\\n\\n  throw new TypeError('Body can\\\\'t be converted to AsyncIterable')\\n}\\n\\n/**\\n * Check if it's an AsyncIterable\\n *\\n * @template {unknown} TChunk\\n * @template {any} Other\\n * @param {Other|AsyncIterable<TChunk>} value\\n * @returns {value is AsyncIterable<TChunk>}\\n */\\nconst isAsyncIterable = (value) => {\\n  return typeof value === 'object' &&\\n  value !== null &&\\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\\n}\\n\\n/**\\n * Check for web readable stream\\n *\\n * @template {unknown} TChunk\\n * @template {any} Other\\n * @param {Other|ReadableStream<TChunk>} value\\n * @returns {value is ReadableStream<TChunk>}\\n */\\nconst isWebReadableStream = (value) => {\\n  return value && typeof /** @type {any} */(value).getReader === 'function'\\n}\\n\\n/**\\n * @param {any} value\\n * @returns {value is NodeReadableStream}\\n */\\nconst isNodeReadableStream = (value) =>\\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\\n  Object.prototype.hasOwnProperty.call(value, 'writable')\\n\\nHTTP.HTTPError = HTTPError\\nHTTP.TimeoutError = TimeoutError\\nHTTP.streamToAsyncIterator = fromStream\\n\\n/**\\n * @param {string | Request} resource\\n * @param {HTTPOptions} [options]\\n * @returns {Promise<Response>}\\n */\\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\\n\\n/**\\n * @param {string | Request} resource\\n * @param {HTTPOptions} [options]\\n * @returns {Promise<Response>}\\n */\\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\\n\\n/**\\n * @param {string | Request} resource\\n * @param {HTTPOptions} [options]\\n * @returns {Promise<Response>}\\n */\\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\\n\\n/**\\n * @param {string | Request} resource\\n * @param {HTTPOptions} [options]\\n * @returns {Promise<Response>}\\n */\\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\\n\\n/**\\n * @param {string | Request} resource\\n * @param {HTTPOptions} [options]\\n * @returns {Promise<Response>}\\n */\\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\\n\\nmodule.exports = HTTP\\n\\n},{\\\"./http/error\\\":412,\\\"./http/fetch\\\":413,\\\"./text-decoder\\\":414,\\\"any-signal\\\":9,\\\"iso-url\\\":468,\\\"merge-options\\\":483,\\\"native-abort-controller\\\":537}],412:[function(require,module,exports){\\n'use strict'\\n\\nclass TimeoutError extends Error {\\n  constructor (message = 'Request timed out') {\\n    super(message)\\n    this.name = 'TimeoutError'\\n  }\\n}\\nexports.TimeoutError = TimeoutError\\n\\nclass AbortError extends Error {\\n  constructor (message = 'The operation was aborted.') {\\n    super(message)\\n    this.name = 'AbortError'\\n  }\\n}\\nexports.AbortError = AbortError\\n\\nclass HTTPError extends Error {\\n  /**\\n   * @param {import('electron-fetch').Response} response\\n   */\\n  constructor (response) {\\n    super(response.statusText)\\n    this.name = 'HTTPError'\\n    this.response = response\\n  }\\n}\\nexports.HTTPError = HTTPError\\n\\n},{}],413:[function(require,module,exports){\\n'use strict'\\n\\nconst { TimeoutError, AbortError } = require('./error')\\nconst { Response, Request, Headers, default: fetch } = require('../fetch')\\n\\n/**\\n * @typedef {import('../types').FetchOptions} FetchOptions\\n * @typedef {import('../types').ProgressFn} ProgressFn\\n */\\n\\n/**\\n * Fetch with progress\\n *\\n * @param {string | Request} url\\n * @param {FetchOptions} [options]\\n * @returns {Promise<ResponseWithURL>}\\n */\\nconst fetchWithProgress = (url, options = {}) => {\\n  const request = new XMLHttpRequest()\\n  request.open(options.method || 'GET', url.toString(), true)\\n\\n  const { timeout, headers } = options\\n\\n  if (timeout && timeout > 0 && timeout < Infinity) {\\n    request.timeout = timeout\\n  }\\n\\n  if (options.overrideMimeType != null) {\\n    request.overrideMimeType(options.overrideMimeType)\\n  }\\n\\n  if (headers) {\\n    for (const [name, value] of new Headers(headers)) {\\n      request.setRequestHeader(name, value)\\n    }\\n  }\\n\\n  if (options.signal) {\\n    options.signal.onabort = () => request.abort()\\n  }\\n\\n  if (options.onUploadProgress) {\\n    request.upload.onprogress = options.onUploadProgress\\n  }\\n\\n  // Note: Need to use `arraybuffer` here instead of `blob` because `Blob`\\n  // instances coming from JSDOM are not compatible with `Response` from\\n  // node-fetch (which is the setup we get when testing with jest because\\n  // it uses JSDOM which does not provide a global fetch\\n  // https://github.com/jsdom/jsdom/issues/1724)\\n  request.responseType = 'arraybuffer'\\n\\n  return new Promise((resolve, reject) => {\\n    /**\\n     * @param {Event} event\\n     */\\n    const handleEvent = (event) => {\\n      switch (event.type) {\\n        case 'error': {\\n          resolve(Response.error())\\n          break\\n        }\\n        case 'load': {\\n          resolve(\\n            new ResponseWithURL(request.responseURL, request.response, {\\n              status: request.status,\\n              statusText: request.statusText,\\n              headers: parseHeaders(request.getAllResponseHeaders())\\n            })\\n          )\\n          break\\n        }\\n        case 'timeout': {\\n          reject(new TimeoutError())\\n          break\\n        }\\n        case 'abort': {\\n          reject(new AbortError())\\n          break\\n        }\\n        default: {\\n          break\\n        }\\n      }\\n    }\\n    request.onerror = handleEvent\\n    request.onload = handleEvent\\n    request.ontimeout = handleEvent\\n    request.onabort = handleEvent\\n\\n    request.send(/** @type {BodyInit} */(options.body))\\n  })\\n}\\n\\nconst fetchWithStreaming = fetch\\n\\n/**\\n * @param {string | Request} url\\n * @param {FetchOptions} options\\n */\\nconst fetchWith = (url, options = {}) =>\\n  (options.onUploadProgress != null)\\n    ? fetchWithProgress(url, options)\\n    : fetchWithStreaming(url, options)\\n\\n/**\\n * Parse Headers from a XMLHttpRequest\\n *\\n * @param {string} input\\n * @returns {Headers}\\n */\\nconst parseHeaders = (input) => {\\n  const headers = new Headers()\\n  for (const line of input.trim().split(/[\\\\r\\\\n]+/)) {\\n    const index = line.indexOf(': ')\\n    if (index > 0) {\\n      headers.set(line.slice(0, index), line.slice(index + 1))\\n    }\\n  }\\n\\n  return headers\\n}\\n\\nclass ResponseWithURL extends Response {\\n  /**\\n   * @param {string} url\\n   * @param {BodyInit} body\\n   * @param {ResponseInit} options\\n   */\\n  constructor (url, body, options) {\\n    super(body, options)\\n    Object.defineProperty(this, 'url', { value: url })\\n  }\\n}\\n\\nmodule.exports = {\\n  fetch: fetchWith,\\n  Request,\\n  Headers,\\n  ResponseWithURL\\n}\\n\\n},{\\\"../fetch\\\":409,\\\"./error\\\":412}],414:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = require('web-encoding').TextDecoder\\n\\n},{\\\"web-encoding\\\":595}],415:[function(require,module,exports){\\narguments[4][52][0].apply(exports,arguments)\\n},{\\\"dup\\\":52,\\\"multihashes\\\":526}],416:[function(require,module,exports){\\narguments[4][209][0].apply(exports,arguments)\\n},{\\\"./cid-util\\\":415,\\\"dup\\\":209,\\\"multibase\\\":501,\\\"multicodec\\\":513,\\\"multicodec/src/base-table.js\\\":511,\\\"multihashes\\\":526,\\\"uint8arrays/concat\\\":417,\\\"uint8arrays/equals\\\":418,\\\"uint8arrays/to-string\\\":419}],417:[function(require,module,exports){\\narguments[4][205][0].apply(exports,arguments)\\n},{\\\"dup\\\":205}],418:[function(require,module,exports){\\narguments[4][206][0].apply(exports,arguments)\\n},{\\\"dup\\\":206}],419:[function(require,module,exports){\\narguments[4][207][0].apply(exports,arguments)\\n},{\\\"dup\\\":207,\\\"multibase\\\":501,\\\"web-encoding\\\":595}],420:[function(require,module,exports){\\nmodule.exports={\\n  \\\"name\\\": \\\"ipld-block\\\",\\n  \\\"version\\\": \\\"0.11.0\\\",\\n  \\\"description\\\": \\\"JavaScript Implementation of IPLD Block\\\",\\n  \\\"leadMaintainer\\\": \\\"Volker Mische <volker.mische@gmail.com>\\\",\\n  \\\"main\\\": \\\"src/index.js\\\",\\n  \\\"scripts\\\": {\\n    \\\"lint\\\": \\\"aegir lint\\\",\\n    \\\"check\\\": \\\"tsc --noEmit --noErrorTruncation\\\",\\n    \\\"build\\\": \\\"npm run build:js && npm run build:types\\\",\\n    \\\"build:js\\\": \\\"aegir build\\\",\\n    \\\"build:types\\\": \\\"tsc --emitDeclarationOnly --declarationDir dist\\\",\\n    \\\"test\\\": \\\"aegir test\\\",\\n    \\\"test:node\\\": \\\"aegir test --target node\\\",\\n    \\\"test:browser\\\": \\\"aegir test --target browser\\\",\\n    \\\"release\\\": \\\"aegir release --docs\\\",\\n    \\\"release-minor\\\": \\\"aegir release --type minor --docs\\\",\\n    \\\"release-major\\\": \\\"aegir release --type major --docs\\\",\\n    \\\"coverage\\\": \\\"aegir coverage\\\",\\n    \\\"coverage-publish\\\": \\\"aegir coverage --provider coveralls\\\",\\n    \\\"docs\\\": \\\"aegir docs\\\",\\n    \\\"prepare\\\": \\\"npm run build:types\\\"\\n  },\\n  \\\"pre-push\\\": [\\n    \\\"lint\\\",\\n    \\\"test\\\"\\n  ],\\n  \\\"repository\\\": {\\n    \\\"type\\\": \\\"git\\\",\\n    \\\"url\\\": \\\"git+https://github.com/ipld/js-ipld-block.git\\\"\\n  },\\n  \\\"keywords\\\": [\\n    \\\"IPLD\\\"\\n  ],\\n  \\\"license\\\": \\\"MIT\\\",\\n  \\\"bugs\\\": {\\n    \\\"url\\\": \\\"https://github.com/ipld/js-ipld-block/issues\\\"\\n  },\\n  \\\"homepage\\\": \\\"https://github.com/ipld/js-ipld-block#readme\\\",\\n  \\\"devDependencies\\\": {\\n    \\\"aegir\\\": \\\"^27.0.0\\\",\\n    \\\"uint8arrays\\\": \\\"^1.0.0\\\",\\n    \\\"typescript\\\": \\\"^4.0.3\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"cids\\\": \\\"^1.0.0\\\"\\n  },\\n  \\\"engines\\\": {\\n    \\\"node\\\": \\\">=6.0.0\\\",\\n    \\\"npm\\\": \\\">=3.0.0\\\"\\n  },\\n  \\\"typesVersions\\\": {\\n    \\\"*\\\": {\\n      \\\"*\\\": [\\n        \\\"dist/*\\\"\\n      ]\\n    }\\n  },\\n  \\\"contributors\\\": [\\n    \\\"David Dias <daviddias.p@gmail.com>\\\",\\n    \\\"Volker Mische <volker.mische@gmail.com>\\\",\\n    \\\"Friedel Ziegelmayer <dignifiedquire@gmail.com>\\\",\\n    \\\"Irakli Gozalishvili <contact@gozala.io>\\\",\\n    \\\"achingbrain <alex@achingbrain.net>\\\",\\n    \\\"ᴠɪᴄᴛᴏʀ ʙᴊᴇʟᴋʜᴏʟᴍ <victorbjelkholm@gmail.com>\\\",\\n    \\\"Alan Shaw <alan.shaw@protocol.ai>\\\",\\n    \\\"Charlie <the_charlie_daly@hotmail.co.uk>\\\",\\n    \\\"Diogo Silva <fsdiogo@gmail.com>\\\",\\n    \\\"Hugo Dias <hugomrdias@gmail.com>\\\",\\n    \\\"Mikeal Rogers <mikeal.rogers@gmail.com>\\\",\\n    \\\"Richard Littauer <richard.littauer@gmail.com>\\\",\\n    \\\"Richard Schneider <makaretu@gmail.com>\\\",\\n    \\\"Xmader <xmader@outlook.com>\\\"\\n  ]\\n}\\n\\n},{}],421:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\n\\nconst { version } = require('../package.json')\\nconst blockSymbol = Symbol.for('@ipld/js-ipld-block/block')\\nconst readonly = { writable: false, configurable: false, enumerable: true }\\n\\n/**\\n * Represents an immutable block of data that is uniquely referenced with a cid.\\n *\\n * @example\\n * const block = new Block(Uint8Array.from([0, 1, 2, 3]), new CID('...'))\\n */\\nclass Block {\\n  /**\\n   * @param {Uint8Array} data - The data to be stored in the block as a Uint8Array.\\n   * @param {CID} cid - The cid of the data\\n   */\\n  constructor (data, cid) {\\n    if (!data || !(data instanceof Uint8Array)) {\\n      throw new Error('first argument  must be a Uint8Array')\\n    }\\n\\n    if (!cid || !CID.isCID(cid)) {\\n      throw new Error('second argument must be a CID')\\n    }\\n\\n    this.data = data\\n    this.cid = cid\\n\\n    Object.defineProperties(this, {\\n      data: readonly,\\n      cid: readonly\\n    })\\n  }\\n\\n  /**\\n   * The data of this block.\\n   *\\n   * @deprecated\\n   * @type {Uint8Array}\\n   */\\n  get _data () {\\n    deprecateData()\\n    return this.data\\n  }\\n\\n  /**\\n   * The cid of the data this block represents.\\n   *\\n   * @deprecated\\n   * @type {CID}\\n   */\\n  get _cid () {\\n    deprecateCID()\\n    return this.cid\\n  }\\n\\n  get [Symbol.toStringTag] () {\\n    return 'Block'\\n  }\\n\\n  get [blockSymbol] () {\\n    return true\\n  }\\n\\n  /**\\n   * Check if the given value is a Block.\\n   *\\n   * @param {any} other\\n   * @returns {other is Block}\\n   */\\n  static isBlock (other) {\\n    return Boolean(other && other[blockSymbol])\\n  }\\n}\\n\\n/**\\n * @param {RegExp} range\\n * @param {string} message\\n * @returns {() => void}\\n */\\nconst deprecate = (range, message) => {\\n  let warned = false\\n  return () => {\\n    if (range.test(version)) {\\n      if (!warned) {\\n        warned = true\\n        // eslint-disable-next-line no-console\\n        console.warn(message)\\n      }\\n    } else {\\n      throw new Error(message)\\n    }\\n  }\\n}\\n\\nconst deprecateCID = deprecate(/^0\\\\.10|^0\\\\.11/, 'block._cid is deprecated and will be removed in 0.12 release. Please use block.cid instead')\\nconst deprecateData = deprecate(/^0\\\\.10|^0.11/, 'block._data is deprecated and will be removed in 0.12 release. Please use block.data instead')\\n\\nmodule.exports = Block\\n\\n},{\\\"../package.json\\\":420,\\\"cids\\\":416}],422:[function(require,module,exports){\\narguments[4][205][0].apply(exports,arguments)\\n},{\\\"dup\\\":205}],423:[function(require,module,exports){\\narguments[4][206][0].apply(exports,arguments)\\n},{\\\"dup\\\":206}],424:[function(require,module,exports){\\narguments[4][207][0].apply(exports,arguments)\\n},{\\\"dup\\\":207,\\\"multibase\\\":501,\\\"web-encoding\\\":595}],425:[function(require,module,exports){\\narguments[4][52][0].apply(exports,arguments)\\n},{\\\"dup\\\":52,\\\"multihashes\\\":526}],426:[function(require,module,exports){\\narguments[4][209][0].apply(exports,arguments)\\n},{\\\"./cid-util\\\":425,\\\"dup\\\":209,\\\"multibase\\\":501,\\\"multicodec\\\":513,\\\"multicodec/src/base-table.js\\\":511,\\\"multihashes\\\":526,\\\"uint8arrays/concat\\\":422,\\\"uint8arrays/equals\\\":423,\\\"uint8arrays/to-string\\\":424}],427:[function(require,module,exports){\\narguments[4][222][0].apply(exports,arguments)\\n},{\\\"dup\\\":222}],428:[function(require,module,exports){\\narguments[4][223][0].apply(exports,arguments)\\n},{\\\"dup\\\":223,\\\"multibase/src/constants\\\":500,\\\"web-encoding\\\":595}],429:[function(require,module,exports){\\n'use strict'\\n\\nexports.util = require('./util.js')\\nexports.resolver = require('./resolver.js')\\nexports.codec = exports.util.codec\\nexports.defaultHashAlg = exports.util.defaultHashAlg\\n\\n},{\\\"./resolver.js\\\":430,\\\"./util.js\\\":431}],430:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst util = require('./util')\\n\\n/**\\n * Resolves a path within a CBOR block.\\n *\\n * Returns the value or a link and the partial mising path. This way the\\n * IPLD Resolver can fetch the link and continue to resolve.\\n *\\n * @param {Uint8Array} binaryBlob - Binary representation of a CBOR block\\n * @param {string} [path='/'] - Path that should be resolved\\n * @returns {Object} result - Result of the path it it was resolved successfully\\n * @returns {*} result.value - Value the path resolves to\\n * @returns {string} result.remainderPath - If the path resolves half-way to a\\n *   link, then the `remainderPath` is the part after the link that can be used\\n *   for further resolving\\n */\\nexports.resolve = (binaryBlob, path) => {\\n  let node = util.deserialize(binaryBlob)\\n\\n  const parts = path.split('/').filter(Boolean)\\n  while (parts.length) {\\n    const key = parts.shift()\\n    if (node[key] === undefined) {\\n      throw new Error(`Object has no property '${key}'`)\\n    }\\n\\n    node = node[key]\\n    if (CID.isCID(node)) {\\n      return {\\n        value: node,\\n        remainderPath: parts.join('/')\\n      }\\n    }\\n  }\\n\\n  return {\\n    value: node,\\n    remainderPath: ''\\n  }\\n}\\n\\nconst traverse = function * (node, path) {\\n  // Traverse only objects and arrays\\n  if (node instanceof Uint8Array || CID.isCID(node) || typeof node === 'string' ||\\n      node === null) {\\n    return\\n  }\\n  for (const item of Object.keys(node)) {\\n    const nextpath = path === undefined ? item : path + '/' + item\\n    yield nextpath\\n    yield * traverse(node[item], nextpath)\\n  }\\n}\\n\\n/**\\n * Return all available paths of a block.\\n *\\n * @generator\\n * @param {Uint8Array} binaryBlob - Binary representation of a CBOR block\\n * @yields {string} - A single path\\n */\\nexports.tree = function * (binaryBlob) {\\n  const node = util.deserialize(binaryBlob)\\n\\n  yield * traverse(node)\\n}\\n\\n},{\\\"./util\\\":431,\\\"cids\\\":426}],431:[function(require,module,exports){\\n'use strict'\\n\\nconst cbor = require('borc')\\nconst multicodec = require('multicodec')\\nconst multihashing = require('multihashing-async')\\nconst CID = require('cids')\\nconst isCircular = require('is-circular')\\nconst uint8ArrayConcat = require('uint8arrays/concat')\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\n\\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\\nconst CID_CBOR_TAG = 42\\n\\nfunction tagCID (cid) {\\n  if (typeof cid === 'string') {\\n    cid = new CID(cid).bytes\\n  } else if (CID.isCID(cid)) {\\n    cid = cid.bytes\\n  }\\n\\n  return new cbor.Tagged(CID_CBOR_TAG, uint8ArrayConcat([\\n    uint8ArrayFromString('00', 'base16'), // thanks jdag\\n    cid\\n  ], 1 + cid.length))\\n}\\n\\nfunction replaceCIDbyTAG (dagNode) {\\n  let circular\\n  try {\\n    circular = isCircular(dagNode)\\n  } catch (e) {\\n    circular = false\\n  }\\n  if (circular) {\\n    throw new Error('The object passed has circular references')\\n  }\\n\\n  function transform (obj) {\\n    if (!obj || obj instanceof Uint8Array || typeof obj === 'string') {\\n      return obj\\n    }\\n\\n    if (Array.isArray(obj)) {\\n      return obj.map(transform)\\n    }\\n\\n    if (CID.isCID(obj)) {\\n      return tagCID(obj)\\n    }\\n\\n    const keys = Object.keys(obj)\\n\\n    if (keys.length > 0) {\\n      // Recursive transform\\n      const out = {}\\n      keys.forEach((key) => {\\n        if (typeof obj[key] === 'object') {\\n          out[key] = transform(obj[key])\\n        } else {\\n          out[key] = obj[key]\\n        }\\n      })\\n      return out\\n    } else {\\n      return obj\\n    }\\n  }\\n\\n  return transform(dagNode)\\n}\\n\\nexports = module.exports\\n\\nexports.codec = multicodec.DAG_CBOR\\nexports.defaultHashAlg = multicodec.SHA2_256\\n\\nconst defaultTags = {\\n  [CID_CBOR_TAG]: (val) => {\\n    // remove that 0\\n    val = val.slice(1)\\n    return new CID(val)\\n  }\\n}\\nconst defaultSize = 64 * 1024 // current decoder heap size, 64 Kb\\nlet currentSize = defaultSize\\nconst defaultMaxSize = 64 * 1024 * 1024 // max heap size when auto-growing, 64 Mb\\nlet maxSize = defaultMaxSize\\nlet decoder = null\\n\\n/**\\n * Configure the underlying CBOR decoder.\\n *\\n * @param {Object} [options] - The options the decoder takes. The decoder will reset to the defaul values if no options are given.\\n * @param {number} [options.size=65536] - The current heap size used in CBOR parsing, this may grow automatically as larger blocks are encountered up to `maxSize`\\n * @param {number} [options.maxSize=67108864] - The maximum size the CBOR parsing heap is allowed to grow to before `dagCBOR.util.deserialize()` returns an error\\n * @param {Object} [options.tags] - An object whose keys are CBOR tag numbers and values are transform functions that accept a `value` and return a decoded representation of that `value`\\n */\\nexports.configureDecoder = (options) => {\\n  let tags = defaultTags\\n\\n  if (options) {\\n    if (typeof options.size === 'number') {\\n      currentSize = options.size\\n    }\\n    if (typeof options.maxSize === 'number') {\\n      maxSize = options.maxSize\\n    }\\n    if (options.tags) {\\n      tags = Object.assign({}, defaultTags, options && options.tags)\\n    }\\n  } else {\\n    // no options, reset to defaults\\n    currentSize = defaultSize\\n    maxSize = defaultMaxSize\\n  }\\n\\n  const decoderOptions = {\\n    tags,\\n    size: currentSize\\n  }\\n\\n  decoder = new cbor.Decoder(decoderOptions)\\n  // borc edits opts.size in-place so we can capture _actual_ size\\n  currentSize = decoderOptions.size\\n}\\n\\nexports.configureDecoder() // Setup default cbor.Decoder\\n\\n/**\\n * Serialize internal representation into a binary CBOR block.\\n *\\n * @param {Object} node - Internal representation of a CBOR block\\n * @returns {Uint8Array} - The encoded binary representation\\n */\\nexports.serialize = (node) => {\\n  const nodeTagged = replaceCIDbyTAG(node)\\n  const serialized = cbor.encode(nodeTagged)\\n\\n  return serialized\\n}\\n\\n/**\\n * Deserialize CBOR block into the internal representation.\\n *\\n * @param {Uint8Array} data - Binary representation of a CBOR block\\n * @returns {Object} - An object that conforms to the IPLD Data Model\\n */\\nexports.deserialize = (data) => {\\n  if (data.length > currentSize && data.length <= maxSize) {\\n    exports.configureDecoder({ size: data.length })\\n  }\\n\\n  if (data.length > currentSize) {\\n    throw new Error('Data is too large to deserialize with current decoder')\\n  }\\n\\n  // borc will decode back-to-back objects into an implicit top-level array, we\\n  // strictly want to only see a single explicit top-level object\\n  const all = decoder.decodeAll(data)\\n  if (all.length !== 1) {\\n    throw new Error('Extraneous CBOR data found beyond initial top-level object')\\n  }\\n\\n  return all[0]\\n}\\n\\n/**\\n * Calculate the CID of the binary blob.\\n *\\n * @param {Object} binaryBlob - Encoded IPLD Node\\n * @param {Object} [userOptions] - Options to create the CID\\n * @param {number} [userOptions.cidVersion=1] - CID version number\\n * @param {string} [UserOptions.hashAlg] - Defaults to the defaultHashAlg of the format\\n * @returns {Promise.<CID>}\\n */\\nexports.cid = async (binaryBlob, userOptions) => {\\n  const defaultOptions = { cidVersion: 1, hashAlg: exports.defaultHashAlg }\\n  const options = Object.assign(defaultOptions, userOptions)\\n\\n  const multihash = await multihashing(binaryBlob, options.hashAlg)\\n  const codecName = multicodec.print[exports.codec]\\n  const cid = new CID(options.cidVersion, codecName, multihash)\\n\\n  return cid\\n}\\n\\n},{\\\"borc\\\":33,\\\"cids\\\":426,\\\"is-circular\\\":462,\\\"multicodec\\\":513,\\\"multihashing-async\\\":532,\\\"uint8arrays/concat\\\":427,\\\"uint8arrays/from-string\\\":428}],432:[function(require,module,exports){\\narguments[4][205][0].apply(exports,arguments)\\n},{\\\"dup\\\":205}],433:[function(require,module,exports){\\narguments[4][206][0].apply(exports,arguments)\\n},{\\\"dup\\\":206}],434:[function(require,module,exports){\\narguments[4][207][0].apply(exports,arguments)\\n},{\\\"dup\\\":207,\\\"multibase\\\":501,\\\"web-encoding\\\":595}],435:[function(require,module,exports){\\narguments[4][52][0].apply(exports,arguments)\\n},{\\\"dup\\\":52,\\\"multihashes\\\":526}],436:[function(require,module,exports){\\narguments[4][209][0].apply(exports,arguments)\\n},{\\\"./cid-util\\\":435,\\\"dup\\\":209,\\\"multibase\\\":501,\\\"multicodec\\\":513,\\\"multicodec/src/base-table.js\\\":511,\\\"multihashes\\\":526,\\\"uint8arrays/concat\\\":432,\\\"uint8arrays/equals\\\":433,\\\"uint8arrays/to-string\\\":434}],437:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * Can be used with Array.sort to sort and array with Uint8Array entries\\n *\\n * @param {Uint8Array} a\\n * @param {Uint8Array} b\\n * @returns {Number}\\n */\\nfunction compare (a, b) {\\n  for (let i = 0; i < a.byteLength; i++) {\\n    if (a[i] < b[i]) {\\n      return -1\\n    }\\n\\n    if (a[i] > b[i]) {\\n      return 1\\n    }\\n  }\\n\\n  if (a.byteLength > b.byteLength) {\\n    return 1\\n  }\\n\\n  if (a.byteLength < b.byteLength) {\\n    return -1\\n  }\\n\\n  return 0\\n}\\n\\nmodule.exports = compare\\n\\n},{}],438:[function(require,module,exports){\\narguments[4][206][0].apply(exports,arguments)\\n},{\\\"dup\\\":206}],439:[function(require,module,exports){\\narguments[4][223][0].apply(exports,arguments)\\n},{\\\"dup\\\":223,\\\"multibase/src/constants\\\":500,\\\"web-encoding\\\":595}],440:[function(require,module,exports){\\narguments[4][224][0].apply(exports,arguments)\\n},{\\\"dup\\\":224,\\\"multibase/src/constants\\\":500,\\\"web-encoding\\\":595}],441:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst withIs = require('class-is')\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\n\\n// Link represents an IPFS Merkle DAG Link between Nodes.\\nclass DAGLink {\\n  constructor (name, size, cid) {\\n    if (!cid) {\\n      throw new Error('A link requires a cid to point to')\\n    }\\n\\n    // assert(size, 'A link requires a size')\\n    //  note - links should include size, but this assert is disabled\\n    //  for now to maintain consistency with go-ipfs pinset\\n\\n    Object.defineProperties(this, {\\n      Name: { value: name || '', writable: false, enumerable: true },\\n      Tsize: { value: size, writable: false, enumerable: true },\\n      Hash: { value: new CID(cid), writable: false, enumerable: true },\\n      _nameBuf: { value: null, writable: true, enumerable: false }\\n    })\\n  }\\n\\n  toString () {\\n    return `DAGLink <${this.Hash.toBaseEncodedString()} - name: \\\"${this.Name}\\\", size: ${this.Tsize}>`\\n  }\\n\\n  toJSON () {\\n    if (!this._json) {\\n      this._json = Object.freeze({\\n        name: this.Name,\\n        size: this.Tsize,\\n        cid: this.Hash.toBaseEncodedString()\\n      })\\n    }\\n\\n    return Object.assign({}, this._json)\\n  }\\n\\n  // Memoize the Uint8Array representation of name\\n  // We need this to sort the links, otherwise\\n  // we will reallocate new Uint8Arrays every time\\n  get nameAsBuffer () {\\n    if (this._nameBuf !== null) {\\n      return this._nameBuf\\n    }\\n\\n    this._nameBuf = uint8ArrayFromString(this.Name)\\n    return this._nameBuf\\n  }\\n}\\n\\nexports = module.exports = withIs(DAGLink, { className: 'DAGLink', symbolName: '@ipld/js-ipld-dag-pb/daglink' })\\n\\n},{\\\"cids\\\":436,\\\"class-is\\\":54,\\\"uint8arrays/from-string\\\":439}],442:[function(require,module,exports){\\n'use strict'\\n\\nexports = module.exports = require('./dagLink')\\nexports.util = require('./util')\\n\\n},{\\\"./dagLink\\\":441,\\\"./util\\\":443}],443:[function(require,module,exports){\\n'use strict'\\n\\nconst DAGLink = require('./dagLink')\\n\\nfunction createDagLinkFromB58EncodedHash (link) {\\n  return new DAGLink(\\n    link.Name || link.name || '',\\n    link.Tsize || link.Size || link.size || 0,\\n    link.Hash || link.hash || link.multihash || link.cid\\n  )\\n}\\n\\nexports = module.exports\\nexports.createDagLinkFromB58EncodedHash = createDagLinkFromB58EncodedHash\\n\\n},{\\\"./dagLink\\\":441}],444:[function(require,module,exports){\\n'use strict'\\n\\nconst sortLinks = require('./sortLinks')\\nconst DAGLink = require('../dag-link')\\n\\nconst asDAGLink = (link) => {\\n  if (DAGLink.isDAGLink(link)) {\\n    // It's a DAGLink instance\\n    // no need to do anything\\n    return link\\n  }\\n\\n  // DAGNode.isDagNode() would be more appropriate here, but it can't be used\\n  // as it would lead to circular dependencies as `addLink` is called from\\n  // within the DAGNode object.\\n  if (!('cid' in link ||\\n        'hash' in link ||\\n        'Hash' in link ||\\n        'multihash' in link)) {\\n    throw new Error('Link must be a DAGLink or DAGLink-like. Convert the DAGNode into a DAGLink via `node.toDAGLink()`.')\\n  }\\n\\n  // It's a Object with name, multihash/hash/cid and size\\n  return new DAGLink(link.Name || link.name, link.Tsize || link.size, link.Hash || link.multihash || link.hash || link.cid)\\n}\\n\\nconst addLink = (node, link) => {\\n  const dagLink = asDAGLink(link)\\n  node.Links.push(dagLink)\\n  sortLinks(node.Links)\\n}\\n\\nmodule.exports = addLink\\n\\n},{\\\"../dag-link\\\":442,\\\"./sortLinks\\\":448}],445:[function(require,module,exports){\\n'use strict'\\n\\nconst withIs = require('class-is')\\nconst sortLinks = require('./sortLinks')\\nconst DAGLink = require('../dag-link/dagLink')\\nconst { serializeDAGNode } = require('../serialize.js')\\nconst toDAGLink = require('./toDagLink')\\nconst addLink = require('./addLink')\\nconst rmLink = require('./rmLink')\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\n\\nclass DAGNode {\\n  constructor (data, links = [], serializedSize = null) {\\n    if (!data) {\\n      data = new Uint8Array(0)\\n    }\\n    if (typeof data === 'string') {\\n      data = uint8ArrayFromString(data)\\n    }\\n\\n    if (!(data instanceof Uint8Array)) {\\n      throw new Error('Passed \\\\'data\\\\' is not a Uint8Array or a String!')\\n    }\\n\\n    if (serializedSize !== null && typeof serializedSize !== 'number') {\\n      throw new Error('Passed \\\\'serializedSize\\\\' must be a number!')\\n    }\\n\\n    links = links.map((link) => {\\n      return DAGLink.isDAGLink(link)\\n        ? link\\n        : DAGLink.util.createDagLinkFromB58EncodedHash(link)\\n    })\\n    sortLinks(links)\\n\\n    Object.defineProperties(this, {\\n      Data: { value: data, writable: false, enumerable: true },\\n      Links: { value: links, writable: false, enumerable: true },\\n      _serializedSize: { value: serializedSize, writable: true, enumerable: false },\\n      _size: { value: null, writable: true, enumerable: false }\\n    })\\n  }\\n\\n  toJSON () {\\n    if (!this._json) {\\n      this._json = Object.freeze({\\n        data: this.Data,\\n        links: this.Links.map((l) => l.toJSON()),\\n        size: this.size\\n      })\\n    }\\n\\n    return Object.assign({}, this._json)\\n  }\\n\\n  toString () {\\n    return `DAGNode <data: \\\"${uint8ArrayToString(this.Data, 'base64urlpad')}\\\", links: ${this.Links.length}, size: ${this.size}>`\\n  }\\n\\n  _invalidateCached () {\\n    this._serializedSize = null\\n    this._size = null\\n  }\\n\\n  addLink (link) {\\n    this._invalidateCached()\\n    return addLink(this, link)\\n  }\\n\\n  rmLink (link) {\\n    this._invalidateCached()\\n    return rmLink(this, link)\\n  }\\n\\n  // @returns {Promise.<DAGLink>}\\n  toDAGLink (options) {\\n    return toDAGLink(this, options)\\n  }\\n\\n  serialize () {\\n    return serializeDAGNode(this)\\n  }\\n\\n  get size () {\\n    if (this._size === null) {\\n      if (this._serializedSize === null) {\\n        this._serializedSize = this.serialize().length\\n      }\\n      this._size = this.Links.reduce((sum, l) => sum + l.Tsize, this._serializedSize)\\n    }\\n\\n    return this._size\\n  }\\n\\n  set size (size) {\\n    throw new Error(\\\"Can't set property: 'size' is immutable\\\")\\n  }\\n}\\n\\nexports = module.exports = withIs(DAGNode, { className: 'DAGNode', symbolName: '@ipld/js-ipld-dag-pb/dagnode' })\\n\\n},{\\\"../dag-link/dagLink\\\":441,\\\"../serialize.js\\\":454,\\\"./addLink\\\":444,\\\"./rmLink\\\":447,\\\"./sortLinks\\\":448,\\\"./toDagLink\\\":449,\\\"class-is\\\":54,\\\"uint8arrays/from-string\\\":439,\\\"uint8arrays/to-string\\\":440}],446:[function(require,module,exports){\\n'use strict'\\n\\nexports = module.exports = require('./dagNode')\\n\\n},{\\\"./dagNode\\\":445}],447:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst uint8ArrayEquals = require('uint8arrays/equals')\\n\\nconst rmLink = (dagNode, nameOrCid) => {\\n  let predicate = null\\n\\n  // It's a name\\n  if (typeof nameOrCid === 'string') {\\n    predicate = (link) => link.Name === nameOrCid\\n  } else if (nameOrCid instanceof Uint8Array || CID.isCID(nameOrCid)) {\\n    predicate = (link) => uint8ArrayEquals(link.Hash, nameOrCid)\\n  }\\n\\n  if (predicate) {\\n    const links = dagNode.Links\\n    let index = 0\\n    while (index < links.length) {\\n      const link = links[index]\\n      if (predicate(link)) {\\n        links.splice(index, 1)\\n      } else {\\n        index++\\n      }\\n    }\\n  } else {\\n    throw new Error('second arg needs to be a name or CID')\\n  }\\n}\\n\\nmodule.exports = rmLink\\n\\n},{\\\"cids\\\":436,\\\"uint8arrays/equals\\\":438}],448:[function(require,module,exports){\\n'use strict'\\n\\nconst sort = require('stable')\\nconst uint8ArrayCompare = require('uint8arrays/compare')\\n\\nconst linkSort = (a, b) => {\\n  const buf1 = a.nameAsBuffer\\n  const buf2 = b.nameAsBuffer\\n\\n  return uint8ArrayCompare(buf1, buf2)\\n}\\n\\n/**\\n * Sorts links in place (mutating given array)\\n * @param {Array} links\\n * @returns {void}\\n */\\nconst sortLinks = (links) => {\\n  sort.inplace(links, linkSort)\\n}\\n\\nmodule.exports = sortLinks\\n\\n},{\\\"stable\\\":574,\\\"uint8arrays/compare\\\":437}],449:[function(require,module,exports){\\n'use strict'\\n\\nconst DAGLink = require('../dag-link/dagLink')\\nconst genCid = require('../genCid')\\n\\n/*\\n * toDAGLink converts a DAGNode to a DAGLink\\n */\\nconst toDAGLink = async (node, options = {}) => {\\n  const nodeCid = await genCid.cid(node.serialize(), options)\\n  return new DAGLink(options.name || '', node.size, nodeCid)\\n}\\n\\nmodule.exports = toDAGLink\\n\\n},{\\\"../dag-link/dagLink\\\":441,\\\"../genCid\\\":451}],450:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = `// An IPFS MerkleDAG Link\\nmessage PBLink {\\n\\n  // multihash of the target object\\n  optional bytes Hash = 1;\\n\\n  // utf string name. should be unique per object\\n  optional string Name = 2;\\n\\n  // cumulative size of target object\\n  optional uint64 Tsize = 3;\\n}\\n\\n// An IPFS MerkleDAG Node\\nmessage PBNode {\\n\\n  // refs to other objects\\n  repeated PBLink Links = 2;\\n\\n  // opaque user data\\n  optional bytes Data = 1;\\n}`\\n\\n},{}],451:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\nconst multicodec = require('multicodec')\\nconst multihashing = require('multihashing-async')\\n\\nexports = module.exports\\n\\nexports.codec = multicodec.DAG_PB\\nexports.defaultHashAlg = multicodec.SHA2_256\\n\\n/**\\n * Calculate the CID of the binary blob.\\n *\\n * @param {Object} binaryBlob - Encoded IPLD Node\\n * @param {Object} [userOptions] - Options to create the CID\\n * @param {number} [userOptions.cidVersion=1] - CID version number\\n * @param {string} [UserOptions.hashAlg] - Defaults to the defaultHashAlg of the format\\n * @returns {Promise.<CID>}\\n */\\nconst cid = async (binaryBlob, userOptions) => {\\n  const defaultOptions = { cidVersion: 1, hashAlg: exports.defaultHashAlg }\\n  const options = Object.assign(defaultOptions, userOptions)\\n\\n  const multihash = await multihashing(binaryBlob, options.hashAlg)\\n  const codecName = multicodec.print[exports.codec]\\n  const cid = new CID(options.cidVersion, codecName, multihash)\\n\\n  return cid\\n}\\n\\nexports.cid = cid\\n\\n},{\\\"cids\\\":436,\\\"multicodec\\\":513,\\\"multihashing-async\\\":532}],452:[function(require,module,exports){\\n'use strict'\\n\\nexports.DAGNode = require('./dag-node')\\nexports.DAGLink = require('./dag-link')\\n\\n/*\\n * Functions to fulfil IPLD Format interface\\n * https://github.com/ipld/interface-ipld-format\\n */\\nexports.resolver = require('./resolver')\\nexports.util = require('./util')\\nexports.codec = exports.util.codec\\nexports.defaultHashAlg = exports.util.defaultHashAlg\\n\\n},{\\\"./dag-link\\\":442,\\\"./dag-node\\\":446,\\\"./resolver\\\":453,\\\"./util\\\":455}],453:[function(require,module,exports){\\n'use strict'\\n\\nconst CID = require('cids')\\n\\nconst util = require('./util')\\n\\n/**\\n * Resolves a path within a PB block.\\n *\\n * Returns the value or a link and the partial mising path. This way the\\n * IPLD Resolver can fetch the link and continue to resolve.\\n *\\n * @param {Uint8Array} binaryBlob - Binary representation of a PB block\\n * @param {string} [path='/'] - Path that should be resolved\\n * @returns {Object} result - Result of the path it it was resolved successfully\\n * @returns {*} result.value - Value the path resolves to\\n * @returns {string} result.remainderPath - If the path resolves half-way to a\\n *   link, then the `remainderPath` is the part after the link that can be used\\n *   for further resolving\\n */\\nexports.resolve = (binaryBlob, path) => {\\n  let node = util.deserialize(binaryBlob)\\n\\n  const parts = path.split('/').filter(Boolean)\\n  while (parts.length) {\\n    const key = parts.shift()\\n    if (node[key] === undefined) {\\n      // There might be a matching named link\\n      for (const link of node.Links) {\\n        if (link.Name === key) {\\n          return {\\n            value: link.Hash,\\n            remainderPath: parts.join('/')\\n          }\\n        }\\n      }\\n\\n      // There wasn't even a matching named link\\n      throw new Error(`Object has no property '${key}'`)\\n    }\\n\\n    node = node[key]\\n    if (CID.isCID(node)) {\\n      return {\\n        value: node,\\n        remainderPath: parts.join('/')\\n      }\\n    }\\n  }\\n\\n  return {\\n    value: node,\\n    remainderPath: ''\\n  }\\n}\\n\\n/**\\n * Return all available paths of a block.\\n *\\n * @generator\\n * @param {Uint8Array} binaryBlob - Binary representation of a PB block\\n * @yields {string} - A single path\\n */\\nexports.tree = function * (binaryBlob) {\\n  const node = util.deserialize(binaryBlob)\\n\\n  // There is always a `Data` and `Links` property\\n  yield 'Data'\\n  yield 'Links'\\n  for (let ii = 0; ii < node.Links.length; ii++) {\\n    yield `Links/${ii}`\\n    yield `Links/${ii}/Name`\\n    yield `Links/${ii}/Tsize`\\n    yield `Links/${ii}/Hash`\\n  }\\n}\\n\\n},{\\\"./util\\\":455,\\\"cids\\\":436}],454:[function(require,module,exports){\\n'use strict'\\n\\nconst protons = require('protons')\\nconst proto = protons(require('./dag.proto.js'))\\nconst DAGLink = require('./dag-link/dagLink')\\n\\nexports = module.exports\\n\\nconst toProtoBuf = (node) => {\\n  const pbn = {}\\n\\n  if (node.Data && node.Data.byteLength > 0) {\\n    pbn.Data = node.Data\\n  } else {\\n    // NOTE: this has to be null in order to match go-ipfs serialization\\n    // `null !== new Uint8Array(0)`\\n    pbn.Data = null\\n  }\\n\\n  if (node.Links && node.Links.length > 0) {\\n    pbn.Links = node.Links\\n      .map((link) => ({\\n        Hash: link.Hash.bytes,\\n        Name: link.Name,\\n        Tsize: link.Tsize\\n      }))\\n  } else {\\n    pbn.Links = null\\n  }\\n\\n  return pbn\\n}\\n\\n/**\\n * Serialize internal representation into a binary PB block.\\n *\\n * @param {Object} node - Internal representation of a PB block\\n * @returns {Uint8Array} - The encoded binary representation\\n */\\nconst serializeDAGNode = (node) => {\\n  const data = node.Data\\n  const links = node.Links || []\\n\\n  const serialized = proto.PBNode.encode(toProtoBuf({\\n    Data: data,\\n    Links: links\\n  }))\\n\\n  return serialized\\n}\\n\\n// Serialize an object where the `Links` might not be a `DAGLink` instance yet\\nconst serializeDAGNodeLike = (data, links = []) => {\\n  const node = { Data: data }\\n  node.Links = links.map((link) => {\\n    return DAGLink.isDAGLink(link)\\n      ? link\\n      : DAGLink.util.createDagLinkFromB58EncodedHash(link)\\n  })\\n  return serializeDAGNode(node)\\n}\\n\\nexports.serializeDAGNode = serializeDAGNode\\nexports.serializeDAGNodeLike = serializeDAGNodeLike\\n\\n},{\\\"./dag-link/dagLink\\\":441,\\\"./dag.proto.js\\\":450,\\\"protons\\\":572}],455:[function(require,module,exports){\\n'use strict'\\n\\nconst protons = require('protons')\\nconst proto = protons(require('./dag.proto'))\\nconst DAGLink = require('./dag-link/dagLink')\\nconst DAGNode = require('./dag-node/dagNode')\\nconst { serializeDAGNodeLike } = require('./serialize')\\nconst genCid = require('./genCid')\\n\\nexports = module.exports\\n\\nexports.codec = genCid.codec\\nexports.defaultHashAlg = genCid.defaultHashAlg\\n\\n/**\\n * Calculate the CID of the binary blob.\\n *\\n * @param {Object} binaryBlob - Encoded IPLD Node\\n * @param {Object} [userOptions] - Options to create the CID\\n * @param {number} [userOptions.cidVersion=1] - CID version number\\n * @param {string} [UserOptions.hashAlg] - Defaults to the defaultHashAlg of the format\\n * @returns {Promise.<CID>}\\n */\\nconst cid = (binaryBlob, userOptions) => {\\n  return genCid.cid(binaryBlob, userOptions)\\n}\\n\\n/**\\n * Serialize internal representation into a binary PB block.\\n *\\n * @param {Object} node - Internal representation of a CBOR block\\n * @returns {Uint8Array} - The encoded binary representation\\n */\\nconst serialize = (node) => {\\n  if (DAGNode.isDAGNode(node)) {\\n    return node.serialize()\\n  } else {\\n    return serializeDAGNodeLike(node.Data, node.Links)\\n  }\\n}\\n\\n/**\\n * Deserialize PB block into the internal representation.\\n *\\n * @param {Uint8Array} buffer - Binary representation of a PB block\\n * @returns {Object} - An object that conforms to the IPLD Data Model\\n */\\nconst deserialize = (buffer) => {\\n  const pbn = proto.PBNode.decode(buffer)\\n\\n  const links = pbn.Links.map((link) => {\\n    return new DAGLink(link.Name, link.Tsize, link.Hash)\\n  })\\n\\n  const data = pbn.Data == null ? new Uint8Array(0) : pbn.Data\\n\\n  return new DAGNode(data, links, buffer.byteLength)\\n}\\n\\nexports.serialize = serialize\\nexports.deserialize = deserialize\\nexports.cid = cid\\n\\n},{\\\"./dag-link/dagLink\\\":441,\\\"./dag-node/dagNode\\\":445,\\\"./dag.proto\\\":450,\\\"./genCid\\\":451,\\\"./serialize\\\":454,\\\"protons\\\":572}],456:[function(require,module,exports){\\narguments[4][52][0].apply(exports,arguments)\\n},{\\\"dup\\\":52,\\\"multihashes\\\":526}],457:[function(require,module,exports){\\narguments[4][209][0].apply(exports,arguments)\\n},{\\\"./cid-util\\\":456,\\\"dup\\\":209,\\\"multibase\\\":501,\\\"multicodec\\\":513,\\\"multicodec/src/base-table.js\\\":511,\\\"multihashes\\\":526,\\\"uint8arrays/concat\\\":458,\\\"uint8arrays/equals\\\":459,\\\"uint8arrays/to-string\\\":460}],458:[function(require,module,exports){\\narguments[4][205][0].apply(exports,arguments)\\n},{\\\"dup\\\":205}],459:[function(require,module,exports){\\narguments[4][206][0].apply(exports,arguments)\\n},{\\\"dup\\\":206}],460:[function(require,module,exports){\\narguments[4][207][0].apply(exports,arguments)\\n},{\\\"dup\\\":207,\\\"multibase\\\":501,\\\"web-encoding\\\":595}],461:[function(require,module,exports){\\n'use strict'\\nconst CID = require('cids')\\nconst multihashing = require('multihashing-async')\\nconst multicodec = require('multicodec')\\n\\n// binary resolver\\nmodule.exports = {\\n  codec: multicodec.RAW,\\n  defaultHashAlg: multicodec.SHA2_256,\\n  resolver: {\\n    /**\\n     * Resolves a path within a Raw block.\\n     *\\n     * Always returns the raw data as value without any remainderPath.\\n     *\\n     * @param {Buffer} binaryBlob - Binary representation of a PB block\\n     * @param {string} [path='/'] - Path that should be resolved.  Must be '/' or an exception is thrown\\n     * @returns {Object} result - Result of the path it it was resolved successfully\\n     * @returns {*} result.value - The raw data\\n     * @returns {string} result.remainderPath - An empty string\\n     */\\n    resolve: (binaryBlob, path) => {\\n      if (path !== '/') {\\n        throw new Error('Only the root path / may be resolved')\\n      }\\n\\n      return {\\n        value: binaryBlob,\\n        remainderPath: ''\\n      }\\n    },\\n    /**\\n     * Return all available paths of a block.\\n     *\\n     * @generator\\n     * @param {Buffer} binaryBlob - The raw data\\n     * @returns {Object} - Finished generator with `done: true`\\n     */\\n    tree: (binaryBlob) => {\\n      return {\\n        done: true\\n      }\\n    }\\n  },\\n  util: {\\n    deserialize: (data) => {\\n      return data\\n    },\\n    serialize: (data) => {\\n      return data\\n    },\\n    /**\\n     * Calculate the CID of the binary blob.\\n     *\\n     * @param {Object} binaryBlob - Encoded IPLD Node\\n     * @param {Object} [userOptions] - Options to create the CID\\n     * @param {number} [userOptions.cidVersion=1] - CID version number\\n     * @param {string} [UserOptions.hashAlg] - Defaults to the defaultHashAlg of the format\\n     * @returns {Promise.<CID>}\\n     */\\n    cid: async (binaryBlob, userOptions) => {\\n      const defaultOptions = { cidVersion: 1, hashAlg: module.exports.defaultHashAlg }\\n      const options = Object.assign(defaultOptions, userOptions)\\n\\n      const multihash = await multihashing(binaryBlob, options.hashAlg)\\n      const codecName = multicodec.print[module.exports.codec]\\n      const cid = new CID(options.cidVersion, codecName, multihash)\\n\\n      return cid\\n    }\\n  }\\n}\\n\\n},{\\\"cids\\\":457,\\\"multicodec\\\":513,\\\"multihashing-async\\\":532}],462:[function(require,module,exports){\\nvar Node = require('./lib/node')\\n\\nmodule.exports = isCircular\\n\\n/**\\n * checks whether the object is circular\\n * @param  {object}  obj - object to check circularity for\\n * @return {Boolean} true if obj is circular, false if it is not\\n */\\nfunction isCircular (obj) {\\n  if (!(obj instanceof Object)) {\\n    throw new TypeError('\\\"obj\\\" must be an object (or inherit from it)')\\n  }\\n  return _isCircular(obj)\\n}\\n\\n/**\\n * @private\\n * checks whether the object is circular\\n * @param  {object}  obj - object to check circularity for\\n * @param  {Node}    parentList - linked-list that contains all the object's parents\\n * @return {Boolean} true if obj is circular, false if it is not\\n */\\nfunction _isCircular (obj, parentList) {\\n  parentList = new Node(obj, parentList)\\n\\n  // breadth-first search for circular object\\n  for (var key in obj) {\\n    var val = obj[key]\\n    if (val instanceof Object) {\\n      if (parentList.contains(val) || _isCircular(val, parentList)) {\\n        return true\\n      }\\n    }\\n  }\\n\\n  return false\\n}\\n\\n},{\\\"./lib/node\\\":463}],463:[function(require,module,exports){\\nmodule.exports = Node\\n\\n/**\\n * a linked-list node\\n * @class\\n * @param {any} value - node's value\\n * @param {Node} next - next node\\n */\\nfunction Node (value, next) {\\n  this.value = value\\n  this.next = next\\n}\\n\\n/**\\n * checks if this node or any of its children has the value\\n * @param {any} value - value to check if linked-list contains\\n * @return {boolean} true if the list contains the value; false if not\\n */\\nNode.prototype.contains = function (value) {\\n  var cursor = this\\n\\n  while (cursor) {\\n    if (cursor.value === value) return true\\n    cursor = cursor.next\\n  }\\n\\n  return false\\n}\\n\\n},{}],464:[function(require,module,exports){\\n(function (process){(function (){\\n// https://github.com/electron/electron/issues/2288\\nfunction isElectron() {\\n    // Renderer process\\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\\n        return true;\\n    }\\n\\n    // Main process\\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\\n        return true;\\n    }\\n\\n    // Detect the user agent when the `nodeIntegration` option is set to true\\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\\n        return true;\\n    }\\n\\n    return false;\\n}\\n\\nmodule.exports = isElectron;\\n\\n}).call(this)}).call(this,require('_process'))\\n},{\\\"_process\\\":546}],465:[function(require,module,exports){\\n'use strict';\\nconst ipRegex = require('ip-regex');\\n\\nconst isIp = string => ipRegex({exact: true}).test(string);\\nisIp.v4 = string => ipRegex.v4({exact: true}).test(string);\\nisIp.v6 = string => ipRegex.v6({exact: true}).test(string);\\nisIp.version = string => isIp(string) ? (isIp.v4(string) ? 4 : 6) : undefined;\\n\\nmodule.exports = isIp;\\n\\n},{\\\"ip-regex\\\":204}],466:[function(require,module,exports){\\n'use strict';\\n\\nmodule.exports = value => {\\n\\tif (Object.prototype.toString.call(value) !== '[object Object]') {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tconst prototype = Object.getPrototypeOf(value);\\n\\treturn prototype === null || prototype === Object.prototype;\\n};\\n\\n},{}],467:[function(require,module,exports){\\n\\n'use strict';\\n\\nmodule.exports = {\\n    'RTLD_LAZY': 1,\\n    'RTLD_NOW': 2,\\n    'RTLD_GLOBAL': 256,\\n    'RTLD_LOCAL': 0,\\n    'RTLD_DEEPBIND': 8,\\n    'E2BIG': 7,\\n    'EACCES': 13,\\n    'EADDRINUSE': 98,\\n    'EADDRNOTAVAIL': 99,\\n    'EAFNOSUPPORT': 97,\\n    'EAGAIN': 11,\\n    'EALREADY': 114,\\n    'EBADF': 9,\\n    'EBADMSG': 74,\\n    'EBUSY': 16,\\n    'ECANCELED': 125,\\n    'ECHILD': 10,\\n    'ECONNABORTED': 103,\\n    'ECONNREFUSED': 111,\\n    'ECONNRESET': 104,\\n    'EDEADLK': 35,\\n    'EDESTADDRREQ': 89,\\n    'EDOM': 33,\\n    'EDQUOT': 122,\\n    'EEXIST': 17,\\n    'EFAULT': 14,\\n    'EFBIG': 27,\\n    'EHOSTUNREACH': 113,\\n    'EIDRM': 43,\\n    'EILSEQ': 84,\\n    'EINPROGRESS': 115,\\n    'EINTR': 4,\\n    'EINVAL': 22,\\n    'EIO': 5,\\n    'EISCONN': 106,\\n    'EISDIR': 21,\\n    'ELOOP': 40,\\n    'EMFILE': 24,\\n    'EMLINK': 31,\\n    'EMSGSIZE': 90,\\n    'EMULTIHOP': 72,\\n    'ENAMETOOLONG': 36,\\n    'ENETDOWN': 100,\\n    'ENETRESET': 102,\\n    'ENETUNREACH': 101,\\n    'ENFILE': 23,\\n    'ENOBUFS': 105,\\n    'ENODATA': 61,\\n    'ENODEV': 19,\\n    'ENOENT': 2,\\n    'ENOEXEC': 8,\\n    'ENOLCK': 37,\\n    'ENOLINK': 67,\\n    'ENOMEM': 12,\\n    'ENOMSG': 42,\\n    'ENOPROTOOPT': 92,\\n    'ENOSPC': 28,\\n    'ENOSR': 63,\\n    'ENOSTR': 60,\\n    'ENOSYS': 38,\\n    'ENOTCONN': 107,\\n    'ENOTDIR': 20,\\n    'ENOTEMPTY': 39,\\n    'ENOTSOCK': 88,\\n    'ENOTSUP': 95,\\n    'ENOTTY': 25,\\n    'ENXIO': 6,\\n    'EOPNOTSUPP': 95,\\n    'EOVERFLOW': 75,\\n    'EPERM': 1,\\n    'EPIPE': 32,\\n    'EPROTO': 71,\\n    'EPROTONOSUPPORT': 93,\\n    'EPROTOTYPE': 91,\\n    'ERANGE': 34,\\n    'EROFS': 30,\\n    'ESPIPE': 29,\\n    'ESRCH': 3,\\n    'ESTALE': 116,\\n    'ETIME': 62,\\n    'ETIMEDOUT': 110,\\n    'ETXTBSY': 26,\\n    'EWOULDBLOCK': 11,\\n    'EXDEV': 18,\\n    'PRIORITY_LOW': 19,\\n    'PRIORITY_BELOW_NORMAL': 10,\\n    'PRIORITY_NORMAL': 0,\\n    'PRIORITY_ABOVE_NORMAL': -7,\\n    'PRIORITY_HIGH': -14,\\n    'PRIORITY_HIGHEST': -20,\\n    'SIGHUP': 1,\\n    'SIGINT': 2,\\n    'SIGQUIT': 3,\\n    'SIGILL': 4,\\n    'SIGTRAP': 5,\\n    'SIGABRT': 6,\\n    'SIGIOT': 6,\\n    'SIGBUS': 7,\\n    'SIGFPE': 8,\\n    'SIGKILL': 9,\\n    'SIGUSR1': 10,\\n    'SIGSEGV': 11,\\n    'SIGUSR2': 12,\\n    'SIGPIPE': 13,\\n    'SIGALRM': 14,\\n    'SIGTERM': 15,\\n    'SIGCHLD': 17,\\n    'SIGSTKFLT': 16,\\n    'SIGCONT': 18,\\n    'SIGSTOP': 19,\\n    'SIGTSTP': 20,\\n    'SIGTTIN': 21,\\n    'SIGTTOU': 22,\\n    'SIGURG': 23,\\n    'SIGXCPU': 24,\\n    'SIGXFSZ': 25,\\n    'SIGVTALRM': 26,\\n    'SIGPROF': 27,\\n    'SIGWINCH': 28,\\n    'SIGIO': 29,\\n    'SIGPOLL': 29,\\n    'SIGPWR': 30,\\n    'SIGSYS': 31,\\n    'SIGUNUSED': 31,\\n    'UV_FS_SYMLINK_DIR': 1,\\n    'UV_FS_SYMLINK_JUNCTION': 2,\\n    'O_RDONLY': 0,\\n    'O_WRONLY': 1,\\n    'O_RDWR': 2,\\n    'UV_DIRENT_UNKNOWN': 0,\\n    'UV_DIRENT_FILE': 1,\\n    'UV_DIRENT_DIR': 2,\\n    'UV_DIRENT_LINK': 3,\\n    'UV_DIRENT_FIFO': 4,\\n    'UV_DIRENT_SOCKET': 5,\\n    'UV_DIRENT_CHAR': 6,\\n    'UV_DIRENT_BLOCK': 7,\\n    'S_IFMT': 61440,\\n    'S_IFREG': 32768,\\n    'S_IFDIR': 16384,\\n    'S_IFCHR': 8192,\\n    'S_IFBLK': 24576,\\n    'S_IFIFO': 4096,\\n    'S_IFLNK': 40960,\\n    'S_IFSOCK': 49152,\\n    'O_CREAT': 64,\\n    'O_EXCL': 128,\\n    'UV_FS_O_FILEMAP': 0,\\n    'O_NOCTTY': 256,\\n    'O_TRUNC': 512,\\n    'O_APPEND': 1024,\\n    'O_DIRECTORY': 65536,\\n    'O_NOATIME': 262144,\\n    'O_NOFOLLOW': 131072,\\n    'O_SYNC': 1052672,\\n    'O_DSYNC': 4096,\\n    'O_DIRECT': 16384,\\n    'O_NONBLOCK': 2048,\\n    'S_IRWXU': 448,\\n    'S_IRUSR': 256,\\n    'S_IWUSR': 128,\\n    'S_IXUSR': 64,\\n    'S_IRWXG': 56,\\n    'S_IRGRP': 32,\\n    'S_IWGRP': 16,\\n    'S_IXGRP': 8,\\n    'S_IRWXO': 7,\\n    'S_IROTH': 4,\\n    'S_IWOTH': 2,\\n    'S_IXOTH': 1,\\n    'F_OK': 0,\\n    'R_OK': 4,\\n    'W_OK': 2,\\n    'X_OK': 1,\\n    'UV_FS_COPYFILE_EXCL': 1,\\n    'COPYFILE_EXCL': 1,\\n    'UV_FS_COPYFILE_FICLONE': 2,\\n    'COPYFILE_FICLONE': 2,\\n    'UV_FS_COPYFILE_FICLONE_FORCE': 4,\\n    'COPYFILE_FICLONE_FORCE': 4,\\n    'OPENSSL_VERSION_NUMBER': 269488287,\\n    'SSL_OP_ALL': 2147485780,\\n    'SSL_OP_ALLOW_NO_DHE_KEX': 1024,\\n    'SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION': 262144,\\n    'SSL_OP_CIPHER_SERVER_PREFERENCE': 4194304,\\n    'SSL_OP_CISCO_ANYCONNECT': 32768,\\n    'SSL_OP_COOKIE_EXCHANGE': 8192,\\n    'SSL_OP_CRYPTOPRO_TLSEXT_BUG': 2147483648,\\n    'SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS': 2048,\\n    'SSL_OP_EPHEMERAL_RSA': 0,\\n    'SSL_OP_LEGACY_SERVER_CONNECT': 4,\\n    'SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER': 0,\\n    'SSL_OP_MICROSOFT_SESS_ID_BUG': 0,\\n    'SSL_OP_MSIE_SSLV2_RSA_PADDING': 0,\\n    'SSL_OP_NETSCAPE_CA_DN_BUG': 0,\\n    'SSL_OP_NETSCAPE_CHALLENGE_BUG': 0,\\n    'SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG': 0,\\n    'SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG': 0,\\n    'SSL_OP_NO_COMPRESSION': 131072,\\n    'SSL_OP_NO_ENCRYPT_THEN_MAC': 524288,\\n    'SSL_OP_NO_QUERY_MTU': 4096,\\n    'SSL_OP_NO_RENEGOTIATION': 1073741824,\\n    'SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION': 65536,\\n    'SSL_OP_NO_SSLv2': 0,\\n    'SSL_OP_NO_SSLv3': 33554432,\\n    'SSL_OP_NO_TICKET': 16384,\\n    'SSL_OP_NO_TLSv1': 67108864,\\n    'SSL_OP_NO_TLSv1_1': 268435456,\\n    'SSL_OP_NO_TLSv1_2': 134217728,\\n    'SSL_OP_NO_TLSv1_3': 536870912,\\n    'SSL_OP_PKCS1_CHECK_1': 0,\\n    'SSL_OP_PKCS1_CHECK_2': 0,\\n    'SSL_OP_PRIORITIZE_CHACHA': 2097152,\\n    'SSL_OP_SINGLE_DH_USE': 0,\\n    'SSL_OP_SINGLE_ECDH_USE': 0,\\n    'SSL_OP_SSLEAY_080_CLIENT_DH_BUG': 0,\\n    'SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG': 0,\\n    'SSL_OP_TLS_BLOCK_PADDING_BUG': 0,\\n    'SSL_OP_TLS_D5_BUG': 0,\\n    'SSL_OP_TLS_ROLLBACK_BUG': 8388608,\\n    'ENGINE_METHOD_RSA': 1,\\n    'ENGINE_METHOD_DSA': 2,\\n    'ENGINE_METHOD_DH': 4,\\n    'ENGINE_METHOD_RAND': 8,\\n    'ENGINE_METHOD_EC': 2048,\\n    'ENGINE_METHOD_CIPHERS': 64,\\n    'ENGINE_METHOD_DIGESTS': 128,\\n    'ENGINE_METHOD_PKEY_METHS': 512,\\n    'ENGINE_METHOD_PKEY_ASN1_METHS': 1024,\\n    'ENGINE_METHOD_ALL': 65535,\\n    'ENGINE_METHOD_NONE': 0,\\n    'DH_CHECK_P_NOT_SAFE_PRIME': 2,\\n    'DH_CHECK_P_NOT_PRIME': 1,\\n    'DH_UNABLE_TO_CHECK_GENERATOR': 4,\\n    'DH_NOT_SUITABLE_GENERATOR': 8,\\n    'ALPN_ENABLED': 1,\\n    'RSA_PKCS1_PADDING': 1,\\n    'RSA_SSLV23_PADDING': 2,\\n    'RSA_NO_PADDING': 3,\\n    'RSA_PKCS1_OAEP_PADDING': 4,\\n    'RSA_X931_PADDING': 5,\\n    'RSA_PKCS1_PSS_PADDING': 6,\\n    'RSA_PSS_SALTLEN_DIGEST': -1,\\n    'RSA_PSS_SALTLEN_MAX_SIGN': -2,\\n    'RSA_PSS_SALTLEN_AUTO': -2,\\n    'defaultCoreCipherList': 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\\n    'TLS1_VERSION': 769,\\n    'TLS1_1_VERSION': 770,\\n    'TLS1_2_VERSION': 771,\\n    'TLS1_3_VERSION': 772,\\n    'POINT_CONVERSION_COMPRESSED': 2,\\n    'POINT_CONVERSION_UNCOMPRESSED': 4,\\n    'POINT_CONVERSION_HYBRID': 6\\n};\\n\\n\\n},{}],468:[function(require,module,exports){\\narguments[4][25][0].apply(exports,arguments)\\n},{\\\"./src/relative\\\":469,\\\"./src/url\\\":470,\\\"dup\\\":25}],469:[function(require,module,exports){\\narguments[4][26][0].apply(exports,arguments)\\n},{\\\"./url\\\":470,\\\"dup\\\":26}],470:[function(require,module,exports){\\n'use strict';\\n\\nconst defaultBase = self.location && self.location.protocol + '//' + self.location.host;\\nconst URL = self.URL;\\n\\nclass URLWithLegacySupport {\\n    constructor(url = '', base = defaultBase) {\\n        this.super = new URL(url, base);\\n        this.path = this.pathname + this.search;\\n        this.auth =\\n            this.username && this.password ?\\n                this.username + ':' + this.password :\\n                null;\\n\\n        this.query =\\n            this.search && this.search.startsWith('?') ?\\n                this.search.slice(1) :\\n                null;\\n    }\\n\\n    get hash() {\\n        return this.super.hash;\\n    }\\n    get host() {\\n        return this.super.host;\\n    }\\n    get hostname() {\\n        return this.super.hostname;\\n    }\\n    get href() {\\n        return this.super.href;\\n    }\\n    get origin() {\\n        return this.super.origin;\\n    }\\n    get password() {\\n        return this.super.password;\\n    }\\n    get pathname() {\\n        return this.super.pathname;\\n    }\\n    get port() {\\n        return this.super.port;\\n    }\\n    get protocol() {\\n        return this.super.protocol;\\n    }\\n    get search() {\\n        return this.super.search;\\n    }\\n    get searchParams() {\\n        return this.super.searchParams;\\n    }\\n    get username() {\\n        return this.super.username;\\n    }\\n\\n    set hash(hash) {\\n        this.super.hash = hash;\\n    }\\n    set host(host) {\\n        this.super.host = host;\\n    }\\n    set hostname(hostname) {\\n        this.super.hostname = hostname;\\n    }\\n    set href(href) {\\n        this.super.href = href;\\n    }\\n    set origin(origin) {\\n        this.super.origin = origin;\\n    }\\n    set password(password) {\\n        this.super.password = password;\\n    }\\n    set pathname(pathname) {\\n        this.super.pathname = pathname;\\n    }\\n    set port(port) {\\n        this.super.port = port;\\n    }\\n    set protocol(protocol) {\\n        this.super.protocol = protocol;\\n    }\\n    set search(search) {\\n        this.super.search = search;\\n    }\\n    set searchParams(searchParams) {\\n        this.super.searchParams = searchParams;\\n    }\\n    set username(username) {\\n        this.super.username = username;\\n    }\\n\\n    createObjectURL(o) {\\n        return this.super.createObjectURL(o);\\n    }\\n    revokeObjectURL(o) {\\n        this.super.revokeObjectURL(o);\\n    }\\n    toJSON() {\\n        return this.super.toJSON();\\n    }\\n    toString() {\\n        return this.super.toString();\\n    }\\n    format() {\\n        return this.toString();\\n    }\\n}\\n\\nfunction format(obj) {\\n    if (typeof obj === 'string') {\\n        const url = new URL(obj);\\n\\n        return url.toString();\\n    }\\n\\n    if (!(obj instanceof URL)) {\\n        const userPass =\\n            obj.username && obj.password ?\\n                `${obj.username}:${obj.password}@` :\\n                '';\\n        const auth = obj.auth ? obj.auth + '@' : '';\\n        const port = obj.port ? ':' + obj.port : '';\\n        const protocol = obj.protocol ? obj.protocol + '//' : '';\\n        const host = obj.host || '';\\n        const hostname = obj.hostname || '';\\n        const search = obj.search || (obj.query ? '?' + obj.query : '');\\n        const hash = obj.hash || '';\\n        const pathname = obj.pathname || '';\\n        const path = obj.path || pathname + search;\\n\\n        return `${protocol}${userPass || auth}${host ||\\n            hostname + port}${path}${hash}`;\\n    }\\n}\\n\\nmodule.exports = {\\n    URLWithLegacySupport,\\n    URLSearchParams: self.URLSearchParams,\\n    defaultBase,\\n    format\\n};\\n\\n},{}],471:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * Collects all values from an (async) iterable into an array and returns it.\\n *\\n * @template T\\n * @param {AsyncIterable<T>|Iterable<T>} source\\n * @returns {Promise<T[]>}\\n */\\nconst all = async (source) => {\\n  const arr = []\\n\\n  for await (const entry of source) {\\n    arr.push(entry)\\n  }\\n\\n  return arr\\n}\\n\\nmodule.exports = all\\n\\n},{}],472:[function(require,module,exports){\\nconst BufferList = require('bl/BufferList')\\n\\nconst TypeDefault = {\\n  string: () => '',\\n  buffer: () => BufferList()\\n}\\n\\nmodule.exports = async (source, options) => {\\n  options = options || {}\\n\\n  if (options.type && !TypeDefault[options.type]) {\\n    throw new Error(`invalid type \\\"${options.type}\\\"`)\\n  }\\n\\n  let res, type\\n  for await (const chunk of source) {\\n    if (!res) {\\n      type = options.type || typeof chunk === 'string' ? 'string' : 'buffer'\\n      res = TypeDefault[type]()\\n    }\\n\\n    if (type === 'string') {\\n      res += chunk\\n    } else {\\n      res.append(chunk)\\n    }\\n  }\\n\\n  return res || TypeDefault[options.type || 'buffer']()\\n}\\n\\n},{\\\"bl/BufferList\\\":20}],473:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * Returns the last item of an (async) iterable, unless empty, in which case\\n * return `void`.\\n *\\n * @template T\\n * @param {AsyncIterable<T>|Iterable<T>} source\\n * @returns {Promise<T|void>}\\n */\\nconst last = async (source) => {\\n  /** @type {T|void} */\\n  let res\\n\\n  for await (const entry of source) {\\n    res = entry\\n  }\\n\\n  return res\\n}\\n\\nmodule.exports = last\\n\\n},{}],474:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * Takes an (async) iterable and returns one with each item mapped by the passed\\n * function.\\n *\\n * @template I,O\\n * @param {AsyncIterable<I>|Iterable<I>} source\\n * @param {function(I):O|Promise<O>} func\\n * @returns {AsyncIterable<O>}\\n */\\nconst map = async function * (source, func) {\\n  for await (const val of source) {\\n    yield func(val)\\n  }\\n}\\n\\nmodule.exports = map\\n\\n},{}],475:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * @template T\\n * @typedef {Object} Peek\\n * @property {() => IteratorResult<T, void>} peek\\n */\\n\\n/**\\n * @template T\\n * @typedef {Object} AsyncPeek\\n * @property {() => Promise<IteratorResult<T, void>>} peek\\n */\\n\\n/**\\n * @template T\\n * @typedef {Object} Push\\n * @property {(value:T) => void} push\\n */\\n\\n/**\\n * @template T\\n * @typedef {Iterable<T> & Peek<T> & Push<T> & Iterator<T>} Peekable<T>\\n */\\n\\n/**\\n * @template T\\n * @typedef {AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>} AsyncPeekable<T>\\n */\\n\\n/**\\n * @template {Iterable<any> | AsyncIterable<any>} I\\n * @param {I} iterable\\n * @returns {I extends Iterable<infer T>\\n *  ? Peekable<T>\\n *  : I extends AsyncIterable<infer T>\\n *  ? AsyncPeekable<T>\\n *  : never\\n * }\\n */\\nfunction peekableIterator (iterable) {\\n  // @ts-ignore\\n  const [iterator, symbol] = iterable[Symbol.asyncIterator]\\n    // @ts-ignore\\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\\n    // @ts-ignore\\n    : [iterable[Symbol.iterator](), Symbol.iterator]\\n\\n  /** @type {any[]} */\\n  const queue = []\\n\\n  // @ts-ignore\\n  return {\\n    peek: () => {\\n      return iterator.next()\\n    },\\n    push: (value) => {\\n      queue.push(value)\\n    },\\n    next: () => {\\n      if (queue.length) {\\n        return {\\n          done: false,\\n          value: queue.shift()\\n        }\\n      }\\n\\n      return iterator.next()\\n    },\\n    [symbol] () {\\n      return this\\n    }\\n  }\\n}\\n\\nmodule.exports = peekableIterator\\n\\n},{}],476:[function(require,module,exports){\\nconst BufferList = require('bl/BufferList')\\n\\nmodule.exports = source => {\\n  const reader = (async function * () {\\n    let bytes = yield // Allows us to receive 8 when reader.next(8) is called\\n    let bl = new BufferList()\\n\\n    for await (const chunk of source) {\\n      if (!bytes) {\\n        bytes = yield bl.append(chunk)\\n        bl = new BufferList()\\n        continue\\n      }\\n\\n      bl.append(chunk)\\n\\n      while (bl.length >= bytes) {\\n        const data = bl.shallowSlice(0, bytes)\\n        bl.consume(bytes)\\n        bytes = yield data\\n\\n        // If we no longer want a specific byte length, we yield the rest now\\n        if (!bytes) {\\n          if (bl.length) {\\n            bytes = yield bl\\n            bl = new BufferList()\\n          }\\n          break // bytes is null and/or no more buffer to yield\\n        }\\n      }\\n    }\\n\\n    // Consumer wants more bytes but the source has ended and our buffer\\n    // is not big enough to satisfy.\\n    if (bytes) {\\n      throw Object.assign(\\n        new Error(`stream ended before ${bytes} bytes became available`),\\n        { code: 'ERR_UNDER_READ', buffer: bl }\\n      )\\n    }\\n  })()\\n\\n  reader.next()\\n  return reader\\n}\\n\\n},{\\\"bl/BufferList\\\":20}],477:[function(require,module,exports){\\nconst { Buffer } = require('buffer')\\nconst BufferList = require('bl/BufferList')\\n\\nvar ZERO_OFFSET = '0'.charCodeAt(0)\\nvar USTAR_MAGIC = Buffer.from('ustar\\\\x00', 'binary')\\nvar GNU_MAGIC = Buffer.from('ustar\\\\x20', 'binary')\\nvar GNU_VER = Buffer.from('\\\\x20\\\\x00', 'binary')\\nvar MAGIC_OFFSET = 257\\nvar VERSION_OFFSET = 263\\n\\nvar clamp = function (index, len, defaultValue) {\\n  if (typeof index !== 'number') return defaultValue\\n  index = ~~index // Coerce to integer.\\n  if (index >= len) return len\\n  if (index >= 0) return index\\n  index += len\\n  if (index >= 0) return index\\n  return 0\\n}\\n\\nvar toType = function (flag) {\\n  switch (flag) {\\n    case 0:\\n      return 'file'\\n    case 1:\\n      return 'link'\\n    case 2:\\n      return 'symlink'\\n    case 3:\\n      return 'character-device'\\n    case 4:\\n      return 'block-device'\\n    case 5:\\n      return 'directory'\\n    case 6:\\n      return 'fifo'\\n    case 7:\\n      return 'contiguous-file'\\n    case 72:\\n      return 'pax-header'\\n    case 55:\\n      return 'pax-global-header'\\n    case 27:\\n      return 'gnu-long-link-path'\\n    case 28:\\n    case 30:\\n      return 'gnu-long-path'\\n  }\\n\\n  return null\\n}\\n\\nvar indexOf = function (block, num, offset, end) {\\n  for (; offset < end; offset++) {\\n    if (block.get(offset) === num) return offset\\n  }\\n  return end\\n}\\n\\nvar cksum = function (block) {\\n  var sum = 8 * 32\\n  for (var i = 0; i < 148; i++) sum += block.get(i)\\n  for (var j = 156; j < 512; j++) sum += block.get(j)\\n  return sum\\n}\\n\\n/* Copied from the node-tar repo and modified to meet\\n * tar-stream coding standard.\\n *\\n * Source: https://github.com/npm/node-tar/blob/51b6627a1f357d2eb433e7378e5f05e83b7aa6cd/lib/header.js#L349\\n */\\nfunction parse256 (buf) {\\n  // first byte MUST be either 80 or FF\\n  // 80 for positive, FF for 2's comp\\n  var positive\\n  if (buf.get(0) === 0x80) positive = true\\n  else if (buf.get(0) === 0xFF) positive = false\\n  else return null\\n\\n  // build up a base-256 tuple from the least sig to the highest\\n  var zero = false\\n  var tuple = []\\n  for (var i = buf.length - 1; i > 0; i--) {\\n    var byte = buf.get(i)\\n    if (positive) tuple.push(byte)\\n    else if (zero && byte === 0) tuple.push(0)\\n    else if (zero) {\\n      zero = false\\n      tuple.push(0x100 - byte)\\n    } else tuple.push(0xFF - byte)\\n  }\\n\\n  var sum = 0\\n  var l = tuple.length\\n  for (i = 0; i < l; i++) {\\n    sum += tuple[i] * Math.pow(256, i)\\n  }\\n\\n  return positive ? sum : -1 * sum\\n}\\n\\nvar decodeOct = function (val, offset, length) {\\n  val = val.shallowSlice(offset, offset + length)\\n  offset = 0\\n\\n  // If prefixed with 0x80 then parse as a base-256 integer\\n  if (val.get(offset) & 0x80) {\\n    return parse256(val)\\n  } else {\\n    // Older versions of tar can prefix with spaces\\n    while (offset < val.length && val.get(offset) === 32) offset++\\n    var end = clamp(indexOf(val, 32, offset, val.length), val.length, val.length)\\n    while (offset < end && val.get(offset) === 0) offset++\\n    if (end === offset) return 0\\n    return parseInt(val.shallowSlice(offset, end).toString(), 8)\\n  }\\n}\\n\\nvar decodeStr = function (val, offset, length, encoding) {\\n  return val.shallowSlice(offset, indexOf(val, 0, offset, offset + length)).toString(encoding)\\n}\\n\\nexports.decodeLongPath = function (buf, encoding) {\\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf)\\n  return decodeStr(buf, 0, buf.length, encoding)\\n}\\n\\nexports.decodePax = function (buf) {\\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf)\\n  var result = {}\\n\\n  while (buf.length) {\\n    var i = 0\\n    while (i < buf.length && buf.get(i) !== 32) i++\\n    var len = parseInt(buf.shallowSlice(0, i).toString(), 10)\\n    if (!len) return result\\n\\n    var b = buf.shallowSlice(i + 1, len - 1).toString()\\n    var keyIndex = b.indexOf('=')\\n    if (keyIndex === -1) return result\\n    result[b.slice(0, keyIndex)] = b.slice(keyIndex + 1)\\n\\n    buf = buf.shallowSlice(len)\\n  }\\n\\n  return result\\n}\\n\\nexports.decode = function (buf, filenameEncoding) {\\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf)\\n  var typeflag = buf.get(156) === 0 ? 0 : buf.get(156) - ZERO_OFFSET\\n\\n  var name = decodeStr(buf, 0, 100, filenameEncoding)\\n  var mode = decodeOct(buf, 100, 8)\\n  var uid = decodeOct(buf, 108, 8)\\n  var gid = decodeOct(buf, 116, 8)\\n  var size = decodeOct(buf, 124, 12)\\n  var mtime = decodeOct(buf, 136, 12)\\n  var type = toType(typeflag)\\n  var linkname = buf.get(157) === 0 ? null : decodeStr(buf, 157, 100, filenameEncoding)\\n  var uname = decodeStr(buf, 265, 32)\\n  var gname = decodeStr(buf, 297, 32)\\n  var devmajor = decodeOct(buf, 329, 8)\\n  var devminor = decodeOct(buf, 337, 8)\\n\\n  var c = cksum(buf)\\n\\n  // checksum is still initial value if header was null.\\n  if (c === 8 * 32) return null\\n\\n  // valid checksum\\n  if (c !== decodeOct(buf, 148, 8)) throw new Error('Invalid tar header. Maybe the tar is corrupted or it needs to be gunzipped?')\\n\\n  if (USTAR_MAGIC.compare(buf.slice(MAGIC_OFFSET, MAGIC_OFFSET + 6)) === 0) {\\n    // ustar (posix) format.\\n    // prepend prefix, if present.\\n    if (buf.get(345)) name = decodeStr(buf, 345, 155, filenameEncoding) + '/' + name\\n  } else if (GNU_MAGIC.compare(buf.slice(MAGIC_OFFSET, MAGIC_OFFSET + 6)) === 0 &&\\n             GNU_VER.compare(buf.slice(VERSION_OFFSET, VERSION_OFFSET + 2)) === 0) {\\n    // 'gnu'/'oldgnu' format. Similar to ustar, but has support for incremental and\\n    // multi-volume tarballs.\\n  } else {\\n    throw new Error('Invalid tar header: unknown format.')\\n  }\\n\\n  // to support old tar versions that use trailing / to indicate dirs\\n  if (typeflag === 0 && name && name[name.length - 1] === '/') typeflag = 5\\n\\n  return {\\n    name: name,\\n    mode: mode,\\n    uid: uid,\\n    gid: gid,\\n    size: size,\\n    mtime: new Date(1000 * mtime),\\n    type: type,\\n    linkname: linkname,\\n    uname: uname,\\n    gname: gname,\\n    devmajor: devmajor,\\n    devminor: devminor\\n  }\\n}\\n\\n},{\\\"bl/BufferList\\\":20,\\\"buffer\\\":39}],478:[function(require,module,exports){\\nconst defer = require('p-defer')\\nconst Headers = require('./extract-headers')\\nconst LteReader = require('./lte-reader')\\n\\nfunction getPadding (size) {\\n  size &= 511\\n  return size && 512 - size\\n}\\n\\nasync function discardPadding (reader, size) {\\n  const overflow = getPadding(size)\\n  if (overflow) await reader.next(overflow)\\n}\\n\\nmodule.exports = options => {\\n  options = options || {}\\n  options.highWaterMark = options.highWaterMark || 1024 * 16\\n\\n  return source => (async function * () {\\n    const reader = LteReader(source)\\n    let gnuLongPath, gnuLongLinkPath, paxGlobal, pax\\n\\n    try {\\n      while (true) {\\n        let headerBytes\\n        try {\\n          const { done, value } = await reader.next(512)\\n          if (done) return\\n          headerBytes = value\\n        } catch (err) {\\n          // Is ok, this is the end of the stream!\\n          if (err.code === 'ERR_UNDER_READ') return\\n          throw err\\n        }\\n\\n        const header = Headers.decode(headerBytes, options.filenameEncoding)\\n        if (!header) continue\\n\\n        if (header.type === 'gnu-long-path') {\\n          const { done, value: gnuLongPathBytes } = await reader.next(header.size)\\n          if (done) return\\n          gnuLongPath = Headers.decodeLongPath(gnuLongPathBytes, options.filenameEncoding)\\n          await discardPadding(reader, header.size)\\n          continue\\n        }\\n\\n        if (header.type === 'gnu-long-link-path') {\\n          const { done, value: gnuLongLinkPathBytes } = await reader.next(header.size)\\n          if (done) return\\n          gnuLongLinkPath = Headers.decodeLongPath(gnuLongLinkPathBytes, options.filenameEncoding)\\n          await discardPadding(reader, header.size)\\n          continue\\n        }\\n\\n        if (header.type === 'pax-global-header') {\\n          const { done, value: paxGlobalBytes } = await reader.next(header.size)\\n          if (done) return\\n          paxGlobal = Headers.decodePax(paxGlobalBytes, options.filenameEncoding)\\n          await discardPadding(reader, header.size)\\n          continue\\n        }\\n\\n        if (header.type === 'pax-header') {\\n          const { done, value: paxBytes } = await reader.next(header.size)\\n          if (done) return\\n          pax = Headers.decodePax(paxBytes, options.filenameEncoding)\\n          if (paxGlobal) pax = { ...paxGlobal, ...pax }\\n          await discardPadding(reader, header.size)\\n          continue\\n        }\\n\\n        if (gnuLongPath) {\\n          header.name = gnuLongPath\\n          gnuLongPath = null\\n        }\\n\\n        if (gnuLongLinkPath) {\\n          header.linkname = gnuLongLinkPath\\n          gnuLongLinkPath = null\\n        }\\n\\n        if (pax) {\\n          if (pax.path) header.name = pax.path\\n          if (pax.linkpath) header.linkname = pax.linkpath\\n          if (pax.size) header.size = parseInt(pax.size, 10)\\n          header.pax = pax\\n          pax = null\\n        }\\n\\n        if (!header.size || header.type === 'directory') {\\n          yield { header, body: (async function * () {})() }\\n          continue\\n        }\\n\\n        let bytesRemaining = header.size\\n        const bodyConsumed = defer()\\n\\n        // Prefetch the first chunk.\\n        // This allows us to stream entries for small files from the tar without\\n        // explicitly streaming the body of each.\\n        const firstChunk = await reader.nextLte(Math.min(bytesRemaining, options.highWaterMark))\\n        bytesRemaining -= firstChunk.value.length\\n\\n        if (!bytesRemaining) bodyConsumed.resolve()\\n\\n        const body = (async function * () {\\n          try {\\n            yield firstChunk.value\\n\\n            while (bytesRemaining) {\\n              const { done, value } = await reader.nextLte(bytesRemaining)\\n              if (done) {\\n                bytesRemaining = 0\\n                return\\n              }\\n              bytesRemaining -= value.length\\n              yield value\\n            }\\n          } finally {\\n            bodyConsumed.resolve()\\n          }\\n        })()\\n\\n        yield { header, body }\\n\\n        // Wait for the body to be consumed\\n        await bodyConsumed.promise\\n\\n        // Incase the body was not consumed entirely...\\n        if (bytesRemaining) {\\n          for await (const _ of body) {} // eslint-disable-line no-unused-vars\\n        }\\n\\n        await discardPadding(reader, header.size)\\n      }\\n    } finally {\\n      await reader.return()\\n    }\\n  })()\\n}\\n\\n},{\\\"./extract-headers\\\":477,\\\"./lte-reader\\\":480,\\\"p-defer\\\":543}],479:[function(require,module,exports){\\nexports.extract = require('./extract')\\nexports.pack = require('./pack')\\n\\n},{\\\"./extract\\\":478,\\\"./pack\\\":482}],480:[function(require,module,exports){\\nconst BufferList = require('bl/BufferList')\\nconst Reader = require('it-reader')\\n\\nmodule.exports = function LteReader (source) {\\n  const reader = Reader(source)\\n  let overflow\\n  const lteReader = {\\n    [Symbol.asyncIterator]: () => lteReader,\\n    async next (bytes) {\\n      if (overflow) {\\n        let value\\n        if (bytes == null || overflow.length === bytes) {\\n          value = overflow\\n          overflow = null\\n        } else if (overflow.length > bytes) {\\n          value = overflow.shallowSlice(0, bytes)\\n          overflow = overflow.shallowSlice(bytes)\\n        } else if (overflow.length < bytes) {\\n          const { value: nextValue, done } = await reader.next(bytes - overflow.length)\\n          if (done) {\\n            throw Object.assign(\\n              new Error(`stream ended before ${bytes - overflow.length} bytes became available`),\\n              { code: 'ERR_UNDER_READ' }\\n            )\\n          }\\n          value = new BufferList([overflow, nextValue])\\n          overflow = null\\n        }\\n        return { value }\\n      }\\n      return reader.next(bytes)\\n    },\\n    async nextLte (bytes) {\\n      let { done, value } = await lteReader.next()\\n      if (done) return { done }\\n      if (value.length <= bytes) return { value }\\n      value = BufferList.isBufferList(value) ? value : new BufferList(value)\\n      if (overflow) {\\n        overflow.append(value.shallowSlice(bytes))\\n      } else {\\n        overflow = value.shallowSlice(bytes)\\n      }\\n      return { value: value.shallowSlice(0, bytes) }\\n    },\\n    return () {\\n      return reader.return()\\n    }\\n  }\\n  return lteReader\\n}\\n\\n},{\\\"bl/BufferList\\\":20,\\\"it-reader\\\":476}],481:[function(require,module,exports){\\nconst { Buffer } = require('buffer')\\n\\nvar alloc = Buffer.alloc\\n\\nvar ZEROS = '0000000000000000000'\\nvar SEVENS = '7777777777777777777'\\nvar ZERO_OFFSET = '0'.charCodeAt(0)\\nvar USTAR_MAGIC = Buffer.from('ustar\\\\x00', 'binary')\\nvar USTAR_VER = Buffer.from('00', 'binary')\\nvar MASK = parseInt('7777', 8)\\nvar MAGIC_OFFSET = 257\\nvar VERSION_OFFSET = 263\\n\\nvar toTypeflag = function (flag) {\\n  switch (flag) {\\n    case 'file':\\n      return 0\\n    case 'link':\\n      return 1\\n    case 'symlink':\\n      return 2\\n    case 'character-device':\\n      return 3\\n    case 'block-device':\\n      return 4\\n    case 'directory':\\n      return 5\\n    case 'fifo':\\n      return 6\\n    case 'contiguous-file':\\n      return 7\\n    case 'pax-header':\\n      return 72\\n  }\\n\\n  return 0\\n}\\n\\nvar cksum = function (block) {\\n  var sum = 8 * 32\\n  for (var i = 0; i < 148; i++) sum += block[i]\\n  for (var j = 156; j < 512; j++) sum += block[j]\\n  return sum\\n}\\n\\nvar encodeOct = function (val, n) {\\n  val = val.toString(8)\\n  if (val.length > n) return SEVENS.slice(0, n) + ' '\\n  else return ZEROS.slice(0, n - val.length) + val + ' '\\n}\\n\\nvar addLength = function (str) {\\n  var len = Buffer.byteLength(str)\\n  var digits = Math.floor(Math.log(len) / Math.log(10)) + 1\\n  if (len + digits >= Math.pow(10, digits)) digits++\\n\\n  return (len + digits) + str\\n}\\n\\nexports.encodePax = function (opts) { // TODO: encode more stuff in pax\\n  var result = ''\\n  if (opts.name) result += addLength(' path=' + opts.name + '\\\\n')\\n  if (opts.linkname) result += addLength(' linkpath=' + opts.linkname + '\\\\n')\\n  var pax = opts.pax\\n  if (pax) {\\n    for (var key in pax) {\\n      result += addLength(' ' + key + '=' + pax[key] + '\\\\n')\\n    }\\n  }\\n  return Buffer.from(result)\\n}\\n\\nexports.encode = function (opts) {\\n  var buf = alloc(512)\\n  var name = opts.name\\n  var prefix = ''\\n\\n  if (opts.typeflag === 5 && name[name.length - 1] !== '/') name += '/'\\n  if (Buffer.byteLength(name) !== name.length) return null // utf-8\\n\\n  while (Buffer.byteLength(name) > 100) {\\n    var i = name.indexOf('/')\\n    if (i === -1) return null\\n    prefix += prefix ? '/' + name.slice(0, i) : name.slice(0, i)\\n    name = name.slice(i + 1)\\n  }\\n\\n  if (Buffer.byteLength(name) > 100 || Buffer.byteLength(prefix) > 155) return null\\n  if (opts.linkname && Buffer.byteLength(opts.linkname) > 100) return null\\n\\n  buf.write(name)\\n  buf.write(encodeOct(opts.mode & MASK, 6), 100)\\n  buf.write(encodeOct(opts.uid, 6), 108)\\n  buf.write(encodeOct(opts.gid, 6), 116)\\n  buf.write(encodeOct(opts.size, 11), 124)\\n  buf.write(encodeOct((opts.mtime.getTime() / 1000) | 0, 11), 136)\\n\\n  buf[156] = ZERO_OFFSET + toTypeflag(opts.type)\\n\\n  if (opts.linkname) buf.write(opts.linkname, 157)\\n\\n  USTAR_MAGIC.copy(buf, MAGIC_OFFSET)\\n  USTAR_VER.copy(buf, VERSION_OFFSET)\\n  if (opts.uname) buf.write(opts.uname, 265)\\n  if (opts.gname) buf.write(opts.gname, 297)\\n  buf.write(encodeOct(opts.devmajor || 0, 6), 329)\\n  buf.write(encodeOct(opts.devminor || 0, 6), 337)\\n\\n  if (prefix) buf.write(prefix, 345)\\n\\n  buf.write(encodeOct(cksum(buf), 6), 148)\\n\\n  return buf\\n}\\n\\n},{\\\"buffer\\\":39}],482:[function(require,module,exports){\\nconst { Buffer } = require('buffer')\\nconst BufferList = require('bl/BufferList')\\nconst { S_IFMT, S_IFBLK, S_IFCHR, S_IFDIR, S_IFIFO, S_IFLNK } = require('iso-constants')\\nconst concat = require('it-concat')\\nconst Headers = require('./pack-headers')\\n\\nconst DMODE = parseInt('755', 8)\\nconst FMODE = parseInt('644', 8)\\n\\nconst END_OF_TAR = Buffer.alloc(1024)\\n\\nfunction modeToType (mode) {\\n  switch (mode & S_IFMT) {\\n    case S_IFBLK: return 'block-device'\\n    case S_IFCHR: return 'character-device'\\n    case S_IFDIR: return 'directory'\\n    case S_IFIFO: return 'fifo'\\n    case S_IFLNK: return 'symlink'\\n  }\\n  return 'file'\\n}\\n\\nfunction getPadding (size) {\\n  size &= 511\\n  if (size) return new BufferList(END_OF_TAR.slice(0, 512 - size))\\n}\\n\\nfunction encode (header) {\\n  if (!header.pax) {\\n    const encoded = Headers.encode(header)\\n    if (encoded) return encoded\\n  }\\n  return encodePax(header)\\n}\\n\\nfunction encodePax (header) {\\n  const paxHeader = Headers.encodePax({\\n    name: header.name,\\n    linkname: header.linkname,\\n    pax: header.pax\\n  })\\n\\n  const newHeader = {\\n    name: 'PaxHeader',\\n    mode: header.mode,\\n    uid: header.uid,\\n    gid: header.gid,\\n    size: paxHeader.length,\\n    mtime: header.mtime,\\n    type: 'pax-header',\\n    linkname: header.linkname && 'PaxHeader',\\n    uname: header.uname,\\n    gname: header.gname,\\n    devmajor: header.devmajor,\\n    devminor: header.devminor\\n  }\\n\\n  return new BufferList([\\n    Headers.encode(newHeader),\\n    paxHeader,\\n    getPadding(paxHeader.length),\\n    Headers.encode({ ...newHeader, size: header.size, type: header.type })\\n  ])\\n}\\n\\nmodule.exports = () => async function * (source) {\\n  for await (let { header, body } of source) {\\n    if (!header.size || header.type === 'symlink') header.size = 0\\n    if (!header.type) header.type = modeToType(header.mode)\\n    if (!header.mode) header.mode = header.type === 'directory' ? DMODE : FMODE\\n    if (!header.uid) header.uid = 0\\n    if (!header.gid) header.gid = 0\\n    if (!header.mtime) header.mtime = new Date()\\n\\n    if (typeof body === 'string') body = Buffer.from(body)\\n\\n    if (Buffer.isBuffer(body) || BufferList.isBufferList(body)) {\\n      header.size = body.length\\n      yield new BufferList([encode(header), body, getPadding(header.size)])\\n      continue\\n    }\\n\\n    if (header.type === 'symlink' && !header.linkname) {\\n      header.linkname = (await concat(body)).toString()\\n      yield encode(header)\\n      continue\\n    }\\n\\n    yield encode(header)\\n\\n    if (header.type !== 'file' && header.type !== 'contiguous-file') {\\n      continue\\n    }\\n\\n    let written = 0\\n    for await (const chunk of body) {\\n      written += chunk.length\\n      yield BufferList.isBufferList(chunk) ? chunk : new BufferList(chunk)\\n    }\\n\\n    if (written !== header.size) { // corrupting tar\\n      throw new Error('size mismatch')\\n    }\\n\\n    const overflow = getPadding(header.size)\\n    if (overflow) yield overflow\\n  }\\n\\n  yield new BufferList(END_OF_TAR)\\n}\\n\\n},{\\\"./pack-headers\\\":481,\\\"bl/BufferList\\\":20,\\\"buffer\\\":39,\\\"iso-constants\\\":467,\\\"it-concat\\\":472}],483:[function(require,module,exports){\\n'use strict';\\nconst isOptionObject = require('is-plain-obj');\\n\\nconst {hasOwnProperty} = Object.prototype;\\nconst {propertyIsEnumerable} = Object;\\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\\n\\tvalue,\\n\\twritable: true,\\n\\tenumerable: true,\\n\\tconfigurable: true\\n});\\n\\nconst globalThis = this;\\nconst defaultMergeOptions = {\\n\\tconcatArrays: false,\\n\\tignoreUndefined: false\\n};\\n\\nconst getEnumerableOwnPropertyKeys = value => {\\n\\tconst keys = [];\\n\\n\\tfor (const key in value) {\\n\\t\\tif (hasOwnProperty.call(value, key)) {\\n\\t\\t\\tkeys.push(key);\\n\\t\\t}\\n\\t}\\n\\n\\t/* istanbul ignore else  */\\n\\tif (Object.getOwnPropertySymbols) {\\n\\t\\tconst symbols = Object.getOwnPropertySymbols(value);\\n\\n\\t\\tfor (const symbol of symbols) {\\n\\t\\t\\tif (propertyIsEnumerable.call(value, symbol)) {\\n\\t\\t\\t\\tkeys.push(symbol);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn keys;\\n};\\n\\nfunction clone(value) {\\n\\tif (Array.isArray(value)) {\\n\\t\\treturn cloneArray(value);\\n\\t}\\n\\n\\tif (isOptionObject(value)) {\\n\\t\\treturn cloneOptionObject(value);\\n\\t}\\n\\n\\treturn value;\\n}\\n\\nfunction cloneArray(array) {\\n\\tconst result = array.slice(0, 0);\\n\\n\\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\\n\\t\\tdefineProperty(result, key, clone(array[key]));\\n\\t});\\n\\n\\treturn result;\\n}\\n\\nfunction cloneOptionObject(object) {\\n\\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\\n\\n\\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\\n\\t\\tdefineProperty(result, key, clone(object[key]));\\n\\t});\\n\\n\\treturn result;\\n}\\n\\n/**\\n * @param {*} merged already cloned\\n * @param {*} source something to merge\\n * @param {string[]} keys keys to merge\\n * @param {Object} config Config Object\\n * @returns {*} cloned Object\\n */\\nconst mergeKeys = (merged, source, keys, config) => {\\n\\tkeys.forEach(key => {\\n\\t\\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Do not recurse into prototype chain of merged\\n\\t\\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\\n\\t\\t\\tdefineProperty(merged, key, merge(merged[key], source[key], config));\\n\\t\\t} else {\\n\\t\\t\\tdefineProperty(merged, key, clone(source[key]));\\n\\t\\t}\\n\\t});\\n\\n\\treturn merged;\\n};\\n\\n/**\\n * @param {*} merged already cloned\\n * @param {*} source something to merge\\n * @param {Object} config Config Object\\n * @returns {*} cloned Object\\n *\\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\\n */\\nconst concatArrays = (merged, source, config) => {\\n\\tlet result = merged.slice(0, 0);\\n\\tlet resultIndex = 0;\\n\\n\\t[merged, source].forEach(array => {\\n\\t\\tconst indices = [];\\n\\n\\t\\t// `result.concat(array)` with cloning\\n\\t\\tfor (let k = 0; k < array.length; k++) {\\n\\t\\t\\tif (!hasOwnProperty.call(array, k)) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tindices.push(String(k));\\n\\n\\t\\t\\tif (array === merged) {\\n\\t\\t\\t\\t// Already cloned\\n\\t\\t\\t\\tdefineProperty(result, resultIndex++, array[k]);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdefineProperty(result, resultIndex++, clone(array[k]));\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Merge non-index keys\\n\\t\\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\\n\\t});\\n\\n\\treturn result;\\n};\\n\\n/**\\n * @param {*} merged already cloned\\n * @param {*} source something to merge\\n * @param {Object} config Config Object\\n * @returns {*} cloned Object\\n */\\nfunction merge(merged, source, config) {\\n\\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\\n\\t\\treturn concatArrays(merged, source, config);\\n\\t}\\n\\n\\tif (!isOptionObject(source) || !isOptionObject(merged)) {\\n\\t\\treturn clone(source);\\n\\t}\\n\\n\\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\\n}\\n\\nmodule.exports = function (...options) {\\n\\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\\n\\tlet merged = {_: {}};\\n\\n\\tfor (const option of options) {\\n\\t\\tif (option === undefined) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tif (!isOptionObject(option)) {\\n\\t\\t\\tthrow new TypeError('`' + option + '` is not an Option Object');\\n\\t\\t}\\n\\n\\t\\tmerged = merge(merged, {_: option}, config);\\n\\t}\\n\\n\\treturn merged._;\\n};\\n\\n},{\\\"is-plain-obj\\\":466}],484:[function(require,module,exports){\\nconst Multiaddr = require('multiaddr')\\n\\nconst reduceValue = (_, v) => v\\nconst tcpUri = (str, port, parts, opts) => {\\n  // return tcp when explicitly requested\\n  if (opts && opts.assumeHttp === false) return `tcp://${str}:${port}`\\n  // check if tcp is the last protocol in multiaddr\\n  let protocol = 'tcp'\\n  let explicitPort = `:${port}`\\n  const last = parts[parts.length - 1]\\n  if (last.protocol === 'tcp') {\\n    // assume http and produce clean urls\\n    protocol = port === '443' ? 'https' : 'http'\\n    explicitPort = port === '443' || port === '80' ? '' : explicitPort\\n  }\\n  return `${protocol}://${str}${explicitPort}`\\n}\\n\\nconst Reducers = {\\n  ip4: reduceValue,\\n  ip6: (str, content, i, parts) => (\\n    parts.length === 1 && parts[0].protocol === 'ip6'\\n      ? content\\n      : `[${content}]`\\n  ),\\n  tcp: (str, content, i, parts, opts) => (\\n    parts.some(p => ['http', 'https', 'ws', 'wss'].includes(p.protocol))\\n      ? `${str}:${content}`\\n      : tcpUri(str, content, parts, opts)\\n  ),\\n  udp: (str, content) => `udp://${str}:${content}`,\\n  dnsaddr: reduceValue,\\n  dns4: reduceValue,\\n  dns6: reduceValue,\\n  ipfs: (str, content) => `${str}/ipfs/${content}`,\\n  p2p: (str, content) => `${str}/p2p/${content}`,\\n  http: str => `http://${str}`,\\n  https: str => `https://${str}`,\\n  ws: str => `ws://${str}`,\\n  wss: str => `wss://${str}`,\\n  'p2p-websocket-star': str => `${str}/p2p-websocket-star`,\\n  'p2p-webrtc-star': str => `${str}/p2p-webrtc-star`,\\n  'p2p-webrtc-direct': str => `${str}/p2p-webrtc-direct`\\n}\\n\\nmodule.exports = (multiaddr, opts) => {\\n  const ma = Multiaddr(multiaddr)\\n  const parts = multiaddr.toString().split('/').slice(1)\\n  return ma\\n    .tuples()\\n    .map(tuple => ({\\n      protocol: parts.shift(),\\n      content: tuple[1] ? parts.shift() : null\\n    }))\\n    .reduce((str, part, i, parts) => {\\n      const reduce = Reducers[part.protocol]\\n      if (!reduce) throw new Error(`Unsupported protocol ${part.protocol}`)\\n      return reduce(str, part.content, i, parts, opts)\\n    }, '')\\n}\\n\\n},{\\\"multiaddr\\\":496}],485:[function(require,module,exports){\\narguments[4][205][0].apply(exports,arguments)\\n},{\\\"dup\\\":205}],486:[function(require,module,exports){\\narguments[4][206][0].apply(exports,arguments)\\n},{\\\"dup\\\":206}],487:[function(require,module,exports){\\narguments[4][207][0].apply(exports,arguments)\\n},{\\\"dup\\\":207,\\\"multibase\\\":501,\\\"web-encoding\\\":595}],488:[function(require,module,exports){\\narguments[4][52][0].apply(exports,arguments)\\n},{\\\"dup\\\":52,\\\"multihashes\\\":526}],489:[function(require,module,exports){\\narguments[4][209][0].apply(exports,arguments)\\n},{\\\"./cid-util\\\":488,\\\"dup\\\":209,\\\"multibase\\\":501,\\\"multicodec\\\":513,\\\"multicodec/src/base-table.js\\\":511,\\\"multihashes\\\":526,\\\"uint8arrays/concat\\\":485,\\\"uint8arrays/equals\\\":486,\\\"uint8arrays/to-string\\\":487}],490:[function(require,module,exports){\\narguments[4][222][0].apply(exports,arguments)\\n},{\\\"dup\\\":222}],491:[function(require,module,exports){\\narguments[4][206][0].apply(exports,arguments)\\n},{\\\"dup\\\":206}],492:[function(require,module,exports){\\narguments[4][223][0].apply(exports,arguments)\\n},{\\\"dup\\\":223,\\\"multibase/src/constants\\\":500,\\\"web-encoding\\\":595}],493:[function(require,module,exports){\\narguments[4][224][0].apply(exports,arguments)\\n},{\\\"dup\\\":224,\\\"multibase/src/constants\\\":500,\\\"web-encoding\\\":595}],494:[function(require,module,exports){\\n'use strict'\\n\\nconst convert = require('./convert')\\nconst protocols = require('./protocols-table')\\nconst varint = require('varint')\\nconst uint8ArrayConcat = require('uint8arrays/concat')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\n\\n// export codec\\nmodule.exports = {\\n  stringToStringTuples,\\n  stringTuplesToString,\\n\\n  tuplesToStringTuples,\\n  stringTuplesToTuples,\\n\\n  bytesToTuples,\\n  tuplesToBytes,\\n\\n  bytesToString,\\n  stringToBytes,\\n\\n  fromString,\\n  fromBytes,\\n  validateBytes,\\n  isValidBytes,\\n  cleanPath,\\n\\n  ParseError,\\n  protoFromTuple,\\n\\n  sizeForAddr\\n}\\n\\n// string -> [[str name, str addr]... ]\\nfunction stringToStringTuples (str) {\\n  const tuples = []\\n  const parts = str.split('/').slice(1) // skip first empty elem\\n  if (parts.length === 1 && parts[0] === '') {\\n    return []\\n  }\\n\\n  for (let p = 0; p < parts.length; p++) {\\n    const part = parts[p]\\n    const proto = protocols(part)\\n\\n    if (proto.size === 0) {\\n      tuples.push([part])\\n      continue\\n    }\\n\\n    p++ // advance addr part\\n    if (p >= parts.length) {\\n      throw ParseError('invalid address: ' + str)\\n    }\\n\\n    // if it's a path proto, take the rest\\n    if (proto.path) {\\n      tuples.push([\\n        part,\\n        // TODO: should we need to check each path part to see if it's a proto?\\n        // This would allow for other protocols to be added after a unix path,\\n        // however it would have issues if the path had a protocol name in the path\\n        cleanPath(parts.slice(p).join('/'))\\n      ])\\n      break\\n    }\\n\\n    tuples.push([part, parts[p]])\\n  }\\n\\n  return tuples\\n}\\n\\n// [[str name, str addr]... ] -> string\\nfunction stringTuplesToString (tuples) {\\n  const parts = []\\n  tuples.map(tup => {\\n    const proto = protoFromTuple(tup)\\n    parts.push(proto.name)\\n    if (tup.length > 1) {\\n      parts.push(tup[1])\\n    }\\n  })\\n\\n  return cleanPath(parts.join('/'))\\n}\\n\\n// [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\\nfunction stringTuplesToTuples (tuples) {\\n  return tuples.map(tup => {\\n    if (!Array.isArray(tup)) {\\n      tup = [tup]\\n    }\\n    const proto = protoFromTuple(tup)\\n    if (tup.length > 1) {\\n      return [proto.code, convert.toBytes(proto.code, tup[1])]\\n    }\\n    return [proto.code]\\n  })\\n}\\n\\n// [[int code, Uint8Array]... ] -> [[str name, str addr]... ]\\nfunction tuplesToStringTuples (tuples) {\\n  return tuples.map(tup => {\\n    const proto = protoFromTuple(tup)\\n    if (tup.length > 1) {\\n      return [proto.code, convert.toString(proto.code, tup[1])]\\n    }\\n    return [proto.code]\\n  })\\n}\\n\\n// [[int code, Uint8Array ]... ] -> Uint8Array\\nfunction tuplesToBytes (tuples) {\\n  return fromBytes(uint8ArrayConcat(tuples.map(tup => {\\n    const proto = protoFromTuple(tup)\\n    let buf = Uint8Array.from(varint.encode(proto.code))\\n\\n    if (tup.length > 1) {\\n      buf = uint8ArrayConcat([buf, tup[1]]) // add address buffer\\n    }\\n\\n    return buf\\n  })))\\n}\\n\\nfunction sizeForAddr (p, addr) {\\n  if (p.size > 0) {\\n    return p.size / 8\\n  } else if (p.size === 0) {\\n    return 0\\n  } else {\\n    const size = varint.decode(addr)\\n    return size + varint.decode.bytes\\n  }\\n}\\n\\n// Uint8Array -> [[int code, Uint8Array ]... ]\\nfunction bytesToTuples (buf) {\\n  const tuples = []\\n  let i = 0\\n  while (i < buf.length) {\\n    const code = varint.decode(buf, i)\\n    const n = varint.decode.bytes\\n\\n    const p = protocols(code)\\n\\n    const size = sizeForAddr(p, buf.slice(i + n))\\n\\n    if (size === 0) {\\n      tuples.push([code])\\n      i += n\\n      continue\\n    }\\n\\n    const addr = buf.slice(i + n, i + n + size)\\n\\n    i += (size + n)\\n\\n    if (i > buf.length) { // did not end _exactly_ at buffer.length\\n      throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'))\\n    }\\n\\n    // ok, tuple seems good.\\n    tuples.push([code, addr])\\n  }\\n\\n  return tuples\\n}\\n\\n// Uint8Array -> String\\nfunction bytesToString (buf) {\\n  const a = bytesToTuples(buf)\\n  const b = tuplesToStringTuples(a)\\n  return stringTuplesToString(b)\\n}\\n\\n// String -> Uint8Array\\nfunction stringToBytes (str) {\\n  str = cleanPath(str)\\n  const a = stringToStringTuples(str)\\n  const b = stringTuplesToTuples(a)\\n\\n  return tuplesToBytes(b)\\n}\\n\\n// String -> Uint8Array\\nfunction fromString (str) {\\n  return stringToBytes(str)\\n}\\n\\n// Uint8Array -> Uint8Array\\nfunction fromBytes (buf) {\\n  const err = validateBytes(buf)\\n  if (err) throw err\\n  return Uint8Array.from(buf) // copy\\n}\\n\\nfunction validateBytes (buf) {\\n  try {\\n    bytesToTuples(buf) // try to parse. will throw if breaks\\n  } catch (err) {\\n    return err\\n  }\\n}\\n\\nfunction isValidBytes (buf) {\\n  return validateBytes(buf) === undefined\\n}\\n\\nfunction cleanPath (str) {\\n  return '/' + str.trim().split('/').filter(a => a).join('/')\\n}\\n\\nfunction ParseError (str) {\\n  return new Error('Error parsing address: ' + str)\\n}\\n\\nfunction protoFromTuple (tup) {\\n  const proto = protocols(tup[0])\\n  return proto\\n}\\n\\n},{\\\"./convert\\\":495,\\\"./protocols-table\\\":498,\\\"uint8arrays/concat\\\":490,\\\"uint8arrays/to-string\\\":493,\\\"varint\\\":593}],495:[function(require,module,exports){\\n'use strict'\\n\\nconst ip = require('./ip')\\nconst protocols = require('./protocols-table')\\nconst CID = require('cids')\\nconst multibase = require('multibase')\\nconst varint = require('varint')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\nconst uint8ArrayConcat = require('uint8arrays/concat')\\n\\nmodule.exports = Convert\\n\\n// converts (serializes) addresses\\nfunction Convert (proto, a) {\\n  if (a instanceof Uint8Array) {\\n    return Convert.toString(proto, a)\\n  } else {\\n    return Convert.toBytes(proto, a)\\n  }\\n}\\n\\nConvert.toString = function convertToString (proto, buf) {\\n  proto = protocols(proto)\\n  switch (proto.code) {\\n    case 4: // ipv4\\n    case 41: // ipv6\\n      return bytes2ip(buf)\\n\\n    case 6: // tcp\\n    case 273: // udp\\n    case 33: // dccp\\n    case 132: // sctp\\n      return bytes2port(buf)\\n\\n    case 53: // dns\\n    case 54: // dns4\\n    case 55: // dns6\\n    case 56: // dnsaddr\\n    case 400: // unix\\n    case 777: // memory\\n      return bytes2str(buf)\\n\\n    case 421: // ipfs\\n      return bytes2mh(buf)\\n    case 444: // onion\\n      return bytes2onion(buf)\\n    case 445: // onion3\\n      return bytes2onion(buf)\\n    default:\\n      return uint8ArrayToString(buf, 'base16') // no clue. convert to hex\\n  }\\n}\\n\\nConvert.toBytes = function convertToBytes (proto, str) {\\n  proto = protocols(proto)\\n  switch (proto.code) {\\n    case 4: // ipv4\\n      return ip2bytes(str)\\n    case 41: // ipv6\\n      return ip2bytes(str)\\n\\n    case 6: // tcp\\n    case 273: // udp\\n    case 33: // dccp\\n    case 132: // sctp\\n      return port2bytes(parseInt(str, 10))\\n\\n    case 53: // dns\\n    case 54: // dns4\\n    case 55: // dns6\\n    case 56: // dnsaddr\\n    case 400: // unix\\n    case 777: // memory\\n      return str2bytes(str)\\n\\n    case 421: // ipfs\\n      return mh2bytes(str)\\n    case 444: // onion\\n      return onion2bytes(str)\\n    case 445: // onion3\\n      return onion32bytes(str)\\n    default:\\n      return uint8ArrayFromString(str, 'base16') // no clue. convert from hex\\n  }\\n}\\n\\nfunction ip2bytes (ipString) {\\n  if (!ip.isIP(ipString)) {\\n    throw new Error('invalid ip address')\\n  }\\n  return ip.toBytes(ipString)\\n}\\n\\nfunction bytes2ip (ipBuff) {\\n  const ipString = ip.toString(ipBuff)\\n  if (!ipString || !ip.isIP(ipString)) {\\n    throw new Error('invalid ip address')\\n  }\\n  return ipString\\n}\\n\\nfunction port2bytes (port) {\\n  const buf = new ArrayBuffer(2)\\n  const view = new DataView(buf)\\n  view.setUint16(0, port)\\n\\n  return new Uint8Array(buf)\\n}\\n\\nfunction bytes2port (buf) {\\n  const view = new DataView(buf.buffer)\\n  return view.getUint16(0)\\n}\\n\\nfunction str2bytes (str) {\\n  const buf = uint8ArrayFromString(str)\\n  const size = Uint8Array.from(varint.encode(buf.length))\\n  return uint8ArrayConcat([size, buf], size.length + buf.length)\\n}\\n\\nfunction bytes2str (buf) {\\n  const size = varint.decode(buf)\\n  buf = buf.slice(varint.decode.bytes)\\n\\n  if (buf.length !== size) {\\n    throw new Error('inconsistent lengths')\\n  }\\n\\n  return uint8ArrayToString(buf)\\n}\\n\\nfunction mh2bytes (hash) {\\n  // the address is a varint prefixed multihash string representation\\n  const mh = new CID(hash).multihash\\n  const size = Uint8Array.from(varint.encode(mh.length))\\n  return uint8ArrayConcat([size, mh], size.length + mh.length)\\n}\\n\\nfunction bytes2mh (buf) {\\n  const size = varint.decode(buf)\\n  const address = buf.slice(varint.decode.bytes)\\n\\n  if (address.length !== size) {\\n    throw new Error('inconsistent lengths')\\n  }\\n\\n  return uint8ArrayToString(address, 'base58btc')\\n}\\n\\nfunction onion2bytes (str) {\\n  const addr = str.split(':')\\n  if (addr.length !== 2) {\\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\\n  }\\n  if (addr[0].length !== 16) {\\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion address.')\\n  }\\n\\n  // onion addresses do not include the multibase prefix, add it before decoding\\n  const buf = multibase.decode('b' + addr[0])\\n\\n  // onion port number\\n  const port = parseInt(addr[1], 10)\\n  if (port < 1 || port > 65536) {\\n    throw new Error('Port number is not in range(1, 65536)')\\n  }\\n  const portBuf = port2bytes(port)\\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\\n}\\n\\nfunction onion32bytes (str) {\\n  const addr = str.split(':')\\n  if (addr.length !== 2) {\\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\\n  }\\n  if (addr[0].length !== 56) {\\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion3 address.')\\n  }\\n  // onion addresses do not include the multibase prefix, add it before decoding\\n  const buf = multibase.decode('b' + addr[0])\\n\\n  // onion port number\\n  const port = parseInt(addr[1], 10)\\n  if (port < 1 || port > 65536) {\\n    throw new Error('Port number is not in range(1, 65536)')\\n  }\\n  const portBuf = port2bytes(port)\\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\\n}\\n\\nfunction bytes2onion (buf) {\\n  const addrBytes = buf.slice(0, buf.length - 2)\\n  const portBytes = buf.slice(buf.length - 2)\\n  const addr = uint8ArrayToString(addrBytes, 'base32')\\n  const port = bytes2port(portBytes)\\n  return addr + ':' + port\\n}\\n\\n},{\\\"./ip\\\":497,\\\"./protocols-table\\\":498,\\\"cids\\\":489,\\\"multibase\\\":501,\\\"uint8arrays/concat\\\":490,\\\"uint8arrays/from-string\\\":492,\\\"uint8arrays/to-string\\\":493,\\\"varint\\\":593}],496:[function(require,module,exports){\\n'use strict'\\n\\nconst codec = require('./codec')\\nconst protocols = require('./protocols-table')\\nconst varint = require('varint')\\nconst CID = require('cids')\\nconst withIs = require('class-is')\\nconst errCode = require('err-code')\\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\nconst uint8ArrayEquals = require('uint8arrays/equals')\\n\\nconst resolvers = new Map()\\n\\n/**\\n * Creates a [multiaddr](https://github.com/multiformats/multiaddr) from\\n * a Uint8Array, String or another Multiaddr instance\\n * public key.\\n *\\n * @class Multiaddr\\n * @param {(string | Uint8Array | Multiaddr)} addr - If String or Uint8Array, needs to adhere\\n * to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\\n * @example\\n * Multiaddr('/ip4/127.0.0.1/tcp/4001')\\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\\n */\\nconst Multiaddr = withIs.proto(function (addr) {\\n  if (!(this instanceof Multiaddr)) {\\n    return new Multiaddr(addr)\\n  }\\n\\n  // default\\n  if (addr == null) {\\n    addr = ''\\n  }\\n\\n  if (addr instanceof Uint8Array) {\\n    /**\\n     * @type {Uint8Array} - The raw bytes representing this multiaddress\\n     */\\n    this.bytes = codec.fromBytes(addr)\\n  } else if (typeof addr === 'string' || addr instanceof String) {\\n    if (addr.length > 0 && addr.charAt(0) !== '/') {\\n      throw new Error(`multiaddr \\\"${addr}\\\" must start with a \\\"/\\\"`)\\n    }\\n    this.bytes = codec.fromString(addr)\\n  } else if (addr.bytes && addr.protos && addr.protoCodes) { // Multiaddr\\n    this.bytes = codec.fromBytes(addr.bytes) // validate + copy buffer\\n  } else {\\n    throw new Error('addr must be a string, Buffer, or another Multiaddr')\\n  }\\n}, { className: 'Multiaddr', symbolName: '@multiformats/js-multiaddr/multiaddr' })\\n\\n/**\\n * Returns Multiaddr as a String\\n *\\n * @returns {string}\\n * @example\\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\\n * // '/ip4/127.0.0.1/tcp/4001'\\n */\\nMultiaddr.prototype.toString = function toString () {\\n  return codec.bytesToString(this.bytes)\\n}\\n\\n/**\\n * Returns Multiaddr as a JSON encoded object\\n *\\n * @returns {string}\\n * @example\\n * JSON.stringify(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\\n * // '/ip4/127.0.0.1/tcp/4001'\\n */\\nMultiaddr.prototype.toJSON = Multiaddr.prototype.toString\\n\\n/**\\n * Returns Multiaddr as a convinient options object to be used with net.createConnection\\n *\\n * @returns {{family: string, host: string, transport: string, port: number}}\\n * @example\\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toOptions()\\n * // { family: 'ipv4', host: '127.0.0.1', transport: 'tcp', port: 4001 }\\n */\\nMultiaddr.prototype.toOptions = function toOptions () {\\n  const opts = {}\\n  const parsed = this.toString().split('/')\\n  opts.family = parsed[1] === 'ip4' ? 'ipv4' : 'ipv6'\\n  opts.host = parsed[2]\\n  opts.transport = parsed[3]\\n  opts.port = parseInt(parsed[4])\\n  return opts\\n}\\n\\n/**\\n * Returns Multiaddr as a human-readable string.\\n * For post Node.js v10.0.0.\\n * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\\n *\\n * @returns {string}\\n * @example\\n * console.log(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\\n * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\\n */\\nMultiaddr.prototype[inspect] = function inspectCustom () {\\n  return '<Multiaddr ' +\\n    uint8ArrayToString(this.bytes, 'base16') + ' - ' +\\n    codec.bytesToString(this.bytes) + '>'\\n}\\n\\n/**\\n * Returns Multiaddr as a human-readable string.\\n * Fallback for pre Node.js v10.0.0.\\n * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\\n *\\n * @returns {string}\\n * @example\\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').inspect()\\n * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\\n */\\nMultiaddr.prototype.inspect = function inspect () {\\n  return '<Multiaddr ' +\\n    uint8ArrayToString(this.bytes, 'base16') + ' - ' +\\n    codec.bytesToString(this.bytes) + '>'\\n}\\n\\n/**\\n * @typedef {object} protocol\\n * @property {number} code\\n * @property {number} size\\n * @property {string} name\\n * @property {boolean} [resolvable]\\n * @property {boolean} [path]\\n */\\n\\n/**\\n * Returns the protocols the Multiaddr is defined with, as an array of objects, in\\n * left-to-right order. Each object contains the protocol code, protocol name,\\n * and the size of its address space in bits.\\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\\n *\\n * @returns {protocol[]} protocols - All the protocols the address is composed of\\n * @example\\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protos()\\n * // [ { code: 4, size: 32, name: 'ip4' },\\n * //   { code: 6, size: 16, name: 'tcp' } ]\\n */\\nMultiaddr.prototype.protos = function protos () {\\n  return this.protoCodes().map(code => Object.assign({}, protocols(code)))\\n}\\n\\n/**\\n * Returns the codes of the protocols in left-to-right order.\\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\\n *\\n * @returns {Array<number>} protocol codes\\n * @example\\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoCodes()\\n * // [ 4, 6 ]\\n */\\nMultiaddr.prototype.protoCodes = function protoCodes () {\\n  const codes = []\\n  const buf = this.bytes\\n  let i = 0\\n  while (i < buf.length) {\\n    const code = varint.decode(buf, i)\\n    const n = varint.decode.bytes\\n\\n    const p = protocols(code)\\n    const size = codec.sizeForAddr(p, buf.slice(i + n))\\n\\n    i += (size + n)\\n    codes.push(code)\\n  }\\n\\n  return codes\\n}\\n\\n/**\\n * Returns the names of the protocols in left-to-right order.\\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\\n *\\n * @returns {Array.<string>} protocol names\\n * @example\\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoNames()\\n * // [ 'ip4', 'tcp' ]\\n */\\nMultiaddr.prototype.protoNames = function protoNames () {\\n  return this.protos().map(proto => proto.name)\\n}\\n\\n/**\\n * Returns a tuple of parts\\n *\\n * @returns {[number, Uint8Array][]} tuples\\n * @example\\n * Multiaddr(\\\"/ip4/127.0.0.1/tcp/4001\\\").tuples()\\n * // [ [ 4, <Buffer 7f 00 00 01> ], [ 6, <Buffer 0f a1> ] ]\\n */\\nMultiaddr.prototype.tuples = function tuples () {\\n  return codec.bytesToTuples(this.bytes)\\n}\\n\\n/**\\n * Returns a tuple of string/number parts\\n * - tuples[][0] = code of protocol\\n * - tuples[][1] = contents of address\\n *\\n * @returns {[number, string|number][]} tuples\\n * @example\\n * Multiaddr(\\\"/ip4/127.0.0.1/tcp/4001\\\").stringTuples()\\n * // [ [ 4, '127.0.0.1' ], [ 6, 4001 ] ]\\n */\\nMultiaddr.prototype.stringTuples = function stringTuples () {\\n  const t = codec.bytesToTuples(this.bytes)\\n  return codec.tuplesToStringTuples(t)\\n}\\n\\n/**\\n * Encapsulates a Multiaddr in another Multiaddr\\n *\\n * @param {Multiaddr} addr - Multiaddr to add into this Multiaddr\\n * @returns {Multiaddr}\\n * @example\\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\\n *\\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\\n *\\n * const mh3 = mh1.encapsulate(mh2)\\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\\n *\\n * mh3.toString()\\n * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\\n */\\nMultiaddr.prototype.encapsulate = function encapsulate (addr) {\\n  addr = Multiaddr(addr)\\n  return Multiaddr(this.toString() + addr.toString())\\n}\\n\\n/**\\n * Decapsulates a Multiaddr from another Multiaddr\\n *\\n * @param {Multiaddr} addr - Multiaddr to remove from this Multiaddr\\n * @returns {Multiaddr}\\n * @example\\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\\n *\\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\\n *\\n * const mh3 = mh1.encapsulate(mh2)\\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\\n *\\n * mh3.decapsulate(mh2).toString()\\n * // '/ip4/8.8.8.8/tcp/1080'\\n */\\nMultiaddr.prototype.decapsulate = function decapsulate (addr) {\\n  addr = addr.toString()\\n  const s = this.toString()\\n  const i = s.lastIndexOf(addr)\\n  if (i < 0) {\\n    throw new Error('Address ' + this + ' does not contain subaddress: ' + addr)\\n  }\\n  return Multiaddr(s.slice(0, i))\\n}\\n\\n/**\\n * A more reliable version of `decapsulate` if you are targeting a\\n * specific code, such as 421 (the `p2p` protocol code). The last index of the code\\n * will be removed from the `Multiaddr`, and a new instance will be returned.\\n * If the code is not present, the original `Multiaddr` is returned.\\n *\\n * @param {number} code - The code of the protocol to decapsulate from this Multiaddr\\n * @returns {Multiaddr}\\n * @example\\n * const addr = Multiaddr('/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC')\\n * // <Multiaddr 0400... - /ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC>\\n *\\n * addr.decapsulateCode(421).toString()\\n * // '/ip4/0.0.0.0/tcp/8080'\\n *\\n * Multiaddr('/ip4/127.0.0.1/tcp/8080').decapsulateCode(421).toString()\\n * // '/ip4/127.0.0.1/tcp/8080'\\n */\\nMultiaddr.prototype.decapsulateCode = function decapsulateCode (code) {\\n  const tuples = this.tuples()\\n  for (let i = tuples.length - 1; i >= 0; i--) {\\n    if (tuples[i][0] === code) {\\n      return Multiaddr(codec.tuplesToBytes(tuples.slice(0, i)))\\n    }\\n  }\\n  return this\\n}\\n\\n/**\\n * Extract the peerId if the multiaddr contains one\\n *\\n * @returns {string | null} peerId - The id of the peer or null if invalid or missing from the ma\\n * @example\\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string')\\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string>\\n *\\n * // should return QmValidBase58string or null if the id is missing or invalid\\n * const peerId = mh1.getPeerId()\\n */\\nMultiaddr.prototype.getPeerId = function getPeerId () {\\n  let b58str = null\\n  try {\\n    const tuples = this.stringTuples().filter((tuple) => {\\n      if (tuple[0] === protocols.names.ipfs.code) {\\n        return true\\n      }\\n    })\\n\\n    // Get the last id\\n    b58str = tuples.pop()[1]\\n    // Get multihash, unwrap from CID if needed\\n    b58str = uint8ArrayToString(new CID(b58str).multihash, 'base58btc')\\n  } catch (e) {\\n    b58str = null\\n  }\\n\\n  return b58str\\n}\\n\\n/**\\n * Extract the path if the multiaddr contains one\\n *\\n * @returns {string | null} path - The path of the multiaddr, or null if no path protocol is present\\n * @example\\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock')\\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock>\\n *\\n * // should return utf8 string or null if the id is missing or invalid\\n * const path = mh1.getPath()\\n */\\nMultiaddr.prototype.getPath = function getPath () {\\n  let path = null\\n  try {\\n    path = this.stringTuples().filter((tuple) => {\\n      const proto = protocols(tuple[0])\\n      if (proto.path) {\\n        return true\\n      }\\n    })[0][1]\\n  } catch (e) {\\n    path = null\\n  }\\n\\n  return path\\n}\\n\\n/**\\n * Checks if two Multiaddrs are the same\\n *\\n * @param {Multiaddr} addr\\n * @returns {Bool}\\n * @example\\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\\n *\\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\\n *\\n * mh1.equals(mh1)\\n * // true\\n *\\n * mh1.equals(mh2)\\n * // false\\n */\\nMultiaddr.prototype.equals = function equals (addr) {\\n  return uint8ArrayEquals(this.bytes, addr.bytes)\\n}\\n\\n/**\\n * Resolve multiaddr if containing resolvable hostname.\\n *\\n * @returns {Promise<Array<Multiaddr>>}\\n * @example\\n * Multiaddr.resolvers.set('dnsaddr', resolverFunction)\\n * const mh1 = Multiaddr('/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb')\\n * const resolvedMultiaddrs = await mh1.resolve()\\n * // [\\n * //   <Multiaddr 04934b5353060fa1a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/4001/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\\n * //   <Multiaddr 04934b53530601bbde03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/443/wss/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\\n * //   <Multiaddr 04934b535391020fa1cc03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/udp/4001/quic/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>\\n * // ]\\n */\\nMultiaddr.prototype.resolve = async function resolve () {\\n  const resolvableProto = this.protos().find((p) => p.resolvable)\\n\\n  // Multiaddr is not resolvable?\\n  if (!resolvableProto) {\\n    return [this]\\n  }\\n\\n  const resolver = resolvers.get(resolvableProto.name)\\n  if (!resolver) {\\n    throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER')\\n  }\\n\\n  const addresses = await resolver(this)\\n  return addresses.map(a => Multiaddr(a))\\n}\\n\\n/**\\n * Gets a Multiaddrs node-friendly address object. Note that protocol information\\n * is left out: in Node (and most network systems) the protocol is unknowable\\n * given only the address.\\n *\\n * Has to be a ThinWaist Address, otherwise throws error\\n *\\n * @returns {{family: string, address: string, port: number}}\\n * @throws {Error} Throws error if Multiaddr is not a Thin Waist address\\n * @example\\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').nodeAddress()\\n * // {family: 'IPv4', address: '127.0.0.1', port: '4001'}\\n */\\nMultiaddr.prototype.nodeAddress = function nodeAddress () {\\n  const codes = this.protoCodes()\\n  const names = this.protoNames()\\n  const parts = this.toString().split('/').slice(1)\\n\\n  if (parts.length < 4) {\\n    throw new Error('multiaddr must have a valid format: \\\"/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}\\\".')\\n  } else if (codes[0] !== 4 && codes[0] !== 41 && codes[0] !== 54 && codes[0] !== 55) {\\n    throw new Error(`no protocol with name: \\\"'${names[0]}'\\\". Must have a valid family name: \\\"{ip4, ip6, dns4, dns6}\\\".`)\\n  } else if (parts[2] !== 'tcp' && parts[2] !== 'udp') {\\n    throw new Error(`no protocol with name: \\\"'${names[1]}'\\\". Must have a valid transport protocol: \\\"{tcp, udp}\\\".`)\\n  }\\n\\n  return {\\n    family: (codes[0] === 41 || codes[0] === 55) ? 6 : 4,\\n    address: parts[1], // ip addr\\n    port: parseInt(parts[3]) // tcp or udp port\\n  }\\n}\\n\\n/**\\n * Creates a Multiaddr from a node-friendly address object\\n *\\n * @param {{family: string, address: string, port: number}} addr\\n * @param {string} transport\\n * @returns {Multiaddr} multiaddr\\n * @throws {Error} Throws error if addr is not truthy\\n * @throws {Error} Throws error if transport is not truthy\\n * @example\\n * Multiaddr.fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\\n */\\nMultiaddr.fromNodeAddress = function fromNodeAddress (addr, transport) {\\n  if (!addr) throw new Error('requires node address object')\\n  if (!transport) throw new Error('requires transport protocol')\\n  let ip\\n  switch (addr.family) {\\n    case 'IPv4':\\n      ip = 'ip4'\\n      break\\n    case 'IPv6':\\n      ip = 'ip6'\\n      break\\n    default:\\n      throw Error(`Invalid addr family. Got '${addr.family}' instead of 'IPv4' or 'IPv6'`)\\n  }\\n  return Multiaddr('/' + [ip, addr.address, transport, addr.port].join('/'))\\n}\\n\\n// TODO find a better example, not sure about it's good enough\\n/**\\n * Returns if a Multiaddr is a Thin Waist address or not.\\n *\\n * Thin Waist is if a Multiaddr adheres to the standard combination of:\\n *\\n * `{IPv4, IPv6}/{TCP, UDP}`\\n *\\n * @param {Multiaddr} [addr] - Defaults to using `this` instance\\n * @returns {boolean} isThinWaistAddress\\n * @example\\n * const mh1 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\\n * const mh2 = Multiaddr('/ip4/192.168.2.1/tcp/5001')\\n * // <Multiaddr 04c0a80201061389 - /ip4/192.168.2.1/tcp/5001>\\n * const mh3 = mh1.encapsulate(mh2)\\n * // <Multiaddr 047f000001060fa104c0a80201061389 - /ip4/127.0.0.1/tcp/4001/ip4/192.168.2.1/tcp/5001>\\n * mh1.isThinWaistAddress()\\n * // true\\n * mh2.isThinWaistAddress()\\n * // true\\n * mh3.isThinWaistAddress()\\n * // false\\n */\\nMultiaddr.prototype.isThinWaistAddress = function isThinWaistAddress (addr) {\\n  const protos = (addr || this).protos()\\n\\n  if (protos.length !== 2) {\\n    return false\\n  }\\n\\n  if (protos[0].code !== 4 && protos[0].code !== 41) {\\n    return false\\n  }\\n  if (protos[1].code !== 6 && protos[1].code !== 273) {\\n    return false\\n  }\\n  return true\\n}\\n\\n/**\\n * Object containing table, names and codes of all supported protocols.\\n * To get the protocol values from a Multiaddr, you can use\\n * [`.protos()`](#multiaddrprotos),\\n * [`.protoCodes()`](#multiaddrprotocodes) or\\n * [`.protoNames()`](#multiaddrprotonames)\\n *\\n * @instance\\n * @returns {{table: Array, names: Object, codes: Object}}\\n *\\n */\\nMultiaddr.protocols = protocols\\n\\n/**\\n * Returns if something is a Multiaddr that is a name\\n *\\n * @param {Multiaddr} addr\\n * @returns {Bool} isName\\n */\\nMultiaddr.isName = function isName (addr) {\\n  if (!Multiaddr.isMultiaddr(addr)) {\\n    return false\\n  }\\n\\n  // if a part of the multiaddr is resolvable, then return true\\n  return addr.protos().some((proto) => proto.resolvable)\\n}\\n\\n/**\\n * Returns an array of multiaddrs, by resolving the multiaddr that is a name\\n *\\n * @async\\n * @param {Multiaddr} addr\\n * @returns {Multiaddr[]}\\n */\\nMultiaddr.resolve = function resolve (addr) {\\n  if (!Multiaddr.isMultiaddr(addr) || !Multiaddr.isName(addr)) {\\n    return Promise.reject(Error('not a valid name'))\\n  }\\n\\n  /*\\n   * Needs more consideration from spec design:\\n   *   - what to return\\n   *   - how to achieve it in the browser?\\n   */\\n  return Promise.reject(new Error('not implemented yet'))\\n}\\n\\nMultiaddr.resolvers = resolvers\\nexports = module.exports = Multiaddr\\n\\n},{\\\"./codec\\\":494,\\\"./protocols-table\\\":498,\\\"cids\\\":489,\\\"class-is\\\":54,\\\"err-code\\\":193,\\\"uint8arrays/equals\\\":491,\\\"uint8arrays/to-string\\\":493,\\\"varint\\\":593}],497:[function(require,module,exports){\\n'use strict'\\n\\nconst isIp = require('is-ip')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\n\\nconst isIP = isIp\\nconst isV4 = isIp.v4\\nconst isV6 = isIp.v6\\n\\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\\nconst toBytes = function (ip, buff, offset) {\\n  offset = ~~offset\\n\\n  var result\\n\\n  if (isV4(ip)) {\\n    result = buff || new Uint8Array(offset + 4)\\n    ip.split(/\\\\./g).map(function (byte) {\\n      result[offset++] = parseInt(byte, 10) & 0xff\\n    })\\n  } else if (isV6(ip)) {\\n    var sections = ip.split(':', 8)\\n\\n    var i\\n    for (i = 0; i < sections.length; i++) {\\n      var isv4 = isV4(sections[i])\\n      var v4Buffer\\n\\n      if (isv4) {\\n        v4Buffer = toBytes(sections[i])\\n        sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16')\\n      }\\n\\n      if (v4Buffer && ++i < 8) {\\n        sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'))\\n      }\\n    }\\n\\n    if (sections[0] === '') {\\n      while (sections.length < 8) sections.unshift('0')\\n    } else if (sections[sections.length - 1] === '') {\\n      while (sections.length < 8) sections.push('0')\\n    } else if (sections.length < 8) {\\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\\n      var argv = [i, '1']\\n      for (i = 9 - sections.length; i > 0; i--) {\\n        argv.push('0')\\n      }\\n      sections.splice.apply(sections, argv)\\n    }\\n\\n    result = buff || new Uint8Array(offset + 16)\\n    for (i = 0; i < sections.length; i++) {\\n      var word = parseInt(sections[i], 16)\\n      result[offset++] = (word >> 8) & 0xff\\n      result[offset++] = word & 0xff\\n    }\\n  }\\n\\n  if (!result) {\\n    throw Error('Invalid ip address: ' + ip)\\n  }\\n\\n  return result\\n}\\n\\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\\nconst toString = function (buff, offset, length) {\\n  offset = ~~offset\\n  length = length || (buff.length - offset)\\n\\n  var result = []\\n  var string\\n  const view = new DataView(buff.buffer)\\n  if (length === 4) {\\n    // IPv4\\n    for (let i = 0; i < length; i++) {\\n      result.push(buff[offset + i])\\n    }\\n    string = result.join('.')\\n  } else if (length === 16) {\\n    // IPv6\\n    for (let i = 0; i < length; i += 2) {\\n      result.push(view.getUint16(offset + i).toString(16))\\n    }\\n    string = result.join(':')\\n    string = string.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\\n    string = string.replace(/:{3,4}/, '::')\\n  }\\n\\n  return string\\n}\\n\\nmodule.exports = {\\n  isIP,\\n  isV4,\\n  isV6,\\n  toBytes,\\n  toString\\n}\\n\\n},{\\\"is-ip\\\":465,\\\"uint8arrays/to-string\\\":493}],498:[function(require,module,exports){\\n'use strict'\\n\\nfunction Protocols (proto) {\\n  if (typeof (proto) === 'number') {\\n    if (Protocols.codes[proto]) {\\n      return Protocols.codes[proto]\\n    }\\n\\n    throw new Error('no protocol with code: ' + proto)\\n  } else if (typeof (proto) === 'string' || proto instanceof String) {\\n    if (Protocols.names[proto]) {\\n      return Protocols.names[proto]\\n    }\\n\\n    throw new Error('no protocol with name: ' + proto)\\n  }\\n\\n  throw new Error('invalid protocol id type: ' + proto)\\n}\\n\\nconst V = -1\\nProtocols.lengthPrefixedVarSize = V\\nProtocols.V = V\\n\\nProtocols.table = [\\n  [4, 32, 'ip4'],\\n  [6, 16, 'tcp'],\\n  [33, 16, 'dccp'],\\n  [41, 128, 'ip6'],\\n  [42, V, 'ip6zone'],\\n  [53, V, 'dns', 'resolvable'],\\n  [54, V, 'dns4', 'resolvable'],\\n  [55, V, 'dns6', 'resolvable'],\\n  [56, V, 'dnsaddr', 'resolvable'],\\n  [132, 16, 'sctp'],\\n  [273, 16, 'udp'],\\n  [275, 0, 'p2p-webrtc-star'],\\n  [276, 0, 'p2p-webrtc-direct'],\\n  [277, 0, 'p2p-stardust'],\\n  [290, 0, 'p2p-circuit'],\\n  [301, 0, 'udt'],\\n  [302, 0, 'utp'],\\n  [400, V, 'unix', false, 'path'],\\n  // `ipfs` is added before `p2p` for legacy support.\\n  // All text representations will default to `p2p`, but `ipfs` will\\n  // still be supported\\n  [421, V, 'ipfs'],\\n  // `p2p` is the preferred name for 421, and is now the default\\n  [421, V, 'p2p'],\\n  [443, 0, 'https'],\\n  [444, 96, 'onion'],\\n  [445, 296, 'onion3'],\\n  [446, V, 'garlic64'],\\n  [460, 0, 'quic'],\\n  [477, 0, 'ws'],\\n  [478, 0, 'wss'],\\n  [479, 0, 'p2p-websocket-star'],\\n  [480, 0, 'http'],\\n  [777, V, 'memory']\\n]\\n\\nProtocols.names = {}\\nProtocols.codes = {}\\n\\n// populate tables\\nProtocols.table.map(row => {\\n  const proto = p.apply(null, row)\\n  Protocols.codes[proto.code] = proto\\n  Protocols.names[proto.name] = proto\\n})\\n\\nProtocols.object = p\\n\\nfunction p (code, size, name, resolvable, path) {\\n  return {\\n    code,\\n    size,\\n    name,\\n    resolvable: Boolean(resolvable),\\n    path: Boolean(path)\\n  }\\n}\\n\\nmodule.exports = Protocols\\n\\n},{}],499:[function(require,module,exports){\\narguments[4][40][0].apply(exports,arguments)\\n},{\\\"./util\\\":503,\\\"dup\\\":40}],500:[function(require,module,exports){\\narguments[4][41][0].apply(exports,arguments)\\n},{\\\"./base.js\\\":499,\\\"./rfc4648\\\":502,\\\"./util\\\":503,\\\"@multiformats/base-x\\\":7,\\\"dup\\\":41}],501:[function(require,module,exports){\\narguments[4][219][0].apply(exports,arguments)\\n},{\\\"./constants\\\":500,\\\"./util\\\":503,\\\"dup\\\":219}],502:[function(require,module,exports){\\narguments[4][43][0].apply(exports,arguments)\\n},{\\\"dup\\\":43}],503:[function(require,module,exports){\\narguments[4][44][0].apply(exports,arguments)\\n},{\\\"dup\\\":44,\\\"web-encoding\\\":595}],504:[function(require,module,exports){\\narguments[4][222][0].apply(exports,arguments)\\n},{\\\"dup\\\":222}],505:[function(require,module,exports){\\narguments[4][223][0].apply(exports,arguments)\\n},{\\\"dup\\\":223,\\\"multibase/src/constants\\\":500,\\\"web-encoding\\\":595}],506:[function(require,module,exports){\\narguments[4][224][0].apply(exports,arguments)\\n},{\\\"dup\\\":224,\\\"multibase/src/constants\\\":500,\\\"web-encoding\\\":595}],507:[function(require,module,exports){\\narguments[4][238][0].apply(exports,arguments)\\n},{\\\"dup\\\":238}],508:[function(require,module,exports){\\narguments[4][239][0].apply(exports,arguments)\\n},{\\\"dup\\\":239}],509:[function(require,module,exports){\\narguments[4][240][0].apply(exports,arguments)\\n},{\\\"./decode.js\\\":507,\\\"./encode.js\\\":508,\\\"./length.js\\\":510,\\\"dup\\\":240}],510:[function(require,module,exports){\\narguments[4][241][0].apply(exports,arguments)\\n},{\\\"dup\\\":241}],511:[function(require,module,exports){\\narguments[4][225][0].apply(exports,arguments)\\n},{\\\"dup\\\":225}],512:[function(require,module,exports){\\narguments[4][226][0].apply(exports,arguments)\\n},{\\\"./base-table\\\":511,\\\"dup\\\":226}],513:[function(require,module,exports){\\narguments[4][227][0].apply(exports,arguments)\\n},{\\\"./constants\\\":512,\\\"./int-table\\\":514,\\\"./print\\\":515,\\\"./util\\\":516,\\\"./varint-table\\\":517,\\\"dup\\\":227,\\\"uint8arrays/concat\\\":504,\\\"varint\\\":509}],514:[function(require,module,exports){\\narguments[4][228][0].apply(exports,arguments)\\n},{\\\"./base-table\\\":511,\\\"dup\\\":228}],515:[function(require,module,exports){\\narguments[4][229][0].apply(exports,arguments)\\n},{\\\"./base-table\\\":511,\\\"dup\\\":229}],516:[function(require,module,exports){\\narguments[4][230][0].apply(exports,arguments)\\n},{\\\"dup\\\":230,\\\"uint8arrays/from-string\\\":505,\\\"uint8arrays/to-string\\\":506,\\\"varint\\\":509}],517:[function(require,module,exports){\\narguments[4][231][0].apply(exports,arguments)\\n},{\\\"./base-table\\\":511,\\\"./util\\\":516,\\\"dup\\\":231}],518:[function(require,module,exports){\\narguments[4][205][0].apply(exports,arguments)\\n},{\\\"dup\\\":205}],519:[function(require,module,exports){\\narguments[4][236][0].apply(exports,arguments)\\n},{\\\"dup\\\":236,\\\"multibase\\\":501,\\\"web-encoding\\\":595}],520:[function(require,module,exports){\\narguments[4][207][0].apply(exports,arguments)\\n},{\\\"dup\\\":207,\\\"multibase\\\":501,\\\"web-encoding\\\":595}],521:[function(require,module,exports){\\narguments[4][238][0].apply(exports,arguments)\\n},{\\\"dup\\\":238}],522:[function(require,module,exports){\\narguments[4][239][0].apply(exports,arguments)\\n},{\\\"dup\\\":239}],523:[function(require,module,exports){\\narguments[4][240][0].apply(exports,arguments)\\n},{\\\"./decode.js\\\":521,\\\"./encode.js\\\":522,\\\"./length.js\\\":524,\\\"dup\\\":240}],524:[function(require,module,exports){\\narguments[4][241][0].apply(exports,arguments)\\n},{\\\"dup\\\":241}],525:[function(require,module,exports){\\narguments[4][49][0].apply(exports,arguments)\\n},{\\\"dup\\\":49}],526:[function(require,module,exports){\\narguments[4][233][0].apply(exports,arguments)\\n},{\\\"./constants\\\":525,\\\"dup\\\":233,\\\"multibase\\\":501,\\\"uint8arrays/concat\\\":518,\\\"uint8arrays/from-string\\\":519,\\\"uint8arrays/to-string\\\":520,\\\"varint\\\":523}],527:[function(require,module,exports){\\n(function (process,global){(function (){\\n/**\\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\\n *\\n * @version 0.8.0\\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\\n * @copyright Chen, Yi-Cyuan 2015-2018\\n * @license MIT\\n */\\n/*jslint bitwise: true */\\n(function () {\\n  'use strict';\\n\\n  var INPUT_ERROR = 'input is invalid type';\\n  var FINALIZE_ERROR = 'finalize already called';\\n  var WINDOW = typeof window === 'object';\\n  var root = WINDOW ? window : {};\\n  if (root.JS_SHA3_NO_WINDOW) {\\n    WINDOW = false;\\n  }\\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\\n  if (NODE_JS) {\\n    root = global;\\n  } else if (WEB_WORKER) {\\n    root = self;\\n  }\\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\\n  var AMD = typeof define === 'function' && define.amd;\\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\\n  var HEX_CHARS = '0123456789abcdef'.split('');\\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\\n  var PADDING = [6, 1536, 393216, 100663296];\\n  var SHIFT = [0, 8, 16, 24];\\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\\n  var BITS = [224, 256, 384, 512];\\n  var SHAKE_BITS = [128, 256];\\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\\n  var CSHAKE_BYTEPAD = {\\n    '128': 168,\\n    '256': 136\\n  };\\n\\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\\n    Array.isArray = function (obj) {\\n      return Object.prototype.toString.call(obj) === '[object Array]';\\n    };\\n  }\\n\\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\\n    ArrayBuffer.isView = function (obj) {\\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\\n    };\\n  }\\n\\n  var createOutputMethod = function (bits, padding, outputType) {\\n    return function (message) {\\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\\n    };\\n  };\\n\\n  var createShakeOutputMethod = function (bits, padding, outputType) {\\n    return function (message, outputBits) {\\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\\n    };\\n  };\\n\\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\\n    return function (message, outputBits, n, s) {\\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\\n    };\\n  };\\n\\n  var createKmacOutputMethod = function (bits, padding, outputType) {\\n    return function (key, message, outputBits, s) {\\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\\n    };\\n  };\\n\\n  var createOutputMethods = function (method, createMethod, bits, padding) {\\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\\n      var type = OUTPUT_TYPES[i];\\n      method[type] = createMethod(bits, padding, type);\\n    }\\n    return method;\\n  };\\n\\n  var createMethod = function (bits, padding) {\\n    var method = createOutputMethod(bits, padding, 'hex');\\n    method.create = function () {\\n      return new Keccak(bits, padding, bits);\\n    };\\n    method.update = function (message) {\\n      return method.create().update(message);\\n    };\\n    return createOutputMethods(method, createOutputMethod, bits, padding);\\n  };\\n\\n  var createShakeMethod = function (bits, padding) {\\n    var method = createShakeOutputMethod(bits, padding, 'hex');\\n    method.create = function (outputBits) {\\n      return new Keccak(bits, padding, outputBits);\\n    };\\n    method.update = function (message, outputBits) {\\n      return method.create(outputBits).update(message);\\n    };\\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\\n  };\\n\\n  var createCshakeMethod = function (bits, padding) {\\n    var w = CSHAKE_BYTEPAD[bits];\\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\\n    method.create = function (outputBits, n, s) {\\n      if (!n && !s) {\\n        return methods['shake' + bits].create(outputBits);\\n      } else {\\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\\n      }\\n    };\\n    method.update = function (message, outputBits, n, s) {\\n      return method.create(outputBits, n, s).update(message);\\n    };\\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\\n  };\\n\\n  var createKmacMethod = function (bits, padding) {\\n    var w = CSHAKE_BYTEPAD[bits];\\n    var method = createKmacOutputMethod(bits, padding, 'hex');\\n    method.create = function (key, outputBits, s) {\\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\\n    };\\n    method.update = function (key, message, outputBits, s) {\\n      return method.create(key, outputBits, s).update(message);\\n    };\\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\\n  };\\n\\n  var algorithms = [\\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\\n  ];\\n\\n  var methods = {}, methodNames = [];\\n\\n  for (var i = 0; i < algorithms.length; ++i) {\\n    var algorithm = algorithms[i];\\n    var bits = algorithm.bits;\\n    for (var j = 0; j < bits.length; ++j) {\\n      var methodName = algorithm.name + '_' + bits[j];\\n      methodNames.push(methodName);\\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\\n      if (algorithm.name !== 'sha3') {\\n        var newMethodName = algorithm.name + bits[j];\\n        methodNames.push(newMethodName);\\n        methods[newMethodName] = methods[methodName];\\n      }\\n    }\\n  }\\n\\n  function Keccak(bits, padding, outputBits) {\\n    this.blocks = [];\\n    this.s = [];\\n    this.padding = padding;\\n    this.outputBits = outputBits;\\n    this.reset = true;\\n    this.finalized = false;\\n    this.block = 0;\\n    this.start = 0;\\n    this.blockCount = (1600 - (bits << 1)) >> 5;\\n    this.byteCount = this.blockCount << 2;\\n    this.outputBlocks = outputBits >> 5;\\n    this.extraBytes = (outputBits & 31) >> 3;\\n\\n    for (var i = 0; i < 50; ++i) {\\n      this.s[i] = 0;\\n    }\\n  }\\n\\n  Keccak.prototype.update = function (message) {\\n    if (this.finalized) {\\n      throw new Error(FINALIZE_ERROR);\\n    }\\n    var notString, type = typeof message;\\n    if (type !== 'string') {\\n      if (type === 'object') {\\n        if (message === null) {\\n          throw new Error(INPUT_ERROR);\\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\\n          message = new Uint8Array(message);\\n        } else if (!Array.isArray(message)) {\\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\\n            throw new Error(INPUT_ERROR);\\n          }\\n        }\\n      } else {\\n        throw new Error(INPUT_ERROR);\\n      }\\n      notString = true;\\n    }\\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\\n\\n    while (index < length) {\\n      if (this.reset) {\\n        this.reset = false;\\n        blocks[0] = this.block;\\n        for (i = 1; i < blockCount + 1; ++i) {\\n          blocks[i] = 0;\\n        }\\n      }\\n      if (notString) {\\n        for (i = this.start; index < length && i < byteCount; ++index) {\\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\\n        }\\n      } else {\\n        for (i = this.start; index < length && i < byteCount; ++index) {\\n          code = message.charCodeAt(index);\\n          if (code < 0x80) {\\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\\n          } else if (code < 0x800) {\\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\n          } else if (code < 0xd800 || code >= 0xe000) {\\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\n          } else {\\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\n          }\\n        }\\n      }\\n      this.lastByteIndex = i;\\n      if (i >= byteCount) {\\n        this.start = i - byteCount;\\n        this.block = blocks[blockCount];\\n        for (i = 0; i < blockCount; ++i) {\\n          s[i] ^= blocks[i];\\n        }\\n        f(s);\\n        this.reset = true;\\n      } else {\\n        this.start = i;\\n      }\\n    }\\n    return this;\\n  };\\n\\n  Keccak.prototype.encode = function (x, right) {\\n    var o = x & 255, n = 1;\\n    var bytes = [o];\\n    x = x >> 8;\\n    o = x & 255;\\n    while (o > 0) {\\n      bytes.unshift(o);\\n      x = x >> 8;\\n      o = x & 255;\\n      ++n;\\n    }\\n    if (right) {\\n      bytes.push(n);\\n    } else {\\n      bytes.unshift(n);\\n    }\\n    this.update(bytes);\\n    return bytes.length;\\n  };\\n\\n  Keccak.prototype.encodeString = function (str) {\\n    var notString, type = typeof str;\\n    if (type !== 'string') {\\n      if (type === 'object') {\\n        if (str === null) {\\n          throw new Error(INPUT_ERROR);\\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\\n          str = new Uint8Array(str);\\n        } else if (!Array.isArray(str)) {\\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\\n            throw new Error(INPUT_ERROR);\\n          }\\n        }\\n      } else {\\n        throw new Error(INPUT_ERROR);\\n      }\\n      notString = true;\\n    }\\n    var bytes = 0, length = str.length;\\n    if (notString) {\\n      bytes = length;\\n    } else {\\n      for (var i = 0; i < str.length; ++i) {\\n        var code = str.charCodeAt(i);\\n        if (code < 0x80) {\\n          bytes += 1;\\n        } else if (code < 0x800) {\\n          bytes += 2;\\n        } else if (code < 0xd800 || code >= 0xe000) {\\n          bytes += 3;\\n        } else {\\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\\n          bytes += 4;\\n        }\\n      }\\n    }\\n    bytes += this.encode(bytes * 8);\\n    this.update(str);\\n    return bytes;\\n  };\\n\\n  Keccak.prototype.bytepad = function (strs, w) {\\n    var bytes = this.encode(w);\\n    for (var i = 0; i < strs.length; ++i) {\\n      bytes += this.encodeString(strs[i]);\\n    }\\n    var paddingBytes = w - bytes % w;\\n    var zeros = [];\\n    zeros.length = paddingBytes;\\n    this.update(zeros);\\n    return this;\\n  };\\n\\n  Keccak.prototype.finalize = function () {\\n    if (this.finalized) {\\n      return;\\n    }\\n    this.finalized = true;\\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\\n    blocks[i >> 2] |= this.padding[i & 3];\\n    if (this.lastByteIndex === this.byteCount) {\\n      blocks[0] = blocks[blockCount];\\n      for (i = 1; i < blockCount + 1; ++i) {\\n        blocks[i] = 0;\\n      }\\n    }\\n    blocks[blockCount - 1] |= 0x80000000;\\n    for (i = 0; i < blockCount; ++i) {\\n      s[i] ^= blocks[i];\\n    }\\n    f(s);\\n  };\\n\\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\\n    this.finalize();\\n\\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\\n      extraBytes = this.extraBytes, i = 0, j = 0;\\n    var hex = '', block;\\n    while (j < outputBlocks) {\\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\\n        block = s[i];\\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\\n      }\\n      if (j % blockCount === 0) {\\n        f(s);\\n        i = 0;\\n      }\\n    }\\n    if (extraBytes) {\\n      block = s[i];\\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\\n      if (extraBytes > 1) {\\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\\n      }\\n      if (extraBytes > 2) {\\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\\n      }\\n    }\\n    return hex;\\n  };\\n\\n  Keccak.prototype.arrayBuffer = function () {\\n    this.finalize();\\n\\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\\n      extraBytes = this.extraBytes, i = 0, j = 0;\\n    var bytes = this.outputBits >> 3;\\n    var buffer;\\n    if (extraBytes) {\\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\\n    } else {\\n      buffer = new ArrayBuffer(bytes);\\n    }\\n    var array = new Uint32Array(buffer);\\n    while (j < outputBlocks) {\\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\\n        array[j] = s[i];\\n      }\\n      if (j % blockCount === 0) {\\n        f(s);\\n      }\\n    }\\n    if (extraBytes) {\\n      array[i] = s[i];\\n      buffer = buffer.slice(0, bytes);\\n    }\\n    return buffer;\\n  };\\n\\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\\n\\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\\n    this.finalize();\\n\\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\\n      extraBytes = this.extraBytes, i = 0, j = 0;\\n    var array = [], offset, block;\\n    while (j < outputBlocks) {\\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\\n        offset = j << 2;\\n        block = s[i];\\n        array[offset] = block & 0xFF;\\n        array[offset + 1] = (block >> 8) & 0xFF;\\n        array[offset + 2] = (block >> 16) & 0xFF;\\n        array[offset + 3] = (block >> 24) & 0xFF;\\n      }\\n      if (j % blockCount === 0) {\\n        f(s);\\n      }\\n    }\\n    if (extraBytes) {\\n      offset = j << 2;\\n      block = s[i];\\n      array[offset] = block & 0xFF;\\n      if (extraBytes > 1) {\\n        array[offset + 1] = (block >> 8) & 0xFF;\\n      }\\n      if (extraBytes > 2) {\\n        array[offset + 2] = (block >> 16) & 0xFF;\\n      }\\n    }\\n    return array;\\n  };\\n\\n  function Kmac(bits, padding, outputBits) {\\n    Keccak.call(this, bits, padding, outputBits);\\n  }\\n\\n  Kmac.prototype = new Keccak();\\n\\n  Kmac.prototype.finalize = function () {\\n    this.encode(this.outputBits, true);\\n    return Keccak.prototype.finalize.call(this);\\n  };\\n\\n  var f = function (s) {\\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\\n    for (n = 0; n < 48; n += 2) {\\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\\n\\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\\n      s[0] ^= h;\\n      s[1] ^= l;\\n      s[10] ^= h;\\n      s[11] ^= l;\\n      s[20] ^= h;\\n      s[21] ^= l;\\n      s[30] ^= h;\\n      s[31] ^= l;\\n      s[40] ^= h;\\n      s[41] ^= l;\\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\\n      s[2] ^= h;\\n      s[3] ^= l;\\n      s[12] ^= h;\\n      s[13] ^= l;\\n      s[22] ^= h;\\n      s[23] ^= l;\\n      s[32] ^= h;\\n      s[33] ^= l;\\n      s[42] ^= h;\\n      s[43] ^= l;\\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\\n      s[4] ^= h;\\n      s[5] ^= l;\\n      s[14] ^= h;\\n      s[15] ^= l;\\n      s[24] ^= h;\\n      s[25] ^= l;\\n      s[34] ^= h;\\n      s[35] ^= l;\\n      s[44] ^= h;\\n      s[45] ^= l;\\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\\n      s[6] ^= h;\\n      s[7] ^= l;\\n      s[16] ^= h;\\n      s[17] ^= l;\\n      s[26] ^= h;\\n      s[27] ^= l;\\n      s[36] ^= h;\\n      s[37] ^= l;\\n      s[46] ^= h;\\n      s[47] ^= l;\\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\\n      s[8] ^= h;\\n      s[9] ^= l;\\n      s[18] ^= h;\\n      s[19] ^= l;\\n      s[28] ^= h;\\n      s[29] ^= l;\\n      s[38] ^= h;\\n      s[39] ^= l;\\n      s[48] ^= h;\\n      s[49] ^= l;\\n\\n      b0 = s[0];\\n      b1 = s[1];\\n      b32 = (s[11] << 4) | (s[10] >>> 28);\\n      b33 = (s[10] << 4) | (s[11] >>> 28);\\n      b14 = (s[20] << 3) | (s[21] >>> 29);\\n      b15 = (s[21] << 3) | (s[20] >>> 29);\\n      b46 = (s[31] << 9) | (s[30] >>> 23);\\n      b47 = (s[30] << 9) | (s[31] >>> 23);\\n      b28 = (s[40] << 18) | (s[41] >>> 14);\\n      b29 = (s[41] << 18) | (s[40] >>> 14);\\n      b20 = (s[2] << 1) | (s[3] >>> 31);\\n      b21 = (s[3] << 1) | (s[2] >>> 31);\\n      b2 = (s[13] << 12) | (s[12] >>> 20);\\n      b3 = (s[12] << 12) | (s[13] >>> 20);\\n      b34 = (s[22] << 10) | (s[23] >>> 22);\\n      b35 = (s[23] << 10) | (s[22] >>> 22);\\n      b16 = (s[33] << 13) | (s[32] >>> 19);\\n      b17 = (s[32] << 13) | (s[33] >>> 19);\\n      b48 = (s[42] << 2) | (s[43] >>> 30);\\n      b49 = (s[43] << 2) | (s[42] >>> 30);\\n      b40 = (s[5] << 30) | (s[4] >>> 2);\\n      b41 = (s[4] << 30) | (s[5] >>> 2);\\n      b22 = (s[14] << 6) | (s[15] >>> 26);\\n      b23 = (s[15] << 6) | (s[14] >>> 26);\\n      b4 = (s[25] << 11) | (s[24] >>> 21);\\n      b5 = (s[24] << 11) | (s[25] >>> 21);\\n      b36 = (s[34] << 15) | (s[35] >>> 17);\\n      b37 = (s[35] << 15) | (s[34] >>> 17);\\n      b18 = (s[45] << 29) | (s[44] >>> 3);\\n      b19 = (s[44] << 29) | (s[45] >>> 3);\\n      b10 = (s[6] << 28) | (s[7] >>> 4);\\n      b11 = (s[7] << 28) | (s[6] >>> 4);\\n      b42 = (s[17] << 23) | (s[16] >>> 9);\\n      b43 = (s[16] << 23) | (s[17] >>> 9);\\n      b24 = (s[26] << 25) | (s[27] >>> 7);\\n      b25 = (s[27] << 25) | (s[26] >>> 7);\\n      b6 = (s[36] << 21) | (s[37] >>> 11);\\n      b7 = (s[37] << 21) | (s[36] >>> 11);\\n      b38 = (s[47] << 24) | (s[46] >>> 8);\\n      b39 = (s[46] << 24) | (s[47] >>> 8);\\n      b30 = (s[8] << 27) | (s[9] >>> 5);\\n      b31 = (s[9] << 27) | (s[8] >>> 5);\\n      b12 = (s[18] << 20) | (s[19] >>> 12);\\n      b13 = (s[19] << 20) | (s[18] >>> 12);\\n      b44 = (s[29] << 7) | (s[28] >>> 25);\\n      b45 = (s[28] << 7) | (s[29] >>> 25);\\n      b26 = (s[38] << 8) | (s[39] >>> 24);\\n      b27 = (s[39] << 8) | (s[38] >>> 24);\\n      b8 = (s[48] << 14) | (s[49] >>> 18);\\n      b9 = (s[49] << 14) | (s[48] >>> 18);\\n\\n      s[0] = b0 ^ (~b2 & b4);\\n      s[1] = b1 ^ (~b3 & b5);\\n      s[10] = b10 ^ (~b12 & b14);\\n      s[11] = b11 ^ (~b13 & b15);\\n      s[20] = b20 ^ (~b22 & b24);\\n      s[21] = b21 ^ (~b23 & b25);\\n      s[30] = b30 ^ (~b32 & b34);\\n      s[31] = b31 ^ (~b33 & b35);\\n      s[40] = b40 ^ (~b42 & b44);\\n      s[41] = b41 ^ (~b43 & b45);\\n      s[2] = b2 ^ (~b4 & b6);\\n      s[3] = b3 ^ (~b5 & b7);\\n      s[12] = b12 ^ (~b14 & b16);\\n      s[13] = b13 ^ (~b15 & b17);\\n      s[22] = b22 ^ (~b24 & b26);\\n      s[23] = b23 ^ (~b25 & b27);\\n      s[32] = b32 ^ (~b34 & b36);\\n      s[33] = b33 ^ (~b35 & b37);\\n      s[42] = b42 ^ (~b44 & b46);\\n      s[43] = b43 ^ (~b45 & b47);\\n      s[4] = b4 ^ (~b6 & b8);\\n      s[5] = b5 ^ (~b7 & b9);\\n      s[14] = b14 ^ (~b16 & b18);\\n      s[15] = b15 ^ (~b17 & b19);\\n      s[24] = b24 ^ (~b26 & b28);\\n      s[25] = b25 ^ (~b27 & b29);\\n      s[34] = b34 ^ (~b36 & b38);\\n      s[35] = b35 ^ (~b37 & b39);\\n      s[44] = b44 ^ (~b46 & b48);\\n      s[45] = b45 ^ (~b47 & b49);\\n      s[6] = b6 ^ (~b8 & b0);\\n      s[7] = b7 ^ (~b9 & b1);\\n      s[16] = b16 ^ (~b18 & b10);\\n      s[17] = b17 ^ (~b19 & b11);\\n      s[26] = b26 ^ (~b28 & b20);\\n      s[27] = b27 ^ (~b29 & b21);\\n      s[36] = b36 ^ (~b38 & b30);\\n      s[37] = b37 ^ (~b39 & b31);\\n      s[46] = b46 ^ (~b48 & b40);\\n      s[47] = b47 ^ (~b49 & b41);\\n      s[8] = b8 ^ (~b0 & b2);\\n      s[9] = b9 ^ (~b1 & b3);\\n      s[18] = b18 ^ (~b10 & b12);\\n      s[19] = b19 ^ (~b11 & b13);\\n      s[28] = b28 ^ (~b20 & b22);\\n      s[29] = b29 ^ (~b21 & b23);\\n      s[38] = b38 ^ (~b30 & b32);\\n      s[39] = b39 ^ (~b31 & b33);\\n      s[48] = b48 ^ (~b40 & b42);\\n      s[49] = b49 ^ (~b41 & b43);\\n\\n      s[0] ^= RC[n];\\n      s[1] ^= RC[n + 1];\\n    }\\n  };\\n\\n  if (COMMON_JS) {\\n    module.exports = methods;\\n  } else {\\n    for (i = 0; i < methodNames.length; ++i) {\\n      root[methodNames[i]] = methods[methodNames[i]];\\n    }\\n    if (AMD) {\\n      define(function () {\\n        return methods;\\n      });\\n    }\\n  }\\n})();\\n\\n}).call(this)}).call(this,require('_process'),typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\n},{\\\"_process\\\":546}],528:[function(require,module,exports){\\narguments[4][206][0].apply(exports,arguments)\\n},{\\\"dup\\\":206}],529:[function(require,module,exports){\\narguments[4][223][0].apply(exports,arguments)\\n},{\\\"dup\\\":223,\\\"multibase/src/constants\\\":500,\\\"web-encoding\\\":595}],530:[function(require,module,exports){\\n'use strict'\\n\\nconst blake = require('blakejs')\\n\\nconst minB = 0xb201\\nconst minS = 0xb241\\n\\nconst blake2b = {\\n  init: blake.blake2bInit,\\n  update: blake.blake2bUpdate,\\n  digest: blake.blake2bFinal\\n}\\n\\nconst blake2s = {\\n  init: blake.blake2sInit,\\n  update: blake.blake2sUpdate,\\n  digest: blake.blake2sFinal\\n}\\n\\n// Note that although this function doesn't do any asynchronous work, we mark\\n// the function as async because it must return a Promise to match the API\\n// for other functions that do perform asynchronous work (see sha.browser.js)\\n// eslint-disable-next-line\\nconst makeB2Hash = (size, hf) => async (data) => {\\n  const ctx = hf.init(size, null)\\n  hf.update(ctx, data)\\n  return hf.digest(ctx)\\n}\\n\\nmodule.exports = (table) => {\\n  for (let i = 0; i < 64; i++) {\\n    table[minB + i] = makeB2Hash(i + 1, blake2b)\\n  }\\n  for (let i = 0; i < 32; i++) {\\n    table[minS + i] = makeB2Hash(i + 1, blake2s)\\n  }\\n}\\n\\n},{\\\"blakejs\\\":23}],531:[function(require,module,exports){\\n'use strict'\\n\\nconst sha3 = require('js-sha3')\\nconst mur = require('murmurhash3js-revisited')\\nconst { factory: sha } = require('./sha')\\nconst { fromNumberTo32BitBuf } = require('./utils')\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\n\\n// Note that although this function doesn't do any asynchronous work, we mark\\n// the function as async because it must return a Promise to match the API\\n// for other functions that do perform asynchronous work (see sha.browser.js)\\n// eslint-disable-next-line\\nconst hash = (algorithm) => async (data) => {\\n  switch (algorithm) {\\n    case 'sha3-224':\\n      return new Uint8Array(sha3.sha3_224.arrayBuffer(data))\\n    case 'sha3-256':\\n      return new Uint8Array(sha3.sha3_256.arrayBuffer(data))\\n    case 'sha3-384':\\n      return new Uint8Array(sha3.sha3_384.arrayBuffer(data))\\n    case 'sha3-512':\\n      return new Uint8Array(sha3.sha3_512.arrayBuffer(data))\\n    case 'shake-128':\\n      return new Uint8Array(sha3.shake128.create(128).update(data).arrayBuffer())\\n    case 'shake-256':\\n      return new Uint8Array(sha3.shake256.create(256).update(data).arrayBuffer())\\n    case 'keccak-224':\\n      return new Uint8Array(sha3.keccak224.arrayBuffer(data))\\n    case 'keccak-256':\\n      return new Uint8Array(sha3.keccak256.arrayBuffer(data))\\n    case 'keccak-384':\\n      return new Uint8Array(sha3.keccak384.arrayBuffer(data))\\n    case 'keccak-512':\\n      return new Uint8Array(sha3.keccak512.arrayBuffer(data))\\n    case 'murmur3-128':\\n      return uint8ArrayFromString(mur.x64.hash128(data), 'base16')\\n    case 'murmur3-32':\\n      return fromNumberTo32BitBuf(mur.x86.hash32(data))\\n\\n    default:\\n      throw new TypeError(`${algorithm} is not a supported algorithm`)\\n  }\\n}\\n\\nconst identity = data => data\\n\\nmodule.exports = {\\n  identity,\\n  sha1: sha('sha1'),\\n  sha2256: sha('sha2-256'),\\n  sha2512: sha('sha2-512'),\\n  dblSha2256: sha('dbl-sha2-256'),\\n  sha3224: hash('sha3-224'),\\n  sha3256: hash('sha3-256'),\\n  sha3384: hash('sha3-384'),\\n  sha3512: hash('sha3-512'),\\n  shake128: hash('shake-128'),\\n  shake256: hash('shake-256'),\\n  keccak224: hash('keccak-224'),\\n  keccak256: hash('keccak-256'),\\n  keccak384: hash('keccak-384'),\\n  keccak512: hash('keccak-512'),\\n  murmur3128: hash('murmur3-128'),\\n  murmur332: hash('murmur3-32'),\\n  addBlake: require('./blake')\\n}\\n\\n},{\\\"./blake\\\":530,\\\"./sha\\\":533,\\\"./utils\\\":534,\\\"js-sha3\\\":527,\\\"murmurhash3js-revisited\\\":535,\\\"uint8arrays/from-string\\\":529}],532:[function(require,module,exports){\\n'use strict'\\n\\nconst errcode = require('err-code')\\nconst multihash = require('multihashes')\\nconst crypto = require('./crypto')\\nconst equals = require('uint8arrays/equals')\\n\\n/**\\n * Hash the given `buf` using the algorithm specified by `alg`.\\n * @param {Uint8Array} buf - The value to hash.\\n * @param {number|string} alg - The algorithm to use eg 'sha1'\\n * @param {number} [length] - Optionally trim the result to this length.\\n * @returns {Promise<Uint8Array>}\\n */\\nasync function Multihashing (buf, alg, length) {\\n  const digest = await Multihashing.digest(buf, alg, length)\\n  return multihash.encode(digest, alg, length)\\n}\\n\\n/**\\n * Expose multihash itself, to avoid silly double requires.\\n */\\nMultihashing.multihash = multihash\\n\\n/**\\n * @param {Uint8Array} buf - The value to hash.\\n * @param {number|string} alg - The algorithm to use eg 'sha1'\\n * @param {number} [length] - Optionally trim the result to this length.\\n * @returns {Promise<Uint8Array>}\\n */\\nMultihashing.digest = async (buf, alg, length) => {\\n  const hash = Multihashing.createHash(alg)\\n  const digest = await hash(buf)\\n  return length ? digest.slice(0, length) : digest\\n}\\n\\n/**\\n * Creates a function that hashes with the given algorithm\\n *\\n * @param {string|number} alg - The algorithm to use eg 'sha1'\\n *\\n * @returns {function} - The hash function corresponding to `alg`\\n */\\nMultihashing.createHash = function (alg) {\\n  if (!alg) {\\n    throw errcode(new Error('hash algorithm must be specified'), 'ERR_HASH_ALGORITHM_NOT_SPECIFIED')\\n  }\\n\\n  alg = multihash.coerceCode(alg)\\n  if (!Multihashing.functions[alg]) {\\n    throw errcode(new Error(`multihash function '${alg}' not yet supported`), 'ERR_HASH_ALGORITHM_NOT_SUPPORTED')\\n  }\\n\\n  return Multihashing.functions[alg]\\n}\\n\\n/**\\n * Mapping of multihash codes to their hashing functions.\\n * @type {Object}\\n */\\nMultihashing.functions = {\\n  // identity\\n  0x00: crypto.identity,\\n  // sha1\\n  0x11: crypto.sha1,\\n  // sha2-256\\n  0x12: crypto.sha2256,\\n  // sha2-512\\n  0x13: crypto.sha2512,\\n  // sha3-512\\n  0x14: crypto.sha3512,\\n  // sha3-384\\n  0x15: crypto.sha3384,\\n  // sha3-256\\n  0x16: crypto.sha3256,\\n  // sha3-224\\n  0x17: crypto.sha3224,\\n  // shake-128\\n  0x18: crypto.shake128,\\n  // shake-256\\n  0x19: crypto.shake256,\\n  // keccak-224\\n  0x1A: crypto.keccak224,\\n  // keccak-256\\n  0x1B: crypto.keccak256,\\n  // keccak-384\\n  0x1C: crypto.keccak384,\\n  // keccak-512\\n  0x1D: crypto.keccak512,\\n  // murmur3-128\\n  0x22: crypto.murmur3128,\\n  // murmur3-32\\n  0x23: crypto.murmur332,\\n  // dbl-sha2-256\\n  0x56: crypto.dblSha2256\\n}\\n\\n// add blake functions\\ncrypto.addBlake(Multihashing.functions)\\n\\nMultihashing.validate = async (buf, hash) => {\\n  const newHash = await Multihashing(buf, multihash.decode(hash).name)\\n\\n  return equals(hash, newHash)\\n}\\n\\nmodule.exports = Multihashing\\n\\n},{\\\"./crypto\\\":531,\\\"err-code\\\":193,\\\"multihashes\\\":526,\\\"uint8arrays/equals\\\":528}],533:[function(require,module,exports){\\n/* eslint-disable require-await */\\n'use strict'\\n\\nconst multihash = require('multihashes')\\n\\nconst crypto = self.crypto || self.msCrypto\\n\\nconst digest = async (data, alg) => {\\n  if (typeof self === 'undefined' || (!self.crypto && !self.msCrypto)) {\\n    throw new Error(\\n      'Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context'\\n    )\\n  }\\n  switch (alg) {\\n    case 'sha1':\\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-1' }, data))\\n    case 'sha2-256':\\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-256' }, data))\\n    case 'sha2-512':\\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-512' }, data))\\n    case 'dbl-sha2-256': {\\n      const d = await crypto.subtle.digest({ name: 'SHA-256' }, data)\\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-256' }, d))\\n    }\\n    default:\\n      throw new Error(`${alg} is not a supported algorithm`)\\n  }\\n}\\n\\nmodule.exports = {\\n  factory: (alg) => async (data) => {\\n    return digest(data, alg)\\n  },\\n  digest,\\n  multihashing: async (buf, alg, length) => {\\n    const h = await digest(buf, alg, length)\\n    return multihash.encode(h, alg, length)\\n  }\\n}\\n\\n},{\\\"multihashes\\\":526}],534:[function(require,module,exports){\\n'use strict'\\n\\nconst fromNumberTo32BitBuf = (number) => {\\n  const bytes = new Uint8Array(4)\\n\\n  for (let i = 0; i < 4; i++) {\\n    bytes[i] = number & 0xff\\n    number = number >> 8\\n  }\\n\\n  return bytes\\n}\\n\\nmodule.exports = {\\n  fromNumberTo32BitBuf\\n}\\n\\n},{}],535:[function(require,module,exports){\\nmodule.exports = require('./lib/murmurHash3js');\\n\\n},{\\\"./lib/murmurHash3js\\\":536}],536:[function(require,module,exports){\\n/* jshint -W086: true */\\n// +----------------------------------------------------------------------+\\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\\n// |----------------------------------------------------------------------|\\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\\n// | Freely distributable under the MIT license.                          |\\n// +----------------------------------------------------------------------+\\n\\n;(function (root, undefined) {\\n    'use strict';\\n\\n    // Create a local object that'll be exported or referenced globally.\\n    var library = {\\n        'version': '3.0.0',\\n        'x86': {},\\n        'x64': {},\\n        'inputValidation': true\\n    };\\n\\n    // PRIVATE FUNCTIONS\\n    // -----------------\\n\\n    function _validBytes(bytes) {\\n        // check the input is an array or a typed array\\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\\n            return false;\\n        }\\n\\n        // check all bytes are actually bytes\\n        for (var i = 0; i < bytes.length; i++) {\\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    function _x86Multiply(m, n) {\\n        //\\n        // Given two 32bit ints, returns the two multiplied together as a\\n        // 32bit int.\\n        //\\n\\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\\n    }\\n\\n    function _x86Rotl(m, n) {\\n        //\\n        // Given a 32bit int and an int representing a number of bit positions,\\n        // returns the 32bit int rotated left by that number of positions.\\n        //\\n\\n        return (m << n) | (m >>> (32 - n));\\n    }\\n\\n    function _x86Fmix(h) {\\n        //\\n        // Given a block, returns murmurHash3's final x86 mix of that block.\\n        //\\n\\n        h ^= h >>> 16;\\n        h = _x86Multiply(h, 0x85ebca6b);\\n        h ^= h >>> 13;\\n        h = _x86Multiply(h, 0xc2b2ae35);\\n        h ^= h >>> 16;\\n\\n        return h;\\n    }\\n\\n    function _x64Add(m, n) {\\n        //\\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\\n        // added together as a 64bit int (as an array of two 32bit ints).\\n        //\\n\\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\\n        var o = [0, 0, 0, 0];\\n\\n        o[3] += m[3] + n[3];\\n        o[2] += o[3] >>> 16;\\n        o[3] &= 0xffff;\\n\\n        o[2] += m[2] + n[2];\\n        o[1] += o[2] >>> 16;\\n        o[2] &= 0xffff;\\n\\n        o[1] += m[1] + n[1];\\n        o[0] += o[1] >>> 16;\\n        o[1] &= 0xffff;\\n\\n        o[0] += m[0] + n[0];\\n        o[0] &= 0xffff;\\n\\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\\n    }\\n\\n    function _x64Multiply(m, n) {\\n        //\\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\\n        //\\n\\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\\n        var o = [0, 0, 0, 0];\\n\\n        o[3] += m[3] * n[3];\\n        o[2] += o[3] >>> 16;\\n        o[3] &= 0xffff;\\n\\n        o[2] += m[2] * n[3];\\n        o[1] += o[2] >>> 16;\\n        o[2] &= 0xffff;\\n\\n        o[2] += m[3] * n[2];\\n        o[1] += o[2] >>> 16;\\n        o[2] &= 0xffff;\\n\\n        o[1] += m[1] * n[3];\\n        o[0] += o[1] >>> 16;\\n        o[1] &= 0xffff;\\n\\n        o[1] += m[2] * n[2];\\n        o[0] += o[1] >>> 16;\\n        o[1] &= 0xffff;\\n\\n        o[1] += m[3] * n[1];\\n        o[0] += o[1] >>> 16;\\n        o[1] &= 0xffff;\\n\\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\\n        o[0] &= 0xffff;\\n\\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\\n    }\\n\\n    function _x64Rotl(m, n) {\\n        //\\n        // Given a 64bit int (as an array of two 32bit ints) and an int\\n        // representing a number of bit positions, returns the 64bit int (as an\\n        // array of two 32bit ints) rotated left by that number of positions.\\n        //\\n\\n        n %= 64;\\n\\n        if (n === 32) {\\n            return [m[1], m[0]];\\n        } else if (n < 32) {\\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\\n        } else {\\n            n -= 32;\\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\\n        }\\n    }\\n\\n    function _x64LeftShift(m, n) {\\n        //\\n        // Given a 64bit int (as an array of two 32bit ints) and an int\\n        // representing a number of bit positions, returns the 64bit int (as an\\n        // array of two 32bit ints) shifted left by that number of positions.\\n        //\\n\\n        n %= 64;\\n\\n        if (n === 0) {\\n            return m;\\n        } else if (n < 32) {\\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\\n        } else {\\n            return [m[1] << (n - 32), 0];\\n        }\\n    }\\n\\n    function _x64Xor(m, n) {\\n        //\\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\\n        // xored together as a 64bit int (as an array of two 32bit ints).\\n        //\\n\\n        return [m[0] ^ n[0], m[1] ^ n[1]];\\n    }\\n\\n    function _x64Fmix(h) {\\n        //\\n        // Given a block, returns murmurHash3's final x64 mix of that block.\\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\\n        // only place where we need to right shift 64bit ints.)\\n        //\\n\\n        h = _x64Xor(h, [0, h[0] >>> 1]);\\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\\n        h = _x64Xor(h, [0, h[0] >>> 1]);\\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\\n        h = _x64Xor(h, [0, h[0] >>> 1]);\\n\\n        return h;\\n    }\\n\\n    // PUBLIC FUNCTIONS\\n    // ----------------\\n\\n    library.x86.hash32 = function (bytes, seed) {\\n        //\\n        // Given a string and an optional seed as an int, returns a 32 bit hash\\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\\n        //\\n        if (library.inputValidation && !_validBytes(bytes)) {\\n            return undefined;\\n        }\\n        seed = seed || 0;\\n\\n        var remainder = bytes.length % 4;\\n        var blocks = bytes.length - remainder;\\n\\n        var h1 = seed;\\n\\n        var k1 = 0;\\n\\n        var c1 = 0xcc9e2d51;\\n        var c2 = 0x1b873593;\\n\\n        for (var i = 0; i < blocks; i = i + 4) {\\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\\n\\n            k1 = _x86Multiply(k1, c1);\\n            k1 = _x86Rotl(k1, 15);\\n            k1 = _x86Multiply(k1, c2);\\n\\n            h1 ^= k1;\\n            h1 = _x86Rotl(h1, 13);\\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\\n        }\\n\\n        k1 = 0;\\n\\n        switch (remainder) {\\n            case 3:\\n                k1 ^= bytes[i + 2] << 16;\\n\\n            case 2:\\n                k1 ^= bytes[i + 1] << 8;\\n\\n            case 1:\\n                k1 ^= bytes[i];\\n                k1 = _x86Multiply(k1, c1);\\n                k1 = _x86Rotl(k1, 15);\\n                k1 = _x86Multiply(k1, c2);\\n                h1 ^= k1;\\n        }\\n\\n        h1 ^= bytes.length;\\n        h1 = _x86Fmix(h1);\\n\\n        return h1 >>> 0;\\n    };\\n\\n    library.x86.hash128 = function (bytes, seed) {\\n        //\\n        // Given a string and an optional seed as an int, returns a 128 bit\\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\\n        //\\n        if (library.inputValidation && !_validBytes(bytes)) {\\n            return undefined;\\n        }\\n\\n        seed = seed || 0;\\n        var remainder = bytes.length % 16;\\n        var blocks = bytes.length - remainder;\\n\\n        var h1 = seed;\\n        var h2 = seed;\\n        var h3 = seed;\\n        var h4 = seed;\\n\\n        var k1 = 0;\\n        var k2 = 0;\\n        var k3 = 0;\\n        var k4 = 0;\\n\\n        var c1 = 0x239b961b;\\n        var c2 = 0xab0e9789;\\n        var c3 = 0x38b34ae5;\\n        var c4 = 0xa1e38b93;\\n\\n        for (var i = 0; i < blocks; i = i + 16) {\\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\\n\\n            k1 = _x86Multiply(k1, c1);\\n            k1 = _x86Rotl(k1, 15);\\n            k1 = _x86Multiply(k1, c2);\\n            h1 ^= k1;\\n\\n            h1 = _x86Rotl(h1, 19);\\n            h1 += h2;\\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\\n\\n            k2 = _x86Multiply(k2, c2);\\n            k2 = _x86Rotl(k2, 16);\\n            k2 = _x86Multiply(k2, c3);\\n            h2 ^= k2;\\n\\n            h2 = _x86Rotl(h2, 17);\\n            h2 += h3;\\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\\n\\n            k3 = _x86Multiply(k3, c3);\\n            k3 = _x86Rotl(k3, 17);\\n            k3 = _x86Multiply(k3, c4);\\n            h3 ^= k3;\\n\\n            h3 = _x86Rotl(h3, 15);\\n            h3 += h4;\\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\\n\\n            k4 = _x86Multiply(k4, c4);\\n            k4 = _x86Rotl(k4, 18);\\n            k4 = _x86Multiply(k4, c1);\\n            h4 ^= k4;\\n\\n            h4 = _x86Rotl(h4, 13);\\n            h4 += h1;\\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\\n        }\\n\\n        k1 = 0;\\n        k2 = 0;\\n        k3 = 0;\\n        k4 = 0;\\n\\n        switch (remainder) {\\n            case 15:\\n                k4 ^= bytes[i + 14] << 16;\\n\\n            case 14:\\n                k4 ^= bytes[i + 13] << 8;\\n\\n            case 13:\\n                k4 ^= bytes[i + 12];\\n                k4 = _x86Multiply(k4, c4);\\n                k4 = _x86Rotl(k4, 18);\\n                k4 = _x86Multiply(k4, c1);\\n                h4 ^= k4;\\n\\n            case 12:\\n                k3 ^= bytes[i + 11] << 24;\\n\\n            case 11:\\n                k3 ^= bytes[i + 10] << 16;\\n\\n            case 10:\\n                k3 ^= bytes[i + 9] << 8;\\n\\n            case 9:\\n                k3 ^= bytes[i + 8];\\n                k3 = _x86Multiply(k3, c3);\\n                k3 = _x86Rotl(k3, 17);\\n                k3 = _x86Multiply(k3, c4);\\n                h3 ^= k3;\\n\\n            case 8:\\n                k2 ^= bytes[i + 7] << 24;\\n\\n            case 7:\\n                k2 ^= bytes[i + 6] << 16;\\n\\n            case 6:\\n                k2 ^= bytes[i + 5] << 8;\\n\\n            case 5:\\n                k2 ^= bytes[i + 4];\\n                k2 = _x86Multiply(k2, c2);\\n                k2 = _x86Rotl(k2, 16);\\n                k2 = _x86Multiply(k2, c3);\\n                h2 ^= k2;\\n\\n            case 4:\\n                k1 ^= bytes[i + 3] << 24;\\n\\n            case 3:\\n                k1 ^= bytes[i + 2] << 16;\\n\\n            case 2:\\n                k1 ^= bytes[i + 1] << 8;\\n\\n            case 1:\\n                k1 ^= bytes[i];\\n                k1 = _x86Multiply(k1, c1);\\n                k1 = _x86Rotl(k1, 15);\\n                k1 = _x86Multiply(k1, c2);\\n                h1 ^= k1;\\n        }\\n\\n        h1 ^= bytes.length;\\n        h2 ^= bytes.length;\\n        h3 ^= bytes.length;\\n        h4 ^= bytes.length;\\n\\n        h1 += h2;\\n        h1 += h3;\\n        h1 += h4;\\n        h2 += h1;\\n        h3 += h1;\\n        h4 += h1;\\n\\n        h1 = _x86Fmix(h1);\\n        h2 = _x86Fmix(h2);\\n        h3 = _x86Fmix(h3);\\n        h4 = _x86Fmix(h4);\\n\\n        h1 += h2;\\n        h1 += h3;\\n        h1 += h4;\\n        h2 += h1;\\n        h3 += h1;\\n        h4 += h1;\\n\\n        return (\\\"00000000\\\" + (h1 >>> 0).toString(16)).slice(-8) + (\\\"00000000\\\" + (h2 >>> 0).toString(16)).slice(-8) + (\\\"00000000\\\" + (h3 >>> 0).toString(16)).slice(-8) + (\\\"00000000\\\" + (h4 >>> 0).toString(16)).slice(-8);\\n    };\\n\\n    library.x64.hash128 = function (bytes, seed) {\\n        //\\n        // Given a string and an optional seed as an int, returns a 128 bit\\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\\n        //\\n        if (library.inputValidation && !_validBytes(bytes)) {\\n            return undefined;\\n        }\\n        seed = seed || 0;\\n\\n        var remainder = bytes.length % 16;\\n        var blocks = bytes.length - remainder;\\n\\n        var h1 = [0, seed];\\n        var h2 = [0, seed];\\n\\n        var k1 = [0, 0];\\n        var k2 = [0, 0];\\n\\n        var c1 = [0x87c37b91, 0x114253d5];\\n        var c2 = [0x4cf5ad43, 0x2745937f];\\n\\n        for (var i = 0; i < blocks; i = i + 16) {\\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\\n\\n            k1 = _x64Multiply(k1, c1);\\n            k1 = _x64Rotl(k1, 31);\\n            k1 = _x64Multiply(k1, c2);\\n            h1 = _x64Xor(h1, k1);\\n\\n            h1 = _x64Rotl(h1, 27);\\n            h1 = _x64Add(h1, h2);\\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\\n\\n            k2 = _x64Multiply(k2, c2);\\n            k2 = _x64Rotl(k2, 33);\\n            k2 = _x64Multiply(k2, c1);\\n            h2 = _x64Xor(h2, k2);\\n\\n            h2 = _x64Rotl(h2, 31);\\n            h2 = _x64Add(h2, h1);\\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\\n        }\\n\\n        k1 = [0, 0];\\n        k2 = [0, 0];\\n\\n        switch (remainder) {\\n            case 15:\\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\\n\\n            case 14:\\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\\n\\n            case 13:\\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\\n\\n            case 12:\\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\\n\\n            case 11:\\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\\n\\n            case 10:\\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\\n\\n            case 9:\\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\\n                k2 = _x64Multiply(k2, c2);\\n                k2 = _x64Rotl(k2, 33);\\n                k2 = _x64Multiply(k2, c1);\\n                h2 = _x64Xor(h2, k2);\\n\\n            case 8:\\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\\n\\n            case 7:\\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\\n\\n            case 6:\\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\\n\\n            case 5:\\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\\n\\n            case 4:\\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\\n\\n            case 3:\\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\\n\\n            case 2:\\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\\n\\n            case 1:\\n                k1 = _x64Xor(k1, [0, bytes[i]]);\\n                k1 = _x64Multiply(k1, c1);\\n                k1 = _x64Rotl(k1, 31);\\n                k1 = _x64Multiply(k1, c2);\\n                h1 = _x64Xor(h1, k1);\\n        }\\n\\n        h1 = _x64Xor(h1, [0, bytes.length]);\\n        h2 = _x64Xor(h2, [0, bytes.length]);\\n\\n        h1 = _x64Add(h1, h2);\\n        h2 = _x64Add(h2, h1);\\n\\n        h1 = _x64Fmix(h1);\\n        h2 = _x64Fmix(h2);\\n\\n        h1 = _x64Add(h1, h2);\\n        h2 = _x64Add(h2, h1);\\n\\n        return (\\\"00000000\\\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\\\"00000000\\\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\\\"00000000\\\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\\\"00000000\\\" + (h2[1] >>> 0).toString(16)).slice(-8);\\n    };\\n\\n    // INITIALIZATION\\n    // --------------\\n\\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\\n    // of the global object.\\n    if (typeof exports !== 'undefined') {\\n\\n        if (typeof module !== 'undefined' && module.exports) {\\n            exports = module.exports = library;\\n        }\\n\\n        exports.murmurHash3 = library;\\n\\n    } else if (typeof define === 'function' && define.amd) {\\n\\n        define([], function () {\\n            return library;\\n        });\\n    } else {\\n\\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\\n        // original value. Returns a reference to the library object, to allow\\n        // it to be used under a different name.\\n        library._murmurHash3 = root.murmurHash3;\\n\\n        library.noConflict = function () {\\n            root.murmurHash3 = library._murmurHash3;\\n            library._murmurHash3 = undefined;\\n            library.noConflict = undefined;\\n\\n            return library;\\n        };\\n\\n        root.murmurHash3 = library;\\n    }\\n})(this);\\n\\n},{}],537:[function(require,module,exports){\\n'use strict'\\n\\nlet impl\\n\\nif (globalThis.AbortController && globalThis.AbortSignal) {\\n  impl = globalThis\\n} else {\\n  impl = require('abort-controller')\\n}\\n\\nmodule.exports = {\\n  AbortController: impl.AbortController,\\n  AbortSignal: impl.AbortSignal\\n}\\n\\n},{\\\"abort-controller\\\":8}],538:[function(require,module,exports){\\n'use strict'\\n\\nconst globalThis = require('globalthis')()\\n\\nif (globalThis.fetch && globalThis.Headers && globalThis.Request && globalThis.Response) {\\n  module.exports = function fetch (...args) {\\n    return globalThis.fetch(...args)\\n  }\\n  module.exports.Headers = globalThis.Headers\\n  module.exports.Request = globalThis.Request\\n  module.exports.Response = globalThis.Response\\n  module.exports.default = module.exports\\n} else {\\n  module.exports = require('node-fetch')\\n}\\n\\n},{\\\"globalthis\\\":200,\\\"node-fetch\\\":539}],539:[function(require,module,exports){\\n(function (global){(function (){\\n\\\"use strict\\\";\\n\\n// ref: https://github.com/tc39/proposal-global\\nvar getGlobal = function () {\\n\\t// the only reliable means to get the global object is\\n\\t// `Function('return this')()`\\n\\t// However, this causes CSP violations in Chrome apps.\\n\\tif (typeof self !== 'undefined') { return self; }\\n\\tif (typeof window !== 'undefined') { return window; }\\n\\tif (typeof global !== 'undefined') { return global; }\\n\\tthrow new Error('unable to locate global object');\\n}\\n\\nvar global = getGlobal();\\n\\nmodule.exports = exports = global.fetch;\\n\\n// Needed for TypeScript and Webpack.\\nif (global.fetch) {\\n\\texports.default = global.fetch.bind(global);\\n}\\n\\nexports.Headers = global.Headers;\\nexports.Request = global.Request;\\nexports.Response = global.Response;\\n}).call(this)}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\n},{}],540:[function(require,module,exports){\\n'use strict';\\n\\nvar keysShim;\\nif (!Object.keys) {\\n\\t// modified from https://github.com/es-shims/es5-shim\\n\\tvar has = Object.prototype.hasOwnProperty;\\n\\tvar toStr = Object.prototype.toString;\\n\\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\\n\\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\\n\\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\\n\\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\\n\\tvar dontEnums = [\\n\\t\\t'toString',\\n\\t\\t'toLocaleString',\\n\\t\\t'valueOf',\\n\\t\\t'hasOwnProperty',\\n\\t\\t'isPrototypeOf',\\n\\t\\t'propertyIsEnumerable',\\n\\t\\t'constructor'\\n\\t];\\n\\tvar equalsConstructorPrototype = function (o) {\\n\\t\\tvar ctor = o.constructor;\\n\\t\\treturn ctor && ctor.prototype === o;\\n\\t};\\n\\tvar excludedKeys = {\\n\\t\\t$applicationCache: true,\\n\\t\\t$console: true,\\n\\t\\t$external: true,\\n\\t\\t$frame: true,\\n\\t\\t$frameElement: true,\\n\\t\\t$frames: true,\\n\\t\\t$innerHeight: true,\\n\\t\\t$innerWidth: true,\\n\\t\\t$onmozfullscreenchange: true,\\n\\t\\t$onmozfullscreenerror: true,\\n\\t\\t$outerHeight: true,\\n\\t\\t$outerWidth: true,\\n\\t\\t$pageXOffset: true,\\n\\t\\t$pageYOffset: true,\\n\\t\\t$parent: true,\\n\\t\\t$scrollLeft: true,\\n\\t\\t$scrollTop: true,\\n\\t\\t$scrollX: true,\\n\\t\\t$scrollY: true,\\n\\t\\t$self: true,\\n\\t\\t$webkitIndexedDB: true,\\n\\t\\t$webkitStorageInfo: true,\\n\\t\\t$window: true\\n\\t};\\n\\tvar hasAutomationEqualityBug = (function () {\\n\\t\\t/* global window */\\n\\t\\tif (typeof window === 'undefined') { return false; }\\n\\t\\tfor (var k in window) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\\n\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\tequalsConstructorPrototype(window[k]);\\n\\t\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}());\\n\\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\\n\\t\\t/* global window */\\n\\t\\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\\n\\t\\t\\treturn equalsConstructorPrototype(o);\\n\\t\\t}\\n\\t\\ttry {\\n\\t\\t\\treturn equalsConstructorPrototype(o);\\n\\t\\t} catch (e) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t};\\n\\n\\tkeysShim = function keys(object) {\\n\\t\\tvar isObject = object !== null && typeof object === 'object';\\n\\t\\tvar isFunction = toStr.call(object) === '[object Function]';\\n\\t\\tvar isArguments = isArgs(object);\\n\\t\\tvar isString = isObject && toStr.call(object) === '[object String]';\\n\\t\\tvar theKeys = [];\\n\\n\\t\\tif (!isObject && !isFunction && !isArguments) {\\n\\t\\t\\tthrow new TypeError('Object.keys called on a non-object');\\n\\t\\t}\\n\\n\\t\\tvar skipProto = hasProtoEnumBug && isFunction;\\n\\t\\tif (isString && object.length > 0 && !has.call(object, 0)) {\\n\\t\\t\\tfor (var i = 0; i < object.length; ++i) {\\n\\t\\t\\t\\ttheKeys.push(String(i));\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (isArguments && object.length > 0) {\\n\\t\\t\\tfor (var j = 0; j < object.length; ++j) {\\n\\t\\t\\t\\ttheKeys.push(String(j));\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tfor (var name in object) {\\n\\t\\t\\t\\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\\n\\t\\t\\t\\t\\ttheKeys.push(String(name));\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (hasDontEnumBug) {\\n\\t\\t\\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\\n\\n\\t\\t\\tfor (var k = 0; k < dontEnums.length; ++k) {\\n\\t\\t\\t\\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\\n\\t\\t\\t\\t\\ttheKeys.push(dontEnums[k]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn theKeys;\\n\\t};\\n}\\nmodule.exports = keysShim;\\n\\n},{\\\"./isArguments\\\":542}],541:[function(require,module,exports){\\n'use strict';\\n\\nvar slice = Array.prototype.slice;\\nvar isArgs = require('./isArguments');\\n\\nvar origKeys = Object.keys;\\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\\n\\nvar originalKeys = Object.keys;\\n\\nkeysShim.shim = function shimObjectKeys() {\\n\\tif (Object.keys) {\\n\\t\\tvar keysWorksWithArguments = (function () {\\n\\t\\t\\t// Safari 5.0 bug\\n\\t\\t\\tvar args = Object.keys(arguments);\\n\\t\\t\\treturn args && args.length === arguments.length;\\n\\t\\t}(1, 2));\\n\\t\\tif (!keysWorksWithArguments) {\\n\\t\\t\\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\\n\\t\\t\\t\\tif (isArgs(object)) {\\n\\t\\t\\t\\t\\treturn originalKeys(slice.call(object));\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn originalKeys(object);\\n\\t\\t\\t};\\n\\t\\t}\\n\\t} else {\\n\\t\\tObject.keys = keysShim;\\n\\t}\\n\\treturn Object.keys || keysShim;\\n};\\n\\nmodule.exports = keysShim;\\n\\n},{\\\"./implementation\\\":540,\\\"./isArguments\\\":542}],542:[function(require,module,exports){\\n'use strict';\\n\\nvar toStr = Object.prototype.toString;\\n\\nmodule.exports = function isArguments(value) {\\n\\tvar str = toStr.call(value);\\n\\tvar isArgs = str === '[object Arguments]';\\n\\tif (!isArgs) {\\n\\t\\tisArgs = str !== '[object Array]' &&\\n\\t\\t\\tvalue !== null &&\\n\\t\\t\\ttypeof value === 'object' &&\\n\\t\\t\\ttypeof value.length === 'number' &&\\n\\t\\t\\tvalue.length >= 0 &&\\n\\t\\t\\ttoStr.call(value.callee) === '[object Function]';\\n\\t}\\n\\treturn isArgs;\\n};\\n\\n},{}],543:[function(require,module,exports){\\n'use strict';\\n\\nconst pDefer = () => {\\n\\tconst deferred = {};\\n\\n\\tdeferred.promise = new Promise((resolve, reject) => {\\n\\t\\tdeferred.resolve = resolve;\\n\\t\\tdeferred.reject = reject;\\n\\t});\\n\\n\\treturn deferred;\\n};\\n\\nmodule.exports = pDefer;\\n\\n},{}],544:[function(require,module,exports){\\n'use strict'\\r\\n\\r\\nvar duration = /(-?(?:\\\\d+\\\\.?\\\\d*|\\\\d*\\\\.?\\\\d+)(?:e[-+]?\\\\d+)?)\\\\s*([a-zµμ]*)/ig\\r\\n\\r\\nmodule.exports = parse\\r\\n// enable default import syntax in typescript\\r\\nmodule.exports.default = parse\\r\\n\\r\\n/**\\r\\n * conversion ratios\\r\\n */\\r\\n\\r\\nparse.nanosecond =\\r\\nparse.ns = 1 / 1e6\\r\\n\\r\\nparse['µs'] =\\r\\nparse['μs'] =\\r\\nparse.us =\\r\\nparse.microsecond = 1 / 1e3\\r\\n\\r\\nparse.millisecond =\\r\\nparse.ms = 1\\r\\n\\r\\nparse.second =\\r\\nparse.sec =\\r\\nparse.s = parse.ms * 1000\\r\\n\\r\\nparse.minute =\\r\\nparse.min =\\r\\nparse.m = parse.s * 60\\r\\n\\r\\nparse.hour =\\r\\nparse.hr =\\r\\nparse.h = parse.m * 60\\r\\n\\r\\nparse.day =\\r\\nparse.d = parse.h * 24\\r\\n\\r\\nparse.week =\\r\\nparse.wk =\\r\\nparse.w = parse.d * 7\\r\\n\\r\\nparse.month =\\r\\nparse.b =\\r\\nparse.d * (365.25 / 12)\\r\\n\\r\\nparse.year =\\r\\nparse.yr =\\r\\nparse.y = parse.d * 365.25\\r\\n\\r\\n/**\\r\\n * convert `str` to ms\\r\\n *\\r\\n * @param {String} str\\r\\n * @param {String} format\\r\\n * @return {Number}\\r\\n */\\r\\n\\r\\nfunction parse(str='', format='ms'){\\r\\n  var result = null\\r\\n  // ignore commas\\r\\n  str = str.replace(/(\\\\d),(\\\\d)/g, '$1$2')\\r\\n  str.replace(duration, function(_, n, units){\\r\\n    units = parse[units] || parse[units.toLowerCase().replace(/s$/, '')]\\r\\n    if (units) result = (result || 0) + parseFloat(n, 10) * units\\r\\n  })\\r\\n\\r\\n  return result && (result / parse[format])\\r\\n}\\r\\n\\n},{}],545:[function(require,module,exports){\\n(function (process){(function (){\\n// 'path' module extracted from Node.js v8.11.1 (only the posix part)\\n// transplited with Babel\\n\\n// Copyright Joyent, Inc. and other Node contributors.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a\\n// copy of this software and associated documentation files (the\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\n// without limitation the rights to use, copy, modify, merge, publish,\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\n// persons to whom the Software is furnished to do so, subject to the\\n// following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included\\n// in all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\n'use strict';\\n\\nfunction assertPath(path) {\\n  if (typeof path !== 'string') {\\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\\n  }\\n}\\n\\n// Resolves . and .. elements in a path with directory names\\nfunction normalizeStringPosix(path, allowAboveRoot) {\\n  var res = '';\\n  var lastSegmentLength = 0;\\n  var lastSlash = -1;\\n  var dots = 0;\\n  var code;\\n  for (var i = 0; i <= path.length; ++i) {\\n    if (i < path.length)\\n      code = path.charCodeAt(i);\\n    else if (code === 47 /*/*/)\\n      break;\\n    else\\n      code = 47 /*/*/;\\n    if (code === 47 /*/*/) {\\n      if (lastSlash === i - 1 || dots === 1) {\\n        // NOOP\\n      } else if (lastSlash !== i - 1 && dots === 2) {\\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\\n          if (res.length > 2) {\\n            var lastSlashIndex = res.lastIndexOf('/');\\n            if (lastSlashIndex !== res.length - 1) {\\n              if (lastSlashIndex === -1) {\\n                res = '';\\n                lastSegmentLength = 0;\\n              } else {\\n                res = res.slice(0, lastSlashIndex);\\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\\n              }\\n              lastSlash = i;\\n              dots = 0;\\n              continue;\\n            }\\n          } else if (res.length === 2 || res.length === 1) {\\n            res = '';\\n            lastSegmentLength = 0;\\n            lastSlash = i;\\n            dots = 0;\\n            continue;\\n          }\\n        }\\n        if (allowAboveRoot) {\\n          if (res.length > 0)\\n            res += '/..';\\n          else\\n            res = '..';\\n          lastSegmentLength = 2;\\n        }\\n      } else {\\n        if (res.length > 0)\\n          res += '/' + path.slice(lastSlash + 1, i);\\n        else\\n          res = path.slice(lastSlash + 1, i);\\n        lastSegmentLength = i - lastSlash - 1;\\n      }\\n      lastSlash = i;\\n      dots = 0;\\n    } else if (code === 46 /*.*/ && dots !== -1) {\\n      ++dots;\\n    } else {\\n      dots = -1;\\n    }\\n  }\\n  return res;\\n}\\n\\nfunction _format(sep, pathObject) {\\n  var dir = pathObject.dir || pathObject.root;\\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\\n  if (!dir) {\\n    return base;\\n  }\\n  if (dir === pathObject.root) {\\n    return dir + base;\\n  }\\n  return dir + sep + base;\\n}\\n\\nvar posix = {\\n  // path.resolve([from ...], to)\\n  resolve: function resolve() {\\n    var resolvedPath = '';\\n    var resolvedAbsolute = false;\\n    var cwd;\\n\\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\\n      var path;\\n      if (i >= 0)\\n        path = arguments[i];\\n      else {\\n        if (cwd === undefined)\\n          cwd = process.cwd();\\n        path = cwd;\\n      }\\n\\n      assertPath(path);\\n\\n      // Skip empty entries\\n      if (path.length === 0) {\\n        continue;\\n      }\\n\\n      resolvedPath = path + '/' + resolvedPath;\\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\\n    }\\n\\n    // At this point the path should be resolved to a full absolute path, but\\n    // handle relative paths to be safe (might happen when process.cwd() fails)\\n\\n    // Normalize the path\\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\\n\\n    if (resolvedAbsolute) {\\n      if (resolvedPath.length > 0)\\n        return '/' + resolvedPath;\\n      else\\n        return '/';\\n    } else if (resolvedPath.length > 0) {\\n      return resolvedPath;\\n    } else {\\n      return '.';\\n    }\\n  },\\n\\n  normalize: function normalize(path) {\\n    assertPath(path);\\n\\n    if (path.length === 0) return '.';\\n\\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\\n\\n    // Normalize the path\\n    path = normalizeStringPosix(path, !isAbsolute);\\n\\n    if (path.length === 0 && !isAbsolute) path = '.';\\n    if (path.length > 0 && trailingSeparator) path += '/';\\n\\n    if (isAbsolute) return '/' + path;\\n    return path;\\n  },\\n\\n  isAbsolute: function isAbsolute(path) {\\n    assertPath(path);\\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\\n  },\\n\\n  join: function join() {\\n    if (arguments.length === 0)\\n      return '.';\\n    var joined;\\n    for (var i = 0; i < arguments.length; ++i) {\\n      var arg = arguments[i];\\n      assertPath(arg);\\n      if (arg.length > 0) {\\n        if (joined === undefined)\\n          joined = arg;\\n        else\\n          joined += '/' + arg;\\n      }\\n    }\\n    if (joined === undefined)\\n      return '.';\\n    return posix.normalize(joined);\\n  },\\n\\n  relative: function relative(from, to) {\\n    assertPath(from);\\n    assertPath(to);\\n\\n    if (from === to) return '';\\n\\n    from = posix.resolve(from);\\n    to = posix.resolve(to);\\n\\n    if (from === to) return '';\\n\\n    // Trim any leading backslashes\\n    var fromStart = 1;\\n    for (; fromStart < from.length; ++fromStart) {\\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\\n        break;\\n    }\\n    var fromEnd = from.length;\\n    var fromLen = fromEnd - fromStart;\\n\\n    // Trim any leading backslashes\\n    var toStart = 1;\\n    for (; toStart < to.length; ++toStart) {\\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\\n        break;\\n    }\\n    var toEnd = to.length;\\n    var toLen = toEnd - toStart;\\n\\n    // Compare paths to find the longest common path from root\\n    var length = fromLen < toLen ? fromLen : toLen;\\n    var lastCommonSep = -1;\\n    var i = 0;\\n    for (; i <= length; ++i) {\\n      if (i === length) {\\n        if (toLen > length) {\\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\\n            // We get here if `from` is the exact base path for `to`.\\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\\n            return to.slice(toStart + i + 1);\\n          } else if (i === 0) {\\n            // We get here if `from` is the root\\n            // For example: from='/'; to='/foo'\\n            return to.slice(toStart + i);\\n          }\\n        } else if (fromLen > length) {\\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\\n            // We get here if `to` is the exact base path for `from`.\\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\\n            lastCommonSep = i;\\n          } else if (i === 0) {\\n            // We get here if `to` is the root.\\n            // For example: from='/foo'; to='/'\\n            lastCommonSep = 0;\\n          }\\n        }\\n        break;\\n      }\\n      var fromCode = from.charCodeAt(fromStart + i);\\n      var toCode = to.charCodeAt(toStart + i);\\n      if (fromCode !== toCode)\\n        break;\\n      else if (fromCode === 47 /*/*/)\\n        lastCommonSep = i;\\n    }\\n\\n    var out = '';\\n    // Generate the relative path based on the path difference between `to`\\n    // and `from`\\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\\n        if (out.length === 0)\\n          out += '..';\\n        else\\n          out += '/..';\\n      }\\n    }\\n\\n    // Lastly, append the rest of the destination (`to`) path that comes after\\n    // the common path parts\\n    if (out.length > 0)\\n      return out + to.slice(toStart + lastCommonSep);\\n    else {\\n      toStart += lastCommonSep;\\n      if (to.charCodeAt(toStart) === 47 /*/*/)\\n        ++toStart;\\n      return to.slice(toStart);\\n    }\\n  },\\n\\n  _makeLong: function _makeLong(path) {\\n    return path;\\n  },\\n\\n  dirname: function dirname(path) {\\n    assertPath(path);\\n    if (path.length === 0) return '.';\\n    var code = path.charCodeAt(0);\\n    var hasRoot = code === 47 /*/*/;\\n    var end = -1;\\n    var matchedSlash = true;\\n    for (var i = path.length - 1; i >= 1; --i) {\\n      code = path.charCodeAt(i);\\n      if (code === 47 /*/*/) {\\n          if (!matchedSlash) {\\n            end = i;\\n            break;\\n          }\\n        } else {\\n        // We saw the first non-path separator\\n        matchedSlash = false;\\n      }\\n    }\\n\\n    if (end === -1) return hasRoot ? '/' : '.';\\n    if (hasRoot && end === 1) return '//';\\n    return path.slice(0, end);\\n  },\\n\\n  basename: function basename(path, ext) {\\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\\\"ext\\\" argument must be a string');\\n    assertPath(path);\\n\\n    var start = 0;\\n    var end = -1;\\n    var matchedSlash = true;\\n    var i;\\n\\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\\n      if (ext.length === path.length && ext === path) return '';\\n      var extIdx = ext.length - 1;\\n      var firstNonSlashEnd = -1;\\n      for (i = path.length - 1; i >= 0; --i) {\\n        var code = path.charCodeAt(i);\\n        if (code === 47 /*/*/) {\\n            // If we reached a path separator that was not part of a set of path\\n            // separators at the end of the string, stop now\\n            if (!matchedSlash) {\\n              start = i + 1;\\n              break;\\n            }\\n          } else {\\n          if (firstNonSlashEnd === -1) {\\n            // We saw the first non-path separator, remember this index in case\\n            // we need it if the extension ends up not matching\\n            matchedSlash = false;\\n            firstNonSlashEnd = i + 1;\\n          }\\n          if (extIdx >= 0) {\\n            // Try to match the explicit extension\\n            if (code === ext.charCodeAt(extIdx)) {\\n              if (--extIdx === -1) {\\n                // We matched the extension, so mark this as the end of our path\\n                // component\\n                end = i;\\n              }\\n            } else {\\n              // Extension does not match, so our result is the entire path\\n              // component\\n              extIdx = -1;\\n              end = firstNonSlashEnd;\\n            }\\n          }\\n        }\\n      }\\n\\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\\n      return path.slice(start, end);\\n    } else {\\n      for (i = path.length - 1; i >= 0; --i) {\\n        if (path.charCodeAt(i) === 47 /*/*/) {\\n            // If we reached a path separator that was not part of a set of path\\n            // separators at the end of the string, stop now\\n            if (!matchedSlash) {\\n              start = i + 1;\\n              break;\\n            }\\n          } else if (end === -1) {\\n          // We saw the first non-path separator, mark this as the end of our\\n          // path component\\n          matchedSlash = false;\\n          end = i + 1;\\n        }\\n      }\\n\\n      if (end === -1) return '';\\n      return path.slice(start, end);\\n    }\\n  },\\n\\n  extname: function extname(path) {\\n    assertPath(path);\\n    var startDot = -1;\\n    var startPart = 0;\\n    var end = -1;\\n    var matchedSlash = true;\\n    // Track the state of characters (if any) we see before our first dot and\\n    // after any path separator we find\\n    var preDotState = 0;\\n    for (var i = path.length - 1; i >= 0; --i) {\\n      var code = path.charCodeAt(i);\\n      if (code === 47 /*/*/) {\\n          // If we reached a path separator that was not part of a set of path\\n          // separators at the end of the string, stop now\\n          if (!matchedSlash) {\\n            startPart = i + 1;\\n            break;\\n          }\\n          continue;\\n        }\\n      if (end === -1) {\\n        // We saw the first non-path separator, mark this as the end of our\\n        // extension\\n        matchedSlash = false;\\n        end = i + 1;\\n      }\\n      if (code === 46 /*.*/) {\\n          // If this is our first dot, mark it as the start of our extension\\n          if (startDot === -1)\\n            startDot = i;\\n          else if (preDotState !== 1)\\n            preDotState = 1;\\n      } else if (startDot !== -1) {\\n        // We saw a non-dot and non-path separator before our dot, so we should\\n        // have a good chance at having a non-empty extension\\n        preDotState = -1;\\n      }\\n    }\\n\\n    if (startDot === -1 || end === -1 ||\\n        // We saw a non-dot character immediately before the dot\\n        preDotState === 0 ||\\n        // The (right-most) trimmed path component is exactly '..'\\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\\n      return '';\\n    }\\n    return path.slice(startDot, end);\\n  },\\n\\n  format: function format(pathObject) {\\n    if (pathObject === null || typeof pathObject !== 'object') {\\n      throw new TypeError('The \\\"pathObject\\\" argument must be of type Object. Received type ' + typeof pathObject);\\n    }\\n    return _format('/', pathObject);\\n  },\\n\\n  parse: function parse(path) {\\n    assertPath(path);\\n\\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\\n    if (path.length === 0) return ret;\\n    var code = path.charCodeAt(0);\\n    var isAbsolute = code === 47 /*/*/;\\n    var start;\\n    if (isAbsolute) {\\n      ret.root = '/';\\n      start = 1;\\n    } else {\\n      start = 0;\\n    }\\n    var startDot = -1;\\n    var startPart = 0;\\n    var end = -1;\\n    var matchedSlash = true;\\n    var i = path.length - 1;\\n\\n    // Track the state of characters (if any) we see before our first dot and\\n    // after any path separator we find\\n    var preDotState = 0;\\n\\n    // Get non-dir info\\n    for (; i >= start; --i) {\\n      code = path.charCodeAt(i);\\n      if (code === 47 /*/*/) {\\n          // If we reached a path separator that was not part of a set of path\\n          // separators at the end of the string, stop now\\n          if (!matchedSlash) {\\n            startPart = i + 1;\\n            break;\\n          }\\n          continue;\\n        }\\n      if (end === -1) {\\n        // We saw the first non-path separator, mark this as the end of our\\n        // extension\\n        matchedSlash = false;\\n        end = i + 1;\\n      }\\n      if (code === 46 /*.*/) {\\n          // If this is our first dot, mark it as the start of our extension\\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\\n        } else if (startDot !== -1) {\\n        // We saw a non-dot and non-path separator before our dot, so we should\\n        // have a good chance at having a non-empty extension\\n        preDotState = -1;\\n      }\\n    }\\n\\n    if (startDot === -1 || end === -1 ||\\n    // We saw a non-dot character immediately before the dot\\n    preDotState === 0 ||\\n    // The (right-most) trimmed path component is exactly '..'\\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\\n      if (end !== -1) {\\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\\n      }\\n    } else {\\n      if (startPart === 0 && isAbsolute) {\\n        ret.name = path.slice(1, startDot);\\n        ret.base = path.slice(1, end);\\n      } else {\\n        ret.name = path.slice(startPart, startDot);\\n        ret.base = path.slice(startPart, end);\\n      }\\n      ret.ext = path.slice(startDot, end);\\n    }\\n\\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\\n\\n    return ret;\\n  },\\n\\n  sep: '/',\\n  delimiter: ':',\\n  win32: null,\\n  posix: null\\n};\\n\\nposix.posix = posix;\\n\\nmodule.exports = posix;\\n\\n}).call(this)}).call(this,require('_process'))\\n},{\\\"_process\\\":546}],546:[function(require,module,exports){\\n// shim for using process in browser\\nvar process = module.exports = {};\\n\\n// cached from whatever global is present so that test runners that stub it\\n// don't break things.  But we need to wrap it in a try catch in case it is\\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\\n// function because try/catches deoptimize in certain engines.\\n\\nvar cachedSetTimeout;\\nvar cachedClearTimeout;\\n\\nfunction defaultSetTimout() {\\n    throw new Error('setTimeout has not been defined');\\n}\\nfunction defaultClearTimeout () {\\n    throw new Error('clearTimeout has not been defined');\\n}\\n(function () {\\n    try {\\n        if (typeof setTimeout === 'function') {\\n            cachedSetTimeout = setTimeout;\\n        } else {\\n            cachedSetTimeout = defaultSetTimout;\\n        }\\n    } catch (e) {\\n        cachedSetTimeout = defaultSetTimout;\\n    }\\n    try {\\n        if (typeof clearTimeout === 'function') {\\n            cachedClearTimeout = clearTimeout;\\n        } else {\\n            cachedClearTimeout = defaultClearTimeout;\\n        }\\n    } catch (e) {\\n        cachedClearTimeout = defaultClearTimeout;\\n    }\\n} ())\\nfunction runTimeout(fun) {\\n    if (cachedSetTimeout === setTimeout) {\\n        //normal enviroments in sane situations\\n        return setTimeout(fun, 0);\\n    }\\n    // if setTimeout wasn't available but was latter defined\\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\\n        cachedSetTimeout = setTimeout;\\n        return setTimeout(fun, 0);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedSetTimeout(fun, 0);\\n    } catch(e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\\n            return cachedSetTimeout.call(null, fun, 0);\\n        } catch(e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\\n            return cachedSetTimeout.call(this, fun, 0);\\n        }\\n    }\\n\\n\\n}\\nfunction runClearTimeout(marker) {\\n    if (cachedClearTimeout === clearTimeout) {\\n        //normal enviroments in sane situations\\n        return clearTimeout(marker);\\n    }\\n    // if clearTimeout wasn't available but was latter defined\\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\\n        cachedClearTimeout = clearTimeout;\\n        return clearTimeout(marker);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedClearTimeout(marker);\\n    } catch (e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\\n            return cachedClearTimeout.call(null, marker);\\n        } catch (e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\\n            return cachedClearTimeout.call(this, marker);\\n        }\\n    }\\n\\n\\n\\n}\\nvar queue = [];\\nvar draining = false;\\nvar currentQueue;\\nvar queueIndex = -1;\\n\\nfunction cleanUpNextTick() {\\n    if (!draining || !currentQueue) {\\n        return;\\n    }\\n    draining = false;\\n    if (currentQueue.length) {\\n        queue = currentQueue.concat(queue);\\n    } else {\\n        queueIndex = -1;\\n    }\\n    if (queue.length) {\\n        drainQueue();\\n    }\\n}\\n\\nfunction drainQueue() {\\n    if (draining) {\\n        return;\\n    }\\n    var timeout = runTimeout(cleanUpNextTick);\\n    draining = true;\\n\\n    var len = queue.length;\\n    while(len) {\\n        currentQueue = queue;\\n        queue = [];\\n        while (++queueIndex < len) {\\n            if (currentQueue) {\\n                currentQueue[queueIndex].run();\\n            }\\n        }\\n        queueIndex = -1;\\n        len = queue.length;\\n    }\\n    currentQueue = null;\\n    draining = false;\\n    runClearTimeout(timeout);\\n}\\n\\nprocess.nextTick = function (fun) {\\n    var args = new Array(arguments.length - 1);\\n    if (arguments.length > 1) {\\n        for (var i = 1; i < arguments.length; i++) {\\n            args[i - 1] = arguments[i];\\n        }\\n    }\\n    queue.push(new Item(fun, args));\\n    if (queue.length === 1 && !draining) {\\n        runTimeout(drainQueue);\\n    }\\n};\\n\\n// v8 likes predictible objects\\nfunction Item(fun, array) {\\n    this.fun = fun;\\n    this.array = array;\\n}\\nItem.prototype.run = function () {\\n    this.fun.apply(null, this.array);\\n};\\nprocess.title = 'browser';\\nprocess.browser = true;\\nprocess.env = {};\\nprocess.argv = [];\\nprocess.version = ''; // empty string to avoid regexp issues\\nprocess.versions = {};\\n\\nfunction noop() {}\\n\\nprocess.on = noop;\\nprocess.addListener = noop;\\nprocess.once = noop;\\nprocess.off = noop;\\nprocess.removeListener = noop;\\nprocess.removeAllListeners = noop;\\nprocess.emit = noop;\\nprocess.prependListener = noop;\\nprocess.prependOnceListener = noop;\\n\\nprocess.listeners = function (name) { return [] }\\n\\nprocess.binding = function (name) {\\n    throw new Error('process.binding is not supported');\\n};\\n\\nprocess.cwd = function () { return '/' };\\nprocess.chdir = function (dir) {\\n    throw new Error('process.chdir is not supported');\\n};\\nprocess.umask = function() { return 0; };\\n\\n},{}],547:[function(require,module,exports){\\nvar parse = require('./parse')\\nvar stringify = require('./stringify')\\n\\nmodule.exports = parse\\nmodule.exports.parse = parse\\nmodule.exports.stringify = stringify\\n\\n},{\\\"./parse\\\":548,\\\"./stringify\\\":549}],548:[function(require,module,exports){\\nvar tokenize = require('./tokenize')\\nvar MAX_RANGE = 0x1FFFFFFF\\n\\n// \\\"Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire types) can be declared \\\"packed\\\".\\\"\\n// https://developers.google.com/protocol-buffers/docs/encoding#optional\\nvar PACKABLE_TYPES = [\\n  // varint wire types\\n  'int32', 'int64', 'uint32', 'uint64', 'sint32', 'sint64', 'bool',\\n  // + ENUMS\\n  // 64-bit wire types\\n  'fixed64', 'sfixed64', 'double',\\n  // 32-bit wire types\\n  'fixed32', 'sfixed32', 'float'\\n]\\n\\nvar onfieldoptions = function (tokens) {\\n  var opts = {}\\n\\n  while (tokens.length) {\\n    switch (tokens[0]) {\\n      case '[':\\n      case ',':\\n        tokens.shift()\\n        var name = tokens.shift()\\n        if (name === '(') { // handling [(A) = B]\\n          name = tokens.shift()\\n          tokens.shift() // remove the end of bracket\\n        }\\n        if (tokens[0] !== '=') throw new Error('Unexpected token in field options: ' + tokens[0])\\n        tokens.shift()\\n        if (tokens[0] === ']') throw new Error('Unexpected ] in field option')\\n        opts[name] = tokens.shift()\\n        break\\n      case ']':\\n        tokens.shift()\\n        return opts\\n\\n      default:\\n        throw new Error('Unexpected token in field options: ' + tokens[0])\\n    }\\n  }\\n\\n  throw new Error('No closing tag for field options')\\n}\\n\\nvar onfield = function (tokens) {\\n  var field = {\\n    name: null,\\n    type: null,\\n    tag: -1,\\n    map: null,\\n    oneof: null,\\n    required: false,\\n    repeated: false,\\n    options: {}\\n  }\\n\\n  while (tokens.length) {\\n    switch (tokens[0]) {\\n      case '=':\\n        tokens.shift()\\n        field.tag = Number(tokens.shift())\\n        break\\n\\n      case 'map':\\n        field.type = 'map'\\n        field.map = { from: null, to: null }\\n        tokens.shift()\\n        if (tokens[0] !== '<') throw new Error('Unexpected token in map type: ' + tokens[0])\\n        tokens.shift()\\n        field.map.from = tokens.shift()\\n        if (tokens[0] !== ',') throw new Error('Unexpected token in map type: ' + tokens[0])\\n        tokens.shift()\\n        field.map.to = tokens.shift()\\n        if (tokens[0] !== '>') throw new Error('Unexpected token in map type: ' + tokens[0])\\n        tokens.shift()\\n        field.name = tokens.shift()\\n        break\\n\\n      case 'repeated':\\n      case 'required':\\n      case 'optional':\\n        var t = tokens.shift()\\n        field.required = t === 'required'\\n        field.repeated = t === 'repeated'\\n        field.type = tokens.shift()\\n        field.name = tokens.shift()\\n        break\\n\\n      case '[':\\n        field.options = onfieldoptions(tokens)\\n        break\\n\\n      case ';':\\n        if (field.name === null) throw new Error('Missing field name')\\n        if (field.type === null) throw new Error('Missing type in message field: ' + field.name)\\n        if (field.tag === -1) throw new Error('Missing tag number in message field: ' + field.name)\\n        tokens.shift()\\n        return field\\n\\n      default:\\n        throw new Error('Unexpected token in message field: ' + tokens[0])\\n    }\\n  }\\n\\n  throw new Error('No ; found for message field')\\n}\\n\\nvar onmessagebody = function (tokens) {\\n  var body = {\\n    enums: [],\\n    options: {},\\n    messages: [],\\n    fields: [],\\n    extends: [],\\n    extensions: null\\n  }\\n\\n  while (tokens.length) {\\n    switch (tokens[0]) {\\n      case 'map':\\n      case 'repeated':\\n      case 'optional':\\n      case 'required':\\n        body.fields.push(onfield(tokens))\\n        break\\n\\n      case 'enum':\\n        body.enums.push(onenum(tokens))\\n        break\\n\\n      case 'message':\\n        body.messages.push(onmessage(tokens))\\n        break\\n\\n      case 'extensions':\\n        body.extensions = onextensions(tokens)\\n        break\\n\\n      case 'oneof':\\n        tokens.shift()\\n        var name = tokens.shift()\\n        if (tokens[0] !== '{') throw new Error('Unexpected token in oneof: ' + tokens[0])\\n        tokens.shift()\\n        while (tokens[0] !== '}') {\\n          tokens.unshift('optional')\\n          var field = onfield(tokens)\\n          field.oneof = name\\n          body.fields.push(field)\\n        }\\n        tokens.shift()\\n        break\\n\\n      case 'extend':\\n        body.extends.push(onextend(tokens))\\n        break\\n\\n      case ';':\\n        tokens.shift()\\n        break\\n\\n      case 'reserved':\\n        tokens.shift()\\n        while (tokens[0] !== ';') {\\n          tokens.shift()\\n        }\\n        break\\n\\n      case 'option':\\n        var opt = onoption(tokens)\\n        if (body.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name)\\n        body.options[opt.name] = opt.value\\n        break\\n\\n      default:\\n        // proto3 does not require the use of optional/required, assumed as optional\\n        // \\\"singular: a well-formed message can have zero or one of this field (but not more than one).\\\"\\n        // https://developers.google.com/protocol-buffers/docs/proto3#specifying-field-rules\\n        tokens.unshift('optional')\\n        body.fields.push(onfield(tokens))\\n    }\\n  }\\n\\n  return body\\n}\\n\\nvar onextend = function (tokens) {\\n  var out = {\\n    name: tokens[1],\\n    message: onmessage(tokens)\\n  }\\n  return out\\n}\\n\\nvar onextensions = function (tokens) {\\n  tokens.shift()\\n  var from = Number(tokens.shift())\\n  if (isNaN(from)) throw new Error('Invalid from in extensions definition')\\n  if (tokens.shift() !== 'to') throw new Error(\\\"Expected keyword 'to' in extensions definition\\\")\\n  var to = tokens.shift()\\n  if (to === 'max') to = MAX_RANGE\\n  to = Number(to)\\n  if (isNaN(to)) throw new Error('Invalid to in extensions definition')\\n  if (tokens.shift() !== ';') throw new Error('Missing ; in extensions definition')\\n  return { from: from, to: to }\\n}\\nvar onmessage = function (tokens) {\\n  tokens.shift()\\n\\n  var lvl = 1\\n  var body = []\\n  var msg = {\\n    name: tokens.shift(),\\n    options: {},\\n    enums: [],\\n    extends: [],\\n    messages: [],\\n    fields: []\\n  }\\n\\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\\n  tokens.shift()\\n\\n  while (tokens.length) {\\n    if (tokens[0] === '{') lvl++\\n    else if (tokens[0] === '}') lvl--\\n\\n    if (!lvl) {\\n      tokens.shift()\\n      body = onmessagebody(body)\\n      msg.enums = body.enums\\n      msg.messages = body.messages\\n      msg.fields = body.fields\\n      msg.extends = body.extends\\n      msg.extensions = body.extensions\\n      msg.options = body.options\\n      return msg\\n    }\\n\\n    body.push(tokens.shift())\\n  }\\n\\n  if (lvl) throw new Error('No closing tag for message')\\n}\\n\\nvar onpackagename = function (tokens) {\\n  tokens.shift()\\n  var name = tokens.shift()\\n  if (tokens[0] !== ';') throw new Error('Expected ; but found ' + tokens[0])\\n  tokens.shift()\\n  return name\\n}\\n\\nvar onsyntaxversion = function (tokens) {\\n  tokens.shift()\\n\\n  if (tokens[0] !== '=') throw new Error('Expected = but found ' + tokens[0])\\n  tokens.shift()\\n\\n  var version = tokens.shift()\\n  switch (version) {\\n    case '\\\"proto2\\\"':\\n      version = 2\\n      break\\n\\n    case '\\\"proto3\\\"':\\n      version = 3\\n      break\\n\\n    default:\\n      throw new Error('Expected protobuf syntax version but found ' + version)\\n  }\\n\\n  if (tokens[0] !== ';') throw new Error('Expected ; but found ' + tokens[0])\\n  tokens.shift()\\n\\n  return version\\n}\\n\\nvar onenumvalue = function (tokens) {\\n  if (tokens.length < 4) throw new Error('Invalid enum value: ' + tokens.slice(0, 3).join(' '))\\n  if (tokens[1] !== '=') throw new Error('Expected = but found ' + tokens[1])\\n  if (tokens[3] !== ';' && tokens[3] !== '[') throw new Error('Expected ; or [ but found ' + tokens[1])\\n\\n  var name = tokens.shift()\\n  tokens.shift()\\n  var val = {\\n    value: null,\\n    options: {}\\n  }\\n  val.value = Number(tokens.shift())\\n  if (tokens[0] === '[') {\\n    val.options = onfieldoptions(tokens)\\n  }\\n  tokens.shift() // expecting the semicolon here\\n\\n  return {\\n    name: name,\\n    val: val\\n  }\\n}\\n\\nvar onenum = function (tokens) {\\n  tokens.shift()\\n  var options = {}\\n  var e = {\\n    name: tokens.shift(),\\n    values: {},\\n    options: {}\\n  }\\n\\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\\n  tokens.shift()\\n\\n  while (tokens.length) {\\n    if (tokens[0] === '}') {\\n      tokens.shift()\\n      // there goes optional semicolon after the enclosing \\\"}\\\"\\n      if (tokens[0] === ';') tokens.shift()\\n      return e\\n    }\\n    if (tokens[0] === 'option') {\\n      options = onoption(tokens)\\n      e.options[options.name] = options.value\\n      continue\\n    }\\n    var val = onenumvalue(tokens)\\n    e.values[val.name] = val.val\\n  }\\n\\n  throw new Error('No closing tag for enum')\\n}\\n\\nvar onoption = function (tokens) {\\n  var name = null\\n  var value = null\\n\\n  var parse = function (value) {\\n    if (value === 'true') return true\\n    if (value === 'false') return false\\n    return value.replace(/^\\\"+|\\\"+$/gm, '')\\n  }\\n\\n  while (tokens.length) {\\n    if (tokens[0] === ';') {\\n      tokens.shift()\\n      return { name: name, value: value }\\n    }\\n    switch (tokens[0]) {\\n      case 'option':\\n        tokens.shift()\\n\\n        var hasBracket = tokens[0] === '('\\n        if (hasBracket) tokens.shift()\\n\\n        name = tokens.shift()\\n\\n        if (hasBracket) {\\n          if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\\n          tokens.shift()\\n        }\\n\\n        if (tokens[0][0] === '.') {\\n          name += tokens.shift()\\n        }\\n\\n        break\\n\\n      case '=':\\n        tokens.shift()\\n        if (name === null) throw new Error('Expected key for option with value: ' + tokens[0])\\n        value = parse(tokens.shift())\\n\\n        if (name === 'optimize_for' && !/^(SPEED|CODE_SIZE|LITE_RUNTIME)$/.test(value)) {\\n          throw new Error('Unexpected value for option optimize_for: ' + value)\\n        } else if (value === '{') {\\n          // option foo = {bar: baz}\\n          value = onoptionMap(tokens)\\n        }\\n        break\\n\\n      default:\\n        throw new Error('Unexpected token in option: ' + tokens[0])\\n    }\\n  }\\n}\\n\\nvar onoptionMap = function (tokens) {\\n  var parse = function (value) {\\n    if (value === 'true') return true\\n    if (value === 'false') return false\\n    return value.replace(/^\\\"+|\\\"+$/gm, '')\\n  }\\n\\n  var map = {}\\n\\n  while (tokens.length) {\\n    if (tokens[0] === '}') {\\n      tokens.shift()\\n      return map\\n    }\\n\\n    var hasBracket = tokens[0] === '('\\n    if (hasBracket) tokens.shift()\\n\\n    var key = tokens.shift()\\n    if (hasBracket) {\\n      if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\\n      tokens.shift()\\n    }\\n\\n    var value = null\\n\\n    switch (tokens[0]) {\\n      case ':':\\n        if (map[key] !== undefined) throw new Error('Duplicate option map key ' + key)\\n\\n        tokens.shift()\\n\\n        value = parse(tokens.shift())\\n\\n        if (value === '{') {\\n          // option foo = {bar: baz}\\n          value = onoptionMap(tokens)\\n        }\\n\\n        map[key] = value\\n\\n        if (tokens[0] === ';') {\\n          tokens.shift()\\n        }\\n        break\\n\\n      case '{':\\n        tokens.shift()\\n        value = onoptionMap(tokens)\\n\\n        if (map[key] === undefined) map[key] = []\\n        if (!Array.isArray(map[key])) throw new Error('Duplicate option map key ' + key)\\n\\n        map[key].push(value)\\n        break\\n\\n      default:\\n        throw new Error('Unexpected token in option map: ' + tokens[0])\\n    }\\n  }\\n\\n  throw new Error('No closing tag for option map')\\n}\\n\\nvar onimport = function (tokens) {\\n  tokens.shift()\\n  var file = tokens.shift().replace(/^\\\"+|\\\"+$/gm, '')\\n\\n  if (tokens[0] !== ';') throw new Error('Unexpected token: ' + tokens[0] + '. Expected \\\";\\\"')\\n\\n  tokens.shift()\\n  return file\\n}\\n\\nvar onservice = function (tokens) {\\n  tokens.shift()\\n\\n  var service = {\\n    name: tokens.shift(),\\n    methods: [],\\n    options: {}\\n  }\\n\\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\\n  tokens.shift()\\n\\n  while (tokens.length) {\\n    if (tokens[0] === '}') {\\n      tokens.shift()\\n      // there goes optional semicolon after the enclosing \\\"}\\\"\\n      if (tokens[0] === ';') tokens.shift()\\n      return service\\n    }\\n\\n    switch (tokens[0]) {\\n      case 'option':\\n        var opt = onoption(tokens)\\n        if (service.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name)\\n        service.options[opt.name] = opt.value\\n        break\\n      case 'rpc':\\n        service.methods.push(onrpc(tokens))\\n        break\\n      default:\\n        throw new Error('Unexpected token in service: ' + tokens[0])\\n    }\\n  }\\n\\n  throw new Error('No closing tag for service')\\n}\\n\\nvar onrpc = function (tokens) {\\n  tokens.shift()\\n\\n  var rpc = {\\n    name: tokens.shift(),\\n    input_type: null,\\n    output_type: null,\\n    client_streaming: false,\\n    server_streaming: false,\\n    options: {}\\n  }\\n\\n  if (tokens[0] !== '(') throw new Error('Expected ( but found ' + tokens[0])\\n  tokens.shift()\\n\\n  if (tokens[0] === 'stream') {\\n    tokens.shift()\\n    rpc.client_streaming = true\\n  }\\n\\n  rpc.input_type = tokens.shift()\\n\\n  if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\\n  tokens.shift()\\n\\n  if (tokens[0] !== 'returns') throw new Error('Expected returns but found ' + tokens[0])\\n  tokens.shift()\\n\\n  if (tokens[0] !== '(') throw new Error('Expected ( but found ' + tokens[0])\\n  tokens.shift()\\n\\n  if (tokens[0] === 'stream') {\\n    tokens.shift()\\n    rpc.server_streaming = true\\n  }\\n\\n  rpc.output_type = tokens.shift()\\n\\n  if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\\n  tokens.shift()\\n\\n  if (tokens[0] === ';') {\\n    tokens.shift()\\n    return rpc\\n  }\\n\\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\\n  tokens.shift()\\n\\n  while (tokens.length) {\\n    if (tokens[0] === '}') {\\n      tokens.shift()\\n      // there goes optional semicolon after the enclosing \\\"}\\\"\\n      if (tokens[0] === ';') tokens.shift()\\n      return rpc\\n    }\\n\\n    if (tokens[0] === 'option') {\\n      var opt = onoption(tokens)\\n      if (rpc.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name)\\n      rpc.options[opt.name] = opt.value\\n    } else {\\n      throw new Error('Unexpected token in rpc options: ' + tokens[0])\\n    }\\n  }\\n\\n  throw new Error('No closing tag for rpc')\\n}\\n\\nvar parse = function (buf) {\\n  var tokens = tokenize(buf.toString())\\n  // check for isolated strings in tokens by looking for opening quote\\n  for (var i = 0; i < tokens.length; i++) {\\n    if (/^(\\\"|')([^'\\\"]*)$/.test(tokens[i])) {\\n      var j\\n      if (tokens[i].length === 1) {\\n        j = i + 1\\n      } else {\\n        j = i\\n      }\\n      // look ahead for the closing quote and collapse all\\n      // in-between tokens into a single token\\n      for (j; j < tokens.length; j++) {\\n        if (/^[^'\\\"\\\\\\\\]*(?:\\\\\\\\.[^'\\\"\\\\\\\\]*)*(\\\"|')$/.test(tokens[j])) {\\n          tokens = tokens.slice(0, i).concat(tokens.slice(i, j + 1).join('')).concat(tokens.slice(j + 1))\\n          break\\n        }\\n      }\\n    }\\n  }\\n  var schema = {\\n    syntax: 3,\\n    package: null,\\n    imports: [],\\n    enums: [],\\n    messages: [],\\n    options: {},\\n    extends: []\\n  }\\n\\n  var firstline = true\\n\\n  while (tokens.length) {\\n    switch (tokens[0]) {\\n      case 'package':\\n        schema.package = onpackagename(tokens)\\n        break\\n\\n      case 'syntax':\\n        if (!firstline) throw new Error('Protobuf syntax version should be first thing in file')\\n        schema.syntax = onsyntaxversion(tokens)\\n        break\\n\\n      case 'message':\\n        schema.messages.push(onmessage(tokens))\\n        break\\n\\n      case 'enum':\\n        schema.enums.push(onenum(tokens))\\n        break\\n\\n      case 'option':\\n        var opt = onoption(tokens)\\n        if (schema.options[opt.name]) throw new Error('Duplicate option ' + opt.name)\\n        schema.options[opt.name] = opt.value\\n        break\\n\\n      case 'import':\\n        schema.imports.push(onimport(tokens))\\n        break\\n\\n      case 'extend':\\n        schema.extends.push(onextend(tokens))\\n        break\\n\\n      case 'service':\\n        if (!schema.services) schema.services = []\\n        schema.services.push(onservice(tokens))\\n        break\\n\\n      default:\\n        throw new Error('Unexpected token: ' + tokens[0])\\n    }\\n    firstline = false\\n  }\\n\\n  // now iterate over messages and propagate extends\\n  schema.extends.forEach(function (ext) {\\n    schema.messages.forEach(function (msg) {\\n      if (msg.name === ext.name) {\\n        ext.message.fields.forEach(function (field) {\\n          if (!msg.extensions || field.tag < msg.extensions.from || field.tag > msg.extensions.to) {\\n            throw new Error(msg.name + ' does not declare ' + field.tag + ' as an extension number')\\n          }\\n          msg.fields.push(field)\\n        })\\n      }\\n    })\\n  })\\n\\n  schema.messages.forEach(function (msg) {\\n    msg.fields.forEach(function (field) {\\n      var fieldSplit\\n      var messageName\\n      var nestedEnumName\\n      var message\\n\\n      function enumNameIsFieldType (en) {\\n        return en.name === field.type\\n      }\\n\\n      function enumNameIsNestedEnumName (en) {\\n        return en.name === nestedEnumName\\n      }\\n\\n      if (field.options && field.options.packed === 'true') {\\n        if (PACKABLE_TYPES.indexOf(field.type) === -1) {\\n          // let's see if it's an enum\\n          if (field.type.indexOf('.') === -1) {\\n            if (msg.enums && msg.enums.some(enumNameIsFieldType)) {\\n              return\\n            }\\n          } else {\\n            fieldSplit = field.type.split('.')\\n            if (fieldSplit.length > 2) {\\n              throw new Error('what is this?')\\n            }\\n\\n            messageName = fieldSplit[0]\\n            nestedEnumName = fieldSplit[1]\\n\\n            schema.messages.some(function (msg) {\\n              if (msg.name === messageName) {\\n                message = msg\\n                return msg\\n              }\\n            })\\n\\n            if (message && message.enums && message.enums.some(enumNameIsNestedEnumName)) {\\n              return\\n            }\\n          }\\n\\n          throw new Error(\\n            'Fields of type ' + field.type + ' cannot be declared [packed=true]. ' +\\n            'Only repeated fields of primitive numeric types (types which use ' +\\n            'the varint, 32-bit, or 64-bit wire types) can be declared \\\"packed\\\". ' +\\n            'See https://developers.google.com/protocol-buffers/docs/encoding#optional'\\n          )\\n        }\\n      }\\n    })\\n  })\\n\\n  return schema\\n}\\n\\nmodule.exports = parse\\n\\n},{\\\"./tokenize\\\":550}],549:[function(require,module,exports){\\nvar onfield = function (f, result) {\\n  var prefix = f.repeated ? 'repeated' : f.required ? 'required' : 'optional'\\n  if (f.type === 'map') prefix = 'map<' + f.map.from + ',' + f.map.to + '>'\\n  if (f.oneof) prefix = ''\\n\\n  var opts = Object.keys(f.options || {}).map(function (key) {\\n    return key + ' = ' + f.options[key]\\n  }).join(',')\\n\\n  if (opts) opts = ' [' + opts + ']'\\n\\n  result.push((prefix ? prefix + ' ' : '') + (f.map === 'map' ? '' : f.type + ' ') + f.name + ' = ' + f.tag + opts + ';')\\n  return result\\n}\\n\\nvar onmessage = function (m, result) {\\n  result.push('message ' + m.name + ' {')\\n\\n  if (!m.options) m.options = {}\\n  onoption(m.options, result)\\n\\n  if (!m.enums) m.enums = []\\n  m.enums.forEach(function (e) {\\n    result.push(onenum(e, []))\\n  })\\n\\n  if (!m.messages) m.messages = []\\n  m.messages.forEach(function (m) {\\n    result.push(onmessage(m, []))\\n  })\\n\\n  var oneofs = {}\\n\\n  if (!m.fields) m.fields = []\\n  m.fields.forEach(function (f) {\\n    if (f.oneof) {\\n      if (!oneofs[f.oneof]) oneofs[f.oneof] = []\\n      oneofs[f.oneof].push(onfield(f, []))\\n    } else {\\n      result.push(onfield(f, []))\\n    }\\n  })\\n\\n  Object.keys(oneofs).forEach(function (n) {\\n    oneofs[n].unshift('oneof ' + n + ' {')\\n    oneofs[n].push('}')\\n    result.push(oneofs[n])\\n  })\\n\\n  result.push('}', '')\\n  return result\\n}\\n\\nvar onenum = function (e, result) {\\n  result.push('enum ' + e.name + ' {')\\n  if (!e.options) e.options = {}\\n  var options = onoption(e.options, [])\\n  if (options.length > 1) {\\n    result.push(options.slice(0, -1))\\n  }\\n  Object.keys(e.values).map(function (v) {\\n    var val = onenumvalue(e.values[v])\\n    result.push([v + ' = ' + val + ';'])\\n  })\\n  result.push('}', '')\\n  return result\\n}\\n\\nvar onenumvalue = function (v, result) {\\n  var opts = Object.keys(v.options || {}).map(function (key) {\\n    return key + ' = ' + v.options[key]\\n  }).join(',')\\n\\n  if (opts) opts = ' [' + opts + ']'\\n  var val = v.value + opts\\n  return val\\n}\\n\\nvar onoption = function (o, result) {\\n  var keys = Object.keys(o)\\n  keys.forEach(function (option) {\\n    var v = o[option]\\n    if (~option.indexOf('.')) option = '(' + option + ')'\\n\\n    var type = typeof v\\n\\n    if (type === 'object') {\\n      v = onoptionMap(v, [])\\n      if (v.length) result.push('option ' + option + ' = {', v, '};')\\n    } else {\\n      if (type === 'string' && option !== 'optimize_for') v = '\\\"' + v + '\\\"'\\n      result.push('option ' + option + ' = ' + v + ';')\\n    }\\n  })\\n  if (keys.length > 0) {\\n    result.push('')\\n  }\\n\\n  return result\\n}\\n\\nvar onoptionMap = function (o, result) {\\n  var keys = Object.keys(o)\\n  keys.forEach(function (k) {\\n    var v = o[k]\\n\\n    var type = typeof v\\n\\n    if (type === 'object') {\\n      if (Array.isArray(v)) {\\n        v.forEach(function (v) {\\n          v = onoptionMap(v, [])\\n          if (v.length) result.push(k + ' {', v, '}')\\n        })\\n      } else {\\n        v = onoptionMap(v, [])\\n        if (v.length) result.push(k + ' {', v, '}')\\n      }\\n    } else {\\n      if (type === 'string') v = '\\\"' + v + '\\\"'\\n      result.push(k + ': ' + v)\\n    }\\n  })\\n\\n  return result\\n}\\n\\nvar onservices = function (s, result) {\\n  result.push('service ' + s.name + ' {')\\n\\n  if (!s.options) s.options = {}\\n  onoption(s.options, result)\\n  if (!s.methods) s.methods = []\\n  s.methods.forEach(function (m) {\\n    result.push(onrpc(m, []))\\n  })\\n\\n  result.push('}', '')\\n  return result\\n}\\n\\nvar onrpc = function (rpc, result) {\\n  var def = 'rpc ' + rpc.name + '('\\n  if (rpc.client_streaming) def += 'stream '\\n  def += rpc.input_type + ') returns ('\\n  if (rpc.server_streaming) def += 'stream '\\n  def += rpc.output_type + ')'\\n\\n  if (!rpc.options) rpc.options = {}\\n\\n  var options = onoption(rpc.options, [])\\n  if (options.length > 1) {\\n    result.push(def + ' {', options.slice(0, -1), '}')\\n  } else {\\n    result.push(def + ';')\\n  }\\n\\n  return result\\n}\\n\\nvar indent = function (lvl) {\\n  return function (line) {\\n    if (Array.isArray(line)) return line.map(indent(lvl + '  ')).join('\\\\n')\\n    return lvl + line\\n  }\\n}\\n\\nmodule.exports = function (schema) {\\n  var result = []\\n\\n  result.push('syntax = \\\"proto' + schema.syntax + '\\\";', '')\\n\\n  if (schema.package) result.push('package ' + schema.package + ';', '')\\n\\n  if (!schema.options) schema.options = {}\\n\\n  onoption(schema.options, result)\\n\\n  if (!schema.enums) schema.enums = []\\n  schema.enums.forEach(function (e) {\\n    onenum(e, result)\\n  })\\n\\n  if (!schema.messages) schema.messages = []\\n  schema.messages.forEach(function (m) {\\n    onmessage(m, result)\\n  })\\n\\n  if (schema.services) {\\n    schema.services.forEach(function (s) {\\n      onservices(s, result)\\n    })\\n  }\\n  return result.map(indent('')).join('\\\\n')\\n}\\n\\n},{}],550:[function(require,module,exports){\\nmodule.exports = function (sch) {\\n  var noComments = function (line) {\\n    var i = line.indexOf('//')\\n    return i > -1 ? line.slice(0, i) : line\\n  }\\n\\n  var noMultilineComments = function () {\\n    var inside = false\\n    return function (token) {\\n      if (token === '/*') {\\n        inside = true\\n        return false\\n      }\\n      if (token === '*/') {\\n        inside = false\\n        return false\\n      }\\n      return !inside\\n    }\\n  }\\n\\n  var trim = function (line) {\\n    return line.trim()\\n  }\\n\\n  return sch\\n    .replace(/([;,{}()=:[\\\\]<>]|\\\\/\\\\*|\\\\*\\\\/)/g, ' $1 ')\\n    .split(/\\\\n/)\\n    .map(trim)\\n    .filter(Boolean)\\n    .map(noComments)\\n    .map(trim)\\n    .filter(Boolean)\\n    .join('\\\\n')\\n    .split(/\\\\s+|\\\\n+/gm)\\n    .filter(noMultilineComments())\\n}\\n\\n},{}],551:[function(require,module,exports){\\narguments[4][223][0].apply(exports,arguments)\\n},{\\\"dup\\\":223,\\\"multibase/src/constants\\\":500,\\\"web-encoding\\\":595}],552:[function(require,module,exports){\\narguments[4][224][0].apply(exports,arguments)\\n},{\\\"dup\\\":224,\\\"multibase/src/constants\\\":500,\\\"web-encoding\\\":595}],553:[function(require,module,exports){\\n/* eslint max-depth: 1 */\\n'use strict'\\n\\nconst varint = require('varint')\\nconst defined = require('./utils').defined\\n\\nfunction toSentenceCase (string) {\\n  return `${string.substring(0, 1).toUpperCase()}${string.substring(1)}`\\n}\\n\\nfunction addPropertyAccessors (obj, name, value, defaultValue) {\\n  if (Object.prototype.hasOwnProperty.call(obj, name)) {\\n    // have already added this property\\n    return\\n  }\\n\\n  const sentenceCaseName = toSentenceCase(name)\\n\\n  Object.defineProperties(obj, {\\n    [name]: {\\n      enumerable: true,\\n      configurable: true,\\n      set: (val) => {\\n        value = val\\n      },\\n      get: () => {\\n        if (value === undefined) {\\n          return defaultValue\\n        }\\n\\n        return value\\n      }\\n    },\\n    [`has${sentenceCaseName}`]: {\\n      configurable: true,\\n      value: () => {\\n        return value !== undefined\\n      }\\n    },\\n    [`set${sentenceCaseName}`]: {\\n      configurable: true,\\n      value: (val) => {\\n        value = val\\n      }\\n    },\\n    [`get${sentenceCaseName}`]: {\\n      configurable: true,\\n      value: () => {\\n        return value\\n      }\\n    },\\n    [`clear${sentenceCaseName}`]: {\\n      configurable: true,\\n      value: () => {\\n        value = undefined\\n        obj[name] = undefined\\n      }\\n    }\\n  })\\n}\\n\\nfunction compileDecode (m, resolve, enc) {\\n  const requiredFields = []\\n  const fields = {}\\n  const oneofFields = []\\n  const vals = []\\n\\n  for (var i = 0; i < enc.length; i++) {\\n    const field = m.fields[i]\\n\\n    fields[field.tag] = i\\n\\n    const def = field.options && field.options.default\\n    const resolved = resolve(field.type, m.id, false)\\n    vals[i] = [def, resolved && resolved.values]\\n\\n    m.fields[i].packed = field.repeated && field.options && field.options.packed && field.options.packed !== 'false'\\n\\n    if (field.required) {\\n      requiredFields.push(field.name)\\n    }\\n\\n    if (field.oneof) {\\n      oneofFields.push(field.name)\\n    }\\n  }\\n\\n  function decodeField (e, field, obj, buf, dataView, offset, i) {\\n    const name = field.name\\n\\n    if (field.oneof) {\\n      // clear already defined oneof fields\\n      const props = Object.keys(obj)\\n      for (var j = 0; j < props.length; j++) {\\n        if (oneofFields.indexOf(props[j]) > -1) {\\n          const sentenceCase = toSentenceCase(props[j])\\n          delete obj[`has${sentenceCase}`]\\n          delete obj[`get${sentenceCase}`]\\n          delete obj[`set${sentenceCase}`]\\n          delete obj[`clear${sentenceCase}`]\\n          delete obj[props[j]]\\n        }\\n      }\\n    }\\n\\n    let value\\n\\n    if (e.message) {\\n      const len = varint.decode(buf, offset)\\n      offset += varint.decode.bytes\\n\\n      const decoded = e.decode(buf, dataView, offset, offset + len)\\n\\n      if (field.map) {\\n        value = obj[name] || {}\\n        value[decoded.key] = decoded.value\\n      } else if (field.repeated) {\\n        value = obj[name] || []\\n        value.push(decoded)\\n      } else {\\n        value = decoded\\n      }\\n    } else {\\n      if (field.repeated) {\\n        value = obj[name] || []\\n        value.push(e.decode(buf, dataView, offset))\\n      } else {\\n        value = e.decode(buf, dataView, offset)\\n      }\\n    }\\n\\n    addPropertyAccessors(obj, name, value)\\n\\n    offset += e.decode.bytes\\n\\n    return offset\\n  }\\n\\n  return function decode (buf, view, offset, end) {\\n    if (offset == null) {\\n      offset = 0\\n    }\\n\\n    if (end == null) {\\n      end = buf.length\\n    }\\n\\n    if (!(end <= buf.length && offset <= buf.length)) {\\n      throw new Error('Decoded message is not valid')\\n    }\\n\\n    if (!view) {\\n      view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\\n    }\\n\\n    var oldOffset = offset\\n    var obj = {}\\n    var field\\n\\n    while (true) {\\n      if (end <= offset) {\\n        // finished\\n\\n        // check required methods\\n        var name = ''\\n        var j = 0\\n        for (j = 0; j < requiredFields.length; j++) {\\n          name = requiredFields[j]\\n          if (!defined(obj[name])) {\\n            throw new Error('Decoded message is not valid, missing required field: ' + name)\\n          }\\n        }\\n\\n        // fill out missing defaults\\n        var val\\n        var def\\n        for (j = 0; j < enc.length; j++) {\\n          field = m.fields[j]\\n          def = vals[j][0]\\n          val = vals[j][1]\\n          name = field.name\\n          let defaultVal\\n\\n          if (Object.prototype.hasOwnProperty.call(obj, name)) {\\n            continue\\n          }\\n\\n          var done = false\\n\\n          if (field.oneof) {\\n            var props = Object.keys(obj)\\n\\n            for (var k = 0; k < props.length; k++) {\\n              if (oneofFields.indexOf(props[k]) > -1) {\\n                done = true\\n                break\\n              }\\n            }\\n          }\\n\\n          if (done) {\\n            continue\\n          }\\n\\n          if (val) { // is enum\\n            if (field.repeated) {\\n              def = []\\n            } else {\\n              def = (def && val[def]) ? val[def].value : val[Object.keys(val)[0]].value\\n              def = parseInt(def || 0, 10)\\n            }\\n          } else {\\n            defaultVal = defaultValue(field)\\n            def = coerceValue(field, def)\\n          }\\n\\n          addPropertyAccessors(obj, name, def, defaultVal)\\n        }\\n\\n        decode.bytes = offset - oldOffset\\n        return obj\\n      }\\n\\n      var prefix = varint.decode(buf, offset)\\n      offset += varint.decode.bytes\\n      var tag = prefix >> 3\\n\\n      var i = fields[tag]\\n\\n      if (i == null) {\\n        offset = skip(prefix & 7, buf, view, offset)\\n        continue\\n      }\\n\\n      var e = enc[i]\\n      field = m.fields[i]\\n\\n      if (field.packed) {\\n        var packedEnd = varint.decode(buf, offset)\\n        offset += varint.decode.bytes\\n        packedEnd += offset\\n\\n        while (offset < packedEnd) {\\n          offset = decodeField(e, field, obj, buf, view, offset, i)\\n        }\\n      } else {\\n        offset = decodeField(e, field, obj, buf, view, offset, i)\\n      }\\n    }\\n  }\\n}\\n\\nvar skip = function (type, buffer, view, offset) {\\n  switch (type) {\\n    case 0:\\n      varint.decode(buffer, offset)\\n      return offset + varint.decode.bytes\\n\\n    case 1:\\n      return offset + 8\\n\\n    case 2:\\n      var len = varint.decode(buffer, offset)\\n      return offset + varint.decode.bytes + len\\n\\n    case 3:\\n    case 4:\\n      throw new Error('Groups are not supported')\\n\\n    case 5:\\n      return offset + 4\\n    default:\\n      throw new Error('Unknown wire type: ' + type)\\n  }\\n}\\n\\nvar defaultValue = function (f) {\\n  if (f.map) return {}\\n  if (f.repeated) return []\\n\\n  switch (f.type) {\\n    case 'string':\\n      return ''\\n    case 'bool':\\n      return false\\n    case 'float':\\n    case 'double':\\n    case 'sfixed32':\\n    case 'fixed32':\\n    case 'varint':\\n    case 'enum':\\n    case 'uint64':\\n    case 'uint32':\\n    case 'int64':\\n    case 'int32':\\n    case 'sint64':\\n    case 'sint32':\\n      return 0\\n    default:\\n      return null\\n  }\\n}\\n\\nvar coerceValue = function (f, def) {\\n  if (def === undefined) {\\n    return def\\n  }\\n\\n  switch (f.type) {\\n    case 'bool':\\n      return def === 'true'\\n    case 'float':\\n    case 'double':\\n    case 'sfixed32':\\n    case 'fixed32':\\n    case 'varint':\\n    case 'enum':\\n    case 'uint64':\\n    case 'uint32':\\n    case 'int64':\\n    case 'int32':\\n    case 'sint64':\\n    case 'sint32':\\n      return parseInt(def, 10)\\n    default:\\n      return def\\n  }\\n}\\n\\nmodule.exports = compileDecode\\n\\n},{\\\"./utils\\\":571,\\\"varint\\\":593}],554:[function(require,module,exports){\\n'use strict'\\n\\nvar defined = require('./utils').defined\\nvar varint = require('varint')\\n\\nfunction compileEncode (m, resolve, enc, oneofs, encodingLength) {\\n  const oneofsKeys = Object.keys(oneofs)\\n  const encLength = enc.length\\n  const ints = {}\\n  for (let i = 0; i < encLength; i++) {\\n    ints[i] = {\\n      p: varint.encode(m.fields[i].tag << 3 | 2),\\n      h: varint.encode(m.fields[i].tag << 3 | enc[i].type)\\n    }\\n\\n    const field = m.fields[i]\\n    m.fields[i].packed = field.repeated && field.options && field.options.packed && field.options.packed !== 'false'\\n  }\\n\\n  function encodeField (buf, view, offset, h, e, packed, innerVal) {\\n    let j = 0\\n    if (!packed) {\\n      for (j = 0; j < h.length; j++) {\\n        buf[offset++] = h[j]\\n      }\\n    }\\n\\n    if (e.message) {\\n      varint.encode(e.encodingLength(innerVal), buf, offset)\\n      offset += varint.encode.bytes\\n    }\\n\\n    e.encode(innerVal, buf, view, offset)\\n\\n    return offset + e.encode.bytes\\n  }\\n\\n  return function encode (obj, buf, view, offset = 0) {\\n    if (buf == null) {\\n      buf = new Uint8Array(encodingLength(obj))\\n    }\\n\\n    if (view == null) {\\n      view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\\n    }\\n\\n    const oldOffset = offset\\n    const objKeys = Object.keys(obj)\\n    let i = 0\\n\\n    // oneof checks\\n\\n    let match = false\\n    for (i = 0; i < oneofsKeys.length; i++) {\\n      const name = oneofsKeys[i]\\n      const prop = oneofs[i]\\n      if (objKeys.indexOf(prop) > -1) {\\n        if (match) {\\n          throw new Error('only one of the properties defined in oneof ' + name + ' can be set')\\n        }\\n\\n        match = true\\n      }\\n    }\\n\\n    for (i = 0; i < encLength; i++) {\\n      const e = enc[i]\\n      const field = m.fields[i] // was f\\n      let val = obj[field.name]\\n      let j = 0\\n\\n      if (!defined(val)) {\\n        if (field.required) {\\n          throw new Error(field.name + ' is required')\\n        }\\n        continue\\n      }\\n      const p = ints[i].p\\n      const h = ints[i].h\\n\\n      const packed = field.packed\\n\\n      if (field.map) {\\n        const tmp = Object.keys(val)\\n        for (j = 0; j < tmp.length; j++) {\\n          tmp[j] = {\\n            key: tmp[j],\\n            value: val[tmp[j]]\\n          }\\n        }\\n        val = tmp\\n      }\\n\\n      if (packed) {\\n        let packedLen = 0\\n        for (j = 0; j < val.length; j++) {\\n          if (!Object.prototype.hasOwnProperty.call(val, j)) {\\n            continue\\n          }\\n\\n          packedLen += e.encodingLength(val[j])\\n        }\\n\\n        if (packedLen) {\\n          for (j = 0; j < h.length; j++) {\\n            buf[offset++] = p[j]\\n          }\\n          varint.encode(packedLen, buf, offset)\\n          offset += varint.encode.bytes\\n        }\\n      }\\n\\n      if (field.repeated) {\\n        let innerVal\\n        for (j = 0; j < val.length; j++) {\\n          innerVal = val[j]\\n          if (!defined(innerVal)) {\\n            continue\\n          }\\n\\n          offset = encodeField(buf, view, offset, h, e, packed, innerVal)\\n        }\\n      } else {\\n        offset = encodeField(buf, view, offset, h, e, packed, val)\\n      }\\n    }\\n\\n    encode.bytes = offset - oldOffset\\n    return buf\\n  }\\n}\\n\\nmodule.exports = compileEncode\\n\\n},{\\\"./utils\\\":571,\\\"varint\\\":593}],555:[function(require,module,exports){\\n'use strict'\\n\\nvar defined = require('./utils').defined\\nvar varint = require('varint')\\n\\nfunction compileEncodingLength (m, enc, oneofs) {\\n  const oneofsKeys = Object.keys(oneofs)\\n  const encLength = enc.length\\n\\n  const hls = new Array(encLength)\\n\\n  for (let i = 0; i < m.fields.length; i++) {\\n    hls[i] = varint.encodingLength(m.fields[i].tag << 3 | enc[i].type)\\n\\n    const field = m.fields[i]\\n    m.fields[i].packed = field.repeated && field.options && field.options.packed && field.options.packed !== 'false'\\n  }\\n\\n  return function encodingLength (obj) {\\n    let length = 0\\n    let i = 0\\n    let j = 0\\n\\n    for (i = 0; i < oneofsKeys.length; i++) {\\n      const name = oneofsKeys[i]\\n      const props = oneofs[name]\\n\\n      let match = false\\n      for (j = 0; j < props.length; j++) {\\n        if (defined(obj[props[j]])) {\\n          if (match) {\\n            throw new Error('only one of the properties defined in oneof ' + name + ' can be set')\\n          }\\n          match = true\\n        }\\n      }\\n    }\\n\\n    for (i = 0; i < encLength; i++) {\\n      const e = enc[i]\\n      const field = m.fields[i]\\n      let val = obj[field.name]\\n      const hl = hls[i]\\n      let len\\n\\n      if (!defined(val)) {\\n        if (field.required) {\\n          throw new Error(field.name + ' is required')\\n        }\\n\\n        continue\\n      }\\n\\n      if (field.map) {\\n        const tmp = Object.keys(val)\\n        for (j = 0; j < tmp.length; j++) {\\n          tmp[j] = {\\n            key: tmp[j],\\n            value: val[tmp[j]]\\n          }\\n        }\\n\\n        val = tmp\\n      }\\n\\n      if (field.packed) {\\n        let packedLen = 0\\n        for (j = 0; j < val.length; j++) {\\n          if (!defined(val[j])) {\\n            continue\\n          }\\n          len = e.encodingLength(val[j])\\n          packedLen += len\\n\\n          if (e.message) {\\n            packedLen += varint.encodingLength(len)\\n          }\\n        }\\n\\n        if (packedLen) {\\n          length += hl + packedLen + varint.encodingLength(packedLen)\\n        }\\n      } else if (field.repeated) {\\n        for (j = 0; j < val.length; j++) {\\n          if (!defined(val[j])) {\\n            continue\\n          }\\n\\n          len = e.encodingLength(val[j])\\n          length += hl + len + (e.message ? varint.encodingLength(len) : 0)\\n        }\\n      } else {\\n        len = e.encodingLength(val)\\n        length += hl + len + (e.message ? varint.encodingLength(len) : 0)\\n      }\\n    }\\n\\n    return length\\n  }\\n}\\n\\nmodule.exports = compileEncodingLength\\n\\n},{\\\"./utils\\\":571,\\\"varint\\\":593}],556:[function(require,module,exports){\\n'use strict'\\n\\nconst encoder = require('./encoder')\\n\\nfunction boolEncodingLength () {\\n  return 1\\n}\\n\\nfunction boolEncode (value, buffer, dataView, offset) {\\n  buffer[offset] = value ? 1 : 0\\n  boolEncode.bytes = 1\\n}\\n\\nfunction boolDecode (buffer, dataView, offset) {\\n  const bool = buffer[offset] > 0\\n  boolDecode.bytes = 1\\n\\n  return bool\\n}\\n\\nmodule.exports = encoder(0, boolEncode, boolDecode, boolEncodingLength)\\n\\n},{\\\"./encoder\\\":559}],557:[function(require,module,exports){\\n'use strict'\\n\\nconst varint = require('varint')\\nconst encoder = require('./encoder')\\n\\nfunction bytesBufferLength (val) {\\n  return val.byteLength\\n}\\n\\nfunction bytesEncodingLength (val) {\\n  const len = bytesBufferLength(val)\\n  return varint.encodingLength(len) + len\\n}\\n\\nfunction bytesEncode (val, buffer, dataView, offset) {\\n  const oldOffset = offset\\n  const len = bytesBufferLength(val)\\n\\n  varint.encode(len, buffer, offset)\\n  offset += varint.encode.bytes\\n\\n  buffer.set(val, offset)\\n  offset += len\\n\\n  bytesEncode.bytes = offset - oldOffset\\n}\\n\\nfunction bytesDecode (buffer, dataView, offset) {\\n  const oldOffset = offset\\n\\n  const len = varint.decode(buffer, offset)\\n  offset += varint.decode.bytes\\n\\n  const val = buffer.slice(offset, offset + len)\\n  offset += val.length\\n\\n  bytesDecode.bytes = offset - oldOffset\\n\\n  return val\\n}\\n\\nmodule.exports = encoder(2, bytesEncode, bytesDecode, bytesEncodingLength)\\n\\n},{\\\"./encoder\\\":559,\\\"varint\\\":593}],558:[function(require,module,exports){\\n'use strict'\\n\\nconst encoder = require('./encoder')\\n\\nfunction doubleEncodingLength () {\\n  return 8\\n}\\n\\nfunction doubleEncode (val, buffer, dataView, offset) {\\n  dataView.setFloat64(offset, val, true)\\n  doubleEncode.bytes = 8\\n}\\n\\nfunction doubleDecode (buffer, dataView, offset) {\\n  const val = dataView.getFloat64(offset, true)\\n  doubleDecode.bytes = 8\\n\\n  return val\\n}\\n\\nmodule.exports = encoder(1, doubleEncode, doubleDecode, doubleEncodingLength)\\n\\n},{\\\"./encoder\\\":559}],559:[function(require,module,exports){\\n'use strict'\\n\\nfunction encoder (type, encode, decode, encodingLength) {\\n  encode.bytes = decode.bytes = 0\\n\\n  return {\\n    type: type,\\n    encode: encode,\\n    decode: decode,\\n    encodingLength: encodingLength\\n  }\\n}\\n\\nmodule.exports = encoder\\n\\n},{}],560:[function(require,module,exports){\\n'use strict'\\n\\nconst encoder = require('./encoder')\\n\\nfunction fixed32EncodingLength (val) {\\n  return 4\\n}\\n\\nfunction fixed32Encode (val, buffer, dataView, offset) {\\n  dataView.setUint32(offset, val, true)\\n  fixed32Encode.bytes = 4\\n}\\n\\nfunction fixed32Decode (buffer, dataView, offset) {\\n  const val = dataView.getUint32(offset, true)\\n  fixed32Decode.bytes = 4\\n\\n  return val\\n}\\n\\nmodule.exports = encoder(5, fixed32Encode, fixed32Decode, fixed32EncodingLength)\\n\\n},{\\\"./encoder\\\":559}],561:[function(require,module,exports){\\n'use strict'\\n\\nconst encoder = require('./encoder')\\n\\nfunction fixed64EncodingLength () {\\n  return 8\\n}\\n\\nfunction fixed64Encode (val, buffer, dataView, offset) {\\n  for (const byte of val) {\\n    buffer[offset] = byte\\n    offset++\\n  }\\n\\n  fixed64Encode.bytes = 8\\n}\\n\\nfunction fixed64Decode (buffer, dataView, offset) {\\n  const val = buffer.slice(offset, offset + 8)\\n  fixed64Decode.bytes = 8\\n\\n  return val\\n}\\n\\nmodule.exports = encoder(1, fixed64Encode, fixed64Decode, fixed64EncodingLength)\\n\\n},{\\\"./encoder\\\":559}],562:[function(require,module,exports){\\n'use strict'\\n\\nconst encoder = require('./encoder')\\n\\nfunction floatEncodingLength () {\\n  return 4\\n}\\n\\nfunction floatEncode (val, buffer, dataView, offset) {\\n  dataView.setFloat32(offset, val, true)\\n  floatEncode.bytes = 4\\n}\\n\\nfunction floatDecode (buffer, dataView, offset) {\\n  const val = dataView.getFloat32(offset, true)\\n  floatDecode.bytes = 4\\n\\n  return val\\n}\\n\\nmodule.exports = encoder(5, floatEncode, floatDecode, floatEncodingLength)\\n\\n},{\\\"./encoder\\\":559}],563:[function(require,module,exports){\\n'use strict'\\n\\nexports.make = require('./encoder')\\nexports.bytes = require('./bytes')\\nexports.string = require('./string')\\nexports.bool = require('./bool')\\nexports.int32 = require('./int32')\\nexports.int64 = require('./int64')\\nexports.sint32 =\\nexports.sint64 = require('./sint64')\\nexports.uint32 =\\nexports.uint64 =\\nexports.enum =\\nexports.varint = require('./varint')\\n\\n// we cannot represent these in javascript so we just use buffers\\nexports.fixed64 =\\nexports.sfixed64 = require('./fixed64')\\nexports.double = require('./double')\\nexports.fixed32 = require('./fixed32')\\nexports.sfixed32 = require('./sfixed32')\\nexports.float = require('./float')\\n\\n},{\\\"./bool\\\":556,\\\"./bytes\\\":557,\\\"./double\\\":558,\\\"./encoder\\\":559,\\\"./fixed32\\\":560,\\\"./fixed64\\\":561,\\\"./float\\\":562,\\\"./int32\\\":564,\\\"./int64\\\":565,\\\"./sfixed32\\\":566,\\\"./sint64\\\":567,\\\"./string\\\":568,\\\"./varint\\\":569}],564:[function(require,module,exports){\\n'use strict'\\n\\nconst varint = require('varint')\\nconst encoder = require('./encoder')\\n\\nfunction in32Encode (val, buffer, dataView, offset) {\\n  varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset)\\n  in32Encode.bytes = varint.encode.bytes\\n}\\n\\nfunction int32Decode (buffer, dataView, offset) {\\n  const val = varint.decode(buffer, offset)\\n  int32Decode.bytes = varint.decode.bytes\\n\\n  return val > 2147483647 ? val - 4294967296 : val\\n}\\n\\nfunction int32EncodingLength (val) {\\n  return varint.encodingLength(val < 0 ? val + 4294967296 : val)\\n}\\n\\nmodule.exports = encoder(0, in32Encode, int32Decode, int32EncodingLength)\\n\\n},{\\\"./encoder\\\":559,\\\"varint\\\":593}],565:[function(require,module,exports){\\n'use strict'\\n\\nconst varint = require('varint')\\nconst encoder = require('./encoder')\\n\\nfunction int64Encode (val, buffer, dataView, offset) {\\n  if (val < 0) {\\n    const last = offset + 9\\n    varint.encode(val * -1, buffer, offset)\\n\\n    offset += varint.encode.bytes - 1\\n    buffer[offset] = buffer[offset] | 0x80\\n\\n    while (offset < last - 1) {\\n      offset++\\n      buffer[offset] = 0xff\\n    }\\n    buffer[last] = 0x01\\n\\n    int64Encode.bytes = 10\\n  } else {\\n    varint.encode(val, buffer, offset)\\n    int64Encode.bytes = varint.encode.bytes\\n  }\\n}\\n\\nfunction int64Decode (buffer, dataView, offset) {\\n  let val = varint.decode(buffer, offset)\\n\\n  if (val >= Math.pow(2, 63)) {\\n    let limit = 9\\n    while (buffer[offset + limit - 1] === 0xff) limit--\\n    limit = limit || 9\\n    const subset = buffer.subarray(offset, offset + limit)\\n    subset[limit - 1] = subset[limit - 1] & 0x7f\\n    val = -1 * varint.decode(subset, 0)\\n    int64Decode.bytes = 10\\n  } else {\\n    int64Decode.bytes = varint.decode.bytes\\n  }\\n\\n  return val\\n}\\n\\nfunction int64EncodingLength (val) {\\n  return val < 0 ? 10 : varint.encodingLength(val)\\n}\\n\\nmodule.exports = encoder(0, int64Encode, int64Decode, int64EncodingLength)\\n\\n},{\\\"./encoder\\\":559,\\\"varint\\\":593}],566:[function(require,module,exports){\\n'use strict'\\n\\nconst encoder = require('./encoder')\\n\\nfunction sfixed32EncodingLength (val) {\\n  return 4\\n}\\n\\nfunction sfixed32Encode (val, buffer, dataView, offset) {\\n  dataView.setInt32(offset, val, true)\\n  sfixed32Encode.bytes = 4\\n}\\n\\nfunction sfixed32Decode (buffer, dataView, offset) {\\n  const val = dataView.getInt32(offset, true)\\n  sfixed32Decode.bytes = 4\\n\\n  return val\\n}\\n\\nmodule.exports = encoder(5, sfixed32Encode, sfixed32Decode, sfixed32EncodingLength)\\n\\n},{\\\"./encoder\\\":559}],567:[function(require,module,exports){\\n'use strict'\\n\\nconst svarint = require('signed-varint')\\nconst encoder = require('./encoder')\\n\\nfunction svarintEncode (val, buffer, dataView, offset) {\\n  svarint.encode(val, buffer, offset)\\n\\n  svarintEncode.bytes = svarint.encode.bytes\\n}\\n\\nfunction svarintDecode (buffer, dataView, offset) {\\n  const val = svarint.decode(buffer, offset)\\n  svarintDecode.bytes = svarint.decode.bytes\\n\\n  return val\\n}\\n\\nmodule.exports = encoder(0, svarintEncode, svarintDecode, svarint.encodingLength)\\n\\n},{\\\"./encoder\\\":559,\\\"signed-varint\\\":573}],568:[function(require,module,exports){\\n'use strict'\\n\\nconst varint = require('varint')\\nconst uint8ArrayFromString = require('uint8arrays/from-string')\\nconst uint8ArrayToString = require('uint8arrays/to-string')\\nconst encoder = require('./encoder')\\n\\nfunction stringEncodingLength (val) {\\n  const len = uint8ArrayFromString(val).byteLength\\n  return varint.encodingLength(len) + len\\n}\\n\\nfunction stringEncode (val, buffer, dataView, offset) {\\n  const oldOffset = offset\\n  const len = uint8ArrayFromString(val).byteLength\\n\\n  varint.encode(len, buffer, offset, 'utf-8')\\n  offset += varint.encode.bytes\\n\\n  const arr = uint8ArrayFromString(val)\\n  buffer.set(arr, offset)\\n  offset += arr.length\\n\\n  stringEncode.bytes = offset - oldOffset\\n}\\n\\nfunction stringDecode (buffer, dataView, offset) {\\n  const oldOffset = offset\\n\\n  const len = varint.decode(buffer, offset)\\n  offset += varint.decode.bytes\\n\\n  const val = uint8ArrayToString(buffer.subarray(offset, offset + len))\\n  offset += len\\n\\n  stringDecode.bytes = offset - oldOffset\\n\\n  return val\\n}\\n\\nmodule.exports = encoder(2, stringEncode, stringDecode, stringEncodingLength)\\n\\n},{\\\"./encoder\\\":559,\\\"uint8arrays/from-string\\\":551,\\\"uint8arrays/to-string\\\":552,\\\"varint\\\":593}],569:[function(require,module,exports){\\n'use strict'\\n\\nconst varint = require('varint')\\nconst encoder = require('./encoder')\\n\\nfunction varintEncode (val, buffer, dataView, offset) {\\n  varint.encode(val, buffer, offset)\\n\\n  varintEncode.bytes = varint.encode.bytes\\n}\\n\\nfunction varintDecode (buffer, dataView, offset) {\\n  const val = varint.decode(buffer, offset)\\n  varintDecode.bytes = varint.decode.bytes\\n\\n  return val\\n}\\n\\nmodule.exports = encoder(0, varintEncode, varintDecode, varint.encodingLength)\\n\\n},{\\\"./encoder\\\":559,\\\"varint\\\":593}],570:[function(require,module,exports){\\n'use strict'\\n\\nconst encodings = require('./encodings')\\nconst compileDecode = require('./decode')\\nconst compileEncode = require('./encode')\\nconst compileEncodingLength = require('./encoding-length')\\nconst varint = require('varint')\\n\\nconst flatten = function (values) {\\n  if (!values) return null\\n  const result = {}\\n  Object.keys(values).forEach(function (k) {\\n    result[k] = values[k].value\\n  })\\n  return result\\n}\\n\\nmodule.exports = function (schema, extraEncodings) {\\n  const messages = {}\\n  const enums = {}\\n  const cache = {}\\n\\n  const visit = function (schema, prefix) {\\n    if (schema.enums) {\\n      schema.enums.forEach(function (e) {\\n        e.id = prefix + (prefix ? '.' : '') + e.name\\n        enums[e.id] = e\\n        visit(e, e.id)\\n      })\\n    }\\n    if (schema.messages) {\\n      schema.messages.forEach(function (m) {\\n        m.id = prefix + (prefix ? '.' : '') + m.name\\n        messages[m.id] = m\\n        m.fields.forEach(function (f) {\\n          if (!f.map) return\\n\\n          const name = 'Map_' + f.map.from + '_' + f.map.to\\n          const map = {\\n            name: name,\\n            enums: [],\\n            messages: [],\\n            fields: [{\\n              name: 'key',\\n              type: f.map.from,\\n              tag: 1,\\n              repeated: false,\\n              required: true\\n            }, {\\n              name: 'value',\\n              type: f.map.to,\\n              tag: 2,\\n              repeated: false,\\n              required: false\\n            }],\\n            extensions: null,\\n            id: prefix + (prefix ? '.' : '') + name\\n          }\\n\\n          if (!messages[map.id]) {\\n            messages[map.id] = map\\n            schema.messages.push(map)\\n          }\\n          f.type = name\\n          f.repeated = true\\n        })\\n        visit(m, m.id)\\n      })\\n    }\\n  }\\n\\n  visit(schema, '')\\n\\n  const compileEnum = function (e) {\\n    const values = Object.keys(e.values || []).map(function (k) {\\n      return parseInt(e.values[k].value, 10)\\n    })\\n\\n    const encode = function enumEncode (val, buf, view, offset) {\\n      if (!values.length || values.indexOf(val) === -1) {\\n        throw new Error('Invalid enum value: ' + val)\\n      }\\n      varint.encode(val, buf, offset)\\n      enumEncode.bytes = varint.encode.bytes\\n      return buf\\n    }\\n\\n    const decode = function enumDecode (buf, view, offset) {\\n      var val = varint.decode(buf, offset)\\n      if (!values.length || values.indexOf(val) === -1) {\\n        throw new Error('Invalid enum value: ' + val)\\n      }\\n      enumDecode.bytes = varint.decode.bytes\\n      return val\\n    }\\n\\n    return encodings.make(0, encode, decode, varint.encodingLength)\\n  }\\n\\n  const compileMessage = function (m, exports) {\\n    m.messages.forEach(function (nested) {\\n      exports[nested.name] = resolve(nested.name, m.id)\\n    })\\n\\n    m.enums.forEach(function (val) {\\n      exports[val.name] = flatten(val.values)\\n    })\\n\\n    exports.type = 2\\n    exports.message = true\\n    exports.name = m.name\\n\\n    const oneofs = {}\\n\\n    m.fields.forEach(function (f) {\\n      if (!f.oneof) return\\n      if (!oneofs[f.oneof]) oneofs[f.oneof] = []\\n      oneofs[f.oneof].push(f.name)\\n    })\\n\\n    const enc = m.fields.map(function (f) {\\n      return resolve(f.type, m.id)\\n    })\\n\\n    const encodingLength = compileEncodingLength(m, enc, oneofs)\\n    const encode = compileEncode(m, resolve, enc, oneofs, encodingLength)\\n    const decode = compileDecode(m, resolve, enc)\\n\\n    // end of compilation - return all the things\\n\\n    encode.bytes = decode.bytes = 0\\n\\n    exports.buffer = true\\n    exports.encode = encode\\n    exports.decode = decode\\n    exports.encodingLength = encodingLength\\n\\n    return exports\\n  }\\n\\n  const resolve = function (name, from, compile) {\\n    if (extraEncodings && extraEncodings[name]) return extraEncodings[name]\\n    if (encodings[name]) return encodings[name]\\n\\n    const m = (from ? from + '.' + name : name).split('.')\\n      .map(function (part, i, list) {\\n        return list.slice(0, i).concat(name).join('.')\\n      })\\n      .reverse()\\n      .reduce(function (result, id) {\\n        return result || messages[id] || enums[id]\\n      }, null)\\n\\n    if (compile === false) return m\\n    if (!m) throw new Error('Could not resolve ' + name)\\n\\n    if (m.values) return compileEnum(m)\\n    const res = cache[m.id] || compileMessage(m, cache[m.id] = {})\\n    return res\\n  }\\n\\n  return (schema.enums || []).concat((schema.messages || []).map(function (message) {\\n    return resolve(message.id)\\n  }))\\n}\\n\\n},{\\\"./decode\\\":553,\\\"./encode\\\":554,\\\"./encoding-length\\\":555,\\\"./encodings\\\":563,\\\"varint\\\":593}],571:[function(require,module,exports){\\n'use strict'\\n\\nexports.defined = function (val) {\\n  return val !== null && val !== undefined && (typeof val !== 'number' || !isNaN(val))\\n}\\n\\n},{}],572:[function(require,module,exports){\\n'use strict'\\n\\nvar schema = require('protocol-buffers-schema')\\nvar compile = require('./compile')\\n\\nvar flatten = function (values) {\\n  if (!values) return null\\n  var result = {}\\n  Object.keys(values).forEach(function (k) {\\n    result[k] = values[k].value\\n  })\\n  return result\\n}\\n\\nmodule.exports = function (proto, opts) {\\n  if (!opts) opts = {}\\n  if (!proto) throw new Error('Pass in a .proto string or a protobuf-schema parsed object')\\n\\n  var sch = (typeof proto === 'object' && !(proto instanceof Uint8Array)) ? proto : schema.parse(proto)\\n\\n  // to not make toString,toJSON enumarable we make a fire-and-forget prototype\\n  var Messages = function () {\\n    var self = this\\n\\n    compile(sch, opts.encodings || {}).forEach(function (m) {\\n      self[m.name] = flatten(m.values) || m\\n    })\\n  }\\n\\n  Messages.prototype.toString = function () {\\n    return schema.stringify(sch)\\n  }\\n\\n  Messages.prototype.toJSON = function () {\\n    return sch\\n  }\\n\\n  return new Messages()\\n}\\n\\n},{\\\"./compile\\\":570,\\\"protocol-buffers-schema\\\":547}],573:[function(require,module,exports){\\nvar varint = require('varint')\\nexports.encode = function encode (v, b, o) {\\n  v = v >= 0 ? v*2 : v*-2 - 1\\n  var r = varint.encode(v, b, o)\\n  encode.bytes = varint.encode.bytes\\n  return r\\n}\\nexports.decode = function decode (b, o) {\\n  var v = varint.decode(b, o)\\n  decode.bytes = varint.decode.bytes\\n  return v & 1 ? (v+1) / -2 : v / 2\\n}\\n\\nexports.encodingLength = function (v) {\\n  return varint.encodingLength(v >= 0 ? v*2 : v*-2 - 1)\\n}\\n\\n},{\\\"varint\\\":593}],574:[function(require,module,exports){\\n//! stable.js 0.1.8, https://github.com/Two-Screen/stable\\n//! © 2018 Angry Bytes and contributors. MIT licensed.\\n\\n(function (global, factory) {\\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\\n  typeof define === 'function' && define.amd ? define(factory) :\\n  (global.stable = factory());\\n}(this, (function () { 'use strict';\\n\\n  // A stable array sort, because `Array#sort()` is not guaranteed stable.\\n  // This is an implementation of merge sort, without recursion.\\n\\n  var stable = function (arr, comp) {\\n    return exec(arr.slice(), comp)\\n  };\\n\\n  stable.inplace = function (arr, comp) {\\n    var result = exec(arr, comp);\\n\\n    // This simply copies back if the result isn't in the original array,\\n    // which happens on an odd number of passes.\\n    if (result !== arr) {\\n      pass(result, null, arr.length, arr);\\n    }\\n\\n    return arr\\n  };\\n\\n  // Execute the sort using the input array and a second buffer as work space.\\n  // Returns one of those two, containing the final result.\\n  function exec(arr, comp) {\\n    if (typeof(comp) !== 'function') {\\n      comp = function (a, b) {\\n        return String(a).localeCompare(b)\\n      };\\n    }\\n\\n    // Short-circuit when there's nothing to sort.\\n    var len = arr.length;\\n    if (len <= 1) {\\n      return arr\\n    }\\n\\n    // Rather than dividing input, simply iterate chunks of 1, 2, 4, 8, etc.\\n    // Chunks are the size of the left or right hand in merge sort.\\n    // Stop when the left-hand covers all of the array.\\n    var buffer = new Array(len);\\n    for (var chk = 1; chk < len; chk *= 2) {\\n      pass(arr, comp, chk, buffer);\\n\\n      var tmp = arr;\\n      arr = buffer;\\n      buffer = tmp;\\n    }\\n\\n    return arr\\n  }\\n\\n  // Run a single pass with the given chunk size.\\n  var pass = function (arr, comp, chk, result) {\\n    var len = arr.length;\\n    var i = 0;\\n    // Step size / double chunk size.\\n    var dbl = chk * 2;\\n    // Bounds of the left and right chunks.\\n    var l, r, e;\\n    // Iterators over the left and right chunk.\\n    var li, ri;\\n\\n    // Iterate over pairs of chunks.\\n    for (l = 0; l < len; l += dbl) {\\n      r = l + chk;\\n      e = r + chk;\\n      if (r > len) r = len;\\n      if (e > len) e = len;\\n\\n      // Iterate both chunks in parallel.\\n      li = l;\\n      ri = r;\\n      while (true) {\\n        // Compare the chunks.\\n        if (li < r && ri < e) {\\n          // This works for a regular `sort()` compatible comparator,\\n          // but also for a simple comparator like: `a > b`\\n          if (comp(arr[li], arr[ri]) <= 0) {\\n            result[i++] = arr[li++];\\n          }\\n          else {\\n            result[i++] = arr[ri++];\\n          }\\n        }\\n        // Nothing to compare, just flush what's left.\\n        else if (li < r) {\\n          result[i++] = arr[li++];\\n        }\\n        else if (ri < e) {\\n          result[i++] = arr[ri++];\\n        }\\n        // Both iterators are at the chunk ends.\\n        else {\\n          break\\n        }\\n      }\\n    }\\n  };\\n\\n  return stable;\\n\\n})));\\n\\n},{}],575:[function(require,module,exports){\\nmodule.exports = readable => {\\n  // Node.js stream\\n  if (readable[Symbol.asyncIterator]) return readable\\n\\n  // Browser ReadableStream\\n  if (readable.getReader) {\\n    return (async function * () {\\n      const reader = readable.getReader()\\n\\n      try {\\n        while (true) {\\n          const { done, value } = await reader.read()\\n          if (done) return\\n          yield value\\n        }\\n      } finally {\\n        reader.releaseLock()\\n      }\\n    })()\\n  }\\n\\n  throw new Error('unknown stream')\\n}\\n\\n},{}],576:[function(require,module,exports){\\n'use strict';\\nvar escapeStringRegexp = require('escape-string-regexp');\\n\\nmodule.exports = function (str, sub) {\\n\\tif (typeof str !== 'string' || typeof sub !== 'string') {\\n\\t\\tthrow new TypeError();\\n\\t}\\n\\n\\tsub = escapeStringRegexp(sub);\\n\\treturn str.replace(new RegExp('^' + sub + '|' + sub + '$', 'g'), '');\\n};\\n\\n},{\\\"escape-string-regexp\\\":194}],577:[function(require,module,exports){\\n'use strict';\\nvar escapeStringRegexp = require('escape-string-regexp');\\n\\nmodule.exports = function (str, target) {\\n\\tif (typeof str !== 'string' || typeof target !== 'string') {\\n\\t\\tthrow new TypeError('Expected a string');\\n\\t}\\n\\n\\treturn str.replace(new RegExp('(?:' + escapeStringRegexp(target) + '){2,}', 'g'), target);\\n};\\n\\n},{\\\"escape-string-regexp\\\":194}],578:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * Can be used with Array.sort to sort and array with Uint8Array entries\\n *\\n * @param {Uint8Array} a\\n * @param {Uint8Array} b\\n */\\nfunction compare (a, b) {\\n  for (let i = 0; i < a.byteLength; i++) {\\n    if (a[i] < b[i]) {\\n      return -1\\n    }\\n\\n    if (a[i] > b[i]) {\\n      return 1\\n    }\\n  }\\n\\n  if (a.byteLength > b.byteLength) {\\n    return 1\\n  }\\n\\n  if (a.byteLength < b.byteLength) {\\n    return -1\\n  }\\n\\n  return 0\\n}\\n\\nmodule.exports = compare\\n\\n},{}],579:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\\n *\\n * @param {Array<ArrayLike<number>>} arrays\\n * @param {number} [length]\\n */\\nfunction concat (arrays, length) {\\n  if (!length) {\\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0)\\n  }\\n\\n  const output = new Uint8Array(length)\\n  let offset = 0\\n\\n  for (const arr of arrays) {\\n    output.set(arr, offset)\\n    offset += arr.length\\n  }\\n\\n  return output\\n}\\n\\nmodule.exports = concat\\n\\n},{}],580:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * Returns true if the two passed Uint8Arrays have the same content\\n *\\n * @param {Uint8Array} a\\n * @param {Uint8Array} b\\n */\\nfunction equals (a, b) {\\n  if (a === b) {\\n    return true\\n  }\\n\\n  if (a.byteLength !== b.byteLength) {\\n    return false\\n  }\\n\\n  for (let i = 0; i < a.byteLength; i++) {\\n    if (a[i] !== b[i]) {\\n      return false\\n    }\\n  }\\n\\n  return true\\n}\\n\\nmodule.exports = equals\\n\\n},{}],581:[function(require,module,exports){\\n'use strict'\\n\\nconst { encoding: getCodec } = require('multibase')\\nconst { TextEncoder } = require('web-encoding')\\nconst utf8Encoder = new TextEncoder()\\n\\n/**\\n * @typedef {import('multibase/src/types').BaseName} BaseName\\n */\\n\\n/**\\n * Interprets each character in a string as a byte and\\n * returns a Uint8Array of those bytes.\\n *\\n * @param {string} string - The string to turn into an array\\n */\\nfunction asciiStringToUint8Array (string) {\\n  const array = new Uint8Array(string.length)\\n\\n  for (let i = 0; i < string.length; i++) {\\n    array[i] = string.charCodeAt(i)\\n  }\\n\\n  return array\\n}\\n\\n/**\\n * Create a `Uint8Array` from the passed string\\n *\\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\\n *\\n * Also `ascii` which is similar to node's 'binary' encoding.\\n *\\n * @param {string} string\\n * @param {BaseName | 'utf8' | 'utf-8' | 'ascii'} [encoding=utf8] - utf8, base16, base64, base64urlpad, etc\\n * @returns {Uint8Array}\\n */\\nfunction fromString (string, encoding = 'utf8') {\\n  if (encoding === 'utf8' || encoding === 'utf-8') {\\n    return utf8Encoder.encode(string)\\n  }\\n\\n  if (encoding === 'ascii') {\\n    return asciiStringToUint8Array(string)\\n  }\\n\\n  return getCodec(encoding).decode(string)\\n}\\n\\nmodule.exports = fromString\\n\\n},{\\\"multibase\\\":585,\\\"web-encoding\\\":588}],582:[function(require,module,exports){\\n'use strict'\\nconst compare = require('./compare')\\nconst concat = require('./concat')\\nconst equals = require('./equals')\\nconst fromString = require('./from-string')\\nconst toString = require('./to-string')\\nconst xor = require('./xor')\\n\\nmodule.exports = {\\n  compare,\\n  concat,\\n  equals,\\n  fromString,\\n  toString,\\n  xor\\n}\\n\\n},{\\\"./compare\\\":578,\\\"./concat\\\":579,\\\"./equals\\\":580,\\\"./from-string\\\":581,\\\"./to-string\\\":589,\\\"./xor\\\":590}],583:[function(require,module,exports){\\narguments[4][40][0].apply(exports,arguments)\\n},{\\\"./util\\\":587,\\\"dup\\\":40}],584:[function(require,module,exports){\\narguments[4][41][0].apply(exports,arguments)\\n},{\\\"./base.js\\\":583,\\\"./rfc4648\\\":586,\\\"./util\\\":587,\\\"@multiformats/base-x\\\":7,\\\"dup\\\":41}],585:[function(require,module,exports){\\narguments[4][42][0].apply(exports,arguments)\\n},{\\\"./constants\\\":584,\\\"./util\\\":587,\\\"dup\\\":42}],586:[function(require,module,exports){\\narguments[4][43][0].apply(exports,arguments)\\n},{\\\"dup\\\":43}],587:[function(require,module,exports){\\narguments[4][44][0].apply(exports,arguments)\\n},{\\\"dup\\\":44,\\\"web-encoding\\\":588}],588:[function(require,module,exports){\\narguments[4][51][0].apply(exports,arguments)\\n},{\\\"dup\\\":51}],589:[function(require,module,exports){\\n'use strict'\\n\\nconst { encoding: getCodec } = require('multibase')\\nconst { TextDecoder } = require('web-encoding')\\nconst utf8Decoder = new TextDecoder('utf8')\\n\\n/**\\n * @typedef {import('multibase/src/types').BaseName} BaseName\\n */\\n\\n/**\\n * Turns a Uint8Array of bytes into a string with each\\n * character being the char code of the corresponding byte\\n *\\n * @param {Uint8Array} array - The array to turn into a string\\n */\\nfunction uint8ArrayToAsciiString (array) {\\n  let string = ''\\n\\n  for (let i = 0; i < array.length; i++) {\\n    string += String.fromCharCode(array[i])\\n  }\\n  return string\\n}\\n\\n/**\\n * Turns a `Uint8Array` into a string.\\n *\\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\\n *\\n * Also `ascii` which is similar to node's 'binary' encoding.\\n *\\n * @param {Uint8Array} array - The array to turn into a string\\n * @param {BaseName | 'utf8' | 'utf-8' | 'ascii'} [encoding=utf8] - The encoding to use\\n * @returns {string}\\n */\\nfunction toString (array, encoding = 'utf8') {\\n  if (encoding === 'utf8' || encoding === 'utf-8') {\\n    return utf8Decoder.decode(array)\\n  }\\n\\n  if (encoding === 'ascii') {\\n    return uint8ArrayToAsciiString(array)\\n  }\\n\\n  return getCodec(encoding).encode(array)\\n}\\n\\nmodule.exports = toString\\n\\n},{\\\"multibase\\\":585,\\\"web-encoding\\\":588}],590:[function(require,module,exports){\\n'use strict'\\n\\n/**\\n * Returns the xor distance between two arrays\\n *\\n * @param {Uint8Array} a\\n * @param {Uint8Array} b\\n */\\nfunction xor (a, b) {\\n  if (a.length !== b.length) {\\n    throw new Error('Inputs should have the same length')\\n  }\\n\\n  const result = new Uint8Array(a.length)\\n\\n  for (let i = 0; i < a.length; i++) {\\n    result[i] = a[i] ^ b[i]\\n  }\\n\\n  return result\\n}\\n\\nmodule.exports = xor\\n\\n},{}],591:[function(require,module,exports){\\nmodule.exports = read\\n\\nvar MSB = 0x80\\n  , REST = 0x7F\\n\\nfunction read(buf, offset) {\\n  var res    = 0\\n    , offset = offset || 0\\n    , shift  = 0\\n    , counter = offset\\n    , b\\n    , l = buf.length\\n\\n  do {\\n    if (counter >= l) {\\n      read.bytes = 0\\n      throw new RangeError('Could not decode varint')\\n    }\\n    b = buf[counter++]\\n    res += shift < 28\\n      ? (b & REST) << shift\\n      : (b & REST) * Math.pow(2, shift)\\n    shift += 7\\n  } while (b >= MSB)\\n\\n  read.bytes = counter - offset\\n\\n  return res\\n}\\n\\n},{}],592:[function(require,module,exports){\\nmodule.exports = encode\\n\\nvar MSB = 0x80\\n  , REST = 0x7F\\n  , MSBALL = ~REST\\n  , INT = Math.pow(2, 31)\\n\\nfunction encode(num, out, offset) {\\n  out = out || []\\n  offset = offset || 0\\n  var oldOffset = offset\\n\\n  while(num >= INT) {\\n    out[offset++] = (num & 0xFF) | MSB\\n    num /= 128\\n  }\\n  while(num & MSBALL) {\\n    out[offset++] = (num & 0xFF) | MSB\\n    num >>>= 7\\n  }\\n  out[offset] = num | 0\\n  \\n  encode.bytes = offset - oldOffset + 1\\n  \\n  return out\\n}\\n\\n},{}],593:[function(require,module,exports){\\narguments[4][240][0].apply(exports,arguments)\\n},{\\\"./decode.js\\\":591,\\\"./encode.js\\\":592,\\\"./length.js\\\":594,\\\"dup\\\":240}],594:[function(require,module,exports){\\narguments[4][241][0].apply(exports,arguments)\\n},{\\\"dup\\\":241}],595:[function(require,module,exports){\\narguments[4][51][0].apply(exports,arguments)\\n},{\\\"dup\\\":51}]},{},[1])(1)\\n});\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/ipfs-controller.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-controller.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-controller.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nIPFS Controller\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const EnsAction = require('$:/plugins/ipfs/ens-action.js').EnsAction\\n  const EnsWrapper = require('$:/plugins/ipfs/ens-wrapper.js').EnsWrapper\\n\\n  const IpfsAction = require('$:/plugins/ipfs/ipfs-action.js').IpfsAction\\n  const IpfsBundle = require('$:/plugins/ipfs/ipfs-bundle.js').IpfsBundle\\n  const IpfsTiddler = require('$:/plugins/ipfs/ipfs-tiddler.js').IpfsTiddler\\n  const IpfsWrapper = require('$:/plugins/ipfs/ipfs-wrapper.js').IpfsWrapper\\n\\n  const ipfsKeyword = 'ipfs'\\n  const ipnsKeyword = 'ipns'\\n\\n  const name = 'ipfs-controller'\\n\\n  var IpfsController = function () {\\n    this.pin = []\\n    this.unpin = []\\n  }\\n\\n  IpfsController.prototype.init = function () {\\n    // Init once\\n    if (this.once) {\\n      return\\n    }\\n    this.ipfsBundle = new IpfsBundle()\\n    this.ipfsBundle.init()\\n    this.ensWrapper = new EnsWrapper(this.ipfsBundle.ensLibrary)\\n    this.ipfsWrapper = new IpfsWrapper(this.ipfsBundle)\\n    // Listener\\n    this.ensAction = new EnsAction()\\n    this.ipfsAction = new IpfsAction()\\n    this.ipfsTiddler = new IpfsTiddler()\\n    // Init\\n    this.ensAction.init()\\n    this.ipfsAction.init()\\n    this.ipfsTiddler.init()\\n    // Load sigUtil early if needed\\n    if ($tw.crypto.hasEncryptionPublicKey() && globalThis.sigUtil === 'undefined') {\\n      this.loadEthSigUtilLibrary()\\n    }\\n    // Init once\\n    this.once = true\\n  }\\n\\n  IpfsController.prototype.getLogger = function () {\\n    if (window.log !== undefined && window.log !== null) {\\n      const loggers = window.log.getLoggers()\\n      var log = loggers.eruda\\n      if (log !== undefined && log !== null) {\\n        return log\\n      }\\n      log = loggers.default\\n      if (log !== undefined && log !== null) {\\n        return log\\n      }\\n    }\\n    return console\\n  }\\n\\n  IpfsController.prototype.loadToBase64 = async function (url, password) {\\n    return await this.ipfsBundle.loadToBase64(url, password)\\n  }\\n\\n  IpfsController.prototype.loadToUtf8 = async function (url, password) {\\n    return await this.ipfsBundle.loadToUtf8(url, password)\\n  }\\n\\n  IpfsController.prototype.Base64ToUint8Array = function (b64) {\\n    return this.ipfsBundle.Base64ToUint8Array(b64)\\n  }\\n\\n  IpfsController.prototype.Uint8ArrayToBase64 = function (ua) {\\n    return this.ipfsBundle.Uint8ArrayToBase64(ua)\\n  }\\n\\n  IpfsController.prototype.StringToUint8Array = function (string) {\\n    return this.ipfsBundle.StringToUint8Array(string)\\n  }\\n\\n  IpfsController.prototype.Utf8ArrayToStr = function (array) {\\n    return this.ipfsBundle.Utf8ArrayToStr(array)\\n  }\\n\\n  IpfsController.prototype.processContent = async function (tiddler, content, encoding) {\\n    if (content === undefined || content == null) {\\n      throw new Error('Unknown content...')\\n    }\\n    encoding = encoding !== undefined && encoding !== null && encoding.trim() !== '' ? encoding.trim() : null\\n    if (encoding == null) {\\n      throw new Error('Unknown encoding...')\\n    }\\n    var compress = $tw.wiki.getTiddler('$:/isCompressed')\\n    compress = compress !== undefined ? compress.fields.text === 'yes' : false\\n    compress = tiddler !== undefined && tiddler.fields._compress !== undefined && tiddler.fields._compress.trim() !== '' ? tiddler.fields._compress.trim() === 'yes' : compress\\n    var encrypted = $tw.wiki.getTiddler('$:/isEncrypted')\\n    encrypted = encrypted !== undefined ? encrypted.fields.text === 'yes' : false\\n    var password = tiddler !== undefined && tiddler.fields._password !== undefined && tiddler.fields._password.trim() !== '' ? tiddler.fields._password.trim() : null\\n    var publicKey =\\n      tiddler !== undefined && tiddler.fields._encryption_public_key !== undefined && tiddler.fields._encryption_public_key.trim() !== ''\\n        ? tiddler.fields._encryption_public_key.trim()\\n        : null\\n    var sign = $tw.wiki.getTiddler('$:/isSigned')\\n    sign = sign !== undefined ? sign.fields.text === 'yes' : false\\n    sign = tiddler !== undefined && tiddler.fields._sign !== undefined && tiddler.fields._sign.trim() !== '' ? tiddler.fields._sign.trim() === 'yes' : sign\\n    var hasPublicKey = publicKey || $tw.crypto.hasEncryptionPublicKey()\\n    if (encrypted || password || hasPublicKey) {\\n      try {\\n        if (hasPublicKey && globalThis.sigUtil === 'undefined') {\\n          await this.loadEthSigUtilLibrary()\\n        }\\n        if (compress) {\\n          content = { compressed: this.deflate(content) }\\n          content.compressed = $tw.crypto.encrypt(content.compressed, password, publicKey)\\n          if (hasPublicKey && sign) {\\n            content.keccak256 = $tw.crypto.keccak256(content.compressed)\\n            content.signature = await this.personalSign(content.keccak256)\\n            content.signature = $tw.crypto.encrypt(content.signature, null, publicKey)\\n          }\\n          content = JSON.stringify(content)\\n        } else {\\n          // https://github.com/xmaysonnave/tiddlywiki-ipfs/issues/9\\n          if (encoding === 'base64') {\\n            content = atob(content)\\n          }\\n          if (hasPublicKey) {\\n            content = { encrypted: content }\\n            content.encrypted = $tw.crypto.encrypt(content.encrypted, null, publicKey)\\n            if (sign) {\\n              content.keccak256 = $tw.crypto.keccak256(content.encrypted)\\n              content.signature = await this.personalSign(content.keccak256)\\n              content.signature = $tw.crypto.encrypt(content.signature, null, publicKey)\\n            }\\n            content = JSON.stringify(content)\\n          } else {\\n            content = $tw.crypto.encrypt(content, password)\\n          }\\n        }\\n        content = $tw.ipfs.StringToUint8Array(content)\\n      } catch (error) {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, 'Failed to process encrypted content...')\\n        return null\\n      }\\n    } else {\\n      try {\\n        if (compress) {\\n          content = { compressed: this.deflate(content) }\\n          content = JSON.stringify(content)\\n          content = $tw.ipfs.StringToUint8Array(content)\\n        } else {\\n          if (encoding === 'base64') {\\n            content = $tw.ipfs.Base64ToUint8Array(content)\\n          } else {\\n            content = $tw.ipfs.StringToUint8Array(content)\\n          }\\n        }\\n      } catch (error) {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, 'Failed to process content...')\\n        return null\\n      }\\n    }\\n    return content\\n  }\\n\\n  IpfsController.prototype.requestToPin = function (ipfsPath) {\\n    const self = this\\n    return new Promise((resolve, reject) => {\\n      if ($tw.utils.getIpfsPin() === false) {\\n        resolve(false)\\n      }\\n      ipfsPath = ipfsPath !== undefined && ipfsPath !== null && ipfsPath.toString().trim() !== '' ? ipfsPath.toString().trim() : null\\n      if (ipfsPath == null) {\\n        resolve(false)\\n      }\\n      if (ipfsPath.indexOf(`/${ipnsKeyword}/`) !== -1) {\\n        self\\n          .resolveUrl(true, true, ipfsPath)\\n          .then(data => {\\n            const { cid } = data\\n            if (cid !== null) {\\n              resolve(self.addToPin(`/${ipfsKeyword}/${cid}`))\\n            } else {\\n              resolve(false)\\n            }\\n          })\\n          .catch(error => {\\n            reject(error)\\n          })\\n      } else {\\n        resolve(self.addToPin(ipfsPath))\\n      }\\n    })\\n  }\\n\\n  IpfsController.prototype.addToPin = function (ipfsPath) {\\n    if (ipfsPath !== undefined && ipfsPath !== null) {\\n      var index = this.unpin.indexOf(ipfsPath)\\n      if (index !== -1) {\\n        this.unpin.splice(index, 1)\\n        $tw.ipfs.getLogger().info(\\n          `Cancel request to Unpin:\\n${ipfsPath}`\\n        )\\n        return false\\n      }\\n      if (this.pin.indexOf(ipfsPath) === -1) {\\n        this.pin.push(ipfsPath)\\n        $tw.ipfs.getLogger().info(\\n          `Request to Pin:\\n${ipfsPath}`\\n        )\\n        return true\\n      }\\n    }\\n    return false\\n  }\\n\\n  IpfsController.prototype.requestToUnpin = function (ipfsPath) {\\n    const self = this\\n    return new Promise((resolve, reject) => {\\n      if ($tw.utils.getIpfsUnpin() === false) {\\n        resolve(false)\\n      }\\n      ipfsPath = ipfsPath !== undefined && ipfsPath !== null && ipfsPath.toString().trim() !== '' ? ipfsPath.toString().trim() : null\\n      if (ipfsPath == null) {\\n        resolve(false)\\n      }\\n      if (ipfsPath.indexOf(`/${ipnsKeyword}/`) !== -1) {\\n        self\\n          .resolveUrl(true, true, ipfsPath)\\n          .then(data => {\\n            const { cid } = data\\n            if (cid !== null) {\\n              resolve(self.addToUnpin(`/${ipfsKeyword}/${cid}`))\\n            } else {\\n              resolve(false)\\n            }\\n          })\\n          .catch(error => {\\n            reject(error)\\n          })\\n      } else {\\n        resolve(self.addToUnpin(ipfsPath))\\n      }\\n    })\\n  }\\n\\n  IpfsController.prototype.addToUnpin = function (ipfsPath) {\\n    if (ipfsPath !== undefined && ipfsPath !== null) {\\n      // Discard\\n      var index = this.pin.indexOf(ipfsPath)\\n      if (index !== -1) {\\n        this.pin.splice(index, 1)\\n        $tw.ipfs.getLogger().info(\\n          `Cancel request to Pin:\\n${ipfsPath}`\\n        )\\n        return false\\n      }\\n      // Add to unpin\\n      if (this.unpin.indexOf(ipfsPath) === -1) {\\n        this.unpin.push(ipfsPath)\\n        $tw.ipfs.getLogger().info(\\n          `Request to unpin:\\n${ipfsPath}`\\n        )\\n        return true\\n      }\\n    }\\n    return false\\n  }\\n\\n  IpfsController.prototype.removeFromPinUnpin = function (ipfsPath) {\\n    if (ipfsPath !== undefined && ipfsPath !== null) {\\n      var index = this.pin.indexOf(ipfsPath)\\n      if (index !== -1) {\\n        this.pin.splice(index, 1)\\n        $tw.ipfs.getLogger().info(\\n          `Cancel request to Pin:\\n ${ipfsPath}`\\n        )\\n      }\\n      index = this.unpin.indexOf(ipfsPath)\\n      if (index !== -1) {\\n        this.unpin.splice(index, 1)\\n        $tw.ipfs.getLogger().info(\\n          `Cancel request to Unpin:\\n ${ipfsPath}`\\n        )\\n      }\\n    }\\n  }\\n\\n  IpfsController.prototype.pinToIpfs = async function (ipfsPath, recursive) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.pinToIpfs(ipfs, ipfsPath, recursive)\\n  }\\n\\n  IpfsController.prototype.unpinFromIpfs = async function (ipfsPath, recursive) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.unpinFromIpfs(ipfs, ipfsPath, recursive)\\n  }\\n\\n  IpfsController.prototype.addAttachmentToIpfs = async function (content, ipfsPath) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.addAttachmentToIpfs(ipfs, content, ipfsPath)\\n  }\\n\\n  IpfsController.prototype.addToIpfs = async function (content) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.addToIpfs(ipfs, content)\\n  }\\n\\n  IpfsController.prototype.generateIpnsKey = async function (ipnsName) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.generateIpnsKey(ipfs, ipnsName)\\n  }\\n\\n  IpfsController.prototype.removeIpnsKey = async function (ipnsName) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.removeIpnsKey(ipfs, ipnsName)\\n  }\\n\\n  IpfsController.prototype.renameIpnsName = async function (oldIpnsName, newIpnsName) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.renameIpnsName(ipfs, oldIpnsName, newIpnsName)\\n  }\\n\\n  IpfsController.prototype.resolveIpfsContainer = async function (url) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.resolveIpfsContainer(ipfs, url)\\n  }\\n\\n  IpfsController.prototype.getIpnsIdentifier = async function (identifier, base, path, ipnsName, resolveIpns) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.getIpnsIdentifier(ipfs, identifier, base, path, ipnsName, resolveIpns)\\n  }\\n\\n  IpfsController.prototype.resolveIpnsKey = async function (ipnsKey) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.resolveIpnsKey(ipfs, ipnsKey)\\n  }\\n\\n  IpfsController.prototype.publishIpnsName = async function (cid, ipnsKey, ipnsName) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.publishIpnsName(cid, ipfs, ipnsKey, ipnsName)\\n  }\\n\\n  IpfsController.prototype.isJson = function (content) {\\n    return this.ipfsBundle.isJson(content)\\n  }\\n\\n  IpfsController.prototype.filenamify = function (name, options) {\\n    return this.ipfsBundle.filenamify(name, options)\\n  }\\n\\n  IpfsController.prototype.getIpfsBaseUrl = function () {\\n    return this.ipfsBundle.getIpfsBaseUrl()\\n  }\\n\\n  IpfsController.prototype.normalizeUrl = function (value, base) {\\n    return this.ipfsBundle.normalizeUrl(value, base)\\n  }\\n\\n  IpfsController.prototype.getDocumentUrl = function () {\\n    return this.ipfsBundle.getDocumentUrl()\\n  }\\n\\n  IpfsController.prototype.getIpfsDefaultApi = function () {\\n    return this.ipfsBundle.getIpfsDefaultApi()\\n  }\\n\\n  IpfsController.prototype.getIpfsDefaultGateway = function () {\\n    return this.ipfsBundle.getIpfsDefaultGateway()\\n  }\\n\\n  IpfsController.prototype.getIpfsApiUrl = function () {\\n    return this.ipfsBundle.getIpfsApiUrl()\\n  }\\n\\n  IpfsController.prototype.getIpfsGatewayUrl = function () {\\n    return this.ipfsBundle.getIpfsGatewayUrl()\\n  }\\n\\n  IpfsController.prototype.getUrl = function (url, base) {\\n    return this.ipfsBundle.getUrl(url, base)\\n  }\\n\\n  IpfsController.prototype.resolveUrl = async function (resolveIpns, resolveEns, value, base, web3) {\\n    var cid = null\\n    var ipnsKey = null\\n    var ipnsName = null\\n    var normalizedUrl = null\\n    var resolvedUrl = null\\n    value = value !== undefined && value !== null && value.toString().trim() !== '' ? value.toString().trim() : null\\n    if (value == null) {\\n      return {\\n        cid: null,\\n        ipnsKey: null,\\n        ipnsName: null,\\n        normalizedUrl: null,\\n        resolvedUrl: null,\\n      }\\n    }\\n    try {\\n      normalizedUrl = this.normalizeUrl(value, base)\\n    } catch (error) {\\n      // Ignore\\n    }\\n    if (normalizedUrl == null) {\\n      return {\\n        cid: null,\\n        ipnsKey: null,\\n        ipnsName: null,\\n        normalizedUrl: null,\\n        resolvedUrl: null,\\n      }\\n    }\\n    var { cid, ipnsIdentifier, path } = this.getIpfsIdentifier(normalizedUrl)\\n    if (ipnsIdentifier !== null) {\\n      var { cid, ipnsKey, ipnsName, normalizedUrl, resolvedUrl } = await this.resolveIpns(ipnsIdentifier, resolveIpns, base, path)\\n    } else if (cid == null && ipnsIdentifier == null && resolveEns && normalizedUrl.hostname.endsWith('.eth')) {\\n      var { cid, protocol, resolvedUrl } = await this.resolveEns(normalizedUrl.hostname, base, path, web3)\\n      if (protocol === ipnsKeyword) {\\n        var { cid, ipnsKey, ipnsName, resolvedUrl } = await this.resolveIpns(cid, resolveIpns, base, path)\\n      }\\n    }\\n    return {\\n      cid: cid,\\n      ipnsKey: ipnsKey,\\n      ipnsName: ipnsName,\\n      normalizedUrl: normalizedUrl,\\n      resolvedUrl: resolvedUrl !== null ? resolvedUrl : normalizedUrl,\\n    }\\n  }\\n\\n  IpfsController.prototype.resolveIpns = async function (ipnsIdentifier, resolveIpns, base, path) {\\n    ipnsIdentifier = ipnsIdentifier !== undefined && ipnsIdentifier !== null && ipnsIdentifier.toString().trim() !== '' ? ipnsIdentifier.toString().trim() : null\\n    path = path !== undefined && path !== null && path.trim() !== '' ? path.trim() : ''\\n    if (ipnsIdentifier == null) {\\n      return {\\n        cid: null,\\n        ipnsKey: null,\\n        ipnsName: null,\\n        normalizedUrl: null,\\n        resolvedUrl: null,\\n      }\\n    }\\n    var cid = null\\n    var resolvedUrl = null\\n    var { ipnsKey, ipnsName, normalizedUrl } = await this.getIpnsIdentifier(ipnsIdentifier, base, path, null, resolveIpns)\\n    if (resolveIpns) {\\n      $tw.ipfs.getLogger().info(\\n        `Resolving IPNS key:\\n${normalizedUrl}`\\n      )\\n      $tw.utils.alert(name, 'Resolving an IPNS key...')\\n      try {\\n        cid = await this.resolveIpnsKey(ipnsKey)\\n        if (cid !== null) {\\n          // Path\\n          const startPath = `/${ipnsKeyword}/${ipnsKey}`\\n          if (path.startsWith(startPath)) {\\n            path = path.slice(startPath.length)\\n          }\\n          path = `${startPath}${path}`\\n          resolvedUrl = this.normalizeUrl(path, base)\\n          $tw.ipfs.getLogger().info(\\n            `Successfully resolved IPNS key:\\n${resolvedUrl}`\\n          )\\n          $tw.utils.alert(name, 'Successfully resolved an IPNS key...')\\n        }\\n      } catch (error) {\\n        // Unable to resolve the key\\n        // It usually happen when the key is not initialized\\n        cid = null\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      }\\n    }\\n    return {\\n      cid: cid,\\n      ipnsKey: ipnsKey,\\n      ipnsName: ipnsName,\\n      normalizedUrl: normalizedUrl,\\n      resolvedUrl: resolvedUrl,\\n    }\\n  }\\n\\n  IpfsController.prototype.resolveEns = async function (ensDomain, base, path, web3) {\\n    ensDomain = ensDomain !== undefined && ensDomain !== null && ensDomain.toString().trim() !== '' ? ensDomain.toString().trim() : null\\n    if (ensDomain == null) {\\n      return {\\n        cid: null,\\n        protocol: null,\\n        resolvedUrl: null,\\n      }\\n    }\\n    path = path !== undefined && path !== null && path.trim() !== '' ? path.trim() : ''\\n    if (web3 === undefined || web3 == null) {\\n      var { web3 } = await this.getWeb3Provider()\\n    }\\n    const { content, protocol } = await this.ensWrapper.getContentHash(ensDomain, web3)\\n    if (content == null || protocol == null) {\\n      return {\\n        cid: null,\\n        protocol: null,\\n        resolvedUrl: null,\\n      }\\n    }\\n    const url = this.normalizeUrl(`/${protocol}/${content}${path}`, base)\\n    $tw.ipfs.getLogger().info(\\n      `Successfully fetched ENS domain content: \\\"${ensDomain}\\\"\\n${url}`\\n    )\\n    return {\\n      cid: content,\\n      protocol: protocol,\\n      resolvedUrl: url,\\n    }\\n  }\\n\\n  IpfsController.prototype.getIpfsClient = async function () {\\n    // Provider\\n    const ipfsProvider = $tw.utils.getIpfsProvider()\\n    // IPFS companion\\n    if (ipfsProvider === 'window') {\\n      const client = await this.ipfsWrapper.getWindowIpfsClient()\\n      return {\\n        ipfs: client.ipfs,\\n        provider: client.provider,\\n      }\\n    }\\n    // Default, try IPFS companion\\n    if (ipfsProvider === 'default') {\\n      try {\\n        const client = await this.ipfsWrapper.getWindowIpfsClient()\\n        return {\\n          ipfs: client.ipfs,\\n          provider: client.provider,\\n        }\\n      } catch (error) {\\n        // Ignore, fallback to HTTP\\n      }\\n    }\\n    const url = this.getIpfsApiUrl()\\n    if (url === undefined || url == null || url.toString().trim() === '') {\\n      throw new Error('Undefined IPFS API URL...')\\n    }\\n    const { ipfs, provider } = await this.ipfsWrapper.getHttpIpfsClient(url)\\n    return {\\n      ipfs: ipfs,\\n      provider: provider,\\n    }\\n  }\\n\\n  IpfsController.prototype.setContentHash = async function (ensDomain, identifier, web3, account) {\\n    if (account === undefined || account == null || web3 === undefined || web3 == null) {\\n      var { account, web3 } = await this.getEnabledWeb3Provider()\\n    }\\n    await this.ensWrapper.setContentHash(ensDomain, identifier, web3, account)\\n    const url = this.normalizeUrl(identifier)\\n    $tw.ipfs.getLogger().info(\\n      `Successfully set ENS domain content:\\n ${url}\\n to: \\\"${ensDomain}\\\"`\\n    )\\n    return true\\n  }\\n\\n  IpfsController.prototype.getIpfsIdentifier = function (value) {\\n    return this.ipfsBundle.getIpfsIdentifier(value)\\n  }\\n\\n  IpfsController.prototype.getCid = function (cid) {\\n    return this.ipfsBundle.getCid(cid)\\n  }\\n\\n  IpfsController.prototype.cidToBase58CidV0 = function (cid, log) {\\n    return this.ipfsBundle.cidToBase58CidV0(cid, log)\\n  }\\n\\n  IpfsController.prototype.cidToCidV1 = function (cid, protocol, log) {\\n    return this.ipfsBundle.cidToCidV1(cid, protocol, log)\\n  }\\n\\n  IpfsController.prototype.cidToLibp2pKeyCidV1 = function (cid, multibaseName, log) {\\n    return this.ipfsBundle.cidToLibp2pKeyCidV1(cid, multibaseName, log)\\n  }\\n\\n  IpfsController.prototype.isOwner = async function (domain, web3, account) {\\n    return await this.ipfsBundle.isOwner(domain, web3, account)\\n  }\\n\\n  IpfsController.prototype.personalRecover = async function (message, signature) {\\n    return await this.ipfsBundle.personalRecover(message, signature)\\n  }\\n\\n  IpfsController.prototype.personalSign = async function (message, provider) {\\n    return await this.ipfsBundle.personalSign(message, provider)\\n  }\\n\\n  IpfsController.prototype.decrypt = async function (text, provider) {\\n    return await this.ipfsBundle.decrypt(text, provider)\\n  }\\n\\n  IpfsController.prototype.getPublicEncryptionKey = async function (provider) {\\n    return await this.ipfsBundle.getPublicEncryptionKey(provider)\\n  }\\n\\n  IpfsController.prototype.getEthereumProvider = async function () {\\n    return await this.ipfsBundle.getEthereumProvider()\\n  }\\n\\n  IpfsController.prototype.getEnabledWeb3Provider = async function () {\\n    return await this.ipfsBundle.getEnabledWeb3Provider()\\n  }\\n\\n  IpfsController.prototype.getWeb3Provider = async function () {\\n    return await this.ipfsBundle.getWeb3Provider()\\n  }\\n\\n  IpfsController.prototype.getBlockExplorerRegistry = function () {\\n    return this.ipfsBundle.getBlockExplorerRegistry()\\n  }\\n\\n  IpfsController.prototype.getNetworkRegistry = function () {\\n    return this.ipfsBundle.getNetworkRegistry()\\n  }\\n\\n  IpfsController.prototype.getENSRegistry = function () {\\n    return this.ipfsBundle.getENSRegistry()\\n  }\\n\\n  IpfsController.prototype.loadErudaLibrary = async function () {\\n    await this.ipfsBundle.loadErudaLibrary()\\n  }\\n\\n  IpfsController.prototype.loadEthSigUtilLibrary = async function () {\\n    await this.ipfsBundle.loadEthSigUtilLibrary()\\n  }\\n\\n  IpfsController.prototype.deflate = function (str) {\\n    return this.ipfsBundle.deflate(str)\\n  }\\n\\n  IpfsController.prototype.inflate = function (b64) {\\n    return this.ipfsBundle.inflate(b64)\\n  }\\n\\n  exports.IpfsController = IpfsController\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/ipfs-import.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-import.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-import.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nIPFS Import\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const name = 'ipfs-import'\\n\\n  const tiddlyWikiType = 'text/vnd.tiddlywiki'\\n\\n  const local = '<a href=\\\"'\\n  const remote = '<a class=\\\"tc-tiddlylink-external\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\" href=\\\"'\\n\\n  const alertFailed = function (strings, msg, key, field, parentField, parentUrl, parentTitle) {\\n    var space = strings[1]\\n    var endH1 = strings[2]\\n    var endL1 = strings[3]\\n    var from = strings[4]\\n    var endH2 = strings[5]\\n    var endL2 = strings[6]\\n    if (parentUrl.hostname === $tw.ipfs.getIpfsBaseUrl().hostname && parentUrl.pathname === $tw.ipfs.getIpfsBaseUrl().pathname) {\\n      return `${msg}${space}${remote}${key}${endH1}${field}${endL1}${parentField}${from}${local}${parentUrl}${endH2}${parentTitle}${endL2}`\\n    } else {\\n      return `${msg}${space}${remote}${key}${endH1}${field}${endL1}${parentField}${from}${remote}${parentUrl}${endH2}${parentTitle}${endL2}`\\n    }\\n  }\\n\\n  const alertFieldFailed = function (strings, msg, field, url, title) {\\n    var failed = strings[1]\\n    var from = strings[2]\\n    var endH = strings[3]\\n    var endL = strings[4]\\n    if (url.hostname === $tw.ipfs.getIpfsBaseUrl().hostname && url.pathname === $tw.ipfs.getIpfsBaseUrl().pathname) {\\n      return `${msg}${failed}${field}${from}${local}${url}${endH}${title}${endL}`\\n    } else {\\n      return `${msg}${failed}${field}${from}${remote}${url}${endH}${title}${endL}`\\n    }\\n  }\\n\\n  const alertConditionFailed = function (strings, msg, condition, key, title, parentUrl) {\\n    var space = strings[1]\\n    var from = strings[2]\\n    var endH1 = strings[3]\\n    var endL1 = strings[4]\\n    var endH2 = strings[5]\\n    var endL2 = strings[6]\\n    if (parentUrl.hostname === $tw.ipfs.getIpfsBaseUrl().hostname && parentUrl.pathname === $tw.ipfs.getIpfsBaseUrl().pathname) {\\n      return `${msg}${space}${condition}${from}${remote}${key}${endH1}${title}${endL1}${local}${parentUrl}${endH2}${title}${endL2}`\\n    } else {\\n      return `${msg}${space}${condition}${from}${remote}${key}${endH1}${title}${endL1}${remote}${parentUrl}${endH2}${title}${endL2}`\\n    }\\n  }\\n\\n  var IpfsImport = function () {}\\n\\n  IpfsImport.prototype.removeTiddlers = function (keys, title) {\\n    var removed = 0\\n    for (var key of this.loaded.keys()) {\\n      if (keys.indexOf(key) !== -1) {\\n        continue\\n      }\\n      const { imported, resolvedKey } = this.loaded.get(key)\\n      if (imported.delete(title)) {\\n        const msg = 'Remove:'\\n        const field = ''\\n        $tw.ipfs.getLogger().info(\\n          `${msg} ${field}\\\"${title}\\\"\\n ${resolvedKey}`\\n        )\\n        $tw.utils.alert(name, alertFieldFailed`${msg} ${field}${resolvedKey}\\\">${title}</a>`)\\n        removed += 1\\n      }\\n    }\\n    return removed\\n  }\\n\\n  IpfsImport.prototype.getKey = async function (value, base) {\\n    var cid = null\\n    var ipnsKey = null\\n    var key = null\\n    var normalizedUrl = null\\n    var resolvedUrl = null\\n    value = value !== undefined && value !== null && value.toString().trim() !== '' ? value.toString().trim() : null\\n    if (value == null) {\\n      return {\\n        key: null,\\n        isIpfs: false,\\n        resolvedUrl: null,\\n      }\\n    }\\n    var { cid, ipnsKey, normalizedUrl, resolvedUrl } = await $tw.ipfs.resolveUrl(false, true, value, base)\\n    if (normalizedUrl == null && resolvedUrl == null) {\\n      throw new Error(`Failed to resolve value: ${value}`)\\n    }\\n    if (normalizedUrl.hostname.endsWith('.eth') || normalizedUrl.hostname.endsWith('.eth.link')) {\\n      key = normalizedUrl.hostname\\n    } else if (cid !== null) {\\n      key = `ipfs://${cid}`\\n    } else if (ipnsKey !== null) {\\n      key = `ipns://${ipnsKey}`\\n    } else {\\n      key = normalizedUrl.toString()\\n    }\\n    return {\\n      key: key,\\n      resolvedUrl: resolvedUrl,\\n    }\\n  }\\n\\n  IpfsImport.prototype.isIpfs = async function (key) {\\n    key = key !== undefined && key !== null && key.trim() !== '' ? key.trim() : null\\n    if (key == null) {\\n      return false\\n    }\\n    const { cid, ipnsIdentifier } = $tw.ipfs.getIpfsIdentifier(key)\\n    if (key.endsWith('.eth') || key.endsWith('.eth.link') || cid !== null || ipnsIdentifier !== null) {\\n      return true\\n    }\\n    return false\\n  }\\n\\n  IpfsImport.prototype.import = async function (canonicalUri, importUri, tiddler) {\\n    canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.toString().trim() !== '' ? canonicalUri.toString().trim() : null\\n    importUri = importUri !== undefined && importUri !== null && importUri.toString().trim() !== '' ? importUri.toString().trim() : null\\n    var password = tiddler.fields._password\\n    password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null\\n    const { type } = $tw.utils.getContentType(tiddler)\\n    this.loaded = new Map()\\n    this.notLoaded = []\\n    this.isEmpty = []\\n    this.resolved = new Map()\\n    this.notResolved = []\\n    this.merged = new Map()\\n    try {\\n      // Load and prepare imported tiddlers to be processed\\n      const host = $tw.ipfs.getUrl(`#${tiddler.fields.title}`, $tw.ipfs.getIpfsBaseUrl())\\n      if (canonicalUri !== null || importUri !== null) {\\n        if (importUri !== null) {\\n          await this.load(host, tiddler.fields.title, '_import_uri', importUri, password, true)\\n        }\\n        if (canonicalUri !== null) {\\n          await this.load(host, tiddler.fields.title, '_canonical_uri', canonicalUri, password, tiddlyWikiType === type)\\n        }\\n        // Process\\n        this.processImported()\\n        // Import\\n        var rootUri = importUri !== null ? importUri : canonicalUri\\n        this.importTiddlers(rootUri)\\n        // Deleted\\n        var deleted = new Map()\\n        var titles = $tw.wiki.getTiddlers({ includeSystem: true })\\n        for (var i = 0; i < titles.length; i++) {\\n          const title = titles[i]\\n          const current = $tw.wiki.getTiddler(title)\\n          canonicalUri = current.fields._canonical_uri\\n          canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.trim() !== '' ? canonicalUri.trim() : null\\n          if (canonicalUri !== null) {\\n            var key = this.resolved.get(canonicalUri)\\n            if (key === undefined) {\\n              var { key } = await this.getKey(canonicalUri, rootUri)\\n            }\\n            if (key === rootUri && this.merged.get(title) === undefined && deleted.get(title) === undefined) {\\n              deleted.set(title, JSON.parse($tw.wiki.getTiddlerAsJson(title)))\\n            }\\n          }\\n          importUri = current.fields._import_uri\\n          importUri = importUri !== undefined && importUri !== null && importUri.trim() !== '' ? importUri.trim() : null\\n          if (importUri !== null) {\\n            var key = this.resolved.get(importUri)\\n            if (key === undefined) {\\n              var { key } = await this.getKey(importUri, rootUri)\\n            }\\n            if (key === rootUri && this.merged.get(title) === undefined && deleted.get(title) === undefined) {\\n              deleted.set(title, JSON.parse($tw.wiki.getTiddlerAsJson(title)))\\n            }\\n          }\\n        }\\n        return {\\n          merged: this.merged,\\n          deleted: deleted,\\n          loaded: this.loaded,\\n          isEmpty: this.isEmpty,\\n          notLoaded: this.notLoaded,\\n          notResolved: this.notResolved,\\n        }\\n      }\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n    }\\n    this.loaded = null\\n    this.isEmpty = null\\n    this.notLoaded = null\\n    this.resolved = null\\n    this.notResolved = null\\n    this.merged = null\\n  }\\n\\n  IpfsImport.prototype.load = async function (parentUrl, parentTitle, field, url, password, load) {\\n    var loaded = 0\\n    var removed = 0\\n    var key = null\\n    var resolvedUrl = null\\n    if (url !== null && this.notResolved.indexOf(url) === -1 && this.resolved.get(url) === undefined) {\\n      try {\\n        var { key, resolvedUrl } = await this.getKey(url, parentUrl)\\n        this.resolved.set(url, key)\\n      } catch (error) {\\n        const msg = 'Failed to Resolve:'\\n        this.notResolved.push(url)\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, alertFieldFailed`${msg} \\\"${field}\\\" from ${parentUrl}\\\">${parentTitle}</a>`)\\n      }\\n    }\\n    if (load && key !== null && resolvedUrl !== null && this.notLoaded.indexOf(key) === -1 && this.loaded.get(key) === undefined) {\\n      const { loaded: loadedAdded, removed: loadedRemoved } = await this.loadResource(parentUrl, parentTitle, field, url, key, resolvedUrl, password)\\n      loaded = loadedAdded\\n      removed = loadedRemoved\\n    }\\n    return {\\n      loaded: loaded,\\n      removed: removed,\\n    }\\n  }\\n\\n  /**\\n   * https://stackoverflow.com/questions/15458876/check-if-a-string-is-html-or-not/15458987\\n   */\\n  IpfsImport.prototype.isHTML = function (text) {\\n    /*eslint max-len:\\\"off\\\"*/\\n    return /<(br|basefont|hr|input|source|frame|param|area|meta|!--|col|link|option|base|img|wbr|!DOCTYPE).*?>|<(a|abbr|acronym|address|applet|article|aside|audio|b|bdi|bdo|big|blockquote|body|button|canvas|caption|center|cite|code|colgroup|command|datalist|dd|del|details|dfn|dialog|dir|div|dl|dt|em|embed|fieldset|figcaption|figure|font|footer|form|frameset|head|header|hgroup|h1|h2|h3|h4|h5|h6|html|i|iframe|ins|kbd|keygen|label|legend|li|map|mark|menu|meter|nav|noframes|noscript|object|ol|optgroup|output|p|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|track|tt|u|ul|var|video).*?<\\\\/\\\\2>/i.test(\\n      text\\n    )\\n  }\\n\\n  IpfsImport.prototype.loadResource = async function (parentUrl, parentTitle, parentField, url, key, resolvedKey, password) {\\n    var loaded = 0\\n    var removed = 0\\n    var content = null\\n    var imported = new Map()\\n    var tiddlers = null\\n    const creationFields = $tw.wiki.getCreationFields()\\n    try {\\n      // Load\\n      content = await $tw.ipfs.loadToUtf8(resolvedKey, password)\\n      // HTML\\n      if (this.isHTML(content)) {\\n        content = $tw.wiki.deserializeTiddlers('.html', content, creationFields)\\n        if ($tw.utils.isArray(content) && content.length === 1 && content[0].text && $tw.ipfs.isJson(content[0].text)) {\\n          tiddlers = Object.values(JSON.parse(content[0].text))\\n        } else {\\n          tiddlers = content\\n        }\\n      } else {\\n        if ($tw.ipfs.isJson(content)) {\\n          tiddlers = $tw.wiki.deserializeTiddlers('.json', content, creationFields)\\n        } else {\\n          tiddlers = $tw.wiki.deserializeTiddlers('.tid', content, creationFields)\\n        }\\n      }\\n      // Loaded\\n      if (tiddlers !== undefined && tiddlers !== null) {\\n        this.loaded.set(key, {\\n          imported: imported,\\n          resolvedKey: resolvedKey,\\n          url: url,\\n        })\\n        for (var i in tiddlers) {\\n          const tiddler = tiddlers[i]\\n          var title = tiddler.title\\n          if (title === undefined || title == null || title.trim() === '') {\\n            const msg = 'Ignore Unknown:'\\n            const field = 'Title'\\n            $tw.ipfs.getLogger().info(\\n              `${msg} \\\"${field}\\\"\\n ${resolvedKey}\\n from \\\"${parentField}\\\", \\\"${parentTitle}\\\"\\n ${parentUrl}`\\n            )\\n            $tw.utils.alert(name, alertFailed`${msg} ${resolvedKey}\\\">${field}</a>, from \\\"${parentField}\\\", ${parentUrl}\\\">${parentTitle}</a>`)\\n            removed += 1\\n            continue\\n          }\\n          if (imported.get(title) !== undefined) {\\n            const msg = 'Ignore Duplicate:'\\n            $tw.ipfs.getLogger().info(\\n              `${msg} \\\"${title}\\\"\\n ${resolvedKey}\\n from \\\"${parentField}\\\", \\\"${parentTitle}\\\"\\n ${parentUrl}`\\n            )\\n            $tw.utils.alert(name, alertFailed`${msg} ${resolvedKey}\\\">${title}</a>, from \\\"${parentField}\\\", ${parentUrl}\\\">${parentTitle}</a>`)\\n            removed += 1\\n            continue\\n          }\\n          var type = tiddler.type\\n          if (type === undefined || type == null) {\\n            type = tiddlyWikiType\\n          }\\n          var info = $tw.config.contentTypeInfo[type]\\n          if (info === undefined || info == null) {\\n            const msg = 'Unknown:'\\n            const field = 'Content-Type'\\n            $tw.ipfs.getLogger().info(\\n              `${msg} \\\"${field}\\\": \\\"${title}\\\"\\n ${resolvedKey}`\\n            )\\n            $tw.utils.alert(name, alertFieldFailed`${msg} \\\"${field}\\\": ${resolvedKey}\\\">${title}</a>`)\\n            // Default\\n            type = tiddlyWikiType\\n            info = $tw.config.contentTypeInfo[type]\\n          }\\n          tiddler.type = type\\n          // Next\\n          var canonicalUri = tiddler._canonical_uri\\n          canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.trim() !== '' ? canonicalUri.trim() : null\\n          tiddler._canonical_uri = canonicalUri\\n          var importUri = tiddler._import_uri\\n          importUri = importUri !== undefined && importUri !== null && importUri.trim() !== '' ? importUri.trim() : null\\n          tiddler._import_uri = importUri\\n          if (canonicalUri !== null || importUri !== null) {\\n            password = tiddler._password\\n            password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null\\n            if (importUri !== null) {\\n              const { loaded: loadedAdded, removed: loadedRemoved } = await this.load(resolvedKey, title, '_import_uri', importUri, password, true)\\n              loaded += loadedAdded\\n              removed += loadedRemoved\\n            }\\n            if (canonicalUri !== null) {\\n              const { loaded: loadedAdded, removed: loadedRemoved } = await this.load(resolvedKey, title, 'canonical_uri', canonicalUri, password, tiddlyWikiType === tiddler.type)\\n              loaded += loadedAdded\\n              removed += loadedRemoved\\n            }\\n          }\\n          imported.set(title, tiddler)\\n          loaded += 1\\n        }\\n      }\\n      if (imported.size === 0) {\\n        this.isEmpty.push(key)\\n        const msg = 'Empty:'\\n        const field = 'Resource'\\n        $tw.ipfs.getLogger().info(\\n          `${msg} \\\"${field}\\\"\\n ${resolvedKey}\\n from \\\"${parentField}\\\", \\\"${parentTitle}\\\"\\n ${parentUrl}`\\n        )\\n        $tw.utils.alert(name, alertFailed`${msg} ${resolvedKey}\\\">${field}</a> from \\\"${parentField}\\\", ${parentUrl}\\\">${parentTitle}</a>`)\\n      }\\n    } catch (error) {\\n      this.notLoaded.push(key)\\n      const msg = 'Failed to Load:'\\n      const field = 'Resource'\\n      $tw.ipfs.getLogger().info(\\n        `${msg} \\\"${field}\\\"\\n ${resolvedKey}\\n from \\\"${parentField}\\\", \\\"${parentTitle}\\\"\\n ${parentUrl}`\\n      )\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, alertFailed`${msg} ${resolvedKey}\\\">${field}</a> from \\\"${parentField}\\\", ${parentUrl}\\\">${parentTitle}</a>`)\\n    }\\n    return {\\n      loaded: loaded,\\n      removed: removed,\\n    }\\n  }\\n\\n  IpfsImport.prototype.performImport = function (toBeAdded, toBeUpdated, toBeDeleted) {\\n    // New and Updated\\n    for (var [title, merged] of this.merged.entries()) {\\n      if (toBeAdded.indexOf(title) || toBeUpdated.indexOf(title) !== -1) {\\n        $tw.wiki.addTiddler(merged)\\n      }\\n    }\\n    // Deleted\\n    for (var i = 0; i < toBeDeleted.length; i++) {\\n      $tw.wiki.deleteTiddler(toBeDeleted[i])\\n    }\\n  }\\n\\n  IpfsImport.prototype.processImported = function () {\\n    var processed = 0\\n    var removed = 0\\n    var processedTitles = []\\n    for (var key of this.loaded.keys()) {\\n      const { imported, resolvedKey } = this.loaded.get(key)\\n      for (var title of imported.keys()) {\\n        if (processedTitles.indexOf(title) !== -1) {\\n          continue\\n        }\\n        const keys = []\\n        const tiddler = imported.get(title)\\n        var type = tiddler.type\\n        var canonicalUri = tiddler._canonical_uri\\n        canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.trim() !== '' ? canonicalUri.trim() : null\\n        var importUri = tiddler._import_uri\\n        importUri = importUri !== undefined && importUri !== null && importUri.trim() !== '' ? importUri.trim() : null\\n        if (canonicalUri == null && importUri == null) {\\n          keys.push(key)\\n        } else if (canonicalUri == null && importUri !== null) {\\n          const msg = 'Missing:'\\n          const field = '_canonical_uri'\\n          $tw.ipfs.getLogger().info(\\n            `${msg} \\\"${field}\\\" from ${title}\\\"\\n ${resolvedKey}`\\n          )\\n          $tw.utils.alert(name, alertFieldFailed`${msg} \\\"${field}\\\" from ${resolvedKey}\\\">${title}</a>`)\\n        } else {\\n          var canonicalKey = null\\n          if (canonicalUri !== null && this.notResolved.indexOf(canonicalUri) === -1) {\\n            canonicalKey = this.resolved.get(canonicalUri)\\n          }\\n          if (canonicalKey !== undefined && canonicalKey !== null) {\\n            if (key === canonicalKey) {\\n              const msg = 'Cycle:'\\n              const field = '_canonical_uri'\\n              $tw.ipfs.getLogger().info(\\n                `${msg} \\\"${field}\\\" from ${title}\\\"\\n ${resolvedKey}`\\n              )\\n              $tw.utils.alert(name, alertFieldFailed`${msg} \\\"${field}\\\" from ${resolvedKey}\\\">${title}</a>`)\\n            } else if (this.processCanonicalKey(keys, resolvedKey, title, canonicalKey, type)) {\\n              var importKey = null\\n              if (importUri !== null && this.notResolved.indexOf(importUri) === -1) {\\n                importKey = this.resolved.get(importUri)\\n              }\\n              if (importKey === undefined || importKey == null) {\\n                keys.push(key)\\n              } else {\\n                if (canonicalKey === importKey) {\\n                  const msg = 'Matching:'\\n                  const field = '\\\"_canonical_uri\\\" and \\\"_import_uri\\\"'\\n                  $tw.ipfs.getLogger().info(\\n                    `${msg} ${field} from \\\"${title}\\\"\\n ${resolvedKey}`\\n                  )\\n                  $tw.utils.alert(name, alertFieldFailed`${msg} ${field} from ${resolvedKey}\\\">${title}</a>`)\\n                } else if (key === importKey) {\\n                  const msg = 'Cycle:'\\n                  const field = '_import_uri'\\n                  $tw.ipfs.getLogger().info(\\n                    `${msg} \\\"${field}\\\" from \\\"${title}\\\"\\n ${resolvedKey}`\\n                  )\\n                  $tw.utils.alert(name, alertFieldFailed`${msg} \\\"${field}\\\" from ${resolvedKey}\\\">${title}</a>`)\\n                } else {\\n                  keys.push(key)\\n                  this.processImportKey(keys, resolvedKey, title, canonicalKey, importKey)\\n                }\\n              }\\n            }\\n          }\\n        }\\n        processed += keys.length\\n        removed += this.removeTiddlers(keys, title)\\n        processedTitles.push(title)\\n      }\\n    }\\n    return {\\n      processed: processed,\\n      removed: removed,\\n    }\\n  }\\n\\n  IpfsImport.prototype.processCanonicalKey = function (keys, parentResolvedKey, title, canonicalKey, type) {\\n    if (tiddlyWikiType !== type) {\\n      keys.push(canonicalKey)\\n      return true\\n    }\\n    if (this.notLoaded.indexOf(canonicalKey) !== -1) {\\n      return false\\n    }\\n    if (this.loaded.get(canonicalKey) === undefined) {\\n      return false\\n    }\\n    const { imported, resolvedKey } = this.loaded.get(canonicalKey)\\n    if (imported === undefined) {\\n      return false\\n    }\\n    const tiddler = imported.get(title)\\n    if (tiddler === undefined) {\\n      return false\\n    }\\n    var canonicalUri = tiddler._canonical_uri\\n    canonicalUri = (canonicalUri !== undefined && canonicalUri !== null) || canonicalUri.trim() !== '' ? canonicalUri.trim() : null\\n    if (canonicalUri !== null) {\\n      const msg = 'Inconsistency:'\\n      const field = '_canonical_uri'\\n      $tw.ipfs.getLogger().info(\\n        `${msg} \\\"${field}\\\" from \\\"${title}\\\"\\n ${resolvedKey}\\n and ${parentResolvedKey}`\\n      )\\n      $tw.utils.alert(name, alertConditionFailed`${msg} \\\"${field}\\\" from ${resolvedKey}\\\">${title}</a> and ${parentResolvedKey}\\\">${title}</a>`)\\n      return false\\n    }\\n    var importUri = tiddler._import_uri\\n    importUri = importUri !== undefined && importUri !== null && importUri.trim() !== '' ? importUri.trim() : null\\n    if (importUri !== null) {\\n      const msg = 'Inconsistency:'\\n      const field = '_import_uri'\\n      $tw.ipfs.getLogger().info(\\n        `${msg} \\\"${field}\\\" from \\\"${title}\\\"\\n ${resolvedKey}\\n and ${parentResolvedKey}`\\n      )\\n      $tw.utils.alert(name, alertConditionFailed`${msg} \\\"${field}\\\" from ${resolvedKey}\\\">${title}</a> and ${parentResolvedKey}\\\">${title}</a>`)\\n      return false\\n    }\\n    keys.push(canonicalKey)\\n    return true\\n  }\\n\\n  IpfsImport.prototype.processImportKey = function (keys, parentResolvedKey, title, canonicalKey, importKey) {\\n    if (this.notLoaded.indexOf(importKey) !== -1) {\\n      return\\n    }\\n    if (this.loaded.get(importKey) === undefined) {\\n      return\\n    }\\n    const { imported, resolvedKey: importResolvedKey } = this.loaded.get(importKey)\\n    if (imported === undefined) {\\n      return\\n    }\\n    const tiddler = imported.get(title)\\n    if (tiddler === undefined) {\\n      return\\n    }\\n    var targetCanonicalUri = tiddler._canonical_uri\\n    targetCanonicalUri = targetCanonicalUri !== undefined && targetCanonicalUri !== null && targetCanonicalUri.trim() === '' ? targetCanonicalUri.trim() : null\\n    var targetCanonicalKey = null\\n    if (targetCanonicalUri !== null && this.notResolved.indexOf(targetCanonicalUri) === -1) {\\n      targetCanonicalKey = this.resolved.get(targetCanonicalUri)\\n    }\\n    if (targetCanonicalKey !== undefined && targetCanonicalKey !== null && canonicalKey !== targetCanonicalKey) {\\n      const msg = 'Inconsistency:'\\n      const field = '_canonical_uri'\\n      $tw.ipfs.getLogger().info(\\n        `${msg} \\\"${field}\\\" from \\\"${title}\\\"\\n ${importResolvedKey}\\n and ${parentResolvedKey}`\\n      )\\n      $tw.utils.alert(name, alertConditionFailed`${msg} \\\"${field}\\\" from ${importResolvedKey}\\\">${title}</a> and ${parentResolvedKey}\\\">${title}</a>`)\\n      return\\n    }\\n    var nextImportUri = tiddler._import_uri\\n    nextImportUri = nextImportUri !== undefined && nextImportUri !== null && nextImportUri.trim() !== '' ? nextImportUri.trim() : null\\n    if (targetCanonicalUri == null && nextImportUri !== null) {\\n      const msg = 'Missing:'\\n      const field = '_canonical_uri'\\n      $tw.ipfs.getLogger().info(\\n        `${msg} \\\"${field}\\\" from \\\"${title}\\\"\\n ${importResolvedKey}`\\n      )\\n      $tw.utils.alert(name, alertFieldFailed`${msg} \\\"${field}\\\" from ${importResolvedKey}\\\">${title}</a>`)\\n      return\\n    }\\n    if (nextImportUri == null) {\\n      keys.push(importKey)\\n    } else {\\n      var nextImportKey = null\\n      if (nextImportUri !== null && this.notResolved.indexOf(nextImportUri) === -1) {\\n        nextImportKey = this.resolved.get(nextImportUri)\\n      }\\n      if (nextImportKey !== undefined && nextImportKey !== null) {\\n        if (canonicalKey === nextImportKey) {\\n          const msg = 'Matching:'\\n          const field = '\\\"_canonical_uri\\\" and \\\"_import_uri\\\"'\\n          $tw.ipfs.getLogger().info(\\n            `${msg} ${field} from \\\"${title}\\\"\\n ${importResolvedKey}`\\n          )\\n          $tw.utils.alert(name, alertFieldFailed`${msg} ${field} from ${importResolvedKey}\\\">${title}</a>`)\\n        } else if (keys.indexOf(nextImportKey) !== -1) {\\n          const msg = 'Cycle:'\\n          const field = '_import_uri'\\n          $tw.ipfs.getLogger().info(\\n            `${msg} \\\"${field}\\\" from \\\"${title}\\\"\\n ${importResolvedKey}`\\n          )\\n          $tw.utils.alert(name, alertFieldFailed`${msg} \\\"${field}\\\" from ${importResolvedKey}\\\">${title}</a>`)\\n        } else {\\n          keys.push(importKey)\\n          this.processImportKey(keys, importResolvedKey, title, canonicalKey, nextImportKey)\\n        }\\n      }\\n    }\\n  }\\n\\n  IpfsImport.prototype.importTiddlers = function (rootUri) {\\n    var processedTitles = []\\n    for (var key of this.loaded.keys()) {\\n      const { imported, url } = this.loaded.get(key)\\n      for (var title of imported.keys()) {\\n        if (processedTitles.indexOf(title) !== -1) {\\n          continue\\n        }\\n        const tiddler = imported.get(title)\\n        var type = tiddler.type\\n        var canonicalUri = tiddler._canonical_uri\\n        canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.trim() !== '' ? canonicalUri.trim() : null\\n        var importUri = tiddler._import_uri\\n        importUri = importUri === undefined && importUri !== null && importUri.trim() !== '' ? importUri.trim() : null\\n        var processed\\n        if (importUri !== null) {\\n          processed = this.importTiddler(title, importUri)\\n        }\\n        if (!processed && canonicalUri !== null && tiddlyWikiType === type) {\\n          this.importTiddler(title, canonicalUri)\\n        }\\n        if (this.mergeTiddler(title, url)) {\\n          const merged = this.merged.get(title)\\n          var type = merged.type\\n          if (tiddlyWikiType !== type) {\\n            if (rootUri.startsWith('blob:') === false) {\\n              merged._import_uri = rootUri\\n            }\\n          } else {\\n            var canonicalUri = merged._canonical_uri\\n            if (canonicalUri === undefined || canonicalUri == null) {\\n              if (url !== rootUri) {\\n                merged._canonical_uri = this.resolved.get(url)\\n                if (rootUri.startsWith('blob:') === false) {\\n                  merged._import_uri = rootUri\\n                }\\n              } else {\\n                if (rootUri.startsWith('blob:') === false) {\\n                  merged._canonical_uri = rootUri\\n                }\\n              }\\n            } else {\\n              merged._canonical_uri = this.resolved.get(canonicalUri)\\n              if (canonicalUri !== rootUri && rootUri.startsWith('blob:') === false) {\\n                merged._import_uri = rootUri\\n              }\\n            }\\n          }\\n        }\\n        processedTitles.push(title)\\n      }\\n    }\\n  }\\n\\n  IpfsImport.prototype.importTiddler = function (title, uri) {\\n    const key = this.resolved.get(uri)\\n    if (key === undefined) {\\n      return false\\n    }\\n    if (this.loaded.get(key) === undefined) {\\n      return false\\n    }\\n    const { imported } = this.loaded.get(key)\\n    if (imported === undefined) {\\n      return false\\n    }\\n    const tiddler = imported.get(title)\\n    if (tiddler === undefined) {\\n      return false\\n    }\\n    var type = tiddler.type\\n    var importUri = tiddler._import_uri\\n    importUri = importUri !== undefined && importUri !== null && importUri.trim() !== '' ? importUri.trim() : null\\n    var canonicalUri = tiddler._canonical_uri\\n    canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.trim() !== '' ? canonicalUri.trim() : null\\n    var processed = false\\n    if (importUri !== null) {\\n      processed = this.importTiddler(title, importUri)\\n    }\\n    if (processed === false && canonicalUri !== null && tiddlyWikiType === type) {\\n      this.importTiddler(title, canonicalUri)\\n    }\\n    return this.mergeTiddler(title, uri)\\n  }\\n\\n  IpfsImport.prototype.mergeTiddler = function (title, uri) {\\n    const key = this.resolved.get(uri)\\n    if (key === undefined) {\\n      return false\\n    }\\n    if (this.loaded.get(key) === undefined) {\\n      return false\\n    }\\n    const { imported } = this.loaded.get(key)\\n    if (imported === undefined) {\\n      return false\\n    }\\n    const tiddler = imported.get(title)\\n    if (tiddler === undefined) {\\n      return false\\n    }\\n    // Retrieve target host Tiddler\\n    var currentTiddler = $tw.wiki.getTiddler(title)\\n    // Retrieve or prepare merged content\\n    var merged = this.merged.get(title)\\n    if (merged === undefined) {\\n      merged = {}\\n      this.merged.set(title, merged)\\n    }\\n    // Tags\\n    var tags = tiddler.tags !== undefined ? tiddler.tags : ''\\n    // Fields\\n    var hasModified = false\\n    for (var field in tiddler) {\\n      // Discard\\n      if (field === 'tags') {\\n        continue\\n      }\\n      if (field === 'modified') {\\n        hasModified = true\\n      }\\n      // Unknown from leaf to top, we keep the top modified field\\n      if (merged[field] === undefined || merged[field] == null || field === '_canonical_uri' || field === '_import_uri' || field === 'modified') {\\n        merged[field] = tiddler[field]\\n      }\\n    }\\n    if (hasModified === false) {\\n      merged.modified = new Date()\\n    }\\n    // Merge current Tiddler Tags\\n    if (currentTiddler !== undefined && currentTiddler !== null) {\\n      const currentTags = (currentTiddler.fields.tags || []).slice(0)\\n      for (var i = 0; i < currentTags.length; i++) {\\n        const currentTag = currentTags[i]\\n        if (tags.includes(currentTag) === false) {\\n          tags = `${tags} [[${currentTag}]]`\\n        }\\n      }\\n    }\\n    // Merge Tags\\n    if (merged.tags !== undefined && merged.tags !== null) {\\n      const mergedTags = $tw.utils.parseStringArray(merged.tags, false)\\n      for (var i = 0; i < mergedTags.length; i++) {\\n        const mergedTag = mergedTags[i]\\n        if (tags.includes(mergedTag) === false) {\\n          tags = `${tags} [[${mergedTag}]]`\\n        }\\n      }\\n    }\\n    // IPFS tag\\n    if (this.isIpfs(key) && tags.includes('$:/isIpfs') === false) {\\n      tags = `${tags} $:/isIpfs`\\n    }\\n    // Imported tag\\n    if (tags.includes('$:/isImported') === false) {\\n      tags = `${tags} $:/isImported`\\n    }\\n    // Processed tags\\n    merged.tags = tags\\n    // Processed\\n    return true\\n  }\\n\\n  exports.IpfsImport = IpfsImport\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/ipfs-tiddler.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-tiddler.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-tiddler.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nIPFS Tiddler\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const IpfsImport = require('$:/plugins/ipfs/ipfs-import.js').IpfsImport\\n\\n  const name = 'ipfs-tiddler'\\n\\n  /*\\n   * https://tiddlywiki.com/#TiddlerFields\\n   * $:/core/modules/server/routes/get-tiddler.js\\n   * TODO: expose it as Tiddler ??\\n   */\\n  const reservedFields = [\\n    'bag',\\n    'caption',\\n    'class',\\n    'color',\\n    'description',\\n    'created',\\n    'creator',\\n    'fields',\\n    'footer',\\n    'hide-body',\\n    'icon',\\n    '_is_skinny',\\n    'library',\\n    'list',\\n    'list-after',\\n    'list-before',\\n    'modified',\\n    'modifier',\\n    'name',\\n    'plugin-priority',\\n    'plugin-type',\\n    'permissions',\\n    'recipe',\\n    'revision',\\n    // \\\"source\\\",\\n    'subtitle',\\n    'tags',\\n    'text',\\n    // \\\"url\\\",\\n    'throttle.refresh',\\n    'toc-link',\\n    'title',\\n    'type',\\n  ]\\n\\n  var IpfsTiddler = function () {\\n    this.once = false\\n  }\\n\\n  IpfsTiddler.prototype.init = function () {\\n    // Init once\\n    if (this.once) {\\n      return\\n    }\\n    const self = this\\n    // Events\\n    $tw.wiki.addEventListener('change', function (changes) {\\n      return self.handleChangeEvent(changes)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipfs-pin', function (event) {\\n      return self.handleIpfsPin(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipfs-unpin', function (event) {\\n      return self.handleIpfsUnpin(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-refresh-tiddler', function (event) {\\n      return self.handleRefreshTiddler(event)\\n    })\\n    // Hooks\\n    $tw.hooks.addHook('th-deleting-tiddler', async function (tiddler) {\\n      return await self.handleDeleteTiddler(tiddler)\\n    })\\n    $tw.hooks.addHook('th-importing-file', async function (info) {\\n      return await self.handleImportFile(info)\\n    })\\n    $tw.hooks.addHook('th-saving-tiddler', async function (tiddler) {\\n      return await self.handleSaveTiddler(tiddler)\\n    })\\n    // Init once\\n    this.once = true\\n  }\\n\\n  IpfsTiddler.prototype.handleChangeEvent = function (changes) {\\n    // Gateway preference\\n    const api = changes['$:/ipfs/saver/api']\\n    if (api !== undefined && api.modified) {\\n      $tw.ipfs.getLogger().info(`IPFS API: ${$tw.ipfs.getIpfsApiUrl()}`)\\n    }\\n    // Gateway preference\\n    const gateway = changes['$:/ipfs/saver/gateway']\\n    if (gateway !== undefined && gateway.modified) {\\n      const base = $tw.ipfs.getIpfsBaseUrl()\\n      if ($tw.utils.getIpfsUrlPolicy() === 'gateway') {\\n        $tw.ipfs.getLogger().info(`Gateway Policy: ${base}`)\\n      }\\n    }\\n    // Policy preference\\n    const policy = changes['$:/ipfs/saver/policy']\\n    if (policy !== undefined && policy.modified) {\\n      const base = $tw.ipfs.getIpfsBaseUrl()\\n      if ($tw.utils.getIpfsUrlPolicy() === 'origin') {\\n        $tw.ipfs.getLogger().info(`Origin Policy: ${base}`)\\n      } else {\\n        $tw.ipfs.getLogger().info(`Gateway Policy: ${base}`)\\n      }\\n    }\\n    // Pin preference\\n    const pin = changes['$:/ipfs/saver/pin']\\n    if (pin !== undefined && pin.modified) {\\n      if ($tw.utils.getIpfsPin()) {\\n        $tw.ipfs.getLogger().info('Pin current IPFS content...')\\n      } else {\\n        $tw.ipfs.getLogger().info('Do not pin current IPFS content...')\\n      }\\n    }\\n    // Unpin preference\\n    const unpin = changes['$:/ipfs/saver/unpin']\\n    if (unpin !== undefined && unpin.modified) {\\n      if ($tw.utils.getIpfsUnpin()) {\\n        $tw.ipfs.getLogger().info('Unpin previous IPFS content...')\\n      } else {\\n        $tw.ipfs.getLogger().info('Do not unpin previous IPFS content...')\\n      }\\n    }\\n    // Verbose preference\\n    const verbose = changes['$:/ipfs/saver/verbose']\\n    if (verbose !== undefined && verbose.modified) {\\n      if (window.log !== undefined && window.log !== null) {\\n        if ($tw.utils.getIpfsVerbose()) {\\n          window.log.setLevel('info', false)\\n        } else {\\n          window.log.setLevel('warn', false)\\n        }\\n      }\\n    }\\n  }\\n\\n  IpfsTiddler.prototype.handleIpfsPin = function (event) {\\n    const title = event.tiddlerTitle\\n    const tiddler = $tw.wiki.getTiddler(title)\\n    // Tiddler\\n    if (tiddler !== undefined) {\\n      if (event.param) {\\n        // Tiddler\\n        for (var field in tiddler.fields) {\\n          if (reservedFields.indexOf(field) !== -1) {\\n            continue\\n          }\\n          var value = tiddler.getFieldString(field)\\n          value = value !== undefined && value !== null && value.trim() !== '' ? value.trim() : null\\n          if (value !== null) {\\n            this.ipfsPin(value, field)\\n          }\\n        }\\n        return true\\n      }\\n      return false\\n    }\\n    // Wiki\\n    this.ipfsPin($tw.ipfs.getDocumentUrl().toString(), 'Wiki')\\n    return true\\n  }\\n\\n  IpfsTiddler.prototype.ipfsPin = function (value, field) {\\n    $tw.ipfs\\n      .resolveUrl(true, true, value)\\n      .then(data => {\\n        const { cid, resolvedUrl } = data\\n        if (cid !== null) {\\n          if (field !== undefined && field !== null) {\\n            $tw.ipfs.getLogger().info(\\n              `Pinning: \\\"${field}\\\"\\n /ipfs/${cid}`\\n            )\\n          }\\n          $tw.ipfs\\n            .pinToIpfs(`/ipfs/${cid}`)\\n            .then(pin => {\\n              if (pin !== undefined && pin !== null) {\\n                $tw.ipfs.removeFromPinUnpin(`/ipfs/${cid}`)\\n                if (field !== undefined && field !== null) {\\n                  $tw.utils.alert(name, `Successfully Pinned : <a class=\\\"tc-tiddlylink-external\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\" href=\\\"${resolvedUrl}\\\">${field}</a>`)\\n                }\\n              }\\n            })\\n            .catch(error => {\\n              $tw.ipfs.getLogger().error(error)\\n              $tw.utils.alert(name, error.message)\\n            })\\n        }\\n      })\\n      .catch(error => {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      })\\n  }\\n\\n  IpfsTiddler.prototype.handleIpfsUnpin = async function (event) {\\n    const title = event.tiddlerTitle\\n    const tiddler = $tw.wiki.getTiddler(title)\\n    if (tiddler !== undefined) {\\n      const { type, info } = $tw.utils.getContentType(tiddler)\\n      if (event.param) {\\n        // Tiddler\\n        for (var field in tiddler.fields) {\\n          if (reservedFields.indexOf(field) !== -1) {\\n            continue\\n          }\\n          var value = tiddler.getFieldString(field)\\n          value = value !== undefined && value !== null && value.trim() !== '' ? value.trim() : null\\n          if (value !== null) {\\n            if (info.encoding !== 'base64' && type !== 'image/svg+xml') {\\n              if (field === '_canonical_uri' || field === '_import_uri') {\\n                continue\\n              }\\n            }\\n            this.ipfsUnpin(value, field)\\n          }\\n        }\\n        return true\\n      }\\n      return false\\n    }\\n    // Wiki\\n    this.ipfsUnpin($tw.ipfs.getDocumentUrl().toString(), 'Wiki')\\n    return true\\n  }\\n\\n  IpfsTiddler.prototype.ipfsUnpin = function (value, field) {\\n    field = field !== undefined && field !== null && field.trim() !== '' ? field.trim() : null\\n    $tw.ipfs\\n      .resolveUrl(true, true, value)\\n      .then(data => {\\n        const { cid, resolvedUrl } = data\\n        if (cid !== null) {\\n          if (field !== null) {\\n            $tw.ipfs.getLogger().info(\\n              `Unpinning: \\\"${field}\\n /ipfs/${cid}`\\n            )\\n          }\\n          $tw.ipfs\\n            .unpinFromIpfs(`/ipfs/${cid}`)\\n            .then(unpin => {\\n              if (unpin !== undefined && unpin !== null) {\\n                $tw.ipfs.removeFromPinUnpin(`/ipfs/${cid}`)\\n                if (field !== undefined && field !== null) {\\n                  $tw.utils.alert(name, `Successfully Unpinned : <a rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\" href=\\\"${resolvedUrl}\\\">${field}</a>`)\\n                }\\n              }\\n            })\\n            .catch(error => {\\n              $tw.ipfs.getLogger().error(error)\\n              $tw.utils.alert(name, error.message)\\n            })\\n        }\\n      })\\n      .catch(error => {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      })\\n  }\\n\\n  IpfsTiddler.prototype.handleDeleteTiddler = async function (tiddler) {\\n    try {\\n      const { type, info } = $tw.utils.getContentType(tiddler)\\n      // Process\\n      var field = null\\n      if (info.encoding === 'base64' || type === 'image/svg+xml') {\\n        field = '_canonical_uri'\\n      } else {\\n        field = '_export_uri'\\n      }\\n      // Value\\n      var url = null\\n      const value = tiddler.getFieldString(field)\\n      if (value !== undefined && value !== null && value.trim() !== '') {\\n        // URL or not\\n        try {\\n          url = $tw.ipfs.normalizeUrl(value)\\n        } catch (error) {\\n          // Ignore\\n        }\\n        // Process\\n        if (url) {\\n          const { cid } = $tw.ipfs.getIpfsIdentifier(url)\\n          if (cid !== null) {\\n            await $tw.ipfs.requestToUnpin(`/ipfs/${cid}`)\\n          }\\n        }\\n      }\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n    }\\n    return tiddler\\n  }\\n\\n  IpfsTiddler.prototype.handleRefreshTiddler = function (event) {\\n    const title = event.tiddlerTitle\\n    const tiddler = $tw.wiki.getTiddler(title)\\n    if (tiddler === undefined) {\\n      return false\\n    }\\n    var canonicalUri = tiddler.fields._canonical_uri\\n    canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.trim() !== '' ? canonicalUri.trim() : null\\n    var importUri = tiddler.fields._import_uri\\n    importUri = importUri !== undefined && importUri !== null && importUri.trim() !== '' ? importUri.trim() : null\\n    // Reload\\n    if (canonicalUri !== null && importUri == null) {\\n      const updatedTiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: '' }],\\n      })\\n      $tw.wiki.addTiddler(updatedTiddler)\\n      return true\\n    }\\n    // Import\\n    if (canonicalUri !== null || importUri !== null) {\\n      const ipfsImport = new IpfsImport()\\n      ipfsImport\\n        .import(canonicalUri, importUri, tiddler)\\n        .then(data => {\\n          if (data !== undefined && data !== null) {\\n            const navigator = $tw.utils.locateNavigatorWidget($tw.pageWidgetNode)\\n            if (navigator !== undefined && navigator !== null) {\\n              navigator.dispatchEvent({\\n                type: 'tm-ipfs-import-tiddlers',\\n                param: data,\\n              })\\n            }\\n          }\\n        })\\n        .catch(error => {\\n          $tw.ipfs.getLogger().error(error)\\n          $tw.utils.alert(name, error.message)\\n        })\\n      return true\\n    }\\n    // Refresh\\n    $tw.wiki.clearCache(title)\\n    const changedTiddler = $tw.utils.getChangedTiddler(title)\\n    $tw.rootWidget.refresh(changedTiddler)\\n    return true\\n  }\\n\\n  IpfsTiddler.prototype.handleImportFile = async function (info) {\\n    const dummy = new $tw.Tiddler({\\n      title: $tw.wiki.generateNewTitle('Untitled'),\\n      type: info.type,\\n    })\\n    try {\\n      const ipfsImport = new IpfsImport()\\n      const url = URL.createObjectURL(info.file)\\n      try {\\n        const data = await ipfsImport.import(null, url, dummy)\\n        if (data.merged.size > 0 || data.deleted.size > 0) {\\n          info.callback(data)\\n        }\\n      } catch (error) {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      }\\n      URL.revokeObjectURL(url)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n    }\\n    return true\\n  }\\n\\n  IpfsTiddler.prototype.handleSaveTiddler = async function (tiddler) {\\n    const oldTiddler = $tw.wiki.getTiddler(tiddler.fields.title)\\n    const { info } = $tw.utils.getContentType(tiddler)\\n    var password = tiddler.fields._password\\n    password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null\\n    // Prepare\\n    var updatedTiddler = new $tw.Tiddler(tiddler)\\n    // Process deleted fields\\n    if (oldTiddler) {\\n      for (var field in oldTiddler.fields) {\\n        // Not a reserved keyword\\n        if (reservedFields.indexOf(field) !== -1) {\\n          continue\\n        }\\n        // Updated\\n        const discard = tiddler.fields[field]\\n        if (discard && tiddler.getFieldString(field)) {\\n          continue\\n        }\\n        // Process\\n        var oldCid = null\\n        var oldIpnsKey = null\\n        var oldResolvedUrl = null\\n        var oldValue = oldTiddler.getFieldString(field)\\n        try {\\n          var { cid: oldCid, ipnsKey: oldIpnsKey, resolvedUrl: oldResolvedUrl } = await $tw.ipfs.resolveUrl(false, true, oldValue)\\n        } catch (error) {\\n          $tw.ipfs.getLogger().error(error)\\n          $tw.utils.alert(name, error.message)\\n          return tiddler\\n        }\\n        oldResolvedUrl = oldResolvedUrl !== undefined && oldResolvedUrl !== null && oldResolvedUrl.toString().trim() !== '' ? oldResolvedUrl.toString().trim() : null\\n        if (oldResolvedUrl !== null && field === '_canonical_uri') {\\n          var data = tiddler.fields.text\\n          try {\\n            if (info.encoding === 'base64') {\\n              data = await $tw.ipfs.loadToBase64(oldResolvedUrl, password)\\n            } else {\\n              data = await $tw.ipfs.loadToUtf8(oldResolvedUrl, password)\\n            }\\n            updatedTiddler = $tw.utils.updateTiddler({\\n              tiddler: updatedTiddler,\\n              addTags: ['$:/isAttachment', '$:/isEmbedded'],\\n              fields: [{ key: 'text', value: data }],\\n            })\\n            $tw.ipfs.getLogger().info(\\n              `Embed attachment: ${data.length}\\n ${oldResolvedUrl}`\\n            )\\n          } catch (error) {\\n            $tw.ipfs.getLogger().error(error)\\n            $tw.utils.alert(name, error.message)\\n            return tiddler\\n          }\\n        }\\n        if (oldCid !== null) {\\n          await $tw.ipfs.requestToUnpin(`/ipfs/${oldCid}`)\\n        } else if (oldIpnsKey !== null) {\\n          await $tw.ipfs.requestToUnpin(`/ipns/${oldIpnsKey}`)\\n        }\\n      }\\n    }\\n    // Process new and updated fields\\n    updatedTiddler = await this.updateIpfsTags(tiddler, oldTiddler, updatedTiddler)\\n    // Update\\n    $tw.wiki.addTiddler(updatedTiddler)\\n    return updatedTiddler\\n  }\\n\\n  IpfsTiddler.prototype.updateIpfsTags = async function (tiddler, oldTiddler, updatedTiddler) {\\n    var canonicalUri = null\\n    var exportUri = null\\n    var importUri = null\\n    var canonicalCid = null\\n    var exportCid = null\\n    var importCid = null\\n    var updatedTiddler = updatedTiddler === undefined || updatedTiddler == null ? new $tw.Tiddler(tiddler) : updatedTiddler\\n    const { type, info } = $tw.utils.getContentType(tiddler)\\n    // Process\\n    for (var field in tiddler.fields) {\\n      // Not a reserved keyword\\n      if (reservedFields.indexOf(field) !== -1) {\\n        continue\\n      }\\n      // Process\\n      var cid = null\\n      var ipnsKey = null\\n      var resolvedUrl = null\\n      var value = tiddler.getFieldString(field)\\n      try {\\n        var { cid, ipnsKey, resolvedUrl } = await $tw.ipfs.resolveUrl(false, true, value)\\n      } catch (error) {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n        return tiddler\\n      }\\n      // Store\\n      resolvedUrl = resolvedUrl !== undefined && resolvedUrl !== null && resolvedUrl.toString().trim() !== '' ? resolvedUrl.toString().trim() : null\\n      if (field === '_canonical_uri') {\\n        canonicalUri = resolvedUrl\\n        canonicalCid = cid\\n      }\\n      if (field === '_import_uri') {\\n        importUri = resolvedUrl\\n        importCid = cid\\n      }\\n      if (field === '_export_uri') {\\n        exportUri = resolvedUrl\\n        exportCid = cid\\n      }\\n      // Previous values if any\\n      var oldValue = null\\n      if (oldTiddler !== undefined && oldTiddler !== null) {\\n        oldValue = oldTiddler.getFieldString(field)\\n      }\\n      // Process new or updated\\n      if (value === oldValue) {\\n        continue\\n      }\\n      var oldCid = null\\n      var oldIpnsKey = null\\n      try {\\n        var { cid: oldCid, ipnsKey: oldIpnsKey } = await $tw.ipfs.resolveUrl(false, true, oldValue)\\n      } catch (error) {\\n        // We cannot resolve the previous value\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      }\\n      if (cid !== null) {\\n        await $tw.ipfs.requestToPin(`/ipfs/${cid}`)\\n      } else if (ipnsKey !== null) {\\n        await $tw.ipfs.requestToPin(`/ipns/${ipnsKey}`)\\n      }\\n      if (oldCid !== null) {\\n        await $tw.ipfs.requestToUnpin(`/ipfs/${oldCid}`)\\n      } else if (oldIpnsKey !== null) {\\n        await $tw.ipfs.requestToUnpin(`/ipns/${oldIpnsKey}`)\\n      }\\n    }\\n    // Tag management\\n    var addTags = []\\n    var removeTags = []\\n    if (canonicalUri == null && exportUri == null && importUri == null) {\\n      removeTags.push('$:/isExported', '$:/isImported', '$:/isIpfs')\\n    }\\n    if (canonicalCid == null && exportCid == null && importCid == null) {\\n      if (removeTags.indexOf('$:/isIpfs') === -1) {\\n        removeTags.push('$:/isIpfs')\\n      }\\n    } else {\\n      addTags.push('$:/isIpfs')\\n    }\\n    if (canonicalUri !== null) {\\n      // Attachment\\n      if (info.encoding === 'base64' || type === 'image/svg+xml') {\\n        if (addTags.indexOf('$:/isAttachment') === -1) {\\n          addTags.push('$:/isAttachment')\\n        }\\n        if (removeTags.indexOf('$:/isEmbedded') === -1) {\\n          removeTags.push('$:/isEmbedded')\\n        }\\n        if (importUri !== null) {\\n          if (addTags.indexOf('$:/isImported') === -1) {\\n            addTags.push('$:/isImported')\\n          }\\n        } else {\\n          if (removeTags.indexOf('$:/isImported') === -1) {\\n            removeTags.push('$:/isImported')\\n          }\\n        }\\n        // Others\\n      } else {\\n        if (removeTags.indexOf('$:/isAttachment') === -1) {\\n          removeTags.push('$:/isAttachment')\\n        }\\n        if (removeTags.indexOf('$:/isEmbedded') === -1) {\\n          removeTags.push('$:/isEmbedded')\\n        }\\n        if (addTags.indexOf('$:/isImported') === -1) {\\n          addTags.push('$:/isImported')\\n        }\\n      }\\n    } else {\\n      // Attachment\\n      if (info.encoding === 'base64' || type === 'image/svg+xml') {\\n        if (addTags.indexOf('$:/isAttachment') === -1) {\\n          addTags.push('$:/isAttachment')\\n        }\\n        if (addTags.indexOf('$:/isEmbedded') === -1) {\\n          addTags.push('$:/isEmbedded')\\n        }\\n        // Others\\n      } else {\\n        if (removeTags.indexOf('$:/isAttachment') === -1) {\\n          removeTags.push('$:/isAttachment')\\n        }\\n        if (removeTags.indexOf('$:/isEmbedded') === -1) {\\n          removeTags.push('$:/isEmbedded')\\n        }\\n      }\\n      if (importUri !== null) {\\n        if (addTags.indexOf('$:/isImported') === -1) {\\n          addTags.push('$:/isImported')\\n        }\\n      } else {\\n        if (removeTags.indexOf('$:/isImported') === -1) {\\n          removeTags.push('$:/isImported')\\n        }\\n      }\\n    }\\n    if (exportUri !== null) {\\n      if (addTags.indexOf('$:/isExported') === -1) {\\n        addTags.push('$:/isExported')\\n      }\\n    } else {\\n      if (removeTags.indexOf('$:/isExported') === -1) {\\n        removeTags.push('$:/isExported')\\n      }\\n    }\\n    if (addTags.length > 0 || removeTags.length > 0) {\\n      updatedTiddler = $tw.utils.updateTiddler({\\n        tiddler: updatedTiddler,\\n        addTags: addTags,\\n        removeTags: removeTags,\\n      })\\n    }\\n    return updatedTiddler\\n  }\\n\\n  exports.IpfsTiddler = IpfsTiddler\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/ipfs-wrapper.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-wrapper.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-wrapper.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nIPFS Wrapper\\n\\n\\\\*/\\n/*jslint node:true,browser:true*/\\n/*global $tw:false*/\\n'use strict'\\n\\nconst cidAnalyser = 'https://cid.ipfs.io/#'\\n\\nconst ipfsKeyword = 'ipfs'\\nconst ipnsKeyword = 'ipns'\\n\\n/*eslint no-unused-vars:\\\"off\\\"*/\\nconst name = 'ipfs-wrapper'\\n\\nvar IpfsWrapper = function (ipfsBundle) {\\n  this.ipfsBundle = ipfsBundle\\n  this.ipfsLibrary = ipfsBundle.ipfsLibrary\\n  this.ipfsUrl = ipfsBundle.ipfsUrl\\n}\\n\\nIpfsWrapper.prototype.getLogger = function () {\\n  return this.ipfsBundle.getLogger()\\n}\\n\\nIpfsWrapper.prototype.getWindowIpfsClient = async function () {\\n  // IPFS Companion\\n  try {\\n    const policy = await this.ipfsLibrary.getWindowIpfs()\\n    if (policy !== null && policy.ipfs !== null && policy.provider !== null) {\\n      return policy\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to retrieve IPFS Companion...')\\n}\\n\\nIpfsWrapper.prototype.getHttpIpfsClient = async function (url) {\\n  // HTTP Client\\n  try {\\n    const { ipfs, provider } = await this.ipfsLibrary.getHttpIpfs(url)\\n    if (ipfs !== null && provider !== null) {\\n      return {\\n        ipfs: ipfs,\\n        provider: provider,\\n      }\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to retrieve an IPFS HTTP provider...')\\n}\\n\\nIpfsWrapper.prototype.getIpfsClient = async function (url) {\\n  try {\\n    var policy = null\\n    const ipfsProvider = $tw.utils.getIpfsProvider()\\n    if (ipfsProvider === 'window') {\\n      policy = await this.ipfsLibrary.getWindowIpfs()\\n    } else if (ipfsProvider === 'http') {\\n      policy = await this.ipfsLibrary.getHttpIpfs(url)\\n    } else {\\n      policy = await this.ipfsLibrary.getDefaultIpfs(url)\\n    }\\n    if (policy !== null && policy.ipfs !== null && policy.provider !== null) {\\n      return policy\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to retrieve an IPFS provider...')\\n}\\n\\nIpfsWrapper.prototype.getIpnsIdentifier = async function (ipfs, identifier, base, path, ipnsName, resolveIpns) {\\n  identifier = identifier !== undefined && identifier !== null && identifier.toString().trim() !== '' ? identifier.toString().trim() : null\\n  ipnsName = ipnsName !== undefined && ipnsName !== null && ipnsName.trim() !== '' ? ipnsName.trim() : null\\n  if (identifier == null && ipnsName == null) {\\n    throw new Error('Undefined IPNS identifiers...')\\n  }\\n  path = path !== undefined && path !== null && path.trim() !== '' ? path.trim() : ''\\n  resolveIpns = resolveIpns !== undefined ? resolveIpns === 'true' : false\\n  var ipnsKey = null\\n  if (this.ipfsBundle.getCid(identifier) !== null) {\\n    ipnsKey = identifier\\n  }\\n  var found = false\\n  var keys = null\\n  var normalizedUrl = null\\n  if (resolveIpns || ipnsKey == null) {\\n    try {\\n      // Load IPNS keys\\n      keys = await this.getIpnsKeys(ipfs)\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n  }\\n  // Do our best\\n  if (keys !== null && keys !== undefined && Array.isArray(keys)) {\\n    if (ipnsName !== null && identifier !== null) {\\n      for (var index = 0; index < keys.length; index++) {\\n        const cidv1b32 = this.ipfsBundle.cidToLibp2pKeyCidV1(keys[index].id, 'base32', false).toString()\\n        const cidv1b36 = this.ipfsBundle.cidToLibp2pKeyCidV1(keys[index].id, 'base36', false).toString()\\n        if ((keys[index].id === identifier || cidv1b32 === identifier || cidv1b36 === identifier) && keys[index].name === ipnsName) {\\n          ipnsKey = keys[index].id\\n          found = true\\n          break\\n        }\\n      }\\n    } else if (ipnsName !== null) {\\n      for (var index = 0; index < keys.length; index++) {\\n        if (keys[index].name === ipnsName) {\\n          ipnsKey = keys[index].id\\n          found = true\\n          break\\n        }\\n      }\\n    } else {\\n      for (var index = 0; index < keys.length; index++) {\\n        const cidv1b32 = this.ipfsBundle.cidToLibp2pKeyCidV1(keys[index].id, 'base32', false).toString()\\n        const cidv1b36 = this.ipfsBundle.cidToLibp2pKeyCidV1(keys[index].id, 'base36', false).toString()\\n        if (keys[index].id === identifier || cidv1b32 === identifier || cidv1b36 === identifier || keys[index].name === identifier) {\\n          ipnsKey = keys[index].id\\n          ipnsName = keys[index].name\\n          found = true\\n          break\\n        }\\n      }\\n    }\\n    if (found === false) {\\n      if (this.ipfsBundle.getCid(identifier) == null) {\\n        throw new Error('Unknown IPNS identifier...')\\n      }\\n    }\\n  }\\n  // Path\\n  const startPath = `/${ipnsKeyword}/${ipnsKey}`\\n  if (path.startsWith(startPath)) {\\n    path = path.slice(startPath.length)\\n  }\\n  path = `${startPath}${path}`\\n  // Lets build an url, the resolver will do the final check, we cannot do more here\\n  if (found) {\\n    const cidv0 = this.ipfsBundle.cidToBase58CidV0(ipnsKey, false).toString()\\n    const cidv1b32 = this.ipfsBundle.cidToLibp2pKeyCidV1(cidv0, 'base32', false).toString()\\n    ipnsKey = this.ipfsBundle.cidToLibp2pKeyCidV1(cidv1b32, 'base36', false)\\n    normalizedUrl = this.ipfsUrl.normalizeUrl(path, base)\\n    this.getLogger().info(\\n      `Successfully Fetched IPNS identifiers: '${ipnsName}':\\n'dag-pb' \\\"cidv0\\\" (base58btc): ${cidAnalyser}${cidv0}\\nto 'libp2p-key' \\\"cidv1\\\" (base32): ${cidAnalyser}${cidv1b32}\\nto 'libp2p-key' \\\"cidv1\\\" (base36): ${cidAnalyser}${ipnsKey}\\n${normalizedUrl}`\\n    )\\n  } else {\\n    normalizedUrl = this.ipfsUrl.normalizeUrl(path, base)\\n    this.getLogger().info(\\n      `Unable to Fetch IPNS identifiers, default to\\n${normalizedUrl}`\\n    )\\n  }\\n  return {\\n    ipnsKey: ipnsKey !== null ? ipnsKey.toString() : null,\\n    ipnsName: ipnsName,\\n    normalizedUrl: normalizedUrl,\\n  }\\n}\\n\\nIpfsWrapper.prototype.generateIpnsKey = async function (ipfs, ipnsName) {\\n  try {\\n    const key = await this.ipfsLibrary.genKey(ipfs, ipnsName)\\n    const cid = this.ipfsBundle.cidToLibp2pKeyCidV1(key, 'base36', true).toString()\\n    const url = this.ipfsUrl.normalizeUrl(`/${ipnsKeyword}/${cid}`)\\n    this.getLogger().info(\\n      `Successfully generated IPNS key with IPNS name: ${ipnsName}\\n${url}`\\n    )\\n    return cid\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to generate and IPNS key...')\\n}\\n\\nIpfsWrapper.prototype.removeIpnsKey = async function (ipfs, ipnsName) {\\n  try {\\n    const hash = await this.ipfsLibrary.rmKey(ipfs, ipnsName)\\n    const msg = `Successfully removed IPNS name: ${ipnsName}`\\n    this.getLogger().info(msg)\\n    $tw.utils.alert(name, msg)\\n    return hash\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to remove an IPNS Key...')\\n}\\n\\nIpfsWrapper.prototype.renameIpnsName = async function (ipfs, oldIpnsName, newIpnsName) {\\n  try {\\n    const { keyId, was, now } = await this.ipfsLibrary.keyRename(ipfs, oldIpnsName, newIpnsName)\\n    const key = this.ipfsBundle.cidToLibp2pKeyCidV1(keyId, 'base36', true).toString()\\n    const msg = `Successfully renamed IPNS name: ${was} with ${now}`\\n    this.getLogger().info(msg)\\n    $tw.utils.alert(name, msg)\\n    return {\\n      ipnsKey: key,\\n      ipnsName: now,\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to rename an IPNS name...')\\n}\\n\\nIpfsWrapper.prototype.getIpnsKeys = async function (ipfs) {\\n  try {\\n    const keyList = await this.ipfsLibrary.keyList(ipfs)\\n    this.getLogger().info('Successfully fetched IPNS keys...')\\n    return keyList\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to fetch IPNS keys...')\\n}\\n\\nIpfsWrapper.prototype.fetchFromIpfs = async function (ipfs, cid) {\\n  cid = cid !== undefined && cid !== null && cid.toString().trim() !== '' ? cid.toString().trim() : null\\n  if (cid == null) {\\n    throw new Error('Undefined IPNS identifier...')\\n  }\\n  const pathname = `/${ipfsKeyword}/${cid}`\\n  try {\\n    const fetched = await this.ipfsLibrary.cat(ipfs, pathname)\\n    const url = this.ipfsUrl.normalizeUrl(pathname)\\n    this.getLogger().info(`Successfully fetched:\\n${url}`)\\n    return fetched\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to fetch from IPFS...')\\n}\\n\\nIpfsWrapper.prototype.resolveIpfsContainer = async function (ipfs, value) {\\n  value = value !== undefined && value !== null && value.toString().trim() !== '' ? value.toString().trim() : null\\n  if (value == null) {\\n    throw new Error('Undefined URL...')\\n  }\\n  var cid = null\\n  try {\\n    cid = await this.ipfsBundle.resolveIpfsContainer(ipfs, value)\\n    if (cid !== null) {\\n      const url = this.ipfsUrl.normalizeUrl(`/ipfs/${cid}`)\\n      this.getLogger().info(`Successfully resolved IPFS container:\\n  ${url}`)\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  return cid\\n}\\n\\nIpfsWrapper.prototype.addAttachmentToIpfs = async function (ipfs, content, ipfsPath) {\\n  try {\\n    if (content === undefined || content == null) {\\n      throw new Error('Undefined content...')\\n    }\\n    ipfsPath = ipfsPath !== undefined && ipfsPath !== null && ipfsPath.trim() !== '' ? ipfsPath.trim() : '/'\\n    const upload = []\\n    upload.push({\\n      path: `${ipfsPath}`,\\n      content: content,\\n    })\\n    const options = {\\n      chunker: 'rabin-262144-524288-1048576',\\n      cidVersion: 0,\\n      hashAlg: 'sha2-256',\\n      pin: false,\\n      rawLeaves: false,\\n      wrapWithDirectory: true,\\n    }\\n    if (ipfsPath === '/') {\\n      options.wrapWithDirectory = false\\n    }\\n    var cid = null\\n    var parentCid = null\\n    var parentSize = null\\n    var contentCid = null\\n    var contentPath = ''\\n    var contentSize = null\\n    const added = await this.ipfsLibrary.addAll(ipfs, upload, options)\\n    for (var [cid, details] of added.entries()) {\\n      if (added.size === 1 || details.path === '') {\\n        parentCid = cid\\n        parentSize = details.size\\n      } else {\\n        contentCid = cid\\n        contentPath = `/${details.path}`\\n        contentSize = details.size\\n      }\\n    }\\n    const url = this.ipfsUrl.normalizeUrl(`/${ipfsKeyword}/${parentCid}`)\\n    this.getLogger().info(`Successfully added: ${parentSize} bytes,\\n${url}`)\\n    return {\\n      cid: contentCid !== null ? contentCid : parentCid,\\n      path: `ipfs://${parentCid}${contentPath}`,\\n      size: contentCid !== null ? contentSize : parentSize,\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to add content to IPFS...')\\n}\\n\\nIpfsWrapper.prototype.addToIpfs = async function (ipfs, content) {\\n  try {\\n    if (content === undefined || content == null) {\\n      throw new Error('Undefined content...')\\n    }\\n    const { cid, path, size } = await this.ipfsLibrary.add(ipfs, content)\\n    const pathname = `/${ipfsKeyword}/${cid}`\\n    const url = this.ipfsUrl.normalizeUrl(pathname)\\n    this.getLogger().info(`Successfully added: ${size} bytes,\\n${url}`)\\n    return {\\n      cid: cid,\\n      path: path,\\n      size: size,\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to add content to IPFS...')\\n}\\n\\nIpfsWrapper.prototype.resolveIpnsKey = async function (ipfs, ipnsKey, options) {\\n  ipnsKey = ipnsKey !== undefined && ipnsKey !== null && ipnsKey.toString().trim() !== '' ? ipnsKey.toString().trim() : null\\n  if (ipnsKey == null) {\\n    throw new Error('Undefined IPNS key...')\\n  }\\n  const pathname = `/${ipnsKeyword}/${ipnsKey}`\\n  try {\\n    const url = this.ipfsUrl.normalizeUrl(pathname)\\n    const resolved = await this.ipfsLibrary.nameResolve(ipfs, pathname, options)\\n    const { cid } = this.ipfsBundle.getIpfsIdentifier(resolved)\\n    if (cid !== null) {\\n      const parsed = this.ipfsUrl.normalizeUrl(resolved)\\n      this.getLogger().info(\\n        `Successfully resolved IPNS key:\\n${url}\\n${parsed}`\\n      )\\n      return cid\\n    }\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to resolve an IPNS key...')\\n}\\n\\nIpfsWrapper.prototype.publishIpnsName = async function (cid, ipfs, ipnsKey, ipnsName, options) {\\n  ipnsKey = ipnsKey !== undefined && ipnsKey !== null && ipnsKey.toString().trim() !== '' ? ipnsKey.toString().trim() : null\\n  if (ipnsKey == null) {\\n    throw new Error('Undefined IPNS key...')\\n  }\\n  ipnsName = ipnsName !== undefined && ipnsName !== null && ipnsName.trim() !== '' ? ipnsName.trim() : null\\n  if (ipnsName == null) {\\n    throw new Error('Undefined IPNS name...')\\n  }\\n  cid = cid !== undefined && cid !== null && cid.toString().trim() !== '' ? cid.toString().trim() : null\\n  if (cid == null) {\\n    throw new Error('Undefined IPNS identifier...')\\n  }\\n  // Path\\n  const key = `/${ipnsKeyword}/${ipnsKey}`\\n  const pathname = `/${ipfsKeyword}/${cid}`\\n  try {\\n    // Publish\\n    const result = await this.ipfsBundle.namePublish(ipfs, ipnsName, pathname, options)\\n    const keyParsed = this.ipfsUrl.normalizeUrl(key)\\n    const url = this.ipfsUrl.normalizeUrl(pathname)\\n    this.getLogger().info(\\n      `Successfully published IPNS name: ${ipnsName}\\n${keyParsed}\\n${url}`\\n    )\\n    return result\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to publish an IPNS name...')\\n}\\n\\nIpfsWrapper.prototype.pinToIpfs = async function (ipfs, ipfsPath, recursive) {\\n  ipfsPath = ipfsPath !== undefined && ipfsPath !== null && ipfsPath.toString().trim() !== '' ? ipfsPath.toString().trim() : null\\n  if (ipfsPath == null) {\\n    throw new Error('Undefined IPFS path...')\\n  }\\n  try {\\n    const pinned = await this.ipfsLibrary.pinAdd(ipfs, ipfsPath, {\\n      recursive: recursive,\\n    })\\n    const url = this.ipfsUrl.normalizeUrl(ipfsPath)\\n    this.getLogger().info(\\n      `Successfully pinned:\\n${url}`\\n    )\\n    return pinned\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to pin...')\\n}\\n\\nIpfsWrapper.prototype.unpinFromIpfs = async function (ipfs, ipfsPath, recursive) {\\n  ipfsPath = ipfsPath !== undefined && ipfsPath !== null && ipfsPath.toString().trim() !== '' ? ipfsPath.toString().trim() : null\\n  if (ipfsPath == null) {\\n    throw new Error('Undefined IPFS path...')\\n  }\\n  try {\\n    const unpinned = await this.ipfsLibrary.pinRm(ipfs, ipfsPath, {\\n      recursive: recursive,\\n    })\\n    const url = this.ipfsUrl.normalizeUrl(ipfsPath)\\n    this.getLogger().info(\\n      `Successfully unpinned:\\n${url}`\\n    )\\n    return unpinned\\n  } catch (error) {\\n    this.getLogger().error(error)\\n  }\\n  throw new Error('Failed to unpin...')\\n}\\n\\nexports.IpfsWrapper = IpfsWrapper\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/macros/boot-boot-version-url.js\": {\n            \"title\": \"$:/plugins/ipfs/macros/boot-boot-version-url.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/macros/boot-boot-version-url.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: macro\\n\\nIPFS plugin version\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Information about this macro\\n   */\\n  exports.name = 'boot-boot-version-url'\\n\\n  exports.params = []\\n\\n  /*\\n   * Run the macro\\n   */\\n  exports.run = function () {\\n    const buildName = $tw !== undefined && $tw !== null ? $tw.wiki.getTiddler('$:/ipfs/build/name') : null\\n    const boot = $tw !== undefined && $tw !== null ? $tw.wiki.getTiddler('$:/boot/boot.js') : null\\n    if (buildName !== null && boot !== null) {\\n      return `${buildName.fields.text}/${boot.fields.version}/tiddlywiki-ipfs/boot/`\\n    }\\n    return 'Unavailable...'\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"macro\"\n        },\n        \"$:/core/modules/macros/infosaver.js\": {\n            \"title\": \"$:/core/modules/macros/infosaver.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/macros/infosaver.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: macro\\n\\nDisplay saver info name\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Information about this macro\\n   */\\n  exports.name = 'infosaver'\\n\\n  exports.params = [{ name: 'tiddler' }]\\n\\n  /*\\n   * Run the macro\\n   */\\n  exports.run = function (tiddler) {\\n    return $tw.saverHandler.getSaver(tiddler).module.info.name\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"macro\"\n        },\n        \"$:/plugins/ipfs/macros/ipfs-console-tooltip.js\": {\n            \"title\": \"$:/plugins/ipfs/macros/ipfs-console-tooltip.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/macros/ipfs-console-tooltip.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: macro\\n\\nIPFS plugin version\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Information about this macro\\n   */\\n  exports.name = 'ipfs-console-tooltip'\\n\\n  exports.params = []\\n\\n  /*\\n   * Run the macro\\n   */\\n  exports.run = function () {\\n    var tiddler = $tw.wiki.getTiddler('$:/language/Buttons/Console/Mobile/Hint')\\n    if (typeof window.eruda === 'undefined') {\\n      tiddler = $tw.wiki.getTiddler('$:/language/Buttons/Console/Mobile/Load')\\n    } else if ($tw.ipfs.ipfsAction !== undefined) {\\n      if ($tw.ipfs.ipfsAction.console) {\\n        tiddler = $tw.wiki.getTiddler('$:/language/Buttons/Console/Mobile/Hide')\\n      } else {\\n        tiddler = $tw.wiki.getTiddler('$:/language/Buttons/Console/Mobile/Show')\\n      }\\n    }\\n    return tiddler.fields.text\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"macro\"\n        },\n        \"$:/plugins/ipfs/macros/ipfs-documentation-version-url.js\": {\n            \"title\": \"$:/plugins/ipfs/macros/ipfs-documentation-version-url.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/macros/ipfs-documentation-version-url.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: macro\\n\\nIPFS plugin version\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Information about this macro\\n   */\\n  exports.name = 'ipfs-documentation-version-url'\\n\\n  exports.params = []\\n\\n  /*\\n   * Run the macro\\n   */\\n  exports.run = function () {\\n    const buildName = $tw !== undefined && $tw !== null ? $tw.wiki.getTiddler('$:/ipfs/build/name') : null\\n    const documentation = $tw !== undefined && $tw !== null ? $tw.wiki.getTiddler('IPFS Documentation Assets') : null\\n    if (buildName !== null && documentation !== null) {\\n      return `${buildName.fields.text}/${documentation.fields.version}/tiddlywiki-ipfs/documentation/`\\n    }\\n    return 'Unavailable...'\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"macro\"\n        },\n        \"$:/plugins/ipfs/macros/ipfs-encryption-tooltip.js\": {\n            \"title\": \"$:/plugins/ipfs/macros/ipfs-encryption-tooltip.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/macros/ipfs-encryption-tooltip.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: macro\\n\\nIPFS plugin version\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Information about this macro\\n   */\\n  exports.name = 'ipfs-encryption-tooltip'\\n\\n  exports.params = []\\n\\n  /*\\n   * Run the macro\\n   */\\n  exports.run = function () {\\n    var encrypted = $tw.wiki.getTiddler('$:/isEncrypted')\\n    if (encrypted !== undefined && encrypted !== null && encrypted.fields.text === 'yes') {\\n      encrypted = true\\n    } else {\\n      encrypted = false\\n    }\\n    var tiddler\\n    var encryption = $tw.wiki.getTiddler('$:/config/encryption')\\n    if (encrypted) {\\n      tiddler = $tw.wiki.getTiddler('$:/language/Buttons/Encryption/ClearEncryptionPublicKey/Hint')\\n      if (encryption.fields.text === 'standford') {\\n        tiddler = $tw.wiki.getTiddler('$:/language/Buttons/Encryption/ClearPassword/Hint')\\n      }\\n    } else {\\n      tiddler = $tw.wiki.getTiddler('$:/language/Buttons/Encryption/SetEncryptionPublicKey/Hint')\\n      if (encryption.fields.text === 'standford') {\\n        tiddler = $tw.wiki.getTiddler('$:/language/Buttons/Encryption/SetPassword/Hint')\\n      }\\n    }\\n    return tiddler.fields.text\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"macro\"\n        },\n        \"$:/core/modules/macros/jsontiddler.js\": {\n            \"title\": \"$:/core/modules/macros/jsontiddler.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/macros/jsontiddler.js\\ntype: application/javascript\\nmodule-type: macro\\n\\nMacro to output a single tiddler to JSON\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  /*\\nInformation about this macro\\n*/\\n\\n  exports.name = 'jsontiddler'\\n\\n  exports.params = [{ name: 'title' }]\\n\\n  /*\\nRun the macro\\n*/\\n  exports.run = function (title) {\\n    title = title || this.getVariable('currentTiddler')\\n    var tiddler = !!title && this.wiki.getTiddler(title)\\n    var fields = {}\\n    if (tiddler) {\\n      for (var field in tiddler.fields) {\\n        fields[field] = tiddler.getFieldString(field)\\n      }\\n    }\\n    var content = JSON.stringify(fields, null, $tw.config.preferences.jsonSpaces)\\n    var compress = $tw.wiki.getTiddler('$:/isCompressed')\\n    compress = compress !== undefined ? compress.fields.text === 'yes' : false\\n    if (compress) {\\n      content = { compressed: $tw.compress.deflate(content) }\\n    }\\n    var encrypt = $tw.wiki.getTiddler('$:/isEncrypted')\\n    encrypt = encrypt !== undefined ? encrypt.fields.text === 'yes' : false\\n    if (encrypt) {\\n      content.compressed = $tw.crypto.encrypt(compress ? content.compressed : content)\\n      if ($tw.crypto.hasEncryptionPublicKey()) {\\n        content.keccak256 = $tw.crypto.keccak256(compress ? content.compressed : content)\\n      }\\n    }\\n    if (compress || encrypt) {\\n      content = JSON.stringify(content)\\n    }\\n    return content\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"macro\"\n        },\n        \"$:/core/modules/macros/jsontiddlers.js\": {\n            \"title\": \"$:/core/modules/macros/jsontiddlers.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/macros/jsontiddlers.js\\ntype: application/javascript\\nmodule-type: macro\\n\\nMacro to output tiddlers matching a filter to JSON\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  /*\\nInformation about this macro\\n*/\\n\\n  exports.name = 'jsontiddlers'\\n\\n  exports.params = [{ name: 'filter' }, { name: 'spaces' }]\\n\\n  /*\\nRun the macro\\n*/\\n  exports.run = function (filter, spaces) {\\n    var content = this.wiki.getTiddlersAsJson(filter, $tw.utils.parseInt(spaces))\\n    var compress = $tw.wiki.getTiddler('$:/isCompressed')\\n    compress = compress !== undefined ? compress.fields.text === 'yes' : false\\n    if (compress) {\\n      content = { compressed: $tw.compress.deflate(content) }\\n    }\\n    var encrypt = $tw.wiki.getTiddler('$:/isEncrypted')\\n    encrypt = encrypt !== undefined ? encrypt.fields.text === 'yes' : false\\n    if (encrypt) {\\n      content.compressed = $tw.crypto.encrypt(compress ? content.compressed : content)\\n      if ($tw.crypto.hasEncryptionPublicKey()) {\\n        content.keccak256 = $tw.crypto.keccak256(compress ? content.compressed : content)\\n      }\\n    }\\n    if (compress || encrypt) {\\n      content = JSON.stringify(content)\\n    }\\n    return content\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"macro\"\n        },\n        \"$:/plugins/ipfs/macros/library-ipfs-modules-version-url.js\": {\n            \"title\": \"$:/plugins/ipfs/macros/library-ipfs-modules-version-url.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/macros/library-ipfs-modules-version-url.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: macro\\n\\nIPFS plugin version\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Information about this macro\\n   */\\n  exports.name = 'library-ipfs-modules-version-url'\\n\\n  exports.params = []\\n\\n  /*\\n   * Run the macro\\n   */\\n  exports.run = function () {\\n    const buildName = $tw !== undefined && $tw !== null ? $tw.wiki.getTiddler('$:/ipfs/build/name') : null\\n    const library = $tw !== undefined && $tw !== null ? $tw.wiki.getTiddler('$:/library/ipfs-modules.js') : null\\n    if (buildName !== null && library !== null) {\\n      return `${buildName.fields.text}/${library.fields.version}/tiddlywiki-ipfs/library/`\\n    }\\n    return 'Unavailable...'\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"macro\"\n        },\n        \"$:/plugins/ipfs/macros/plugins-ipfs-version-url.js\": {\n            \"title\": \"$:/plugins/ipfs/macros/plugins-ipfs-version-url.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/macros/plugins-ipfs-version-url.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: macro\\n\\nIPFS plugin version\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Information about this macro\\n   */\\n  exports.name = 'plugins-ipfs-version-url'\\n\\n  exports.params = []\\n\\n  /*\\n   * Run the macro\\n   */\\n  exports.run = function () {\\n    const buildName = $tw !== undefined && $tw !== null ? $tw.wiki.getTiddler('$:/ipfs/build/name') : null\\n    const plugin = $tw !== undefined && $tw !== null ? $tw.wiki.getTiddler('$:/plugins/ipfs') : null\\n    if (buildName !== null && plugin !== null) {\\n      return `${buildName.fields.text}/${plugin.fields.version}/tiddlywiki-ipfs/plugin/`\\n    }\\n    return 'Unavailable...'\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"macro\"\n        },\n        \"$:/core/modules/parsers/audioparser.js\": {\n            \"title\": \"$:/core/modules/parsers/audioparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/audioparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe audio parser parses an audio tiddler into an embeddable HTML element\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  var name = 'ipfs-audioparser'\\n\\n  var AudioParser = function (type, text, options) {\\n    var value = `data:${type};base64,`\\n    var element = {\\n      type: 'element',\\n      tag: 'audio',\\n      attributes: {\\n        controls: { type: 'string', value: 'controls' },\\n        style: { type: 'string', value: 'width: 100%; object-fit: contain' },\\n      },\\n    }\\n    if ($tw.browser && options.tiddler !== undefined && options.tiddler !== null) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.toString().trim() !== '' ? canonicalUri.toString().trim() : null\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url = resolvedUrl !== null ? resolvedUrl.toString() : normalizedUrl !== null ? normalizedUrl.toString() : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToBase64(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    element.attributes.src = {\\n                      type: 'string',\\n                      value: `${value}${data}`,\\n                    }\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(options.tiddler)\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        element.attributes.src = { type: 'string', value: `${value}${text}` }\\n      }\\n    }\\n    // Return the parsed tree\\n    this.tree = [element]\\n  }\\n\\n  exports['audio/ogg'] = AudioParser\\n  exports['audio/mpeg'] = AudioParser\\n  exports['audio/mp3'] = AudioParser\\n  exports['audio/mp4'] = AudioParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/binaryparser.js\": {\n            \"title\": \"$:/core/modules/parsers/binaryparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/binaryparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe binary parser parses a binary tiddler into a warning message and download link\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n  const name = 'ipfs-binaryparser'\\n\\n  var BINARY_WARNING_MESSAGE = '$:/core/ui/BinaryWarning'\\n  var EXPORT_BUTTON_IMAGE = '$:/core/images/export-button'\\n\\n  var BinaryParser = function (type, text, options) {\\n    var self = this\\n    var value = `data:${type};base64,`\\n    // Transclude the binary data tiddler warning message\\n    var warn = {\\n      type: 'element',\\n      tag: 'p',\\n      children: [\\n        {\\n          type: 'transclude',\\n          attributes: {\\n            tiddler: { type: 'string', value: BINARY_WARNING_MESSAGE },\\n          },\\n        },\\n      ],\\n    }\\n    // Create download link based on binary tiddler title\\n    var link = {\\n      type: 'element',\\n      tag: 'a',\\n      attributes: {\\n        title: { type: 'indirect', textReference: '!!title' },\\n        download: { type: 'indirect', textReference: '!!title' },\\n      },\\n      children: [\\n        {\\n          type: 'transclude',\\n          attributes: {\\n            tiddler: { type: 'string', value: EXPORT_BUTTON_IMAGE },\\n          },\\n        },\\n      ],\\n    }\\n    if ($tw.browser && options.tiddler !== undefined && options.tiddler !== null) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.toString().trim() !== '' ? canonicalUri.toString().trim() : null\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url = resolvedUrl !== null ? resolvedUrl.toString() : normalizedUrl !== null ? normalizedUrl.toString() : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToBase64(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    link.attributes.href = {\\n                      type: 'string',\\n                      value: `${value}${data}`,\\n                    }\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(options.tiddler)\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        link.attributes.href = {\\n          type: 'string',\\n          value: `${value}${text}`,\\n        }\\n      }\\n    }\\n    // Combine warning message and download link in a div\\n    var element = {\\n      type: 'element',\\n      tag: 'div',\\n      attributes: {\\n        class: { type: 'string', value: 'tc-binary-warning' },\\n      },\\n      children: [warn, link],\\n    }\\n    this.tree = [element]\\n  }\\n\\n  exports['application/octet-stream'] = BinaryParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/csvparser.js\": {\n            \"title\": \"$:/core/modules/parsers/csvparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/csvparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe CSV text parser processes CSV files into a table wrapped in a scrollable widget\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  var CsvParser = function (type, text, options) {\\n    var self = this\\n    // Table framework\\n    this.tree = [\\n      {\\n        type: 'scrollable',\\n        children: [\\n          {\\n            type: 'element',\\n            tag: 'table',\\n            children: [\\n              {\\n                type: 'element',\\n                tag: 'tbody',\\n                children: [],\\n              },\\n            ],\\n            attributes: {\\n              class: { type: 'string', value: 'tc-csv-table' },\\n            },\\n          },\\n        ],\\n      },\\n    ]\\n    if ($tw.browser && options.tiddler !== undefined && options.tiddler !== null) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.toString().trim() !== '' ? canonicalUri.toString().trim() : null\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url = resolvedUrl !== null ? resolvedUrl.toString() : normalizedUrl !== null ? normalizedUrl.toString() : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToUtf8(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    self.split(data)\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(options.tiddler)\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        this.split(text)\\n      }\\n    }\\n  }\\n\\n  CsvParser.prototype.split = function (text) {\\n    // Split the text into lines\\n    var lines = text.split(/\\\\r?\\\\n/gm)\\n    var tag = 'th'\\n    for (var line = 0; line < lines.length; line++) {\\n      var lineText = lines[line]\\n      if (lineText) {\\n        var row = {\\n          type: 'element',\\n          tag: 'tr',\\n          children: [],\\n        }\\n        var columns = lineText.split(',')\\n        for (var column = 0; column < columns.length; column++) {\\n          row.children.push({\\n            type: 'element',\\n            tag: tag,\\n            children: [\\n              {\\n                type: 'text',\\n                text: columns[column],\\n              },\\n            ],\\n          })\\n        }\\n        tag = 'td'\\n        this.tree[0].children[0].children[0].children.push(row)\\n      }\\n    }\\n  }\\n  exports['text/csv'] = CsvParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/htmlparser.js\": {\n            \"title\": \"$:/core/modules/parsers/htmlparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/htmlparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe HTML parser displays text as raw HTML\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*eslint no-unused-vars: \\\"off\\\"*/\\n  const name = 'ipfs-htmlparser'\\n\\n  var HtmlParser = function (type, text, options) {\\n    var value = 'data:text/html;charset=utf-8,'\\n    var src\\n    if ($tw.browser && options.tiddler !== undefined && options.tiddler !== null) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.toString().trim() !== '' ? canonicalUri.toString().trim() : null\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url = resolvedUrl !== null ? resolvedUrl.toString() : normalizedUrl !== null ? normalizedUrl.toString() : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToUtf8(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    src = value + encodeURIComponent(data)\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(options.tiddler)\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        src = value + encodeURIComponent(text)\\n      }\\n    }\\n    this.tree = [\\n      {\\n        type: 'element',\\n        tag: 'iframe',\\n        attributes: {\\n          src: { type: 'string', value: src },\\n          sandbox: { type: 'string', value: 'allow-scripts' },\\n        },\\n      },\\n    ]\\n  }\\n\\n  exports['text/html'] = HtmlParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/imageparser.js\": {\n            \"title\": \"$:/core/modules/parsers/imageparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/imageparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe image parser parses an image into an embeddable HTML element\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  var name = 'ipfs-imageparser'\\n\\n  var ImageParser = function (type, text, options) {\\n    var value = `data:${type};base64,`\\n    var element = {\\n      type: 'element',\\n      tag: 'img',\\n      attributes: {},\\n    }\\n    if ($tw.browser && options.tiddler !== undefined && options.tiddler !== null) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.toString().trim() !== '' ? canonicalUri.toString().trim() : null\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url = resolvedUrl !== null ? resolvedUrl.toString() : normalizedUrl !== null ? normalizedUrl.toString() : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToBase64(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    element.attributes.src = {\\n                      type: 'string',\\n                      value: `${value}${data}`,\\n                    }\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(options.tiddler)\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        element.attributes.src = { type: 'string', value: `${value}${text}` }\\n      }\\n    }\\n    // Return the parsed tree\\n    this.tree = [element]\\n  }\\n\\n  exports['image/gif'] = ImageParser\\n  exports['image/heic'] = ImageParser\\n  exports['image/heif'] = ImageParser\\n  exports['image/jpeg'] = ImageParser\\n  exports['image/jpg'] = ImageParser\\n  exports['image/png'] = ImageParser\\n  exports['image/vnd.microsoft.icon'] = ImageParser\\n  exports['image/webp'] = ImageParser\\n  exports['image/x-icon'] = ImageParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/pdfparser.js\": {\n            \"title\": \"$:/core/modules/parsers/pdfparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/pdfparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe PDF parser embeds a PDF viewer\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const name = 'ipfs-pdfparser'\\n\\n  var PdfParser = function (type, text, options) {\\n    var value = 'data:application/pdf;base64,'\\n    var element = {\\n      type: 'element',\\n      tag: 'embed',\\n      attributes: {},\\n    }\\n    if ($tw.browser && options.tiddler !== undefined && options.tiddler !== null) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.toString().trim() !== '' ? canonicalUri.toString().trim() : null\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url = resolvedUrl !== null ? resolvedUrl.toString() : normalizedUrl !== null ? normalizedUrl.toString() : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToBase64(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    element.attributes.src = {\\n                      type: 'string',\\n                      value: `${value}${data}`,\\n                    }\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(options.tiddler)\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        element.attributes.src = { type: 'string', value: `${value}${text}` }\\n      }\\n    }\\n    // Return the parsed tree\\n    this.tree = [element]\\n  }\\n\\n  exports['application/pdf'] = PdfParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/svgparser.js\": {\n            \"title\": \"$:/core/modules/parsers/svgparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/svgparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe image parser parses an image into an embeddable HTML element\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const name = 'ipfs-svgparser'\\n\\n  var SvgParser = function (type, text, options) {\\n    var value = 'data:image/svg+xml,'\\n    var element = {\\n      type: 'element',\\n      tag: 'img',\\n      attributes: {},\\n    }\\n    if ($tw.browser && options.tiddler !== undefined && options.tiddler !== null) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.toString().trim() !== '' ? canonicalUri.toString().trim() : null\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url = resolvedUrl !== null ? resolvedUrl.toString() : normalizedUrl !== null ? normalizedUrl.toString() : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToUtf8(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    element.attributes.src = {\\n                      type: 'string',\\n                      value: value + encodeURIComponent(data),\\n                    }\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(options.tiddler)\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else {\\n        element.attributes.src = {\\n          type: 'string',\\n          value: value + encodeURIComponent(text),\\n        }\\n      }\\n    }\\n    // Return the parsed tree\\n    this.tree = [element]\\n  }\\n\\n  exports['image/svg+xml'] = SvgParser\\n  exports['.svg'] = SvgParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/textparser.js\": {\n            \"title\": \"$:/core/modules/parsers/textparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/textparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe plain text parser processes blocks of source text into a degenerate parse tree consisting of a single text node\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  var TextParser = function (type, text, options) {\\n    var element = {\\n      type: 'codeblock',\\n      attributes: {\\n        code: { type: 'string', value: text },\\n        language: { type: 'string', value: type },\\n      },\\n    }\\n    if ($tw.browser && options.tiddler !== undefined && options.tiddler !== null) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.toString().trim() !== '' ? canonicalUri.toString().trim() : null\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url = resolvedUrl !== null ? resolvedUrl.toString() : normalizedUrl !== null ? normalizedUrl.toString() : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToUtf8(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    element.attributes.code.value = data\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(options.tiddler)\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      }\\n    }\\n    // Return the parsed tree\\n    this.tree = [element]\\n  }\\n\\n  exports['application/javascript'] = TextParser\\n  exports['application/json'] = TextParser\\n  exports['application/x-tiddler-dictionary'] = TextParser\\n  exports['text/css'] = TextParser\\n  exports['text/plain'] = TextParser\\n  exports['text/x-tiddlywiki'] = TextParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/videoparser.js\": {\n            \"title\": \"$:/core/modules/parsers/videoparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/videoparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe video parser parses a video tiddler into an embeddable HTML element\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const name = 'ipfs-videoparser'\\n\\n  var VideoParser = function (type, text, options) {\\n    var value = `data:${type};base64,`\\n    var element = {\\n      type: 'element',\\n      tag: 'video',\\n      attributes: {\\n        controls: { type: 'string', value: 'controls' },\\n        style: { type: 'string', value: 'width: 100%; object-fit: contain' },\\n      },\\n    }\\n    if ($tw.browser && options.tiddler !== undefined && options.tiddler !== null) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.toString().trim() !== '' ? canonicalUri.toString().trim() : null\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url = resolvedUrl !== null ? resolvedUrl.toString() : normalizedUrl !== null ? normalizedUrl.toString() : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToBase64(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    element.attributes.src = {\\n                      type: 'string',\\n                      value: `${value}${data}`,\\n                    }\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(options.tiddler)\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        element.attributes.src = { type: 'string', value: `${value}${text}` }\\n      }\\n    }\\n    // Return the parsed tree\\n    this.tree = [element]\\n  }\\n\\n  exports['video/mp4'] = VideoParser\\n  exports['video/ogg'] = VideoParser\\n  exports['video/quicktime'] = VideoParser\\n  exports['video/webm'] = VideoParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/wikiparser/wikiparser.js\": {\n            \"title\": \"$:/core/modules/parsers/wikiparser/wikiparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/wikiparser/wikiparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe wiki text parser processes blocks of source text into a parse tree.\\n\\nThe parse tree is made up of nested arrays of these JavaScript objects:\\n\\n\\t{type: \\\"element\\\", tag: <string>, attributes: {}, children: []} - an HTML element\\n\\t{type: \\\"text\\\", text: <string>} - a text node\\n\\t{type: \\\"entity\\\", value: <string>} - an entity\\n\\t{type: \\\"raw\\\", html: <string>} - raw HTML\\n\\nAttributes are stored as hashmaps of the following objects:\\n\\n\\t{type: \\\"string\\\", value: <string>} - literal string\\n\\t{type: \\\"indirect\\\", textReference: <textReference>} - indirect through a text reference\\n\\t{type: \\\"macro\\\", macro: <TBD>} - indirect through a macro invocation\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const IpfsImport = require('$:/plugins/ipfs/ipfs-import.js').IpfsImport\\n\\n  var name = 'ipfs-wikiparser'\\n\\n  var WikiParser = function (type, text, options) {\\n    this.wiki = options.wiki\\n    // Check for an externally linked tiddler\\n    if ($tw.browser && (text || '') === '' && options.tiddler !== undefined && options.tiddler !== null) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.toString().trim() !== '' ? canonicalUri.toString().trim() : null\\n      var importUri = options.tiddler.fields._import_uri\\n      importUri = importUri !== undefined && importUri !== null && importUri.toString().trim() !== '' ? importUri.toString().trim() : null\\n      if (canonicalUri !== null || importUri !== null) {\\n        var ipfsImport = new IpfsImport()\\n        ipfsImport\\n          .import(canonicalUri, importUri, options.tiddler)\\n          .then(data => {\\n            if (data) {\\n              const navigator = $tw.utils.locateNavigatorWidget($tw.pageWidgetNode)\\n              if (navigator) {\\n                navigator.dispatchEvent({\\n                  type: 'tm-ipfs-import-tiddlers',\\n                  param: data,\\n                })\\n              }\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n            $tw.utils.alert(name, error.message)\\n          })\\n        text = `''${$tw.language.getRawString('LazyLoadingWarning')}''`\\n      }\\n    }\\n    // Initialise the classes if we don't have them already\\n    if (!this.pragmaRuleClasses) {\\n      WikiParser.prototype.pragmaRuleClasses = $tw.modules.createClassesFromModules('wikirule', 'pragma', $tw.WikiRuleBase)\\n      this.setupRules(WikiParser.prototype.pragmaRuleClasses, '$:/config/WikiParserRules/Pragmas/')\\n    }\\n    if (!this.blockRuleClasses) {\\n      WikiParser.prototype.blockRuleClasses = $tw.modules.createClassesFromModules('wikirule', 'block', $tw.WikiRuleBase)\\n      this.setupRules(WikiParser.prototype.blockRuleClasses, '$:/config/WikiParserRules/Block/')\\n    }\\n    if (!this.inlineRuleClasses) {\\n      WikiParser.prototype.inlineRuleClasses = $tw.modules.createClassesFromModules('wikirule', 'inline', $tw.WikiRuleBase)\\n      this.setupRules(WikiParser.prototype.inlineRuleClasses, '$:/config/WikiParserRules/Inline/')\\n    }\\n    // Save the parse text\\n    this.type = type || 'text/vnd.tiddlywiki'\\n    this.source = text || ''\\n    this.sourceLength = this.source.length\\n    // Flag for ignoring whitespace\\n    this.configTrimWhiteSpace = false\\n    // Set current parse position\\n    this.pos = 0\\n    // Instantiate the pragma parse rules\\n    this.pragmaRules = this.instantiateRules(this.pragmaRuleClasses, 'pragma', 0)\\n    // Instantiate the parser block and inline rules\\n    this.blockRules = this.instantiateRules(this.blockRuleClasses, 'block', 0)\\n    this.inlineRules = this.instantiateRules(this.inlineRuleClasses, 'inline', 0)\\n    // Parse any pragmas\\n    this.tree = []\\n    var topBranch = this.parsePragmas()\\n    // Parse the text into inline runs or blocks\\n    if (options.parseAsInline) {\\n      topBranch.push.apply(topBranch, this.parseInlineRun())\\n    } else {\\n      topBranch.push.apply(topBranch, this.parseBlocks())\\n    }\\n    // Return the parsed tree\\n  }\\n\\n  /*\\n   */\\n  WikiParser.prototype.setupRules = function (proto, configPrefix) {\\n    var self = this\\n    if (!$tw.safemode) {\\n      $tw.utils.each(proto, function (object, name) {\\n        if (self.wiki.getTiddlerText(configPrefix + name, 'enable') !== 'enable') {\\n          delete proto[name]\\n        }\\n      })\\n    }\\n  }\\n\\n  /*\\nInstantiate an array of parse rules\\n*/\\n  WikiParser.prototype.instantiateRules = function (classes, type, startPos) {\\n    var rulesInfo = []\\n    var self = this\\n    $tw.utils.each(classes, function (RuleClass) {\\n      // Instantiate the rule\\n      var rule = new RuleClass(self)\\n      rule.is = {}\\n      rule.is[type] = true\\n      rule.init(self)\\n      var matchIndex = rule.findNextMatch(startPos)\\n      if (matchIndex !== undefined) {\\n        rulesInfo.push({\\n          rule: rule,\\n          matchIndex: matchIndex,\\n        })\\n      }\\n    })\\n    return rulesInfo\\n  }\\n\\n  /*\\nSkip any whitespace at the current position. Options are:\\n  treatNewlinesAsNonWhitespace: true if newlines are NOT to be treated as whitespace\\n*/\\n  WikiParser.prototype.skipWhitespace = function (options) {\\n    options = options || {}\\n    var whitespaceRegExp = options.treatNewlinesAsNonWhitespace ? /([^\\\\S\\\\n]+)/gm : /(\\\\s+)/gm\\n    whitespaceRegExp.lastIndex = this.pos\\n    var whitespaceMatch = whitespaceRegExp.exec(this.source)\\n    if (whitespaceMatch && whitespaceMatch.index === this.pos) {\\n      this.pos = whitespaceRegExp.lastIndex\\n    }\\n  }\\n\\n  /*\\nGet the next match out of an array of parse rule instances\\n*/\\n  WikiParser.prototype.findNextMatch = function (rules, startPos) {\\n    // Find the best matching rule by finding the closest match position\\n    var matchingRule\\n    var matchingRulePos = this.sourceLength\\n    // Step through each rule\\n    for (var t = 0; t < rules.length; t++) {\\n      var ruleInfo = rules[t]\\n      // Ask the rule to get the next match if we've moved past the current one\\n      if (ruleInfo.matchIndex !== undefined && ruleInfo.matchIndex < startPos) {\\n        ruleInfo.matchIndex = ruleInfo.rule.findNextMatch(startPos)\\n      }\\n      // Adopt this match if it's closer than the current best match\\n      if (ruleInfo.matchIndex !== undefined && ruleInfo.matchIndex <= matchingRulePos) {\\n        matchingRule = ruleInfo\\n        matchingRulePos = ruleInfo.matchIndex\\n      }\\n    }\\n    return matchingRule\\n  }\\n\\n  /*\\nParse any pragmas at the beginning of a block of parse text\\n*/\\n  WikiParser.prototype.parsePragmas = function () {\\n    var currentTreeBranch = this.tree\\n    while (true) {\\n      // Skip whitespace\\n      this.skipWhitespace()\\n      // Check for the end of the text\\n      if (this.pos >= this.sourceLength) {\\n        break\\n      }\\n      // Check if we've arrived at a pragma rule match\\n      var nextMatch = this.findNextMatch(this.pragmaRules, this.pos)\\n      // If not, just exit\\n      if (!nextMatch || nextMatch.matchIndex !== this.pos) {\\n        break\\n      }\\n      // Process the pragma rule\\n      var subTree = nextMatch.rule.parse()\\n      if (subTree.length > 0) {\\n        // Quick hack; we only cope with a single parse tree node being returned, which is true at the moment\\n        currentTreeBranch.push.apply(currentTreeBranch, subTree)\\n        subTree[0].children = []\\n        currentTreeBranch = subTree[0].children\\n      }\\n    }\\n    return currentTreeBranch\\n  }\\n\\n  /*\\nParse a block from the current position\\n  terminatorRegExpString: optional regular expression string that identifies the end of plain paragraphs. Must not include capturing parenthesis\\n*/\\n  WikiParser.prototype.parseBlock = function (terminatorRegExpString) {\\n    var terminatorRegExp = terminatorRegExpString ? new RegExp('(' + terminatorRegExpString + '|\\\\\\\\r?\\\\\\\\n\\\\\\\\r?\\\\\\\\n)', 'mg') : /(\\\\r?\\\\n\\\\r?\\\\n)/gm\\n    this.skipWhitespace()\\n    if (this.pos >= this.sourceLength) {\\n      return []\\n    }\\n    // Look for a block rule that applies at the current position\\n    var nextMatch = this.findNextMatch(this.blockRules, this.pos)\\n    if (nextMatch && nextMatch.matchIndex === this.pos) {\\n      return nextMatch.rule.parse()\\n    }\\n    // Treat it as a paragraph if we didn't find a block rule\\n    return [\\n      {\\n        type: 'element',\\n        tag: 'p',\\n        children: this.parseInlineRun(terminatorRegExp),\\n      },\\n    ]\\n  }\\n\\n  /*\\nParse a series of blocks of text until a terminating regexp is encountered or the end of the text\\n  terminatorRegExpString: terminating regular expression\\n*/\\n  WikiParser.prototype.parseBlocks = function (terminatorRegExpString) {\\n    if (terminatorRegExpString) {\\n      return this.parseBlocksTerminated(terminatorRegExpString)\\n    } else {\\n      return this.parseBlocksUnterminated()\\n    }\\n  }\\n\\n  /*\\nParse a block from the current position to the end of the text\\n*/\\n  WikiParser.prototype.parseBlocksUnterminated = function () {\\n    var tree = []\\n    while (this.pos < this.sourceLength) {\\n      tree.push.apply(tree, this.parseBlock())\\n    }\\n    return tree\\n  }\\n\\n  /*\\nParse blocks of text until a terminating regexp is encountered\\n*/\\n  WikiParser.prototype.parseBlocksTerminated = function (terminatorRegExpString) {\\n    var terminatorRegExp = new RegExp('(' + terminatorRegExpString + ')', 'mg')\\n    var tree = []\\n    // Skip any whitespace\\n    this.skipWhitespace()\\n    //  Check if we've got the end marker\\n    terminatorRegExp.lastIndex = this.pos\\n    var match = terminatorRegExp.exec(this.source)\\n    // Parse the text into blocks\\n    while (this.pos < this.sourceLength && !(match && match.index === this.pos)) {\\n      var blocks = this.parseBlock(terminatorRegExpString)\\n      tree.push.apply(tree, blocks)\\n      // Skip any whitespace\\n      this.skipWhitespace()\\n      //  Check if we've got the end marker\\n      terminatorRegExp.lastIndex = this.pos\\n      match = terminatorRegExp.exec(this.source)\\n    }\\n    if (match && match.index === this.pos) {\\n      this.pos = match.index + match[0].length\\n    }\\n    return tree\\n  }\\n\\n  /*\\nParse a run of text at the current position\\n  terminatorRegExp: a regexp at which to stop the run\\n  options: see below\\nOptions available:\\n  eatTerminator: move the parse position past any encountered terminator (default false)\\n*/\\n  WikiParser.prototype.parseInlineRun = function (terminatorRegExp, options) {\\n    if (terminatorRegExp) {\\n      return this.parseInlineRunTerminated(terminatorRegExp, options)\\n    } else {\\n      return this.parseInlineRunUnterminated(options)\\n    }\\n  }\\n\\n  WikiParser.prototype.parseInlineRunUnterminated = function (options) {\\n    var tree = []\\n    // Find the next occurrence of an inline rule\\n    var nextMatch = this.findNextMatch(this.inlineRules, this.pos)\\n    // Loop around the matches until we've reached the end of the text\\n    while (this.pos < this.sourceLength && nextMatch) {\\n      // Process the text preceding the run rule\\n      if (nextMatch.matchIndex > this.pos) {\\n        this.pushTextWidget(tree, this.source.substring(this.pos, nextMatch.matchIndex))\\n        this.pos = nextMatch.matchIndex\\n      }\\n      // Process the run rule\\n      tree.push.apply(tree, nextMatch.rule.parse())\\n      // Look for the next run rule\\n      nextMatch = this.findNextMatch(this.inlineRules, this.pos)\\n    }\\n    // Process the remaining text\\n    if (this.pos < this.sourceLength) {\\n      this.pushTextWidget(tree, this.source.substr(this.pos))\\n    }\\n    this.pos = this.sourceLength\\n    return tree\\n  }\\n\\n  WikiParser.prototype.parseInlineRunTerminated = function (terminatorRegExp, options) {\\n    options = options || {}\\n    var tree = []\\n    // Find the next occurrence of the terminator\\n    terminatorRegExp.lastIndex = this.pos\\n    var terminatorMatch = terminatorRegExp.exec(this.source)\\n    // Find the next occurrence of a inlinerule\\n    var inlineRuleMatch = this.findNextMatch(this.inlineRules, this.pos)\\n    // Loop around until we've reached the end of the text\\n    while (this.pos < this.sourceLength && (terminatorMatch || inlineRuleMatch)) {\\n      // Return if we've found the terminator, and it precedes any inline rule match\\n      if (terminatorMatch) {\\n        if (!inlineRuleMatch || inlineRuleMatch.matchIndex >= terminatorMatch.index) {\\n          if (terminatorMatch.index > this.pos) {\\n            this.pushTextWidget(tree, this.source.substring(this.pos, terminatorMatch.index))\\n          }\\n          this.pos = terminatorMatch.index\\n          if (options.eatTerminator) {\\n            this.pos += terminatorMatch[0].length\\n          }\\n          return tree\\n        }\\n      }\\n      // Process any inline rule, along with the text preceding it\\n      if (inlineRuleMatch) {\\n        // Preceding text\\n        if (inlineRuleMatch.matchIndex > this.pos) {\\n          this.pushTextWidget(tree, this.source.substring(this.pos, inlineRuleMatch.matchIndex))\\n          this.pos = inlineRuleMatch.matchIndex\\n        }\\n        // Process the inline rule\\n        tree.push.apply(tree, inlineRuleMatch.rule.parse())\\n        // Look for the next inline rule\\n        inlineRuleMatch = this.findNextMatch(this.inlineRules, this.pos)\\n        // Look for the next terminator match\\n        terminatorRegExp.lastIndex = this.pos\\n        terminatorMatch = terminatorRegExp.exec(this.source)\\n      }\\n    }\\n    // Process the remaining text\\n    if (this.pos < this.sourceLength) {\\n      this.pushTextWidget(tree, this.source.substr(this.pos))\\n    }\\n    this.pos = this.sourceLength\\n    return tree\\n  }\\n\\n  /*\\nPush a text widget onto an array, respecting the configTrimWhiteSpace setting\\n*/\\n  WikiParser.prototype.pushTextWidget = function (array, text) {\\n    if (this.configTrimWhiteSpace) {\\n      text = $tw.utils.trim(text)\\n    }\\n    if (text) {\\n      array.push({ type: 'text', text: text })\\n    }\\n  }\\n\\n  /*\\nParse zero or more class specifiers `.classname`\\n*/\\n  /*eslint no-useless-escape:\\\"off\\\"*/\\n  WikiParser.prototype.parseClasses = function () {\\n    var classRegExp = /\\\\.([^\\\\s\\\\.]+)/gm\\n    var classNames = []\\n    classRegExp.lastIndex = this.pos\\n    var match = classRegExp.exec(this.source)\\n    while (match && match.index === this.pos) {\\n      this.pos = match.index + match[0].length\\n      classNames.push(match[1])\\n      match = classRegExp.exec(this.source)\\n    }\\n    return classNames\\n  }\\n\\n  /*\\nAmend the rules used by this instance of the parser\\n  type: `only` keeps just the named rules, `except` keeps all but the named rules\\n  names: array of rule names\\n*/\\n  WikiParser.prototype.amendRules = function (type, names) {\\n    names = names || []\\n    // Define the filter function\\n    var target\\n    if (type === 'only') {\\n      target = true\\n    } else if (type === 'except') {\\n      target = false\\n    } else {\\n      return\\n    }\\n    // Define a function to process each of our rule arrays\\n    var processRuleArray = function (ruleArray) {\\n      for (var t = ruleArray.length - 1; t >= 0; t--) {\\n        if ((names.indexOf(ruleArray[t].rule.name) === -1) === target) {\\n          ruleArray.splice(t, 1)\\n        }\\n      }\\n    }\\n    // Process each rule array\\n    processRuleArray(this.pragmaRules)\\n    processRuleArray(this.blockRules)\\n    processRuleArray(this.inlineRules)\\n  }\\n\\n  exports['text/vnd.tiddlywiki'] = WikiParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/plugins/ipfs/ipfs-saver.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-saver.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-saver.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: saver\\n\\nIPFS Saver\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const IpfsController = require('$:/plugins/ipfs/ipfs-controller.js').IpfsController\\n\\n  const ensKeyword = 'ens'\\n  const ipfsKeyword = 'ipfs'\\n  const ipnsKeyword = 'ipns'\\n\\n  const name = 'ipfs-saver'\\n\\n  /*\\n   * Select the appropriate saver module and set it up\\n   */\\n  var IpfsSaver = function (wiki) {\\n    // Controller\\n    $tw.ipfs = new IpfsController()\\n    $tw.ipfs.init()\\n    // Log\\n    $tw.ipfs.getLogger().info('ipfs-saver is starting up...')\\n    // Log url policy\\n    const base = $tw.ipfs.getIpfsBaseUrl()\\n    if ($tw.utils.getIpfsUrlPolicy() === 'origin') {\\n      $tw.ipfs.getLogger().info(`Origin Policy: ${base}`)\\n    } else {\\n      $tw.ipfs.getLogger().info(`Gateway Policy: ${base}`)\\n    }\\n  }\\n\\n  IpfsSaver.prototype.save = async function (text, method, callback, options) {\\n    if ($tw.saverHandler.isDirty() === false) {\\n      return false\\n    }\\n    const publishToIpns = async function (added, ipnsCid, ipnsKey, ipnsName) {\\n      $tw.utils.alert(name, `Publishing IPNS name: ${ipnsName}`)\\n      try {\\n        await $tw.ipfs.publishIpnsName(added, ipnsKey, ipnsName)\\n        $tw.utils.alert(name, `Successfully Published IPNS name: ${ipnsName}`)\\n      } catch (error) {\\n        $tw.ipfs.getLogger().warn(error)\\n        $tw.utils.alert(name, error.message)\\n        if (ipnsCid !== null) {\\n          await $tw.ipfs.requestToPin(`/ipfs/${ipnsCid}`)\\n        }\\n        return false\\n      }\\n      return true\\n    }\\n    try {\\n      var account = null\\n      var ensCid = null\\n      var ensIpnsKey = null\\n      var ensIpnsName = null\\n      var ensDomain = null\\n      var ipnsCid = null\\n      var ipnsKey = null\\n      var ipnsName = null\\n      var options = options || {}\\n      var resolvedUrl = null\\n      var web3 = null\\n      const base = $tw.ipfs.getIpfsBaseUrl()\\n      const wiki = $tw.ipfs.normalizeUrl($tw.ipfs.getDocumentUrl(), base)\\n      const protocol = base.protocol\\n      const host = base.host\\n      var credential = ''\\n      if (wiki.username && wiki.password) {\\n        credential = `${wiki.username}:${wiki.password}@`\\n      }\\n      var pathname = wiki.pathname\\n      const search = wiki.search\\n      const hash = wiki.hash\\n      try {\\n        var { cid, ipnsKey, resolvedUrl } = await $tw.ipfs.resolveUrl(false, true, wiki)\\n      } catch (error) {\\n        $tw.ipfs.getLogger().error(error)\\n        callback(error)\\n        return true\\n      }\\n      if (cid !== null && ipnsKey == null) {\\n        const resolvedCid = await $tw.ipfs.resolveIpfsContainer(resolvedUrl)\\n        if (resolvedCid !== null) {\\n          await $tw.ipfs.requestToUnpin(`/ipfs/${resolvedCid}`)\\n        }\\n      }\\n      // IPNS\\n      if (ipnsKey !== null || $tw.utils.getIpfsProtocol() === ipnsKeyword) {\\n        // Resolve current IPNS\\n        if (ipnsKey !== null) {\\n          try {\\n            var { cid: ipnsCid, ipnsName, resolvedUrl } = await $tw.ipfs.resolveUrl(true, false, wiki)\\n          } catch (error) {\\n            $tw.ipfs.getLogger().error(error)\\n            $tw.utils.alert(name, error.message)\\n          }\\n        } else {\\n          // Default IPNS\\n          ipnsKey = $tw.utils.getIpfsIpnsKey()\\n          ipnsName = $tw.utils.getIpfsIpnsName()\\n          if (ipnsKey == null && ipnsName == null) {\\n            callback(new Error('Unknown default IPNS identifiers...'))\\n            return true\\n          }\\n          $tw.ipfs.getLogger().info('Processing default IPNS identifiers...')\\n          var identifier = ipnsKey\\n          if (identifier == null) {\\n            identifier = ipnsName\\n          }\\n          try {\\n            var { cid: ipnsCid, ipnsKey, ipnsName, resolvedUrl } = await $tw.ipfs.resolveUrl(true, false, `/${ipnsKeyword}/${identifier}`)\\n          } catch (error) {\\n            $tw.ipfs.getLogger().error(error)\\n            $tw.utils.alert(name, error.message)\\n          }\\n        }\\n        if (ipnsCid !== null) {\\n          const resolvedCid = await $tw.ipfs.resolveIpfsContainer(resolvedUrl)\\n          if (resolvedCid !== null) {\\n            await $tw.ipfs.requestToUnpin(`/ipfs/${resolvedCid}`)\\n          }\\n        }\\n      }\\n      // ENS\\n      if ($tw.utils.getIpfsProtocol() === ensKeyword) {\\n        ensDomain = $tw.utils.getIpfsEnsDomain()\\n        if (ensDomain == null) {\\n          callback(new Error('Undefined ENS domain...'))\\n          return true\\n        }\\n        var { account, web3 } = await $tw.ipfs.getEnabledWeb3Provider()\\n        const isOwner = await $tw.ipfs.isOwner(ensDomain, web3, account)\\n        if (isOwner === false) {\\n          const err = new Error('Unauthorized Account...')\\n          err.name = 'OwnerError'\\n          throw err\\n        }\\n        var { cid: ensCid, ipnsKey: ensIpnsKey, ipnsName: ensIpnsName, resolvedUrl } = await $tw.ipfs.resolveUrl(false, true, ensDomain, null, web3)\\n        if (ensCid !== null) {\\n          const resolvedCid = await $tw.ipfs.resolveIpfsContainer(resolvedUrl)\\n          if (resolvedCid !== null) {\\n            await $tw.ipfs.requestToUnpin(`/ipfs/${resolvedCid}`)\\n          }\\n        }\\n      }\\n      // Upload\\n      $tw.ipfs.getLogger().info(`Uploading wiki: ${text.length} bytes`)\\n      const { cid: added } = await $tw.ipfs.addToIpfs($tw.ipfs.StringToUint8Array(text))\\n      await $tw.ipfs.requestToPin(`/${ipfsKeyword}/${added}`)\\n      // Publish to IPNS\\n      pathname = `/${ipfsKeyword}/${added}/`\\n      if (ipnsKey !== null && ipnsName !== null) {\\n        if (await publishToIpns(added, ipnsCid, ipnsKey, ipnsName)) {\\n          pathname = `/${ipnsKeyword}/${ipnsKey}/`\\n        }\\n      }\\n      if (ensIpnsKey !== null && ensIpnsName !== null) {\\n        if (await publishToIpns(added, ensCid, ensIpnsKey, ensIpnsName)) {\\n          pathname = `/${ipnsKeyword}/${ensIpnsKey}/`\\n        }\\n      }\\n      // Publish to ENS\\n      if ($tw.utils.getIpfsProtocol() === ensKeyword && ensIpnsKey == null) {\\n        try {\\n          $tw.utils.alert(name, `Publishing to ENS: ${ensDomain}`)\\n          await $tw.ipfs.setContentHash(ensDomain, `/${ipfsKeyword}/${added}`, web3, account)\\n          $tw.utils.alert(name, `Successfully published to ENS: ${ensDomain}`)\\n        } catch (error) {\\n          $tw.ipfs.getLogger().warn(error)\\n          $tw.utils.alert(name, error.message)\\n          if (ensCid !== null) {\\n            await $tw.ipfs.requestToPin(`/${ipfsKeyword}/${ensCid}`)\\n          }\\n        }\\n      }\\n      // Unpin\\n      if ($tw.utils.getIpfsUnpin()) {\\n        for (var i in $tw.ipfs.unpin) {\\n          try {\\n            const unpin = $tw.ipfs.unpin[i]\\n            await $tw.ipfs.unpinFromIpfs(unpin)\\n          } catch (error) {\\n            $tw.ipfs.getLogger().warn(error)\\n            $tw.utils.alert(name, error.message)\\n          }\\n        }\\n      }\\n      $tw.ipfs.unpin = []\\n      // Pin\\n      if ($tw.utils.getIpfsPin()) {\\n        for (var i in $tw.ipfs.pin) {\\n          try {\\n            const pin = $tw.ipfs.pin[i]\\n            await $tw.ipfs.pinToIpfs(pin)\\n          } catch (error) {\\n            $tw.ipfs.getLogger().warn(error)\\n            $tw.utils.alert(name, error.message)\\n          }\\n        }\\n      }\\n      $tw.ipfs.pin = []\\n      // Callback\\n      callback(null)\\n      // Next\\n      const next = $tw.ipfs.getUrl(`${protocol}//${credential}${host}${pathname}${search}${hash}`)\\n      if (next.protocol !== wiki.protocol || next.host !== wiki.host || next.pathname !== wiki.pathname) {\\n        $tw.ipfs.getLogger().info(`Loading: '${next.href}'`)\\n        window.location.assign(next.href)\\n      }\\n    } catch (error) {\\n      if (error.name !== 'OwnerError' && error.name !== 'RejectedUserRequest' && error.name !== 'UnauthorizedUserAccount') {\\n        $tw.ipfs.getLogger().error(error)\\n      }\\n      callback(error)\\n      return true\\n    }\\n    callback(null)\\n    return true\\n  }\\n\\n  /*\\n   * Information about this saver\\n   */\\n  IpfsSaver.prototype.info = {\\n    name: 'Ipfs',\\n    priority: 3100,\\n    capabilities: ['save'],\\n  }\\n\\n  /*\\n   * Static method that returns true if this saver is capable of working\\n   */\\n  exports.canSave = function (wiki) {\\n    return true\\n  }\\n\\n  /*\\n   * Create an instance of this saver\\n   */\\n  exports.create = function (wiki) {\\n    return new IpfsSaver(wiki)\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"saver\"\n        },\n        \"$:/core/modules/saver-handler.js\": {\n            \"title\": \"$:/core/modules/saver-handler.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/saver-handler.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: global\\n\\nThe saver handler tracks changes to the store and handles saving the entire wiki via saver modules.\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /**\\n   * Instantiate the saver handler with the following options:\\n   * wiki: wiki to be synced\\n   * dirtyTracking: true if dirty tracking should be performed\\n   */\\n  function SaverHandler (options) {\\n    var self = this\\n    this.wiki = options.wiki\\n    this.dirtyTracking = options.dirtyTracking\\n    this.preloadDirty = options.preloadDirty || []\\n    this.pendingAutoSave = false\\n    // Make a logger\\n    this.logger = new $tw.utils.Logger('saver-handler')\\n    // Initialise our savers\\n    if ($tw.browser) {\\n      this.initSavers()\\n    }\\n    // Only do dirty tracking if required\\n    if ($tw.browser && this.dirtyTracking) {\\n      // Compile the dirty tiddler filter\\n      this.filterFn = this.wiki.compileFilter(this.wiki.getTiddlerText(this.titleSyncFilter))\\n      // Count of changes that have not yet been saved\\n      var filteredChanges = self.filterFn.call(self.wiki, function (iterator) {\\n        $tw.utils.each(self.preloadDirty, function (title) {\\n          var tiddler = self.wiki.getTiddler(title)\\n          iterator(tiddler, title)\\n        })\\n      })\\n      this.numChanges = filteredChanges.length\\n      // Listen out for changes to tiddlers\\n      this.wiki.addEventListener('change', async function (changes) {\\n        // Filter the changes so that we only count changes to tiddlers that we care about\\n        var filteredChanges = self.filterFn.call(self.wiki, function (iterator) {\\n          $tw.utils.each(changes, function (change, title) {\\n            var tiddler = self.wiki.getTiddler(title)\\n            iterator(tiddler, title)\\n          })\\n        })\\n        // Adjust the number of changes\\n        self.numChanges += filteredChanges.length\\n        self.updateDirtyStatus()\\n        // Do any autosave if one is pending and there's no more change events\\n        if (self.pendingAutoSave && self.wiki.getSizeOfTiddlerEventQueue() === 0) {\\n          // Check if we're dirty\\n          if (self.numChanges > 0) {\\n            await self.saveWiki({\\n              method: 'autosave',\\n              downloadType: 'text/plain',\\n            })\\n          }\\n          self.pendingAutoSave = false\\n        }\\n      })\\n      // Listen for the autosave event\\n      $tw.rootWidget.addEventListener('tm-auto-save-wiki', async function (event) {\\n        // Do the autosave unless there are outstanding tiddler change events\\n        if (self.wiki.getSizeOfTiddlerEventQueue() === 0) {\\n          // Check if we're dirty\\n          if (self.numChanges > 0) {\\n            await self.saveWiki({\\n              method: 'autosave',\\n              downloadType: 'text/plain',\\n            })\\n          }\\n        } else {\\n          // Otherwise put ourselves in the \\\"pending autosave\\\" state and wait for the change event before we do the autosave\\n          self.pendingAutoSave = true\\n        }\\n      })\\n      // Set up our beforeunload handler\\n      $tw.addUnloadTask(function (event) {\\n        var confirmationMessage\\n        if (self.isDirty()) {\\n          confirmationMessage = $tw.language.getString('UnsavedChangesWarning')\\n          event.returnValue = confirmationMessage // Gecko\\n        }\\n        return confirmationMessage\\n      })\\n    }\\n    // Install the save action handlers\\n    if ($tw.browser) {\\n      $tw.rootWidget.addEventListener('tm-save-wiki', async function (event) {\\n        await self.saveWiki({\\n          template: event.param,\\n          downloadType: 'text/plain',\\n          variables: event.paramObject,\\n        })\\n      })\\n      $tw.rootWidget.addEventListener('tm-download-file', async function (event) {\\n        await self.saveWiki({\\n          method: 'download',\\n          template: event.param,\\n          downloadType: 'text/plain',\\n          variables: event.paramObject,\\n        })\\n      })\\n    }\\n  }\\n\\n  SaverHandler.prototype.titleSyncFilter = '$:/config/SaverFilter'\\n  SaverHandler.prototype.titleAutoSave = '$:/config/AutoSave'\\n  SaverHandler.prototype.titleSavedNotification = '$:/language/Notifications/Save/Done'\\n\\n  /**\\n   * Select the appropriate saver modules and set them up\\n   */\\n  SaverHandler.prototype.initSavers = function (moduleType) {\\n    moduleType = moduleType || 'saver'\\n    // Instantiate the available savers\\n    this.savers = []\\n    var self = this\\n    $tw.modules.forEachModuleOfType(moduleType, function (title, module) {\\n      if (module.canSave(self)) {\\n        self.savers.push({ title: title, module: module.create(self.wiki) })\\n      }\\n    })\\n    // Sort savers\\n    this.sortSavers()\\n  }\\n\\n  /*\\n   * Sort the savers into priority order\\n   */\\n  SaverHandler.prototype.sortSavers = function () {\\n    this.savers.sort(function (a, b) {\\n      if (a.module.info.priority < b.module.info.priority) {\\n        return -1\\n      } else {\\n        if (a.module.info.priority > b.module.info.priority) {\\n          return +1\\n        } else {\\n          return 0\\n        }\\n      }\\n    })\\n  }\\n\\n  /**\\n   * Save the wiki contents. Options are:\\n   * method: \\\"save\\\", \\\"autosave\\\" or \\\"download\\\"\\n   * template: the tiddler containing the template to save\\n   * downloadType: the content type for the saved file\\n   */\\n  SaverHandler.prototype.saveWiki = async function (options) {\\n    options = options || {}\\n    var self = this\\n    var method = options.method || 'save'\\n    // Ignore autosave if disabled\\n    if (method === 'autosave' && this.wiki.getTiddlerText(this.titleAutoSave, 'yes') !== 'yes') {\\n      return false\\n    }\\n    if ($tw.browser && typeof $tw.crypto.hasEncryptionPublicKey === 'function' && $tw.crypto.hasEncryptionPublicKey() && typeof globalThis.sigUtil === 'undefined') {\\n      await $tw.ipfs.loadEthSigUtilLibrary()\\n    }\\n    var variables = options.variables || {}\\n    var template = options.template || '$:/core/save/all'\\n    var downloadType = options.downloadType || 'text/plain'\\n    var text = await this.wiki.renderTiddlerAndSign(downloadType, template, options)\\n    var callback = function (err) {\\n      if (err) {\\n        alert($tw.language.getString('Error/WhileSaving') + ':\\\\n\\\\n' + err)\\n      } else {\\n        // Clear the task queue if we're saving (rather than downloading)\\n        if (method !== 'download') {\\n          self.numChanges = 0\\n          self.updateDirtyStatus()\\n        }\\n        $tw.notifier.display(self.titleSavedNotification)\\n        if (options.callback) {\\n          options.callback()\\n        }\\n      }\\n    }\\n    // Process preferred if any\\n    var ignorePreferred = null\\n    var preferredSaver = $tw.wiki.getTiddler('$:/config/PreferredSaver')\\n    if (preferredSaver !== undefined && preferredSaver !== null) {\\n      var title = preferredSaver.fields.text\\n      title = title !== undefined && title !== null && title.trim() !== '' ? title.trim() : null\\n      if (title !== null) {\\n        var saver = this.getSaver(title)\\n        if (saver !== null && saver.module !== undefined) {\\n          if (await this.save(saver.module, method, variables, text, callback)) {\\n            return true\\n          }\\n        }\\n        ignorePreferred = title\\n      }\\n    }\\n\\n    // Call the highest priority saver that supports this method\\n    for (var t = this.savers.length - 1; t >= 0; t--) {\\n      // Ignore failed preferred if any\\n      if (this.savers[t].title === ignorePreferred) {\\n        continue\\n      }\\n      // Process\\n      if (await this.save(this.savers[t].module, method, variables, text, callback)) {\\n        return true\\n      }\\n    }\\n    return false\\n  }\\n\\n  SaverHandler.prototype.getSaver = function (title) {\\n    // Locate saver\\n    var saver = null\\n    for (var i = 0; i < this.savers.length; i++) {\\n      var current = this.savers[i]\\n      if (current.title === title) {\\n        saver = current\\n        break\\n      }\\n    }\\n    return saver\\n  }\\n\\n  SaverHandler.prototype.save = async function (saver, method, variables, text, callback) {\\n    if (saver.info.capabilities.indexOf(method) !== -1) {\\n      var saved = await saver.save(text, method, callback, {\\n        variables: { filename: variables.filename },\\n      })\\n      if (saved) {\\n        this.logger.log('Saved wiki with method', method, 'through saver', saver.info.name)\\n        return true\\n      }\\n    }\\n    return false\\n  }\\n\\n  /**\\n   * Checks whether the wiki is dirty (ie the window shouldn't be closed)\\n   */\\n  SaverHandler.prototype.isDirty = function () {\\n    return this.numChanges > 0\\n  }\\n\\n  /**\\n   * Update the document body with the class \\\"tc-dirty\\\" if the wiki has unsaved/unsynced changes\\n   */\\n  SaverHandler.prototype.updateDirtyStatus = function () {\\n    var self = this\\n    if ($tw.browser) {\\n      $tw.utils.toggleClass(document.body, 'tc-dirty', this.isDirty())\\n      $tw.utils.each($tw.windows, function (win) {\\n        $tw.utils.toggleClass(win.document.body, 'tc-dirty', self.isDirty())\\n      })\\n    }\\n  }\\n\\n  exports.SaverHandler = SaverHandler\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"global\"\n        },\n        \"$:/core/modules/startup/compress.js\": {\n            \"title\": \"$:/core/modules/startup/compress.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/startup/compress.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: startup\\n\\nCompression handling\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  // Export name and synchronous status\\n  exports.name = 'compress'\\n  exports.platforms = ['browser']\\n  exports.after = ['startup']\\n  exports.synchronous = true\\n\\n  exports.startup = function () {\\n    // Ensure that $:/isCompressed is maintained properly\\n    $tw.wiki.addEventListener('change', function (changes) {\\n      if ($tw.utils.hop(changes, '$:/isCompressed')) {\\n        const tiddler = $tw.wiki.getTiddler('$:/isCompressed')\\n        $tw.compress.setCompressState(tiddler.fields.text === 'yes')\\n      }\\n    })\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/plugins/ipfs/ipfs-password.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-password.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-password.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: startup\\n\\nCompression handling\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const name = 'ipfs-password'\\n\\n  // Export name and synchronous status\\n  exports.name = 'ipfs-password'\\n  exports.platforms = ['browser']\\n  exports.after = ['startup']\\n  exports.synchronous = true\\n\\n  exports.startup = function () {\\n    const setPassword = function () {\\n      $tw.passwordPrompt.createPrompt({\\n        serviceName: $tw.language.getString('Encryption/PromptSetPassword'),\\n        noUserName: true,\\n        submitText: $tw.language.getString('Encryption/SetPassword'),\\n        canCancel: true,\\n        repeatPassword: true,\\n        callback: function (data) {\\n          if (data) {\\n            $tw.crypto.setPassword(data.password)\\n          } else {\\n            $tw.crypto.setPassword(null)\\n          }\\n          return true // Get rid of the password prompt\\n        },\\n      })\\n    }\\n    // Ensure that $:/isEncrypted is maintained properly\\n    $tw.wiki.addEventListener('change', function (changes) {\\n      if ($tw.utils.hop(changes, '$:/config/encryption')) {\\n        const encrypted = $tw.wiki.getTiddler('$:/isEncrypted')\\n        if (encrypted.fields.text === 'yes') {\\n          const hasPassword = $tw.crypto.hasPassword()\\n          const encryption = $tw.wiki.getTiddler('$:/config/encryption')\\n          if (!hasPassword && encryption.fields.text === 'standford') {\\n            setPassword()\\n          } else if (hasPassword) {\\n            $tw.rootWidget.dispatchEvent({ type: 'tm-clear-password' })\\n          }\\n        }\\n      }\\n    })\\n    $tw.rootWidget.addEventListener('tm-set-password', async function (event) {\\n      const encryption = $tw.wiki.getTiddler('$:/config/encryption')\\n      if (encryption.fields.text === 'standford') {\\n        if ($tw.crypto.hasPassword() === false) {\\n          setPassword()\\n        }\\n      } else {\\n        try {\\n          const encryptionKey = await $tw.ipfs.getPublicEncryptionKey()\\n          $tw.crypto.setEncryptionKey(encryptionKey)\\n        } catch (error) {\\n          if (error.name !== 'RejectedUserRequest') {\\n            $tw.ipfs.getLogger().error(error)\\n          }\\n          $tw.utils.alert(name, error.message)\\n          $tw.crypto.setEncryptionKey()\\n        }\\n      }\\n    })\\n    $tw.rootWidget.addEventListener('tm-clear-password', async function (event) {\\n      if ($tw.browser) {\\n        const hasPassword = $tw.crypto.hasPassword()\\n        const hasEncryptionPublicKey = $tw.crypto.hasEncryptionPublicKey()\\n        if (hasPassword) {\\n          if (!confirm($tw.language.getString('Encryption/ConfirmClearPassword'))) {\\n            return\\n          }\\n          $tw.crypto.setPassword()\\n        } else if (hasEncryptionPublicKey) {\\n          if (!confirm($tw.language.getString('Encryption/ConfirmClearEncryptionPublicKey'))) {\\n            return\\n          }\\n          $tw.crypto.setEncryptionKey()\\n        }\\n      }\\n    })\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/plugins/ipfs/ipfs-startup.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-startup.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-startup.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: startup\\n\\nStartup initialisation\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  exports.platforms = ['browser']\\n  exports.before = ['startup']\\n  exports.synchronous = true\\n\\n  exports.startup = function () {\\n    var getLogger = function () {\\n      if (window.log !== undefined && window.log !== null) {\\n        return window.log.getLogger('ipfs')\\n      }\\n      return console\\n    }\\n    // Logger\\n    if (window.log !== undefined && window.log !== null) {\\n      const log = window.log.getLogger('ipfs')\\n      if ($tw.utils.getIpfsVerbose()) {\\n        log.setLevel('info', false)\\n      } else {\\n        log.setLevel('warn', false)\\n      }\\n      log.info('loglevel is set up...')\\n    }\\n    // Missing Media Types\\n    $tw.utils.registerFileType('application/gzip', 'base64', '.gz')\\n    $tw.utils.registerFileType('application/x-tiddler-dictionary', 'utf8', '.dict')\\n    $tw.utils.registerFileType('application/zlib', 'base64', '.zlib')\\n    $tw.utils.registerFileType('audio/mpeg', 'base64', '.mp2')\\n    $tw.utils.registerFileType('image/jpg', 'base64', ['.jpg', '.jpeg'], {\\n      flags: ['image'],\\n    })\\n    $tw.utils.registerFileType('text/csv', 'utf8', '.csv')\\n    $tw.utils.registerFileType('video/quicktime', 'base64', ['.mov', '.qt'])\\n    $tw.utils.registerFileType('text/x-tiddlywiki', 'utf8', '.tid', {\\n      deserializerType: 'text/html',\\n    })\\n    // Log\\n    getLogger().info('ipfs-startup is starting up...')\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/plugins/ipfs/utils/compress.js\": {\n            \"title\": \"$:/plugins/ipfs/utils/compress.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/utils/compress.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: utils\\n\\nUtility functions related to compression.\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  /**\\n   * Look for a compression store area in the text of a TiddlyWiki file\\n   */\\n  exports.extractCompressedStoreArea = function (text) {\\n    const compressedStoreAreaStartMarker = '<pre id=\\\"compressedStoreArea\\\" type=\\\"text/plain\\\" style=\\\"display:none;\\\">'\\n    const compressedStoreAreaStart = text.indexOf(compressedStoreAreaStartMarker)\\n    if (compressedStoreAreaStart !== -1) {\\n      const compressedStoreAreaEnd = text.indexOf('</pre>', compressedStoreAreaStart)\\n      if (compressedStoreAreaEnd !== -1) {\\n        return $tw.utils.htmlDecode(text.substring(compressedStoreAreaStart + compressedStoreAreaStartMarker.length, compressedStoreAreaEnd - 1))\\n      }\\n    }\\n    return null\\n  }\\n\\n  exports.inflateCompressedStoreArea = function (compressedStoreArea, callback) {\\n    if (compressedStoreArea) {\\n      if (compressedStoreArea.match(/{\\\"compressed\\\":/)) {\\n        const json = JSON.parse(compressedStoreArea)\\n        if (json) {\\n          if (json.compressed.match(/{\\\"iv\\\":/)) {\\n            $tw.utils.decryptStoreAreaInteractive(json.compressed, function (decrypted) {\\n              $tw.utils.inflateTiddlers(decrypted, function (tiddlers) {\\n                if (tiddlers) {\\n                  callback(tiddlers)\\n                }\\n              })\\n            })\\n            return true\\n          } else if (json.compressed.match(/{\\\"version\\\":/)) {\\n            $tw.utils.decryptFromMetamaskPrompt(json.compressed, json.keccak256, json.signature, function (decrypted) {\\n              $tw.utils.inflateTiddlers(decrypted, function (tiddlers) {\\n                if (tiddlers) {\\n                  callback(tiddlers)\\n                }\\n              })\\n            })\\n            return true\\n          }\\n        }\\n      }\\n    }\\n    return false\\n  }\\n\\n  exports.inflate = function (compressed, password, privateKey) {\\n    if (compressed) {\\n      if (compressed.match(/{\\\"compressed\\\":/)) {\\n        var data = null\\n        const json = JSON.parse(compressed)\\n        if (json && json.compressed) {\\n          if (json.compressed.match(/{\\\"iv\\\":/) || json.compressed.match(/{\\\"version\\\":/)) {\\n            const b64 = $tw.crypto.decrypt(json.compressed, password, privateKey)\\n            data = $tw.compress.inflate(b64)\\n          } else {\\n            data = $tw.compress.inflate(json.compressed)\\n          }\\n        }\\n        if (data) {\\n          return $tw.utils.loadTiddlers(data)\\n        }\\n      }\\n    }\\n    return null\\n  }\\n\\n  exports.inflateTiddlers = function (b64, callback) {\\n    if (b64) {\\n      const data = $tw.compress.inflate(b64)\\n      if (data) {\\n        const tiddlers = $tw.utils.loadTiddlers(data)\\n        if (tiddlers) {\\n          callback(tiddlers)\\n        }\\n      }\\n    }\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"utils\"\n        },\n        \"$:/plugins/ipfs/utils/crypto.js\": {\n            \"title\": \"$:/plugins/ipfs/utils/crypto.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/utils/crypto.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: utils\\n\\nUtility functions related to crypto.\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  /**\\n   * Look for an encrypted store area in the text of a TiddlyWiki file\\n   */\\n  exports.extractEncryptedStoreArea = function (text) {\\n    const encryptedStoreAreaStartMarker = '<pre id=\\\"encryptedStoreArea\\\" type=\\\"text/plain\\\" style=\\\"display:none;\\\">'\\n    const encryptedStoreAreaStart = text.indexOf(encryptedStoreAreaStartMarker)\\n    if (encryptedStoreAreaStart !== -1) {\\n      const encryptedStoreAreaEnd = text.indexOf('</pre>', encryptedStoreAreaStart)\\n      if (encryptedStoreAreaEnd !== -1) {\\n        return $tw.utils.htmlDecode(text.substring(encryptedStoreAreaStart + encryptedStoreAreaStartMarker.length, encryptedStoreAreaEnd - 1))\\n      }\\n    }\\n    return null\\n  }\\n\\n  exports.decrypt = function (encrypted, callback) {\\n    if (encrypted) {\\n      if (encrypted.match(/{\\\"iv\\\":/)) {\\n        $tw.utils.decryptStoreAreaInteractive(encrypted, function (decrypted) {\\n          const tiddlers = $tw.utils.loadTiddlers(decrypted)\\n          if (tiddlers) {\\n            callback(tiddlers)\\n          }\\n        })\\n        return true\\n      } else if (encrypted.match(/{\\\"encrypted\\\":/)) {\\n        const json = JSON.parse(encrypted)\\n        if (json) {\\n          $tw.utils.decryptFromMetamaskPrompt(json.encrypted, json.keccak256, json.signature, function (decrypted) {\\n            const tiddlers = $tw.utils.loadTiddlers(decrypted)\\n            if (tiddlers) {\\n              callback(tiddlers)\\n            }\\n          })\\n          return true\\n        }\\n      }\\n    }\\n    return false\\n  }\\n\\n  /**\\n   * Attempt to extract the tiddlers from an encrypted store area using the current password.\\n   * If the password is not provided then the password in the password store will be used\\n   */\\n  exports.decryptStoreArea = function (encryptedStoreArea, password, privateKey) {\\n    const json = JSON.parse(encryptedStoreArea)\\n    return $tw.utils.loadTiddlers($tw.crypto.decrypt(json.encrypted, password, privateKey))\\n  }\\n\\n  exports.decryptFromMetamaskPrompt = function (encryptedStoreArea, keccak256, signature, callback) {\\n    // Try to decrypt with the current password\\n    const decrypted = $tw.utils.decryptStoreArea(encryptedStoreArea)\\n    if (decrypted) {\\n      callback(decrypted)\\n    } else {\\n      $tw.boot.metamaskPrompt(encryptedStoreArea, keccak256, signature, function (decrypted) {\\n        if (decrypted) {\\n          callback(decrypted)\\n        }\\n      })\\n    }\\n  }\\n\\n  /**\\n   * Attempt to extract the tiddlers from an encrypted store area using the current password.\\n   * If that fails, the user is prompted for a password.\\n   *\\n   * encryptedStoreArea: text of the TiddlyWiki encrypted store area\\n   * callback: function(tiddlers) called with the array of decrypted tiddlers\\n   *\\n   * The following configuration settings are supported:\\n   *\\n   * $tw.config.usePasswordVault: causes any password entered by the user to also be put into the system password vault\\n   */\\n  exports.decryptStoreAreaInteractive = function (encryptedStoreArea, callback, options) {\\n    // Try to decrypt with the current password\\n    const decrypted = $tw.utils.decryptStoreArea(encryptedStoreArea)\\n    if (decrypted) {\\n      callback(decrypted)\\n    } else {\\n      // Prompt for a new password and keep trying\\n      $tw.passwordPrompt.createPrompt({\\n        serviceName: 'Enter a password to decrypt the imported TiddlyWiki',\\n        noUserName: true,\\n        canCancel: true,\\n        submitText: 'Decrypt',\\n        callback: function (data) {\\n          // Exit if the user cancelled\\n          if (!data) {\\n            return false\\n          }\\n          // Attempt to decrypt the tiddlers\\n          const text = $tw.crypto.decrypt(encryptedStoreArea, data.password)\\n          if (text) {\\n            if ($tw.config.usePasswordVault) {\\n              $tw.crypto.setPassword(data.password)\\n            }\\n            callback(text)\\n            // Exit and remove the password prompt\\n            return true\\n          } else {\\n            // We didn't decrypt everything, so continue to prompt for password\\n            return false\\n          }\\n        },\\n      })\\n    }\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"utils\"\n        },\n        \"$:/core/modules/utils/dom/dragndrop.js\": {\n            \"title\": \"$:/core/modules/utils/dom/dragndrop.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/utils/dom/dragndrop.js\\ntype: application/javascript\\nmodule-type: utils\\n\\nBrowser data transfer utilities, used with the clipboard and drag and drop\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  const IpfsImport = require('$:/plugins/ipfs/ipfs-import.js').IpfsImport\\n\\n  exports.handleImportURL = async function (title, url) {\\n    const dummy = new $tw.Tiddler({\\n      title: title,\\n    })\\n    try {\\n      const ipfsImport = new IpfsImport()\\n      const data = await ipfsImport.import(null, url, dummy)\\n      if (data.merged.size > 0 || data.deleted.size > 0) {\\n        return data\\n      }\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n    }\\n    return null\\n  }\\n\\n  /**\\n   * Options:\\n   *\\n   * domNode: dom node to make draggable\\n   * dragImageType: \\\"pill\\\" or \\\"dom\\\"\\n   * dragTiddlerFn: optional function to retrieve the title of tiddler to drag\\n   * dragFilterFn: optional function to retreive the filter defining a list of tiddlers to drag\\n   * widget: widget to use as the contect for the filter\\n   */\\n  exports.makeDraggable = function (options) {\\n    var dragImageType = options.dragImageType || 'dom'\\n    var dragImage\\n    var domNode = options.domNode\\n    // Make the dom node draggable (not necessary for anchor tags)\\n    if ((domNode.tagName || '').toLowerCase() !== 'a') {\\n      domNode.setAttribute('draggable', 'true')\\n    }\\n    // Add event handlers\\n    $tw.utils.addEventListeners(domNode, [\\n      {\\n        name: 'dragstart',\\n        handlerFunction: function (event) {\\n          if (event.dataTransfer === undefined) {\\n            return false\\n          }\\n          // Collect the tiddlers being dragged\\n          var dragTiddler = options.dragTiddlerFn && options.dragTiddlerFn()\\n          var dragFilter = options.dragFilterFn && options.dragFilterFn()\\n          var titles = dragTiddler ? [dragTiddler] : []\\n          var startActions = options.startActions\\n          if (dragFilter) {\\n            titles.push.apply(titles, options.widget.wiki.filterTiddlers(dragFilter, options.widget))\\n          }\\n          var titleString = $tw.utils.stringifyList(titles)\\n          // Check that we've something to drag\\n          if (titles.length > 0 && event.target === domNode) {\\n            // Mark the drag in progress\\n            $tw.dragInProgress = domNode\\n            // Set the dragging class on the element being dragged\\n            $tw.utils.addClass(event.target, 'tc-dragging')\\n            // Invoke drag-start actions if given\\n            if (startActions !== undefined) {\\n              options.widget.invokeActionString(startActions, options.widget, event, { actionTiddler: titleString })\\n            }\\n            // Create the drag image elements\\n            dragImage = options.widget.document.createElement('div')\\n            dragImage.className = 'tc-tiddler-dragger'\\n            var inner = options.widget.document.createElement('div')\\n            inner.className = 'tc-tiddler-dragger-inner'\\n            inner.appendChild(options.widget.document.createTextNode(titles.length === 1 ? titles[0] : titles.length + ' tiddlers'))\\n            dragImage.appendChild(inner)\\n            options.widget.document.body.appendChild(dragImage)\\n            // Set the data transfer properties\\n            var dataTransfer = event.dataTransfer\\n            // Set up the image\\n            dataTransfer.effectAllowed = 'all'\\n            if (dataTransfer.setDragImage) {\\n              if (dragImageType === 'pill') {\\n                dataTransfer.setDragImage(dragImage.firstChild, -16, -16)\\n              } else {\\n                var r = domNode.getBoundingClientRect()\\n                dataTransfer.setDragImage(domNode, event.clientX - r.left, event.clientY - r.top)\\n              }\\n            }\\n            // Set up the data transfer\\n            if (dataTransfer.clearData) {\\n              dataTransfer.clearData()\\n            }\\n            var jsonData = []\\n            if (titles.length > 1) {\\n              titles.forEach(function (title) {\\n                jsonData.push(options.widget.wiki.getTiddlerAsJson(title))\\n              })\\n              jsonData = '[' + jsonData.join(',') + ']'\\n            } else {\\n              jsonData = options.widget.wiki.getTiddlerAsJson(titles[0])\\n            }\\n            // IE doesn't like these content types\\n            if (!$tw.browser.isIE) {\\n              dataTransfer.setData('text/vnd.tiddler', jsonData)\\n              dataTransfer.setData('text/plain', titleString)\\n              dataTransfer.setData('text/x-moz-url', 'data:text/vnd.tiddler,' + encodeURIComponent(jsonData))\\n            }\\n            dataTransfer.setData('URL', 'data:text/vnd.tiddler,' + encodeURIComponent(jsonData))\\n            dataTransfer.setData('Text', titleString)\\n            event.stopPropagation()\\n          }\\n          return false\\n        },\\n      },\\n      {\\n        name: 'dragend',\\n        handlerFunction: function (event) {\\n          if (event.target === domNode) {\\n            // Collect the tiddlers being dragged\\n            var dragTiddler = options.dragTiddlerFn && options.dragTiddlerFn()\\n            var dragFilter = options.dragFilterFn && options.dragFilterFn()\\n            var titles = dragTiddler ? [dragTiddler] : []\\n            var endActions = options.endActions\\n            if (dragFilter) {\\n              titles.push.apply(titles, options.widget.wiki.filterTiddlers(dragFilter, options.widget))\\n            }\\n            var titleString = $tw.utils.stringifyList(titles)\\n            $tw.dragInProgress = null\\n            // Invoke drag-end actions if given\\n            if (endActions !== undefined) {\\n              options.widget.invokeActionString(endActions, options.widget, event, { actionTiddler: titleString })\\n            }\\n            // Remove the dragging class on the element being dragged\\n            $tw.utils.removeClass(event.target, 'tc-dragging')\\n            // Delete the drag image element\\n            if (dragImage) {\\n              dragImage.parentNode.removeChild(dragImage)\\n              dragImage = null\\n            }\\n          }\\n          return false\\n        },\\n      },\\n    ])\\n  }\\n\\n  exports.importDataTransfer = async function (dataTransfer, fallbackTitle, callback) {\\n    // Try each provided data type in turn\\n    if ($tw.log.IMPORT) {\\n      console.log('Available data types:')\\n      for (var type = 0; type < dataTransfer.types.length; type++) {\\n        console.log('type', dataTransfer.types[type], dataTransfer.getData(dataTransfer.types[type]))\\n      }\\n    }\\n    for (var t = 0; t < importDataTypes.length; t++) {\\n      if (!$tw.browser.isIE || importDataTypes[t].IECompatible) {\\n        // Get the data\\n        var dataType = importDataTypes[t]\\n        var data = dataTransfer.getData(dataType.type)\\n        // Import the tiddlers in the data\\n        if (data !== null && data !== '') {\\n          if ($tw.log.IMPORT) {\\n            console.log(\\\"Importing data type '\\\" + dataType.type + \\\"', data: '\\\" + data + \\\"'\\\")\\n          }\\n          var tiddlerFields = await dataType.toTiddlerFieldsArray(data, fallbackTitle)\\n          if (tiddlerFields && !tiddlerFields.merged) {\\n            const merged = new Map()\\n            merged.set(fallbackTitle, tiddlerFields)\\n            tiddlerFields = { merged: merged, deleted: new Map() }\\n          }\\n          callback(tiddlerFields)\\n          return\\n        }\\n      }\\n    }\\n  }\\n\\n  var importDataTypes = [\\n    {\\n      type: 'text/vnd.tiddler',\\n      IECompatible: false,\\n      toTiddlerFieldsArray: async function (data, fallbackTitle) {\\n        const imported = await $tw.utils.handleImportURL(fallbackTitle, data)\\n        if (imported) {\\n          return imported\\n        }\\n        return parseJSONTiddlers(data, fallbackTitle)\\n      },\\n    },\\n    {\\n      type: 'URL',\\n      IECompatible: true,\\n      toTiddlerFieldsArray: async function (data, fallbackTitle) {\\n        // Check for tiddler data URI\\n        var match = decodeURIComponent(data).match(/^data:text\\\\/vnd\\\\.tiddler,(.*)/i)\\n        if (match) {\\n          return parseJSONTiddlers(match[1], fallbackTitle)\\n        }\\n        var imported = await $tw.utils.handleImportURL(fallbackTitle, data)\\n        if (imported) {\\n          return imported\\n        }\\n        // Fallback\\n        return [{ title: fallbackTitle, text: data }] // As URL string\\n      },\\n    },\\n    {\\n      type: 'text/x-moz-url',\\n      IECompatible: false,\\n      toTiddlerFieldsArray: async function (data, fallbackTitle) {\\n        // Check for tiddler data URI\\n        var match = decodeURIComponent(data).match(/^data:text\\\\/vnd\\\\.tiddler,(.*)/i)\\n        if (match) {\\n          return parseJSONTiddlers(match[1], fallbackTitle)\\n        }\\n        var parts = data.split('\\\\n')\\n        var url = parts[0]\\n        fallbackTitle = parts[1]\\n        var imported = await $tw.utils.handleImportURL(fallbackTitle, url)\\n        if (imported) {\\n          return imported\\n        }\\n        // Fallback\\n        return [{ title: fallbackTitle, text: data }] // As URL string\\n      },\\n    },\\n    {\\n      type: 'text/html',\\n      IECompatible: false,\\n      toTiddlerFieldsArray: function (data, fallbackTitle) {\\n        return [{ title: fallbackTitle, text: data }]\\n      },\\n    },\\n    {\\n      type: 'text/plain',\\n      IECompatible: false,\\n      toTiddlerFieldsArray: function (data, fallbackTitle) {\\n        return [{ title: fallbackTitle, text: data }]\\n      },\\n    },\\n    {\\n      type: 'Text',\\n      IECompatible: true,\\n      toTiddlerFieldsArray: function (data, fallbackTitle) {\\n        return [{ title: fallbackTitle, text: data }]\\n      },\\n    },\\n    {\\n      type: 'text/uri-list',\\n      IECompatible: false,\\n      toTiddlerFieldsArray: function (data, fallbackTitle) {\\n        return [{ title: fallbackTitle, text: data }]\\n      },\\n    },\\n  ]\\n\\n  function parseJSONTiddlers (json, fallbackTitle) {\\n    var data = JSON.parse(json)\\n    if (!$tw.utils.isArray(data)) {\\n      data = [data]\\n    }\\n    data.forEach(function (fields) {\\n      fields.title = fields.title || fallbackTitle\\n    })\\n    return data\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"utils\"\n        },\n        \"$:/plugins/ipfs/utils/ipfs-default.js\": {\n            \"title\": \"$:/plugins/ipfs/utils/ipfs-default.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/utils/ipfs-default.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: utils\\n\\nIPFS Default\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n  const ipfsDefaultName = 'ipfs-default'\\n\\n  exports.getEthLinkResolve = function () {\\n    var resolve = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/eth-link/resolve')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        resolve = text\\n      }\\n    }\\n    if (resolve == null) {\\n      resolve = false // default, see $:/core/ui/ControlPanel/Saving/Ipfs\\n    } else {\\n      resolve = resolve === 'yes'\\n    }\\n    return resolve\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver export protocol with default value if applicable\\n   */\\n  exports.getIpfsExport = function () {\\n    var output = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/export')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        output = text\\n      }\\n    }\\n    if (output == null) {\\n      output = $tw.utils.getIpfsDefaultExport()\\n    }\\n    return output\\n  }\\n\\n  /*\\n   * Default Export\\n   */\\n  exports.getIpfsDefaultExport = function () {\\n    return 'json'\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver protocol with default value if applicable\\n   */\\n  exports.getIpfsProtocol = function () {\\n    var protocol = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/protocol')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        protocol = text\\n      }\\n    }\\n    if (protocol == null) {\\n      protocol = $tw.utils.getIpfsDefaultProtocol()\\n    }\\n    return protocol\\n  }\\n\\n  /*\\n   * Default Protocol\\n   */\\n  exports.getIpfsDefaultProtocol = function () {\\n    return 'ipfs'\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver api url with default value if applicable\\n   */\\n  exports.getIpfsSaverApiUrl = function () {\\n    var api = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/api')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        api = text\\n      }\\n    }\\n    if (api !== null) {\\n      tiddler = $tw.wiki.getTiddler(api)\\n      if (tiddler !== undefined && tiddler !== null) {\\n        var text = tiddler.fields.text\\n        text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n        if (text !== null) {\\n          api = text\\n        }\\n      }\\n    }\\n    if (api == null) {\\n      api = $tw.ipfs.getIpfsDefaultApi()\\n    }\\n    return api\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver gateway url with default value if applicable\\n   */\\n  exports.getIpfsSaverGatewayUrl = function () {\\n    var gateway = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/gateway')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        gateway = text\\n      }\\n    }\\n    if (gateway !== null) {\\n      tiddler = $tw.wiki.getTiddler(gateway)\\n      if (tiddler !== undefined && tiddler !== null) {\\n        var text = tiddler.fields.text\\n        text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n        if (text !== null) {\\n          gateway = text\\n        }\\n      }\\n    }\\n    if (gateway == null) {\\n      gateway = $tw.ipfs.getIpfsDefaultGateway()\\n    }\\n    return gateway\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver ens domain with default value if applicable\\n   */\\n  exports.getIpfsEnsDomain = function () {\\n    var ensDomain = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ens/domain')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        ensDomain = text\\n      }\\n    }\\n    return ensDomain\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver ipns name with default value if applicable\\n   */\\n  exports.getIpfsIpnsName = function () {\\n    var ipnsName = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/name')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        ipnsName = text\\n      }\\n    }\\n    return ipnsName\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver ipns key with default value if applicable\\n   */\\n  exports.getIpfsIpnsKey = function () {\\n    var ipnsKey = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/key')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        ipnsKey = text\\n      }\\n    }\\n    return ipnsKey\\n  }\\n\\n  /*\\n   * Retrieve ipfs verbose preference with default value if applicable\\n   */\\n  exports.getIpfsVerbose = function () {\\n    var verbose = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/verbose')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        verbose = text\\n      }\\n    }\\n    if (verbose == null) {\\n      verbose = true // default, see $:/core/ui/ControlPanel/Saving/Ipfs\\n    } else {\\n      verbose = verbose === 'yes'\\n    }\\n    return verbose\\n  }\\n\\n  /*\\n   * Retrieve ipfs pin preference with default value if applicable\\n   */\\n  exports.getIpfsPin = function () {\\n    var pin = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/pin')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        pin = text\\n      }\\n    }\\n    if (pin == null) {\\n      pin = true // default, see $:/core/ui/ControlPanel/Saving/Ipfs\\n    } else {\\n      pin = pin === 'yes'\\n    }\\n    return pin\\n  }\\n\\n  /*\\n   * Retrieve ipfs unpin preference with default value if applicable\\n   */\\n  exports.getIpfsUnpin = function () {\\n    var unpin = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/unpin')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        unpin = text\\n      }\\n    }\\n    if (unpin == null) {\\n      unpin = false // default, see $:/core/ui/ControlPanel/Saving/Ipfs\\n    } else {\\n      unpin = unpin === 'yes'\\n    }\\n    return unpin\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver url policy with default value if applicable\\n   */\\n  exports.getIpfsUrlPolicy = function () {\\n    var policy = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/policy')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        policy = text\\n      }\\n    }\\n    if (policy == null) {\\n      policy = $tw.utils.getIpfsDefaultPolicy()\\n    }\\n    return policy\\n  }\\n\\n  /*\\n   * Default Policy\\n   */\\n  exports.getIpfsDefaultPolicy = function () {\\n    return 'gateway'\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver provider with default value if applicable\\n   */\\n  exports.getIpfsProvider = function () {\\n    var provider = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/provider')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        provider = text\\n      }\\n    }\\n    if (provider == null) {\\n      provider = $tw.utils.getIpfsDefaultProvider()\\n    }\\n    return provider\\n  }\\n\\n  /*\\n   * Default Provider\\n   */\\n  exports.getIpfsDefaultProvider = function () {\\n    return 'http'\\n  }\\n\\n  exports.getIpnsResolve = function () {\\n    var resolve = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/resolve')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.fields.text\\n      text = text !== undefined && text !== null && text.trim() !== '' ? text.trim() : null\\n      if (text !== null) {\\n        resolve = text\\n      }\\n    }\\n    if (resolve == null) {\\n      resolve = false // default, see $:/core/ui/ControlPanel/Saving/Ipfs\\n    } else {\\n      resolve = resolve === 'yes'\\n    }\\n    return resolve\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"utils\"\n        },\n        \"$:/plugins/ipfs/utils/ipfs-utils.js\": {\n            \"title\": \"$:/plugins/ipfs/utils/ipfs-utils.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/utils/ipfs-utils.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: utils\\n\\nIPFS utils\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const ipfsUtilsName = 'ipfs-utils'\\n\\n  /**\\n   * $:/core/modules/utils/logger.js\\n   *\\n   * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n   *\\n   * Copyright (c) 2004-2007, Jeremy Ruston\\n   * Copyright (c) 2007-2018, UnaMesa Association\\n   * Copyright (c) 2019-2020, Blue Light\\n   * All rights reserved.\\n   *\\n   * Redistribution and use in source and binary forms, with or without\\n   * modification, are permitted provided that the following conditions are met:\\n   *\\n   * * Redistributions of source code must retain the above copyright notice, this\\n   *   list of conditions and the following disclaimer.\\n   *\\n   * * Redistributions in binary form must reproduce the above copyright notice,\\n   *   this list of conditions and the following disclaimer in the documentation\\n   *   and/or other materials provided with the distribution.\\n   *\\n   * * Neither the name of the copyright holder nor the names of its\\n   *   contributors may be used to endorse or promote products derived from\\n   *   this software without specific prior written permission.\\n   *\\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n   */\\n\\n  /*\\n   * from $:/core/modules/utils/logger.js\\n   **/\\n  exports.alert = function (callee, text) {\\n    if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\\n      return\\n    }\\n    const ALERT_TAG = '$:/tags/Alert'\\n    // Prepare the text of the alert\\n    // var text = Array.prototype.join.call(arguments,\\\" \\\");\\n    // Check if there is an existing alert with the same text and the same component\\n    var existingAlerts = $tw.wiki.getTiddlersWithTag(ALERT_TAG)\\n    var alertFields\\n    var existingCount\\n    var self = this\\n    $tw.utils.each(existingAlerts, function (title) {\\n      var tiddler = $tw.wiki.getTiddler(title)\\n      if (\\n        tiddler.fields.text === text &&\\n        tiddler.fields.component === self.componentName &&\\n        tiddler.fields.modified &&\\n        (!alertFields || tiddler.fields.modified < alertFields.modified)\\n      ) {\\n        alertFields = $tw.utils.extend({}, tiddler.fields)\\n      }\\n    })\\n    if (alertFields) {\\n      existingCount = alertFields.count || 1\\n    } else {\\n      alertFields = {\\n        title: $tw.wiki.generateNewTitle('$:/temp/alerts/alert', {\\n          prefix: '',\\n        }),\\n        text: text,\\n        tags: [ALERT_TAG],\\n        component: callee,\\n      }\\n      existingCount = 0\\n    }\\n    alertFields.modified = new Date()\\n    if (++existingCount > 1) {\\n      alertFields.count = existingCount\\n    } else {\\n      alertFields.count = undefined\\n    }\\n    $tw.wiki.addTiddler(new $tw.Tiddler(alertFields))\\n  }\\n\\n  exports.getChangedTiddler = function (object) {\\n    // Holder\\n    const changedTiddler = Object.create(null)\\n    // Check\\n    if (object === undefined || object == null) {\\n      return changedTiddler\\n    }\\n    if (object instanceof $tw.Tiddler === false && typeof object !== 'string') {\\n      return changedTiddler\\n    }\\n    // Retrieve title\\n    var title = null\\n    if (typeof object === 'string') {\\n      title = object\\n    }\\n    if (object instanceof $tw.Tiddler) {\\n      title = object.fields.title\\n    }\\n    // Check\\n    if (title === undefined || title == null) {\\n      return changedTiddler\\n    }\\n    // Process title\\n    changedTiddler[title] = Object.create(null)\\n    // Done\\n    return changedTiddler\\n  }\\n\\n  exports.updateTiddler = function (updates) {\\n    // Is there anything to do\\n    if (updates === undefined || updates == null || updates.tiddler === undefined || updates.tiddler == null) {\\n      return null\\n    }\\n    // Prepare updates\\n    const fields = $tw.wiki.getModificationFields()\\n    // Tags\\n    fields.tags = (updates.tiddler.fields.tags || []).slice(0)\\n    // Process add tags\\n    if (updates.addTags !== undefined && updates.addTags !== null && Array.isArray(updates.addTags)) {\\n      for (var i = 0; i < updates.addTags.length; i++) {\\n        const tag = updates.addTags[i]\\n        if (fields.tags.indexOf(tag) === -1) {\\n          $tw.utils.pushTop(fields.tags, tag)\\n        }\\n      }\\n    }\\n    // Process remove tags\\n    if (updates.removeTags !== undefined && updates.removeTags !== null && Array.isArray(updates.removeTags)) {\\n      for (var i = 0; i < updates.removeTags.length; i++) {\\n        const tag = updates.removeTags[i]\\n        const index = fields.tags.indexOf(tag)\\n        if (index !== -1) {\\n          fields.tags.splice(index, 1)\\n        }\\n      }\\n    }\\n    // Process fields\\n    if (updates.fields !== undefined && updates.fields !== null && Array.isArray(updates.fields)) {\\n      for (var i = 0; i < updates.fields.length; i++) {\\n        const field = updates.fields[i]\\n        if (field.key !== undefined && field.key !== null) {\\n          fields[field.key] = field.value\\n        }\\n      }\\n    }\\n    // Update tiddler\\n    return new $tw.Tiddler(updates.tiddler, fields)\\n  }\\n\\n  exports.getContentType = function (tiddler) {\\n    tiddler = tiddler !== undefined && tiddler !== null ? tiddler : null\\n    if (tiddler == null) {\\n      throw new Error('Undefined Tiddler...')\\n    }\\n    var type = tiddler.fields.type !== undefined && tiddler.fields.type !== null && tiddler.fields.type.trim() !== '' ? tiddler.fields.type.trim() : null\\n    if (type == null) {\\n      type = 'text/vnd.tiddlywiki'\\n    }\\n    var info = $tw.config.contentTypeInfo[type]\\n    if (info === undefined || info == null) {\\n      throw new Error(`Unknown Content-Type: \\\"${type}\\\" from Tidler: \\\"${tiddler.fields.title}\\\"`)\\n    }\\n    return {\\n      type: type,\\n      info: info,\\n    }\\n  }\\n\\n  exports.loadTiddlers = function (text) {\\n    if (text) {\\n      var json = JSON.parse(text)\\n      var tiddlers = []\\n      for (var title in json) {\\n        if (title !== '$:/isEncrypted' && title !== '$:/isCompressed') {\\n          tiddlers.push(json[title])\\n        }\\n      }\\n      return tiddlers\\n    }\\n    return null\\n  }\\n\\n  exports.exportToIpfs = async function (target, content) {\\n    // Check\\n    if (content === undefined || content == null) {\\n      return false\\n    }\\n    var account = null\\n    var added = null\\n    var cid = null\\n    var fields = []\\n    var ipnsKey = null\\n    var ipnsName = null\\n    var normalizedUrl = null\\n    var web3 = null\\n    const ipfsKeyword = 'ipfs'\\n    var exportUri = target.fields._export_uri\\n    try {\\n      var { cid, ipnsKey, ipnsName, normalizedUrl } = await $tw.ipfs.resolveUrl(true, true, exportUri)\\n      if (normalizedUrl !== null && normalizedUrl.hostname.endsWith('.eth')) {\\n        var { account, web3 } = await $tw.ipfs.getEnabledWeb3Provider()\\n        const isOwner = await $tw.ipfs.isOwner(normalizedUrl.hostname, web3, account)\\n        if (isOwner === false) {\\n          const err = new Error('Unauthorized Account...')\\n          err.name = 'OwnerError'\\n          throw err\\n        }\\n      }\\n    } catch (error) {\\n      if (error.name !== 'OwnerError') {\\n        $tw.ipfs.getLogger().error(error)\\n      }\\n      $tw.utils.alert(ipfsUtilsName, error.message)\\n      return false\\n    }\\n    $tw.ipfs.getLogger().info(`Uploading Tiddler: ${content.length}`)\\n    try {\\n      var { cid: added } = await $tw.ipfs.addToIpfs(content)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(ipfsUtilsName, error.message)\\n      return false\\n    }\\n    // Prepare New value\\n    fields.push({ key: '_export_uri', value: `${ipfsKeyword}://${added}` })\\n    var updatedTiddler = $tw.utils.updateTiddler({\\n      tiddler: target,\\n      addTags: ['$:/isExported', '$:/isIpfs'],\\n      fields: fields,\\n    })\\n    $tw.wiki.addTiddler(updatedTiddler)\\n    if (ipnsKey !== null && ipnsName !== null) {\\n      $tw.utils.alert(ipfsUtilsName, `Publishing IPNS name: ${ipnsName}`)\\n      $tw.ipfs\\n        .pinToIpfs(`/ipfs/${added}`)\\n        .then(pin => {\\n          $tw.ipfs\\n            .publishIpnsName(added, ipnsKey, ipnsName)\\n            .then(dummy => {\\n              fields.push({ key: '_export_uri', value: exportUri })\\n              const updatedTiddler = $tw.utils.updateTiddler({\\n                tiddler: target,\\n                addTags: ['$:/isExported', '$:/isIpfs'],\\n                fields: fields,\\n              })\\n              $tw.wiki.addTiddler(updatedTiddler)\\n              $tw.utils.alert(ipfsUtilsName, `Successfully Published IPNS name: ${ipnsName}`)\\n              if ($tw.utils.getIpfsUnpin()) {\\n                $tw.ipfs\\n                  .unpinFromIpfs(`/ipfs/${cid}`)\\n                  .then(unpin => {\\n                    if (unpin !== undefined && unpin !== null) {\\n                      $tw.ipfs.removeFromPinUnpin(`/ipfs/${cid}`)\\n                    }\\n                  })\\n                  .catch(error => {\\n                    $tw.ipfs.getLogger().error(error)\\n                    $tw.utils.alert(ipfsUtilsName, error.message)\\n                  })\\n              }\\n            })\\n            .catch(error => {\\n              $tw.ipfs.getLogger().error(error)\\n              $tw.utils.alert(ipfsUtilsName, error.message)\\n              $tw.ipfs.requestToUnpin(`/ipfs/${added}`)\\n            })\\n        })\\n        .catch(error => {\\n          $tw.ipfs.getLogger().error(error)\\n          $tw.utils.alert(ipfsUtilsName, error.message)\\n        })\\n    } else if (normalizedUrl !== null && normalizedUrl.hostname.endsWith('.eth')) {\\n      $tw.utils.alert(ipfsUtilsName, `Publishing to ENS: ${normalizedUrl.hostname}`)\\n      $tw.ipfs\\n        .pinToIpfs(`/ipfs/${added}`)\\n        .then(pin => {\\n          $tw.ipfs\\n            .setContentHash(normalizedUrl.hostname, `/${ipfsKeyword}/${added}`, web3, account)\\n            .then(dummy => {\\n              fields.push({ key: '_export_uri', value: exportUri })\\n              const updatedTiddler = $tw.utils.updateTiddler({\\n                tiddler: target,\\n                addTags: ['$:/isExported', '$:/isIpfs'],\\n                fields: fields,\\n              })\\n              $tw.wiki.addTiddler(updatedTiddler)\\n              $tw.utils.alert(ipfsUtilsName, 'Successfully Published to ENS...')\\n              if ($tw.utils.getIpfsUnpin()) {\\n                $tw.ipfs\\n                  .unpinFromIpfs(`/ipfs/${cid}`)\\n                  .then(unpin => {\\n                    if (unpin !== undefined && unpin !== null) {\\n                      $tw.ipfs.removeFromPinUnpin(`/ipfs/${cid}`)\\n                    }\\n                  })\\n                  .catch(error => {\\n                    $tw.ipfs.getLogger().error(error)\\n                    $tw.utils.alert(ipfsUtilsName, error.message)\\n                  })\\n              }\\n            })\\n            .catch(error => {\\n              if (error.name !== 'OwnerError' && error.name !== 'RejectedUserRequest' && error.name !== 'UnauthorizedUserAccount') {\\n                $tw.ipfs.getLogger().error(error)\\n              }\\n              $tw.utils.alert(ipfsUtilsName, error.message)\\n              $tw.ipfs.requestToUnpin(`/ipfs/${added}`)\\n            })\\n        })\\n        .catch(error => {\\n          $tw.ipfs.getLogger().error(error)\\n          $tw.utils.alert(ipfsUtilsName, error.message)\\n        })\\n    }\\n    return true\\n  }\\n\\n  exports.locateNavigatorWidget = function (element) {\\n    if (element.parseTreeNode.type === 'navigator') {\\n      return element\\n    }\\n    if (element.children) {\\n      for (var i = 0; i < element.children.length; i++) {\\n        const found = $tw.utils.locateNavigatorWidget(element.children[i])\\n        if (found) {\\n          return found\\n        }\\n      }\\n    }\\n    return null\\n  }\\n\\n  exports.exportTiddlersAsJson = async function (tiddlers, exportUri, spaces) {\\n    var json\\n    var data = []\\n    var spaces = spaces !== undefined && spaces !== null ? spaces : $tw.config.preferences.jsonSpaces\\n    const ipnsKeyword = 'ipns'\\n    // Process Tiddlers\\n    if (tiddlers) {\\n      for (var t = 0; t < tiddlers.length; t++) {\\n        // Load Tiddler\\n        var current = $tw.wiki.getTiddler(tiddlers[t])\\n        // Process\\n        var fields = {}\\n        // Process fields\\n        for (var field in current.fields) {\\n          // Discard\\n          if (field === 'tags' || field === '_export_uri') {\\n            continue\\n          }\\n          var ipnsKey = null\\n          var fieldValue = current.getFieldString(field)\\n          if (field === '_canonical_uri' && fieldValue === exportUri) {\\n            continue\\n          }\\n          if (field === '_import_uri' && fieldValue === exportUri) {\\n            continue\\n          }\\n          try {\\n            var { ipnsKey } = await $tw.ipfs.resolveUrl(false, false, fieldValue)\\n          } catch (error) {\\n            $tw.ipfs.getLogger().error(error)\\n            $tw.utils.alert(ipfsUtilsName, error.message)\\n            return null\\n          }\\n          // IPNS\\n          if (ipnsKey !== null) {\\n            fieldValue = `${ipnsKeyword}://${ipnsKey}`\\n          }\\n          // Store field\\n          fields[field] = fieldValue\\n        }\\n        // Process tags\\n        var tags = current.fields.tags\\n        if (tags !== undefined && tags !== null) {\\n          var tagValues = ''\\n          for (var i = 0; i < tags.length; i++) {\\n            const tag = tags[i]\\n            // Discard\\n            if (tag === '$:/isExported' || tag === '$:/isImported') {\\n              continue\\n            }\\n            tagValues = (tagValues.length === 0 ? '[[' : `${tagValues} [[`) + `${tag}]]`\\n          }\\n          // Store tags\\n          fields.tags = tagValues\\n        }\\n        // Store\\n        data.push(fields)\\n      }\\n      json = JSON.stringify(data, null, spaces)\\n    }\\n    return json\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"utils\"\n        },\n        \"$:/core/modules/widgets/button.js\": {\n            \"title\": \"$:/core/modules/widgets/button.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/widgets/button.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: widget\\n\\nButton widget\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  var Widget = require('$:/core/modules/widgets/widget.js').widget\\n\\n  var ButtonWidget = function (parseTreeNode, options) {\\n    this.initialise(parseTreeNode, options)\\n  }\\n\\n  /*\\n   * Inherit from the base widget class\\n   */\\n  ButtonWidget.prototype = new Widget()\\n\\n  /*\\n   * Render this widget into the DOM\\n   */\\n  ButtonWidget.prototype.render = function (parent, nextSibling) {\\n    var self = this\\n    var tag = 'button'\\n    var domNode\\n    // Remember parent\\n    this.parentDomNode = parent\\n    // Compute attributes and execute state\\n    this.computeAttributes()\\n    this.execute()\\n    // Create element\\n    if (this.buttonTag && $tw.config.htmlUnsafeElements.indexOf(this.buttonTag) === -1) {\\n      tag = this.buttonTag\\n    }\\n    domNode = this.document.createElement(tag)\\n    this.domNode = domNode\\n    // Assign classes\\n    var classes = this.class.split(' ') || []\\n    var isPoppedUp = (this.popup || this.popupTitle) && this.isPoppedUp()\\n    if (this.selectedClass) {\\n      if ((this.set || this.setTitle) && this.setTo && this.isSelected()) {\\n        $tw.utils.pushTop(classes, this.selectedClass.split(' '))\\n      }\\n      if (isPoppedUp) {\\n        $tw.utils.pushTop(classes, this.selectedClass.split(' '))\\n      }\\n    }\\n    if (isPoppedUp) {\\n      $tw.utils.pushTop(classes, 'tc-popup-handle')\\n    }\\n    domNode.className = classes.join(' ')\\n    // Assign other attributes\\n    if (this.style) {\\n      domNode.setAttribute('style', this.style)\\n    }\\n    if (this.tooltip) {\\n      domNode.setAttribute('title', this.tooltip)\\n    }\\n    if (this['aria-label']) {\\n      domNode.setAttribute('aria-label', this['aria-label'])\\n    }\\n    // Set the tabindex\\n    if (this.tabIndex) {\\n      domNode.setAttribute('tabindex', this.tabIndex)\\n    }\\n    if (this.isDisabled === 'yes') {\\n      domNode.setAttribute('disabled', true)\\n    }\\n    // Add a click event handler\\n    domNode.addEventListener(\\n      'click',\\n      function (event) {\\n        var handled = false\\n        if (self.invokeActions(self, event)) {\\n          handled = true\\n        }\\n        if (self.to) {\\n          self.navigateTo(event)\\n          handled = true\\n        }\\n        if (self.message) {\\n          self.dispatchMessage(event)\\n          handled = true\\n        }\\n        if (self.popup || self.popupTitle) {\\n          self.triggerPopup(event)\\n          handled = true\\n        }\\n        if (self.set || self.setTitle) {\\n          self.setTiddler()\\n          handled = true\\n        }\\n        if (self.actions) {\\n          var modifierKey = $tw.keyboardManager.getEventModifierKeyDescriptor(event)\\n          self.invokeActionString(self.actions, self, event, { modifier: modifierKey })\\n        }\\n        if (handled) {\\n          event.preventDefault()\\n          event.stopPropagation()\\n        }\\n        return handled\\n      },\\n      false\\n    )\\n    // Make it draggable if required\\n    if (this.dragTiddler || this.dragFilter) {\\n      $tw.utils.makeDraggable({\\n        domNode: domNode,\\n        dragTiddlerFn: function () {\\n          return self.dragTiddler\\n        },\\n        dragFilterFn: function () {\\n          return self.dragFilter\\n        },\\n        widget: this,\\n      })\\n    }\\n    // Insert element\\n    parent.insertBefore(domNode, nextSibling)\\n    this.renderChildren(domNode, null)\\n    this.domNodes.push(domNode)\\n  }\\n\\n  /*\\n   * We don't allow actions to propagate because we trigger actions ourselves\\n   */\\n  ButtonWidget.prototype.allowActionPropagation = function () {\\n    return false\\n  }\\n\\n  ButtonWidget.prototype.getBoundingClientRect = function () {\\n    return this.domNodes[0].getBoundingClientRect()\\n  }\\n\\n  ButtonWidget.prototype.isSelected = function () {\\n    return this.setTitle\\n      ? (this.setField\\n          ? this.wiki.getTiddler(this.setTitle).getFieldString(this.setField) === this.setTo\\n          : this.setIndex\\n          ? this.wiki.extractTiddlerDataItem(this.setTitle, this.setIndex) === this.setTo\\n          : this.wiki.getTiddlerText(this.setTitle)) ||\\n          this.defaultSetValue ||\\n          this.getVariable('currentTiddler')\\n      : this.wiki.getTextReference(this.set, this.defaultSetValue, this.getVariable('currentTiddler')) === this.setTo\\n  }\\n\\n  ButtonWidget.prototype.isPoppedUp = function () {\\n    var tiddler = this.popupTitle ? this.wiki.getTiddler(this.popupTitle) : this.wiki.getTiddler(this.popup)\\n    var result = tiddler && tiddler.fields.text ? $tw.popup.readPopupState(tiddler.fields.text) : false\\n    return result\\n  }\\n\\n  ButtonWidget.prototype.navigateTo = function (event) {\\n    var bounds = this.getBoundingClientRect()\\n    this.dispatchEvent({\\n      type: 'tm-navigate',\\n      navigateTo: this.to,\\n      navigateFromTitle: this.getVariable('storyTiddler'),\\n      navigateFromNode: this,\\n      navigateFromClientRect: {\\n        top: bounds.top,\\n        left: bounds.left,\\n        width: bounds.width,\\n        right: bounds.right,\\n        bottom: bounds.bottom,\\n        height: bounds.height,\\n      },\\n      navigateSuppressNavigation: event.metaKey || event.ctrlKey || event.button === 1,\\n      event: event,\\n    })\\n  }\\n\\n  ButtonWidget.prototype.dispatchMessage = function (event) {\\n    this.dispatchEvent({\\n      type: this.message,\\n      param: this.param,\\n      tiddlerTitle: this.getVariable('currentTiddler'),\\n      event: event,\\n    })\\n  }\\n\\n  ButtonWidget.prototype.triggerPopup = function (event) {\\n    if (this.popupTitle) {\\n      $tw.popup.triggerPopup({\\n        domNode: this.domNodes[0],\\n        title: this.popupTitle,\\n        wiki: this.wiki,\\n        noStateReference: true,\\n      })\\n    } else {\\n      $tw.popup.triggerPopup({\\n        domNode: this.domNodes[0],\\n        title: this.popup,\\n        wiki: this.wiki,\\n      })\\n    }\\n  }\\n\\n  ButtonWidget.prototype.setTiddler = function () {\\n    if (this.setTitle) {\\n      this.setField\\n        ? this.wiki.setText(this.setTitle, this.setField, undefined, this.setTo)\\n        : this.setIndex\\n        ? this.wiki.setText(this.setTitle, undefined, this.setIndex, this.setTo)\\n        : this.wiki.setText(this.setTitle, 'text', undefined, this.setTo)\\n    } else {\\n      this.wiki.setTextReference(this.set, this.setTo, this.getVariable('currentTiddler'))\\n    }\\n  }\\n\\n  /*\\n   * Compute the internal state of the widget\\n   */\\n  ButtonWidget.prototype.execute = function () {\\n    // Get attributes\\n    this.actions = this.getAttribute('actions')\\n    this.to = this.getAttribute('to')\\n    this.message = this.getAttribute('message')\\n    this.param = this.getAttribute('param')\\n    this.set = this.getAttribute('set')\\n    this.setTo = this.getAttribute('setTo')\\n    this.popup = this.getAttribute('popup')\\n    this.hover = this.getAttribute('hover')\\n    this['aria-label'] = this.getAttribute('aria-label')\\n    this.tooltip = this.getAttribute('tooltip')\\n    this.style = this.getAttribute('style')\\n    this.class = this.getAttribute('class', '')\\n    this.selectedClass = this.getAttribute('selectedClass')\\n    this.defaultSetValue = this.getAttribute('default', '')\\n    this.buttonTag = this.getAttribute('tag')\\n    this.dragTiddler = this.getAttribute('dragTiddler')\\n    this.dragFilter = this.getAttribute('dragFilter')\\n    this.setTitle = this.getAttribute('setTitle')\\n    this.setField = this.getAttribute('setField')\\n    this.setIndex = this.getAttribute('setIndex')\\n    this.popupTitle = this.getAttribute('popupTitle')\\n    this.tabIndex = this.getAttribute('tabindex')\\n    this.isDisabled = this.getAttribute('disabled', 'no')\\n    // Make child widgets\\n    this.makeChildWidgets()\\n  }\\n\\n  ButtonWidget.prototype.updateDomNodeClasses = function () {\\n    var domNodeClasses = this.domNode.className.split(' ')\\n    var oldClasses = this.class.split(' ')\\n    var newClasses\\n    this.class = this.getAttribute('class', '')\\n    newClasses = this.class.split(' ')\\n    //Remove classes assigned from the old value of class attribute\\n    $tw.utils.each(oldClasses, function (oldClass) {\\n      var i = domNodeClasses.indexOf(oldClass)\\n      if (i !== -1) {\\n        domNodeClasses.splice(i, 1)\\n      }\\n    })\\n    //Add new classes from updated class attribute.\\n    $tw.utils.pushTop(domNodeClasses, newClasses)\\n    this.domNode.className = domNodeClasses.join(' ')\\n  }\\n\\n  /*\\n   * Selectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n   */\\n  ButtonWidget.prototype.refresh = function (changedTiddlers) {\\n    var changedAttributes = this.computeAttributes()\\n    if (\\n      changedAttributes.tooltip ||\\n      changedAttributes.actions ||\\n      changedAttributes.to ||\\n      changedAttributes.message ||\\n      changedAttributes.param ||\\n      changedAttributes.set ||\\n      changedAttributes.setTo ||\\n      changedAttributes.popup ||\\n      changedAttributes.hover ||\\n      changedAttributes.selectedClass ||\\n      changedAttributes.style ||\\n      changedAttributes.dragFilter ||\\n      changedAttributes.dragTiddler ||\\n      (this.set && changedTiddlers[this.set]) ||\\n      (this.popup && changedTiddlers[this.popup]) ||\\n      (this.popupTitle && changedTiddlers[this.popupTitle]) ||\\n      changedAttributes.setTitle ||\\n      changedAttributes.setField ||\\n      changedAttributes.setIndex ||\\n      changedAttributes.popupTitle ||\\n      changedAttributes.disabled\\n    ) {\\n      this.refreshSelf()\\n      return true\\n    } else if (changedAttributes.class) {\\n      this.updateDomNodeClasses()\\n    }\\n    return this.refreshChildren(changedTiddlers)\\n  }\\n\\n  exports.button = ButtonWidget\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/core/modules/widgets/checkbox.js\": {\n            \"title\": \"$:/core/modules/widgets/checkbox.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/widgets/checkbox.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: widget\\n\\nCheckbox widget\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  var Widget = require('$:/core/modules/widgets/widget.js').widget\\n\\n  var CheckboxWidget = function (parseTreeNode, options) {\\n    this.initialise(parseTreeNode, options)\\n  }\\n\\n  /*\\nInherit from the base widget class\\n*/\\n  CheckboxWidget.prototype = new Widget()\\n\\n  /*\\nRender this widget into the DOM\\n*/\\n  CheckboxWidget.prototype.render = function (parent, nextSibling) {\\n    // Save the parent dom node\\n    this.parentDomNode = parent\\n    // Compute our attributes\\n    this.computeAttributes()\\n    // Execute our logic\\n    this.execute()\\n    // Create our elements\\n    this.labelDomNode = this.document.createElement('label')\\n    this.labelDomNode.setAttribute('class', this.checkboxClass)\\n    this.inputDomNode = this.document.createElement('input')\\n    this.inputDomNode.setAttribute('type', 'checkbox')\\n    if (this.getValue()) {\\n      this.inputDomNode.setAttribute('checked', 'true')\\n    }\\n    if (this.isDisabled === 'yes') {\\n      this.inputDomNode.setAttribute('disabled', true)\\n    }\\n    this.inputDomNode.setAttribute('title', this.checkboxTooltip)\\n    this.labelDomNode.appendChild(this.inputDomNode)\\n    this.spanDomNode = this.document.createElement('span')\\n    this.labelDomNode.appendChild(this.spanDomNode)\\n    // Add a click event handler\\n    $tw.utils.addEventListeners(this.inputDomNode, [\\n      {\\n        name: 'change',\\n        handlerObject: this,\\n        handlerMethod: 'handleChangeEvent',\\n      },\\n    ])\\n    // Insert the label into the DOM and render any children\\n    parent.insertBefore(this.labelDomNode, nextSibling)\\n    this.renderChildren(this.spanDomNode, null)\\n    this.domNodes.push(this.labelDomNode)\\n  }\\n\\n  CheckboxWidget.prototype.getValue = function () {\\n    var tiddler = this.wiki.getTiddler(this.checkboxTitle)\\n    if (tiddler) {\\n      if (this.checkboxTag) {\\n        if (this.checkboxInvertTag) {\\n          return !tiddler.hasTag(this.checkboxTag)\\n        } else {\\n          return tiddler.hasTag(this.checkboxTag)\\n        }\\n      }\\n      if (this.checkboxField) {\\n        var value\\n        if ($tw.utils.hop(tiddler.fields, this.checkboxField)) {\\n          value = tiddler.fields[this.checkboxField] || ''\\n        } else {\\n          value = this.checkboxDefault || ''\\n        }\\n        if (value === this.checkboxChecked) {\\n          return true\\n        }\\n        if (value === this.checkboxUnchecked) {\\n          return false\\n        }\\n      }\\n      if (this.checkboxIndex) {\\n        var value = this.wiki.extractTiddlerDataItem(tiddler, this.checkboxIndex, this.checkboxDefault || '')\\n        if (value === this.checkboxChecked) {\\n          return true\\n        }\\n        if (value === this.checkboxUnchecked) {\\n          return false\\n        }\\n      }\\n    } else {\\n      if (this.checkboxTag) {\\n        return false\\n      }\\n      if (this.checkboxField) {\\n        if (this.checkboxDefault === this.checkboxChecked) {\\n          return true\\n        }\\n        if (this.checkboxDefault === this.checkboxUnchecked) {\\n          return false\\n        }\\n      }\\n    }\\n    return false\\n  }\\n\\n  CheckboxWidget.prototype.handleChangeEvent = function (event) {\\n    var checked = this.inputDomNode.checked\\n    var tiddler = this.wiki.getTiddler(this.checkboxTitle)\\n    var fallbackFields = { text: '' }\\n    var newFields = { title: this.checkboxTitle }\\n    var hasChanged = false\\n    var tagCheck = false\\n    var hasTag = tiddler && tiddler.hasTag(this.checkboxTag)\\n    var value = checked ? this.checkboxChecked : this.checkboxUnchecked\\n    if (this.checkboxTag && this.checkboxInvertTag === 'yes') {\\n      tagCheck = hasTag === checked\\n    } else {\\n      tagCheck = hasTag !== checked\\n    }\\n    // Set the tag if specified\\n    if (this.checkboxTag && (!tiddler || tagCheck)) {\\n      newFields.tags = tiddler ? (tiddler.fields.tags || []).slice(0) : []\\n      var pos = newFields.tags.indexOf(this.checkboxTag)\\n      if (pos !== -1) {\\n        newFields.tags.splice(pos, 1)\\n      }\\n      if (this.checkboxInvertTag === 'yes' && !checked) {\\n        newFields.tags.push(this.checkboxTag)\\n      } else if (this.checkboxInvertTag !== 'yes' && checked) {\\n        newFields.tags.push(this.checkboxTag)\\n      }\\n      hasChanged = true\\n    }\\n    // Set the field if specified\\n    if (this.checkboxField) {\\n      if (!tiddler || tiddler.fields[this.checkboxField] !== value) {\\n        newFields[this.checkboxField] = value\\n        hasChanged = true\\n      }\\n    }\\n    // Set the index if specified\\n    if (this.checkboxIndex) {\\n      var indexValue = this.wiki.extractTiddlerDataItem(this.checkboxTitle, this.checkboxIndex)\\n      if (!tiddler || indexValue !== value) {\\n        hasChanged = true\\n      }\\n    }\\n    if (hasChanged) {\\n      if (this.checkboxIndex) {\\n        this.wiki.setText(this.checkboxTitle, '', this.checkboxIndex, value)\\n      } else {\\n        this.wiki.addTiddler(new $tw.Tiddler(this.wiki.getCreationFields(), fallbackFields, tiddler, newFields, this.wiki.getModificationFields()))\\n      }\\n    }\\n    // Trigger actions\\n    if (this.checkboxActions) {\\n      this.invokeActionString(this.checkboxActions, this, event)\\n    }\\n    if (this.checkboxCheckActions && checked) {\\n      this.invokeActionString(this.checkboxCheckActions, this, event)\\n    }\\n    if (this.checkboxUncheckActions && !checked) {\\n      this.invokeActionString(this.checkboxUncheckActions, this, event)\\n    }\\n  }\\n\\n  /**\\n   * Compute the internal state of the widget\\n   */\\n  CheckboxWidget.prototype.execute = function () {\\n    // Get the parameters from the attributes\\n    this.checkboxActions = this.getAttribute('actions')\\n    this.checkboxCheckActions = this.getAttribute('checkactions')\\n    this.checkboxUncheckActions = this.getAttribute('uncheckactions')\\n    this.checkboxTooltip = this.getAttribute('title')\\n    this.checkboxTitle = this.getAttribute('tiddler', this.getVariable('currentTiddler'))\\n    this.checkboxTag = this.getAttribute('tag')\\n    this.checkboxField = this.getAttribute('field')\\n    this.checkboxIndex = this.getAttribute('index')\\n    this.checkboxChecked = this.getAttribute('checked')\\n    this.checkboxUnchecked = this.getAttribute('unchecked')\\n    this.checkboxDefault = this.getAttribute('default')\\n    this.checkboxClass = this.getAttribute('class', '')\\n    this.checkboxInvertTag = this.getAttribute('invertTag', '')\\n    this.isDisabled = this.getAttribute('disabled', 'no')\\n    // Make the child widgets\\n    this.makeChildWidgets()\\n  }\\n\\n  /**\\n   * Selectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n   */\\n  CheckboxWidget.prototype.refresh = function (changedTiddlers) {\\n    var changedAttributes = this.computeAttributes()\\n    if (\\n      changedAttributes.title ||\\n      changedAttributes.tiddler ||\\n      changedAttributes.tag ||\\n      changedAttributes.invertTag ||\\n      changedAttributes.field ||\\n      changedAttributes.index ||\\n      changedAttributes.checked ||\\n      changedAttributes.unchecked ||\\n      changedAttributes.default ||\\n      changedAttributes.class ||\\n      changedAttributes.disabled\\n    ) {\\n      this.refreshSelf()\\n      return true\\n    } else {\\n      var refreshed = false\\n      if (changedTiddlers[this.checkboxTitle]) {\\n        this.inputDomNode.checked = this.getValue()\\n        refreshed = true\\n      }\\n      return this.refreshChildren(changedTiddlers) || refreshed\\n    }\\n  }\\n\\n  exports.checkbox = CheckboxWidget\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/core/modules/widgets/compress.js\": {\n            \"title\": \"$:/core/modules/widgets/compress.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/widgets/compress.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: widget\\n\\nCompress widget\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  var Widget = require('$:/core/modules/widgets/widget.js').widget\\n\\n  var CompressWidget = function (parseTreeNode, options) {\\n    this.initialise(parseTreeNode, options)\\n  }\\n\\n  /*\\n   * Inherit from the base widget class\\n   */\\n  CompressWidget.prototype = new Widget()\\n\\n  /*\\n   * Render this widget into the DOM\\n   */\\n  CompressWidget.prototype.render = function (parent, nextSibling) {\\n    this.parentDomNode = parent\\n    this.computeAttributes()\\n    this.execute()\\n    var textNode = this.document.createTextNode(this.encryptedText)\\n    if ($tw.crypto.hasEncryptionPublicKey()) {\\n      var sign = $tw.wiki.getTiddler('$:/isSigned')\\n      sign = sign !== undefined ? sign.fields.text === 'yes' : false\\n      if (sign) {\\n        textNode.sign = true\\n      }\\n    }\\n    parent.insertBefore(textNode, nextSibling)\\n    this.domNodes.push(textNode)\\n  }\\n\\n  /*\\n   * Compute the internal state of the widget\\n   */\\n  CompressWidget.prototype.execute = function () {\\n    // Get parameters from our attributes\\n    this.filter = this.getAttribute('filter', '[!is[system]]')\\n    // Compress the filtered tiddlers\\n    var tiddlers = this.wiki.filterTiddlers(this.filter)\\n    var json = {}\\n    var self = this\\n    $tw.utils.each(tiddlers, function (title) {\\n      var tiddler = self.wiki.getTiddler(title)\\n      var jsonTiddler = {}\\n      for (var f in tiddler.fields) {\\n        jsonTiddler[f] = tiddler.getFieldString(f)\\n      }\\n      json[title] = jsonTiddler\\n    })\\n    var content = { compressed: $tw.compress.deflate(JSON.stringify(json)) }\\n    var encrypt = $tw.wiki.getTiddler('$:/isEncrypted')\\n    encrypt = encrypt !== undefined ? encrypt.fields.text === 'yes' : false\\n    if (encrypt) {\\n      content.compressed = $tw.crypto.encrypt(content.compressed)\\n      if ($tw.crypto.hasEncryptionPublicKey()) {\\n        content.keccak256 = $tw.crypto.keccak256(content.compressed)\\n      }\\n    }\\n    content = JSON.stringify(content)\\n    this.encryptedText = $tw.utils.htmlEncode(content)\\n  }\\n\\n  /*\\n   * Selectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n   */\\n  CompressWidget.prototype.refresh = function (changedTiddlers) {\\n    // We don't need to worry about refreshing because the compress widget isn't for interactive use\\n    return false\\n  }\\n\\n  exports.compress = CompressWidget\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/core/modules/widgets/dropzone.js\": {\n            \"title\": \"$:/core/modules/widgets/dropzone.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/widgets/dropzone.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nDropzone widget\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  var Widget = require('$:/core/modules/widgets/widget.js').widget\\n\\n  var DropZoneWidget = function (parseTreeNode, options) {\\n    this.initialise(parseTreeNode, options)\\n  }\\n\\n  /**\\n   * Inherit from the base widget class\\n   */\\n  DropZoneWidget.prototype = new Widget()\\n\\n  /**\\n   * Render this widget into the DOM\\n   */\\n  DropZoneWidget.prototype.render = function (parent, nextSibling) {\\n    // Remember parent\\n    this.parentDomNode = parent\\n    // Compute attributes and execute state\\n    this.computeAttributes()\\n    this.execute()\\n    // Create element\\n    var domNode = this.document.createElement('div')\\n    domNode.className = this.dropzoneClass || 'tc-dropzone'\\n    // Add event handlers\\n    if (this.dropzoneEnable) {\\n      $tw.utils.addEventListeners(domNode, [\\n        { name: 'dragenter', handlerObject: this, handlerMethod: 'handleDragEnterEvent' },\\n        { name: 'dragover', handlerObject: this, handlerMethod: 'handleDragOverEvent' },\\n        { name: 'dragleave', handlerObject: this, handlerMethod: 'handleDragLeaveEvent' },\\n        { name: 'drop', handlerObject: this, handlerMethod: 'handleDropEvent' },\\n        { name: 'paste', handlerObject: this, handlerMethod: 'handlePasteEvent' },\\n        { name: 'dragend', handlerObject: this, handlerMethod: 'handleDragEndEvent' },\\n      ])\\n    }\\n    domNode.addEventListener('click', function (event) {}, false)\\n    // Insert element\\n    parent.insertBefore(domNode, nextSibling)\\n    this.renderChildren(domNode, null)\\n    this.domNodes.push(domNode)\\n    // Stack of outstanding enter/leave events\\n    this.currentlyEntered = []\\n  }\\n\\n  DropZoneWidget.prototype.enterDrag = function (event) {\\n    if (this.currentlyEntered.indexOf(event.target) === -1) {\\n      this.currentlyEntered.push(event.target)\\n    }\\n    // If we're entering for the first time we need to apply highlighting\\n    $tw.utils.addClass(this.domNodes[0], 'tc-dragover')\\n  }\\n\\n  DropZoneWidget.prototype.leaveDrag = function (event) {\\n    var pos = this.currentlyEntered.indexOf(event.target)\\n    if (pos !== -1) {\\n      this.currentlyEntered.splice(pos, 1)\\n    }\\n    // Remove highlighting if we're leaving externally\\n    if (this.currentlyEntered.length === 0) {\\n      $tw.utils.removeClass(this.domNodes[0], 'tc-dragover')\\n    }\\n  }\\n\\n  DropZoneWidget.prototype.handleDragEnterEvent = function (event) {\\n    // Check for this window being the source of the drag\\n    if ($tw.dragInProgress) {\\n      return false\\n    }\\n    this.enterDrag(event)\\n    // Tell the browser that we're ready to handle the drop\\n    event.preventDefault()\\n    // Tell the browser not to ripple the drag up to any parent drop handlers\\n    event.stopPropagation()\\n  }\\n\\n  DropZoneWidget.prototype.handleDragOverEvent = function (event) {\\n    // Check for being over a TEXTAREA or INPUT\\n    if (['TEXTAREA', 'INPUT'].indexOf(event.target.tagName) !== -1) {\\n      return false\\n    }\\n    // Check for this window being the source of the drag\\n    if ($tw.dragInProgress) {\\n      return false\\n    }\\n    // Tell the browser that we're still interested in the drop\\n    event.preventDefault()\\n    event.dataTransfer.dropEffect = 'copy' // Explicitly show this is a copy\\n  }\\n\\n  DropZoneWidget.prototype.handleDragLeaveEvent = function (event) {\\n    this.leaveDrag(event)\\n  }\\n\\n  DropZoneWidget.prototype.handleDragEndEvent = function (event) {\\n    $tw.utils.removeClass(this.domNodes[0], 'tc-dragover')\\n  }\\n\\n  DropZoneWidget.prototype.handleDropEvent = function (event) {\\n    var self = this\\n    var readFileCallback = function (tiddlerFieldsArray) {\\n      if (tiddlerFieldsArray.merged) {\\n        self.dispatchEvent({\\n          type: 'tm-ipfs-import-tiddlers',\\n          param: tiddlerFieldsArray,\\n          autoOpenOnImport: self.autoOpenOnImport,\\n          importTitle: self.importTitle,\\n        })\\n      } else {\\n        self.dispatchEvent({\\n          type: 'tm-import-tiddlers',\\n          param: tiddlerFieldsArray,\\n          autoOpenOnImport: self.autoOpenOnImport,\\n          importTitle: self.importTitle,\\n        })\\n      }\\n    }\\n    this.leaveDrag(event)\\n    // Check for being over a TEXTAREA or INPUT\\n    if (['TEXTAREA', 'INPUT'].indexOf(event.target.tagName) !== -1) {\\n      return false\\n    }\\n    // Check for this window being the source of the drag\\n    if ($tw.dragInProgress) {\\n      return false\\n    }\\n    var self = this\\n    var dataTransfer = event.dataTransfer\\n    // Remove highlighting\\n    $tw.utils.removeClass(this.domNodes[0], 'tc-dragover')\\n    // Import any files in the drop\\n    var hasFiles = dataTransfer.files && dataTransfer.files.length > 0\\n    if (hasFiles) {\\n      this.wiki.readFiles(dataTransfer.files, {\\n        callback: readFileCallback,\\n        deserializer: this.dropzoneDeserializer,\\n      })\\n    }\\n    // Try to import the various data types we understand\\n    if (hasFiles === false) {\\n      $tw.utils.importDataTransfer(dataTransfer, this.wiki.generateNewTitle('Untitled'), readFileCallback)\\n    }\\n    // Tell the browser that we handled the drop\\n    event.preventDefault()\\n    event.stopPropagation()\\n  }\\n\\n  DropZoneWidget.prototype.handlePasteEvent = function (event) {\\n    var self = this\\n    var readFileCallback = function (tiddlerFieldsArray) {\\n      if (tiddlerFieldsArray.merged) {\\n        self.dispatchEvent({\\n          type: 'tm-ipfs-import-tiddlers',\\n          param: tiddlerFieldsArray,\\n          autoOpenOnImport: self.autoOpenOnImport,\\n          importTitle: self.importTitle,\\n        })\\n      } else {\\n        self.dispatchEvent({\\n          type: 'tm-import-tiddlers',\\n          param: tiddlerFieldsArray,\\n          autoOpenOnImport: self.autoOpenOnImport,\\n          importTitle: self.importTitle,\\n        })\\n      }\\n    }\\n    // Let the browser handle it if we're in a textarea or input box\\n    if (['TEXTAREA', 'INPUT'].indexOf(event.target.tagName) === -1 && !event.target.isContentEditable) {\\n      var self = this\\n      var items = event.clipboardData.items\\n      // Enumerate the clipboard items\\n      for (var t = 0; t < items.length; t++) {\\n        var item = items[t]\\n        if (item.kind === 'file') {\\n          // Import any files\\n          this.wiki.readFile(item.getAsFile(), {\\n            callback: readFileCallback,\\n            deserializer: this.dropzoneDeserializer,\\n          })\\n        } else if (item.kind === 'string') {\\n          // Create tiddlers from string items\\n          var type = item.type\\n          item.getAsString(function (str) {\\n            var tiddlerFields = {\\n              title: self.wiki.generateNewTitle('Untitled'),\\n              text: str,\\n              type: type,\\n            }\\n            if ($tw.log.IMPORT) {\\n              console.log(\\\"Importing string '\\\" + str + \\\"', type: '\\\" + type + \\\"'\\\")\\n            }\\n            self.dispatchEvent({\\n              type: 'tm-import-tiddlers',\\n              param: JSON.stringify([tiddlerFields]),\\n              autoOpenOnImport: self.autoOpenOnImport,\\n              importTitle: self.importTitle,\\n            })\\n          })\\n        }\\n      }\\n      // Tell the browser that we've handled the paste\\n      event.stopPropagation()\\n      event.preventDefault()\\n    }\\n  }\\n\\n  /**\\n   * Compute the internal state of the widget\\n   */\\n  DropZoneWidget.prototype.execute = function () {\\n    this.dropzoneClass = this.getAttribute('class')\\n    this.dropzoneDeserializer = this.getAttribute('deserializer')\\n    this.dropzoneEnable = (this.getAttribute('enable') || 'yes') === 'yes'\\n    this.autoOpenOnImport = this.getAttribute('autoOpenOnImport')\\n    this.importTitle = this.getAttribute('importTitle')\\n    // Make child widgets\\n    this.makeChildWidgets()\\n  }\\n\\n  /**\\n   * Selectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n   */\\n  DropZoneWidget.prototype.refresh = function (changedTiddlers) {\\n    var changedAttributes = this.computeAttributes()\\n    if (changedAttributes.enable || changedAttributes.autoOpenOnImport || changedAttributes.importTitle || changedAttributes.deserializer || changedAttributes.class) {\\n      this.refreshSelf()\\n      return true\\n    }\\n    return this.refreshChildren(changedTiddlers)\\n  }\\n\\n  exports.dropzone = DropZoneWidget\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/core/modules/widgets/encrypt.js\": {\n            \"title\": \"$:/core/modules/widgets/encrypt.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/widgets/encrypt.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: widget\\n\\nEncrypt widget\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  var Widget = require('$:/core/modules/widgets/widget.js').widget\\n\\n  var EncryptWidget = function (parseTreeNode, options) {\\n    this.initialise(parseTreeNode, options)\\n  }\\n\\n  /**\\n   * Inherit from the base widget class\\n   */\\n  EncryptWidget.prototype = new Widget()\\n\\n  /**\\n   * Render this widget into the DOM\\n   */\\n  EncryptWidget.prototype.render = function (parent, nextSibling) {\\n    this.parentDomNode = parent\\n    this.computeAttributes()\\n    this.execute()\\n    var textNode = this.document.createTextNode(this.encryptedText)\\n    if ($tw.crypto.hasEncryptionPublicKey()) {\\n      var sign = $tw.wiki.getTiddler('$:/isSigned')\\n      sign = sign !== undefined ? sign.fields.text === 'yes' : false\\n      if (sign) {\\n        textNode.sign = true\\n      }\\n    }\\n    parent.insertBefore(textNode, nextSibling)\\n    this.domNodes.push(textNode)\\n  }\\n\\n  /**\\n   * Compute the internal state of the widget\\n   */\\n  EncryptWidget.prototype.execute = function () {\\n    // Get parameters from our attributes\\n    this.filter = this.getAttribute('filter', '[!is[system]]')\\n    // Encrypt the filtered tiddlers\\n    var tiddlers = this.wiki.filterTiddlers(this.filter)\\n    var json = {}\\n    var self = this\\n    $tw.utils.each(tiddlers, function (title) {\\n      var tiddler = self.wiki.getTiddler(title)\\n      var jsonTiddler = {}\\n      for (var f in tiddler.fields) {\\n        jsonTiddler[f] = tiddler.getFieldString(f)\\n      }\\n      json[title] = jsonTiddler\\n    })\\n    var content = $tw.crypto.encrypt(JSON.stringify(json))\\n    if ($tw.crypto.hasEncryptionPublicKey()) {\\n      content = JSON.stringify({\\n        encrypted: content,\\n        keccak256: $tw.crypto.keccak256(content),\\n      })\\n    }\\n    this.encryptedText = $tw.utils.htmlEncode(content)\\n  }\\n\\n  /**\\n   * Selectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n   */\\n  EncryptWidget.prototype.refresh = function (changedTiddlers) {\\n    // We don't need to worry about refreshing because the encrypt widget isn't for interactive use\\n    return false\\n  }\\n\\n  exports.encrypt = EncryptWidget\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/core/modules/widgets/image.js\": {\n            \"title\": \"$:/core/modules/widgets/image.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/widgets/image.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: widget\\n\\nThe image widget displays an image referenced with an external URI or with a local tiddler title.\\n\\n```\\n<$image src=\\\"TiddlerTitle\\\" width=\\\"320\\\" height=\\\"400\\\" class=\\\"classnames\\\">\\n```\\n\\nThe image source can be the title of an existing tiddler or the URL of an external image.\\n\\nExternal images always generate an HTML `<img>` tag.\\n\\nTiddlers that have a _canonical_uri field generate an HTML `<img>` tag with the src attribute containing the URI.\\n\\nTiddlers that contain image data generate an HTML `<img>` tag with the src attribute containing a base64 representation of the image.\\n\\nTiddlers that contain wikitext could be rendered to a DIV of the usual size of a tiddler, and then transformed to the size requested.\\n\\nThe width and height attributes are interpreted as a number of pixels, and do not need to include the \\\"px\\\" suffix.\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  var Widget = require('$:/core/modules/widgets/widget.js').widget\\n\\n  var name = 'ipfs-image'\\n\\n  var ImageWidget = function (parseTreeNode, options) {\\n    this.initialise(parseTreeNode, options)\\n  }\\n\\n  /*\\nInherit from the base widget class\\n*/\\n  ImageWidget.prototype = new Widget()\\n\\n  /*\\nRender this widget into the DOM\\n*/\\n  ImageWidget.prototype.render = function (parent, nextSibling) {\\n    this.parentDomNode = parent\\n    this.computeAttributes()\\n    this.execute()\\n    // Create element\\n    // Determine what type of image it is\\n    var tiddler = this.wiki.getTiddler(this.imageSource)\\n    // Create default element\\n    var domNode = this.document.createElement('img')\\n    if (!tiddler) {\\n      // The source isn't the title of a tiddler, so we'll assume it's a URL\\n      domNode.setAttribute(\\n        'src',\\n        this.getVariable('tv-get-export-image-link', {\\n          params: [{ name: 'src', value: this.imageSource }],\\n          defaultValue: this.imageSource,\\n        })\\n      )\\n    } else {\\n      // Check if it is an image tiddler\\n      if (this.wiki.isImageTiddler(this.imageSource)) {\\n        var type = tiddler.fields.type\\n        var text = tiddler.fields.text\\n        var canonicalUri = tiddler.fields._canonical_uri\\n        canonicalUri = canonicalUri !== undefined && canonicalUri !== null && canonicalUri.toString().trim() !== '' ? canonicalUri.toString().trim() : null\\n        // If the tiddler has body text then it doesn't need to be lazily loaded\\n        if (text) {\\n          // Render the appropriate element for the image type\\n          switch (type) {\\n            case 'application/pdf':\\n              domNode = this.document.createElement('embed')\\n              domNode.setAttribute('src', 'data:application/pdf;base64,' + text)\\n              break\\n            case 'image/svg+xml':\\n              domNode.setAttribute('src', 'data:image/svg+xml,' + encodeURIComponent(text))\\n              break\\n            default:\\n              domNode.setAttribute('src', 'data:' + type + ';base64,' + text)\\n              break\\n          }\\n        } else if (canonicalUri) {\\n          var password = tiddler.fields._password\\n          password = password !== undefined && password !== null && password.trim() !== '' ? password.trim() : null\\n          $tw.ipfs\\n            .resolveUrl(false, true, canonicalUri)\\n            .then(data => {\\n              var { normalizedUrl, resolvedUrl } = data\\n              var url = resolvedUrl !== null ? resolvedUrl.toString() : normalizedUrl !== null ? normalizedUrl.toString() : null\\n              if (url !== null) {\\n                switch (type) {\\n                  case 'application/pdf':\\n                    domNode = this.document.createElement('embed')\\n                    $tw.ipfs\\n                      .loadToBase64(url, password)\\n                      .then(data => {\\n                        if (data !== undefined && data !== null) {\\n                          domNode.setAttribute('src', 'data:application/pdf;base64,' + data)\\n                        }\\n                      })\\n                      .catch(error => {\\n                        $tw.ipfs.getLogger().error(error)\\n                        $tw.utils.alert(name, error.message)\\n                      })\\n                    break\\n                  case 'image/svg+xml':\\n                    $tw.ipfs\\n                      .loadToUtf8(url, password)\\n                      .then(data => {\\n                        if (data !== undefined && data !== null) {\\n                          domNode.setAttribute('src', 'data:image/svg+xml,' + encodeURIComponent(data))\\n                        }\\n                      })\\n                      .catch(error => {\\n                        $tw.ipfs.getLogger().error(error)\\n                        $tw.utils.alert(name, error.message)\\n                      })\\n                    break\\n                  default:\\n                    $tw.ipfs\\n                      .loadToBase64(url, password)\\n                      .then(data => {\\n                        if (data !== undefined && data !== null) {\\n                          domNode.setAttribute('src', 'data:' + type + ';base64,' + data)\\n                        }\\n                      })\\n                      .catch(error => {\\n                        $tw.ipfs.getLogger().error(error)\\n                        $tw.utils.alert(name, error.message)\\n                      })\\n                    break\\n                }\\n              }\\n            })\\n            .catch(error => {\\n              $tw.ipfs.getLogger().error(error)\\n            })\\n        } else {\\n          // Just trigger loading of the tiddler\\n          this.wiki.getTiddlerText(this.imageSource)\\n          domNode.setAttribute('src', '')\\n        }\\n      }\\n    }\\n    // Assign the attributes\\n    if (this.imageClass) {\\n      domNode.setAttribute('class', this.imageClass)\\n    }\\n    if (this.imageWidth) {\\n      domNode.setAttribute('width', this.imageWidth)\\n    }\\n    if (this.imageHeight) {\\n      domNode.setAttribute('height', this.imageHeight)\\n    }\\n    if (this.imageTooltip) {\\n      domNode.setAttribute('title', this.imageTooltip)\\n    }\\n    if (this.imageAlt) {\\n      domNode.setAttribute('alt', this.imageAlt)\\n    }\\n    // Insert element\\n    parent.insertBefore(domNode, nextSibling)\\n    this.domNodes.push(domNode)\\n  }\\n\\n  /*\\nCompute the internal state of the widget\\n*/\\n  ImageWidget.prototype.execute = function () {\\n    // Get our parameters\\n    this.imageSource = this.getAttribute('source')\\n    this.imageWidth = this.getAttribute('width')\\n    this.imageHeight = this.getAttribute('height')\\n    this.imageClass = this.getAttribute('class')\\n    this.imageTooltip = this.getAttribute('tooltip')\\n    this.imageAlt = this.getAttribute('alt')\\n  }\\n\\n  /*\\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n*/\\n  ImageWidget.prototype.refresh = function (changedTiddlers) {\\n    var changedAttributes = this.computeAttributes()\\n    if (\\n      changedAttributes.source ||\\n      changedAttributes.width ||\\n      changedAttributes.height ||\\n      changedAttributes.class ||\\n      changedAttributes.tooltip ||\\n      changedTiddlers[this.imageSource]\\n    ) {\\n      this.refreshSelf()\\n      return true\\n    } else {\\n      return false\\n    }\\n  }\\n\\n  exports.image = ImageWidget\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/plugins/ipfs/modules/widgets/ipfs-link.js\": {\n            \"title\": \"$:/plugins/ipfs/modules/widgets/ipfs-link.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/modules/widgets/ipfs-link.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: widget\\n\\nIPFS link widget\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  var Widget = require('$:/core/modules/widgets/widget.js').widget\\n\\n  const name = 'ipfs-link'\\n\\n  var IpfsLinkWidget = function (parseTreeNode, options) {\\n    this.initialise(parseTreeNode, options)\\n  }\\n\\n  /*\\n   * Inherit from the base widget class\\n   */\\n  IpfsLinkWidget.prototype = new Widget()\\n\\n  /*\\n   * Render this widget into the DOM\\n   */\\n  IpfsLinkWidget.prototype.render = function (parent, nextSibling) {\\n    var self = this\\n    // Save the parent dom node\\n    this.parentDomNode = parent\\n    // Compute our attributes\\n    this.computeAttributes()\\n    // Execute our logic\\n    this.execute()\\n    // Tiddler link\\n    var value = this.url !== undefined ? this.url : this.value\\n    var tiddler = $tw.wiki.getTiddler(value)\\n    if (tiddler) {\\n      this.renderTiddlerLink(parent, nextSibling)\\n    } else {\\n      this.renderText(parent, nextSibling)\\n      $tw.ipfs\\n        .resolveUrl(false, false, value)\\n        .then(data => {\\n          var { normalizedUrl } = data\\n          if (normalizedUrl !== null) {\\n            const sibling = self.findNextSiblingDomNode()\\n            self.removeChildDomNodes()\\n            self.renderExternalLink(parent, nextSibling !== null ? nextSibling : sibling, normalizedUrl)\\n          }\\n        })\\n        .catch(error => {\\n          $tw.ipfs.getLogger().error(error)\\n        })\\n    }\\n  }\\n\\n  /*\\n   * Render this widget into the DOM\\n   */\\n  IpfsLinkWidget.prototype.renderExternalLink = function (parent, nextSibling, url) {\\n    // Sanitise the specified tag\\n    var tag = this.linkTag\\n    if ($tw.config.htmlUnsafeElements.indexOf(tag) !== -1) {\\n      tag = 'a'\\n    }\\n    // Create our element\\n    var namespace = this.getVariable('namespace', {\\n      defaultValue: 'http://www.w3.org/1999/xhtml',\\n    })\\n    var domNode = this.document.createElementNS(namespace, tag)\\n    domNode.setAttribute('href', url.toString())\\n    // Add a click event handler\\n    $tw.utils.addEventListeners(domNode, [\\n      {\\n        name: 'click',\\n        handlerObject: this,\\n        handlerMethod: 'handleExternalClickEvent',\\n      },\\n    ])\\n    // Assign classes\\n    var classes = []\\n    if (this.classes) {\\n      classes.push(this.classes)\\n    }\\n    if (classes.length > 0) {\\n      domNode.setAttribute('class', classes.join(' '))\\n    }\\n    if (this['aria-label']) {\\n      domNode.setAttribute('aria-label', this['aria-label'])\\n    }\\n    parent.insertBefore(domNode, nextSibling)\\n    this.renderChildren(domNode, null)\\n    this.domNodes.push(domNode)\\n  }\\n\\n  /*\\n   * Render this widget into the DOM\\n   */\\n  IpfsLinkWidget.prototype.renderTiddlerLink = function (parent, nextSibling) {\\n    // self\\n    var self = this\\n    // Sanitise the specified tag\\n    var tag = this.linkTag\\n    if ($tw.config.htmlUnsafeElements.indexOf(tag) !== -1) {\\n      tag = 'a'\\n    }\\n    var value = this.url !== undefined ? this.url : this.value\\n    var isMissing = !this.wiki.tiddlerExists(value)\\n    var isShadow = this.wiki.isShadowTiddler(value)\\n    // Create our element\\n    var namespace = this.getVariable('namespace', {\\n      defaultValue: 'http://www.w3.org/1999/xhtml',\\n    })\\n    var domNode = this.document.createElementNS(namespace, tag)\\n    // Assign classes\\n    var classes = []\\n    if (this.overrideClasses === undefined) {\\n      classes.push('tc-tiddlylink')\\n      if (isShadow) {\\n        classes.push('tc-tiddlylink-shadow')\\n      }\\n      if (isMissing && !isShadow) {\\n        classes.push('tc-tiddlylink-missing')\\n      } else {\\n        if (!isMissing) {\\n          classes.push('tc-tiddlylink-resolves')\\n        }\\n      }\\n      if (this.linkClasses) {\\n        classes.push(this.linkClasses)\\n      }\\n    } else if (this.overrideClasses !== '') {\\n      classes.push(this.overrideClasses)\\n    }\\n    if (classes.length > 0) {\\n      domNode.setAttribute('class', classes.join(' '))\\n    }\\n    // Set an href\\n    var wikilinkTransformFilter = this.getVariable('tv-filter-export-link')\\n    var wikiLinkText\\n    if (wikilinkTransformFilter) {\\n      // Use the filter to construct the href\\n      wikiLinkText = this.wiki.filterTiddlers(wikilinkTransformFilter, this, function (iterator) {\\n        iterator(self.wiki.getTiddler(value), value)\\n      })[0]\\n    } else {\\n      // Expand the tv-wikilink-template variable to construct the href\\n      var wikiLinkTemplateMacro = this.getVariable('tv-wikilink-template')\\n      var wikiLinkTemplate = wikiLinkTemplateMacro ? wikiLinkTemplateMacro.trim() : '#$uri_encoded$'\\n      wikiLinkText = $tw.utils.replaceString(wikiLinkTemplate, '$uri_encoded$', encodeURIComponent(value))\\n      wikiLinkText = $tw.utils.replaceString(wikiLinkText, '$uri_doubleencoded$', encodeURIComponent(encodeURIComponent(value)))\\n    }\\n    // Override with the value of tv-get-export-link if defined\\n    wikiLinkText = this.getVariable('tv-get-export-link', {\\n      params: [{ name: 'to', value: value }],\\n      defaultValue: wikiLinkText,\\n    })\\n    if (tag === 'a') {\\n      var namespaceHref = namespace === 'http://www.w3.org/2000/svg' ? 'http://www.w3.org/1999/xlink' : undefined\\n      domNode.setAttributeNS(namespaceHref, 'href', wikiLinkText)\\n    }\\n    // Set the tabindex\\n    if (this.tabIndex) {\\n      domNode.setAttribute('tabindex', this.tabIndex)\\n    }\\n    // Set the tooltip\\n    // HACK: Performance issues with re-parsing the tooltip prevent us defaulting the tooltip to \\\"<$transclude field='tooltip'><$transclude field='title'/></$transclude>\\\"\\n    var tooltipWikiText = this.tooltip || this.getVariable('tv-wikilink-tooltip')\\n    if (tooltipWikiText) {\\n      var tooltipText = this.wiki.renderText('text/plain', 'text/vnd.tiddlywiki', tooltipWikiText, {\\n        parseAsInline: true,\\n        variables: {\\n          currentTiddler: value,\\n        },\\n        parentWidget: this,\\n      })\\n      domNode.setAttribute('title', tooltipText)\\n    }\\n    if (this['aria-label']) {\\n      domNode.setAttribute('aria-label', this['aria-label'])\\n    }\\n    // Add a click event handler\\n    $tw.utils.addEventListeners(domNode, [\\n      {\\n        name: 'click',\\n        handlerObject: this,\\n        handlerMethod: 'handleTiddlerClickEvent',\\n      },\\n    ])\\n    // Make the link draggable if required\\n    if (this.draggable === 'yes') {\\n      $tw.utils.makeDraggable({\\n        domNode: domNode,\\n        dragTiddlerFn: function () {\\n          return value\\n        },\\n        widget: this,\\n      })\\n    }\\n    parent.insertBefore(domNode, nextSibling)\\n    this.renderChildren(domNode, null)\\n    this.domNodes.push(domNode)\\n  }\\n\\n  /*\\n   * Render this widget into the DOM\\n   */\\n  IpfsLinkWidget.prototype.renderText = function (parent, nextSibling) {\\n    const domNode = this.document.createElement('span')\\n    parent.insertBefore(domNode, nextSibling)\\n    this.renderChildren(domNode, null)\\n    this.domNodes.push(domNode)\\n  }\\n\\n  IpfsLinkWidget.prototype.handleExternalClickEvent = function (event) {\\n    const value = this.url !== undefined ? this.url : this.value\\n    $tw.ipfs\\n      .resolveUrl(false, true, value)\\n      .then(data => {\\n        const { resolvedUrl } = data\\n        if (resolvedUrl !== null) {\\n          window.open(resolvedUrl.href, '_blank', 'noopener,noreferrer')\\n        }\\n      })\\n      .catch(error => {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      })\\n    event.preventDefault()\\n    event.stopPropagation()\\n    return false\\n  }\\n\\n  IpfsLinkWidget.prototype.handleTiddlerClickEvent = function (event) {\\n    // Send the click on its way as a navigate event\\n    const bounds = this.domNodes[0].getBoundingClientRect()\\n    const value = this.url !== undefined ? this.url : this.value\\n    this.dispatchEvent({\\n      type: 'tm-navigate',\\n      navigateTo: value,\\n      navigateFromTitle: this.getVariable('storyTiddler'),\\n      navigateFromNode: this,\\n      navigateFromClientRect: {\\n        top: bounds.top,\\n        left: bounds.left,\\n        width: bounds.width,\\n        right: bounds.right,\\n        bottom: bounds.bottom,\\n        height: bounds.height,\\n      },\\n      navigateSuppressNavigation: event.metaKey || event.ctrlKey || event.button === 1,\\n      metaKey: event.metaKey,\\n      ctrlKey: event.ctrlKey,\\n      altKey: event.altKey,\\n      shiftKey: event.shiftKey,\\n    })\\n    if (this.domNodes[0].hasAttribute('href')) {\\n      event.preventDefault()\\n    }\\n    event.stopPropagation()\\n    return false\\n  }\\n\\n  /*\\n   * Compute the internal state of the widget\\n   */\\n  IpfsLinkWidget.prototype.execute = function () {\\n    // Pick up our attributes\\n    this.url = undefined\\n    this.tiddler = this.getAttribute('tiddler') ? this.getAttribute('tiddler') : this.getVariable('currentTiddler')\\n    var tiddler\\n    if (this.tiddler) {\\n      tiddler = $tw.wiki.getTiddler(this.tiddler)\\n    }\\n    this.field = this.getAttribute('field')\\n    this.value = this.getAttribute('value')\\n    this.value = this.value ? this.value : tiddler && tiddler.getFieldString(this.field) !== '' ? tiddler.getFieldString(this.field) : this.tiddler\\n    this.text = this.getAttribute('text')\\n    this.text = this.text ? (tiddler && tiddler.getFieldString(this.text) !== '' ? tiddler.getFieldString(this.text) : this.text) : this.value\\n    if (tiddler && this.getAttribute('value') && tiddler.getFieldString(this.getAttribute('value')) !== '') {\\n      this.url = tiddler.getFieldString(this.getAttribute('value'))\\n    }\\n    this.tooltip = this.getAttribute('tooltip')\\n    this['aria-label'] = this.getAttribute('aria-label')\\n    this.linkClasses = this.getAttribute('class') || 'tc-ipfs-link-external'\\n    this.overrideClasses = this.getAttribute('overrideClass')\\n    this.tabIndex = this.getAttribute('tabindex')\\n    this.draggable = this.getAttribute('draggable', 'yes')\\n    this.linkTag = this.getAttribute('tag', 'a')\\n    var templateTree\\n    if (this.parseTreeNode.children && this.parseTreeNode.children.length > 0) {\\n      templateTree = this.parseTreeNode.children\\n    } else {\\n      templateTree = [{ type: 'text', text: this.text }]\\n    }\\n    this.makeChildWidgets(templateTree)\\n  }\\n\\n  /*\\n   * Selectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n   */\\n  IpfsLinkWidget.prototype.refresh = function (changedTiddlers) {\\n    const changedAttributes = this.computeAttributes()\\n    const tiddler = $tw.wiki.getTiddler(this.tiddler)\\n    var value = null\\n    if (tiddler && this.field !== undefined && this.field !== null) {\\n      value = tiddler.getFieldString(this.field)\\n    }\\n    if (\\n      changedAttributes.text ||\\n      changedAttributes.field ||\\n      changedTiddlers[this.field] ||\\n      changedAttributes.value ||\\n      changedTiddlers[this.value] ||\\n      changedAttributes.tooltip ||\\n      changedAttributes['aria-label'] ||\\n      changedTiddlers['$:/ipfs/saver/gateway'] ||\\n      changedTiddlers['$:/ipfs/saver/policy'] ||\\n      (value !== null && value !== this.value)\\n    ) {\\n      this.refreshSelf()\\n      return true\\n    }\\n    return this.refreshChildren(changedTiddlers)\\n  }\\n\\n  exports.ipfslink = IpfsLinkWidget\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/core/modules/widgets/navigator.js\": {\n            \"title\": \"$:/core/modules/widgets/navigator.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/widgets/navigator.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: widget\\n\\nNavigator widget\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  var IMPORT_TITLE = '$:/Import'\\n  var IPFS_IMPORT_TITLE = '$:/IpfsImport'\\n  var IPFS_EXPORT_TITLE = '$:/IpfsExport'\\n\\n  var Widget = require('$:/core/modules/widgets/widget.js').widget\\n\\n  var NavigatorWidget = function (parseTreeNode, options) {\\n    this.initialise(parseTreeNode, options)\\n  }\\n\\n  /*\\nInherit from the base widget class\\n*/\\n  NavigatorWidget.prototype = new Widget()\\n\\n  /*\\nRender this widget into the DOM\\n*/\\n  NavigatorWidget.prototype.render = function (parent, nextSibling) {\\n    this.addEventListeners([\\n      { type: 'tm-navigate', handler: 'handleNavigateEvent' },\\n      { type: 'tm-edit-tiddler', handler: 'handleEditTiddlerEvent' },\\n      { type: 'tm-delete-tiddler', handler: 'handleDeleteTiddlerEvent' },\\n      { type: 'tm-save-tiddler', handler: 'handleSaveTiddlerEvent' },\\n      { type: 'tm-cancel-tiddler', handler: 'handleCancelTiddlerEvent' },\\n      { type: 'tm-close-tiddler', handler: 'handleCloseTiddlerEvent' },\\n      { type: 'tm-close-all-tiddlers', handler: 'handleCloseAllTiddlersEvent' },\\n      {\\n        type: 'tm-close-other-tiddlers',\\n        handler: 'handleCloseOtherTiddlersEvent',\\n      },\\n      { type: 'tm-new-tiddler', handler: 'handleNewTiddlerEvent' },\\n      {\\n        type: 'tm-ipfs-export-tiddlers',\\n        handler: 'handleIpfsExportTiddlersEvent',\\n      },\\n      { type: 'tm-import-tiddlers', handler: 'handleImportTiddlersEvent' },\\n      {\\n        type: 'tm-ipfs-import-tiddlers',\\n        handler: 'handleIpfsImportTiddlersEvent',\\n      },\\n      {\\n        type: 'tm-perform-ipfs-export',\\n        handler: 'handlePerformIpfsExportEvent',\\n      },\\n      { type: 'tm-perform-import', handler: 'handlePerformImportEvent' },\\n      {\\n        type: 'tm-perform-ipfs-import',\\n        handler: 'handlePerformIpfsImportEvent',\\n      },\\n      { type: 'tm-fold-tiddler', handler: 'handleFoldTiddlerEvent' },\\n      {\\n        type: 'tm-fold-other-tiddlers',\\n        handler: 'handleFoldOtherTiddlersEvent',\\n      },\\n      { type: 'tm-fold-all-tiddlers', handler: 'handleFoldAllTiddlersEvent' },\\n      {\\n        type: 'tm-unfold-all-tiddlers',\\n        handler: 'handleUnfoldAllTiddlersEvent',\\n      },\\n      { type: 'tm-rename-tiddler', handler: 'handleRenameTiddlerEvent' },\\n    ])\\n    this.parentDomNode = parent\\n    this.computeAttributes()\\n    this.execute()\\n    this.renderChildren(parent, nextSibling)\\n  }\\n\\n  /**\\n   * Compute the internal state of the widget\\n   */\\n  NavigatorWidget.prototype.execute = function () {\\n    // Get our parameters\\n    this.storyTitle = this.getAttribute('story')\\n    this.historyTitle = this.getAttribute('history')\\n    this.setVariable('tv-story-list', this.storyTitle)\\n    this.setVariable('tv-history-list', this.historyTitle)\\n    this.story = new $tw.Story({\\n      wiki: this.wiki,\\n      storyTitle: this.storyTitle,\\n      historyTitle: this.historyTitle,\\n    })\\n    // Construct the child widgets\\n    this.makeChildWidgets()\\n  }\\n\\n  /**\\n   * Selectively refreshes the widget if needed.\\n   * Returns true if the widget or any of its children needed re-rendering\\n   */\\n  NavigatorWidget.prototype.refresh = function (changedTiddlers) {\\n    var changedAttributes = this.computeAttributes()\\n    if (changedAttributes.story || changedAttributes.history) {\\n      this.refreshSelf()\\n      return true\\n    } else {\\n      return this.refreshChildren(changedTiddlers)\\n    }\\n  }\\n\\n  NavigatorWidget.prototype.getStoryList = function () {\\n    return this.storyTitle ? this.wiki.getTiddlerList(this.storyTitle) : null\\n  }\\n\\n  NavigatorWidget.prototype.saveStoryList = function (storyList) {\\n    if (this.storyTitle) {\\n      var storyTiddler = this.wiki.getTiddler(this.storyTitle)\\n      this.wiki.addTiddler(\\n        new $tw.Tiddler({ title: this.storyTitle }, storyTiddler, {\\n          list: storyList,\\n        })\\n      )\\n    }\\n  }\\n\\n  NavigatorWidget.prototype.removeTitleFromStory = function (storyList, title) {\\n    if (storyList) {\\n      var p = storyList.indexOf(title)\\n      while (p !== -1) {\\n        storyList.splice(p, 1)\\n        p = storyList.indexOf(title)\\n      }\\n    }\\n  }\\n\\n  NavigatorWidget.prototype.replaceFirstTitleInStory = function (storyList, oldTitle, newTitle) {\\n    if (storyList) {\\n      var pos = storyList.indexOf(oldTitle)\\n      if (pos !== -1) {\\n        storyList[pos] = newTitle\\n        do {\\n          pos = storyList.indexOf(oldTitle, pos + 1)\\n          if (pos !== -1) {\\n            storyList.splice(pos, 1)\\n          }\\n        } while (pos !== -1)\\n      } else {\\n        storyList.splice(0, 0, newTitle)\\n      }\\n    }\\n  }\\n\\n  NavigatorWidget.prototype.addToStory = function (title, fromTitle) {\\n    if (this.storyTitle) {\\n      this.story.addToStory(title, fromTitle, {\\n        openLinkFromInsideRiver: this.getAttribute('openLinkFromInsideRiver', 'top'),\\n        openLinkFromOutsideRiver: this.getAttribute('openLinkFromOutsideRiver', 'top'),\\n      })\\n    }\\n  }\\n\\n  /**\\n   * Add a new record to the top of the history stack\\n   * title: a title string or an array of title strings\\n   * fromPageRect: page coordinates of the origin of the navigation\\n   */\\n  NavigatorWidget.prototype.addToHistory = function (title, fromPageRect) {\\n    this.story.addToHistory(title, fromPageRect, this.historyTitle)\\n  }\\n\\n  /**\\n   * Handle a tm-navigate event\\n   */\\n  NavigatorWidget.prototype.handleNavigateEvent = function (event) {\\n    event = $tw.hooks.invokeHook('th-navigating', event)\\n    if (event.navigateTo) {\\n      this.addToStory(event.navigateTo, event.navigateFromTitle)\\n      if (!event.navigateSuppressNavigation) {\\n        this.addToHistory(event.navigateTo, event.navigateFromClientRect)\\n      }\\n    }\\n    return false\\n  }\\n\\n  // Close a specified tiddler\\n  NavigatorWidget.prototype.handleCloseTiddlerEvent = function (event) {\\n    var title = event.param || event.tiddlerTitle\\n    var storyList = this.getStoryList()\\n    // Look for tiddlers with this title to close\\n    this.removeTitleFromStory(storyList, title)\\n    this.saveStoryList(storyList)\\n    return false\\n  }\\n\\n  // Close all tiddlers\\n  NavigatorWidget.prototype.handleCloseAllTiddlersEvent = function (event) {\\n    this.saveStoryList([])\\n    return false\\n  }\\n\\n  // Close other tiddlers\\n  NavigatorWidget.prototype.handleCloseOtherTiddlersEvent = function (event) {\\n    var title = event.param || event.tiddlerTitle\\n    this.saveStoryList([title])\\n    return false\\n  }\\n\\n  // Place a tiddler in edit mode\\n  NavigatorWidget.prototype.handleEditTiddlerEvent = function (event) {\\n    var editTiddler = $tw.hooks.invokeHook('th-editing-tiddler', event)\\n    if (!editTiddler) {\\n      return false\\n    }\\n    var self = this\\n    function isUnmodifiedShadow (title) {\\n      return self.wiki.isShadowTiddler(title) && !self.wiki.tiddlerExists(title)\\n    }\\n    function confirmEditShadow (title) {\\n      return confirm(\\n        $tw.language.getString('ConfirmEditShadowTiddler', {\\n          variables: { title: title },\\n        })\\n      )\\n    }\\n    var title = event.param || event.tiddlerTitle\\n    if (isUnmodifiedShadow(title) && !confirmEditShadow(title)) {\\n      return false\\n    }\\n    // Replace the specified tiddler with a draft in edit mode\\n    var draftTiddler = this.makeDraftTiddler(title)\\n    // Update the story and history if required\\n    if (!event.paramObject || event.paramObject.suppressNavigation !== 'yes') {\\n      var draftTitle = draftTiddler.fields.title\\n      var storyList = this.getStoryList()\\n      this.removeTitleFromStory(storyList, draftTitle)\\n      this.replaceFirstTitleInStory(storyList, title, draftTitle)\\n      this.addToHistory(draftTitle, event.navigateFromClientRect)\\n      this.saveStoryList(storyList)\\n      return false\\n    }\\n  }\\n\\n  // Delete a tiddler\\n  NavigatorWidget.prototype.handleDeleteTiddlerEvent = function (event) {\\n    // Get the tiddler we're deleting\\n    var title = event.param || event.tiddlerTitle\\n    var tiddler = this.wiki.getTiddler(title)\\n    var storyList = this.getStoryList()\\n    var originalTitle = tiddler ? tiddler.fields['draft.of'] : ''\\n    var originalTiddler = originalTitle ? this.wiki.getTiddler(originalTitle) : undefined\\n    var confirmationTitle\\n    if (!tiddler) {\\n      return false\\n    }\\n    // Check if the tiddler we're deleting is in draft mode\\n    if (originalTitle) {\\n      // If so, we'll prompt for confirmation referencing the original tiddler\\n      confirmationTitle = originalTitle\\n    } else {\\n      // If not a draft, then prompt for confirmation referencing the specified tiddler\\n      confirmationTitle = title\\n    }\\n    // Seek confirmation\\n    if (\\n      (this.wiki.getTiddler(originalTitle) || (tiddler.fields.text || '') !== '') &&\\n      !confirm(\\n        $tw.language.getString('ConfirmDeleteTiddler', {\\n          variables: { title: confirmationTitle },\\n        })\\n      )\\n    ) {\\n      return false\\n    }\\n    // Delete the original tiddler\\n    if (originalTitle) {\\n      if (originalTiddler) {\\n        $tw.hooks.invokeHook('th-deleting-tiddler', originalTiddler)\\n      }\\n      this.wiki.deleteTiddler(originalTitle)\\n      this.removeTitleFromStory(storyList, originalTitle)\\n    }\\n    // Invoke the hook function and delete this tiddler\\n    $tw.hooks.invokeHook('th-deleting-tiddler', tiddler)\\n    this.wiki.deleteTiddler(title)\\n    // Remove the closed tiddler from the story\\n    this.removeTitleFromStory(storyList, title)\\n    this.saveStoryList(storyList)\\n    // Trigger an autosave\\n    $tw.rootWidget.dispatchEvent({ type: 'tm-auto-save-wiki' })\\n    return false\\n  }\\n\\n  /**\\n   * Create/reuse the draft tiddler for a given title\\n   */\\n  NavigatorWidget.prototype.makeDraftTiddler = function (targetTitle) {\\n    // See if there is already a draft tiddler for this tiddler\\n    var draftTitle = this.wiki.findDraft(targetTitle)\\n    if (draftTitle) {\\n      return this.wiki.getTiddler(draftTitle)\\n    }\\n    // Get the current value of the tiddler we're editing\\n    var tiddler = this.wiki.getTiddler(targetTitle)\\n    // Save the initial value of the draft tiddler\\n    draftTitle = this.generateDraftTitle(targetTitle)\\n    var draftTiddler = new $tw.Tiddler(\\n      {\\n        text: '',\\n      },\\n      tiddler,\\n      {\\n        title: draftTitle,\\n        'draft.title': targetTitle,\\n        'draft.of': targetTitle,\\n      },\\n      this.wiki.getModificationFields()\\n    )\\n    this.wiki.addTiddler(draftTiddler)\\n    return draftTiddler\\n  }\\n\\n  /**\\n   * Generate a title for the draft of a given tiddler\\n   */\\n  NavigatorWidget.prototype.generateDraftTitle = function (title) {\\n    return this.wiki.generateDraftTitle(title)\\n  }\\n\\n  // Take a tiddler out of edit mode, saving the changes\\n  NavigatorWidget.prototype.handleSaveTiddlerEvent = function (event) {\\n    var title = event.param || event.tiddlerTitle\\n    var tiddler = this.wiki.getTiddler(title)\\n    var storyList = this.getStoryList()\\n    // Replace the original tiddler with the draft\\n    if (tiddler) {\\n      var draftTitle = (tiddler.fields['draft.title'] || '').trim()\\n      var draftOf = (tiddler.fields['draft.of'] || '').trim()\\n      if (draftTitle) {\\n        var isRename = draftOf !== draftTitle\\n        var isConfirmed = true\\n        if (isRename && this.wiki.tiddlerExists(draftTitle)) {\\n          isConfirmed = confirm(\\n            $tw.language.getString('ConfirmOverwriteTiddler', {\\n              variables: { title: draftTitle },\\n            })\\n          )\\n        }\\n        if (isConfirmed) {\\n          // Create the new tiddler and pass it through the th-saving-tiddler hook\\n          var newTiddler = new $tw.Tiddler(\\n            this.wiki.getCreationFields(),\\n            tiddler,\\n            {\\n              title: draftTitle,\\n              'draft.title': undefined,\\n              'draft.of': undefined,\\n            },\\n            this.wiki.getModificationFields()\\n          )\\n          newTiddler = $tw.hooks.invokeHook('th-saving-tiddler', newTiddler, tiddler)\\n          this.wiki.addTiddler(newTiddler)\\n          // If enabled, relink references to renamed tiddler\\n          var shouldRelink =\\n            this.getAttribute('relinkOnRename', 'no')\\n              .toLowerCase()\\n              .trim() === 'yes'\\n          if (isRename && shouldRelink && this.wiki.tiddlerExists(draftOf)) {\\n            this.wiki.relinkTiddler(draftOf, draftTitle)\\n          }\\n          // Remove the draft tiddler\\n          this.wiki.deleteTiddler(title)\\n          // Remove the original tiddler if we're renaming it\\n          if (isRename) {\\n            this.wiki.deleteTiddler(draftOf)\\n          }\\n          // #2381 always remove new title & old\\n          this.removeTitleFromStory(storyList, draftTitle)\\n          this.removeTitleFromStory(storyList, draftOf)\\n          if (!event.paramObject || event.paramObject.suppressNavigation !== 'yes') {\\n            // Replace the draft in the story with the original\\n            this.replaceFirstTitleInStory(storyList, title, draftTitle)\\n            this.addToHistory(draftTitle, event.navigateFromClientRect)\\n            if (draftTitle !== this.storyTitle) {\\n              this.saveStoryList(storyList)\\n            }\\n          }\\n          // Trigger an autosave\\n          $tw.rootWidget.dispatchEvent({ type: 'tm-auto-save-wiki' })\\n        }\\n      }\\n    }\\n    return false\\n  }\\n\\n  // Take a tiddler out of edit mode without saving the changes\\n  NavigatorWidget.prototype.handleCancelTiddlerEvent = function (event) {\\n    event = $tw.hooks.invokeHook('th-cancelling-tiddler', event)\\n    // Flip the specified tiddler from draft back to the original\\n    var draftTitle = event.param || event.tiddlerTitle\\n    var draftTiddler = this.wiki.getTiddler(draftTitle)\\n    var originalTitle = draftTiddler && draftTiddler.fields['draft.of']\\n    if (draftTiddler && originalTitle) {\\n      // Ask for confirmation if the tiddler text has changed\\n      var isConfirmed = true\\n      var originalTiddler = this.wiki.getTiddler(originalTitle)\\n      var storyList = this.getStoryList()\\n      if (this.wiki.isDraftModified(draftTitle)) {\\n        isConfirmed = confirm(\\n          $tw.language.getString('ConfirmCancelTiddler', {\\n            variables: { title: draftTitle },\\n          })\\n        )\\n      }\\n      // Remove the draft tiddler\\n      if (isConfirmed) {\\n        this.wiki.deleteTiddler(draftTitle)\\n        if (!event.paramObject || event.paramObject.suppressNavigation !== 'yes') {\\n          if (originalTiddler) {\\n            this.replaceFirstTitleInStory(storyList, draftTitle, originalTitle)\\n            this.addToHistory(originalTitle, event.navigateFromClientRect)\\n          } else {\\n            this.removeTitleFromStory(storyList, draftTitle)\\n          }\\n          this.saveStoryList(storyList)\\n        }\\n      }\\n    }\\n    return false\\n  }\\n\\n  // Create a new draft tiddler\\n  // event.param can either be the title of a template tiddler, or a hashmap of fields.\\n  //\\n  // The title of the newly created tiddler follows these rules:\\n  // * If a hashmap was used and a title field was specified, use that title\\n  // * If a hashmap was used without a title field, use a default title, if necessary making it unique with a numeric suffix\\n  // * If a template tiddler was used, use the title of the template, if necessary making it unique with a numeric suffix\\n  //\\n  // If a draft of the target tiddler already exists then it is reused\\n  NavigatorWidget.prototype.handleNewTiddlerEvent = function (event) {\\n    event = $tw.hooks.invokeHook('th-new-tiddler', event)\\n    // Get the story details\\n    var storyList = this.getStoryList()\\n    var templateTiddler\\n    var additionalFields\\n    var title\\n    var draftTitle\\n    var existingTiddler\\n    // Get the template tiddler (if any)\\n    if (typeof event.param === 'string') {\\n      // Get the template tiddler\\n      templateTiddler = this.wiki.getTiddler(event.param)\\n      // Generate a new title\\n      title = this.wiki.generateNewTitle(event.param || $tw.language.getString('DefaultNewTiddlerTitle'))\\n    }\\n    // Get the specified additional fields\\n    if (typeof event.paramObject === 'object') {\\n      additionalFields = event.paramObject\\n    }\\n    if (typeof event.param === 'object') {\\n      // Backwards compatibility with 5.1.3\\n      additionalFields = event.param\\n    }\\n    if (additionalFields && additionalFields.title) {\\n      title = additionalFields.title\\n    }\\n    // Make a copy of the additional fields excluding any blank ones\\n    var filteredAdditionalFields = $tw.utils.extend({}, additionalFields)\\n    Object.keys(filteredAdditionalFields).forEach(function (fieldName) {\\n      if (filteredAdditionalFields[fieldName] === '') {\\n        delete filteredAdditionalFields[fieldName]\\n      }\\n    })\\n    // Generate a title if we don't have one\\n    title = title || this.wiki.generateNewTitle($tw.language.getString('DefaultNewTiddlerTitle'))\\n    // Find any existing draft for this tiddler\\n    draftTitle = this.wiki.findDraft(title)\\n    // Pull in any existing tiddler\\n    if (draftTitle) {\\n      existingTiddler = this.wiki.getTiddler(draftTitle)\\n    } else {\\n      draftTitle = this.generateDraftTitle(title)\\n      existingTiddler = this.wiki.getTiddler(title)\\n    }\\n    // Merge the tags\\n    var mergedTags = []\\n    if (existingTiddler && existingTiddler.fields.tags) {\\n      $tw.utils.pushTop(mergedTags, existingTiddler.fields.tags)\\n    }\\n    if (additionalFields && additionalFields.tags) {\\n      // Merge tags\\n      mergedTags = $tw.utils.pushTop(mergedTags, $tw.utils.parseStringArray(additionalFields.tags))\\n    }\\n    if (templateTiddler && templateTiddler.fields.tags) {\\n      // Merge tags\\n      mergedTags = $tw.utils.pushTop(mergedTags, templateTiddler.fields.tags)\\n    }\\n    // Save the draft tiddler\\n    var draftTiddler = new $tw.Tiddler(\\n      {\\n        text: '',\\n        'draft.title': title,\\n      },\\n      templateTiddler,\\n      additionalFields,\\n      this.wiki.getCreationFields(),\\n      existingTiddler,\\n      filteredAdditionalFields,\\n      {\\n        title: draftTitle,\\n        'draft.of': title,\\n        tags: mergedTags,\\n      },\\n      this.wiki.getModificationFields()\\n    )\\n    this.wiki.addTiddler(draftTiddler)\\n    // Update the story to insert the new draft at the top and remove any existing tiddler\\n    if (storyList && storyList.indexOf(draftTitle) === -1) {\\n      var slot = storyList.indexOf(event.navigateFromTitle)\\n      if (slot === -1) {\\n        slot = this.getAttribute('openLinkFromOutsideRiver', 'top') === 'bottom' ? storyList.length - 1 : slot\\n      }\\n      storyList.splice(slot + 1, 0, draftTitle)\\n    }\\n    if (storyList && storyList.indexOf(title) !== -1) {\\n      storyList.splice(storyList.indexOf(title), 1)\\n    }\\n    this.saveStoryList(storyList)\\n    // Add a new record to the top of the history stack\\n    this.addToHistory(draftTitle)\\n    return false\\n  }\\n\\n  // Export JSON tiddlers\\n  NavigatorWidget.prototype.handleIpfsExportTiddlersEvent = function (event) {\\n    // Get the tiddlers\\n    var tiddlers = []\\n    try {\\n      tiddlers = JSON.parse(event.param)\\n    } catch (e) {}\\n    // Get the current $:/Export tiddler\\n    var exportTitle = event.exportTitle ? event.exportTitle : IPFS_EXPORT_TITLE\\n    var exportTiddler = this.wiki.getTiddler(exportTitle)\\n    var exportData = this.wiki.getTiddlerData(exportTitle, {})\\n    var newFields = {\\n      title: exportTitle,\\n      type: 'application/json',\\n      'plugin-type': 'ipfs-export',\\n      status: 'pending',\\n      target: event.target,\\n    }\\n    var outgoingTiddlers = []\\n    // Process each tiddler\\n    exportData.tiddlers = exportData.tiddlers || {}\\n    $tw.utils.each(tiddlers, function (tiddlerFields) {\\n      tiddlerFields.title = $tw.utils.trim(tiddlerFields.title)\\n      var title = tiddlerFields.title\\n      if (title) {\\n        outgoingTiddlers.push(title)\\n        exportData.tiddlers[title] = tiddlerFields\\n      }\\n    })\\n    // Deselect any suppressed tiddlers\\n    $tw.utils.each(exportData.tiddlers, function (tiddler, title) {\\n      if ($tw.utils.count(tiddler) === 0) {\\n        newFields['selection-' + title] = 'unchecked'\\n      }\\n    })\\n    // Save the $:/Export tiddler\\n    newFields.text = JSON.stringify(exportData, null, $tw.config.preferences.jsonSpaces)\\n    this.wiki.addTiddler(new $tw.Tiddler(exportTiddler, newFields))\\n    // Update the story and history details\\n    var storyList = this.getStoryList()\\n    var history = []\\n    // Add it to the story\\n    if (storyList && storyList.indexOf(exportTitle) === -1) {\\n      storyList.unshift(exportTitle)\\n    }\\n    // And to history\\n    history.push(exportTitle)\\n    // Save the updated story and history\\n    this.saveStoryList(storyList)\\n    this.addToHistory(history)\\n    return false\\n  }\\n\\n  NavigatorWidget.prototype.handlePerformIpfsExportEvent = async function (event) {\\n    var exportTiddler = this.wiki.getTiddler(event.param)\\n    var target = this.wiki.getTiddler(exportTiddler.fields.target)\\n    var exportData = this.wiki.getTiddlerDataCached(event.param, {\\n      tiddlers: {},\\n    })\\n    var tiddlers = []\\n    var exportReport = []\\n    exportReport.push($tw.language.getString('Export/Exported/Hint') + '\\\\n')\\n    $tw.utils.each(exportData.tiddlers, function (tiddlerFields) {\\n      var title = tiddlerFields.title\\n      if (title && exportTiddler && exportTiddler.fields['selection-' + title] !== 'unchecked') {\\n        tiddlers.push(tiddlerFields.title)\\n        exportReport.push('# [[' + tiddlerFields.title + ']]')\\n      }\\n    })\\n    var content = await $tw.utils.exportTiddlersAsJson(tiddlers, target.fields._export_uri)\\n    if (content !== null) {\\n      content = await $tw.ipfs.processContent(target, content, 'utf8')\\n    }\\n    if (content !== null) {\\n      if (await $tw.utils.exportToIpfs(target, content)) {\\n        // Replace the $:/Export tiddler with an export report\\n        this.wiki.addTiddler(\\n          new $tw.Tiddler({\\n            title: exportTiddler.fields.title,\\n            text: exportReport.join('\\\\n'),\\n            status: 'complete',\\n          })\\n        )\\n      }\\n      // Navigate to the $:/Export tiddler\\n      this.addToHistory([event.param])\\n    }\\n  }\\n\\n  // Import IPFS JSON tiddlers into a pending import tiddler\\n  NavigatorWidget.prototype.handleIpfsImportTiddlersEvent = function (event) {\\n    // Get the new or updated tiddlers\\n    var tiddlers = []\\n    try {\\n      tiddlers = Array.from(event.param.merged.values())\\n    } catch (e) {}\\n    // Get the deleted tiddlers\\n    var deleted = []\\n    try {\\n      deleted = Array.from(event.param.deleted.values())\\n    } catch (e) {}\\n    // Get the current $:/IpfsImport tiddler\\n    var importTitle = event.importTitle ? event.importTitle : IPFS_IMPORT_TITLE\\n    var importTiddler = this.wiki.getTiddler(importTitle)\\n    var importData = this.wiki.getTiddlerData(importTitle, {})\\n    var newFields = {\\n      title: importTitle,\\n      type: 'application/json',\\n      'plugin-type': 'ipfs-import',\\n      status: 'pending',\\n    }\\n    var incomingTiddlers = []\\n    // Process each new or updated tiddler\\n    importData.tiddlers = importData.tiddlers || {}\\n    $tw.utils.each(tiddlers, function (tiddlerFields) {\\n      tiddlerFields.title = $tw.utils.trim(tiddlerFields.title)\\n      var title = tiddlerFields.title\\n      if (title) {\\n        incomingTiddlers.push(title)\\n        importData.tiddlers[title] = tiddlerFields\\n        newFields['import-' + title] = 'yes'\\n      }\\n    })\\n    // Give the active upgrader modules a chance to process the incoming tiddlers\\n    var messages = this.wiki.invokeUpgraders(incomingTiddlers, importData.tiddlers)\\n    $tw.utils.each(messages, function (message, title) {\\n      newFields['message-' + title] = message\\n    })\\n    // Deselect any suppressed tiddlers\\n    $tw.utils.each(importData.tiddlers, function (tiddler, title) {\\n      if ($tw.utils.count(tiddler) === 0) {\\n        newFields['importSelection-' + title] = 'unchecked'\\n      }\\n    })\\n    // Process each deleted tiddler\\n    importData.tiddlers = importData.tiddlers || {}\\n    $tw.utils.each(deleted, function (tiddlerFields) {\\n      tiddlerFields.title = $tw.utils.trim(tiddlerFields.title)\\n      var title = tiddlerFields.title\\n      if (title) {\\n        incomingTiddlers.push(title)\\n        importData.tiddlers[title] = tiddlerFields\\n        newFields['delete-' + title] = 'yes'\\n      }\\n    })\\n    // Save the $:/IpfsImport tiddler\\n    newFields.text = JSON.stringify(importData, null, $tw.config.preferences.jsonSpaces)\\n    this.wiki.addTiddler(new $tw.Tiddler(importTiddler, newFields))\\n    // Update the story and history details\\n    var autoOpenOnImport = event.autoOpenOnImport ? event.autoOpenOnImport : this.getVariable('tv-auto-open-on-import')\\n    if (autoOpenOnImport !== 'no') {\\n      var storyList = this.getStoryList()\\n      var history = []\\n      // Add it to the story\\n      if (storyList && storyList.indexOf(importTitle) === -1) {\\n        storyList.unshift(importTitle)\\n      }\\n      // And to history\\n      history.push(importTitle)\\n      // Save the updated story and history\\n      this.saveStoryList(storyList)\\n      this.addToHistory(history)\\n    }\\n    return false\\n  }\\n\\n  // Import JSON tiddlers into a pending import tiddler\\n  NavigatorWidget.prototype.handleImportTiddlersEvent = function (event) {\\n    // Get the tiddlers\\n    var tiddlers = []\\n    try {\\n      tiddlers = JSON.parse(event.param)\\n    } catch (e) {}\\n    // Get the current $:/Import tiddler\\n    var importTitle = event.importTitle ? event.importTitle : IMPORT_TITLE\\n    var importTiddler = this.wiki.getTiddler(importTitle)\\n    var importData = this.wiki.getTiddlerData(importTitle, {})\\n    var newFields = {\\n      title: importTitle,\\n      type: 'application/json',\\n      'plugin-type': 'import',\\n      status: 'pending',\\n    }\\n    var incomingTiddlers = []\\n    // Process each tiddler\\n    importData.tiddlers = importData.tiddlers || {}\\n    $tw.utils.each(tiddlers, function (tiddlerFields) {\\n      tiddlerFields.title = $tw.utils.trim(tiddlerFields.title)\\n      var title = tiddlerFields.title\\n      if (title) {\\n        incomingTiddlers.push(title)\\n        importData.tiddlers[title] = tiddlerFields\\n      }\\n    })\\n    // Give the active upgrader modules a chance to process the incoming tiddlers\\n    var messages = this.wiki.invokeUpgraders(incomingTiddlers, importData.tiddlers)\\n    $tw.utils.each(messages, function (message, title) {\\n      newFields['message-' + title] = message\\n    })\\n    // Deselect any suppressed tiddlers\\n    $tw.utils.each(importData.tiddlers, function (tiddler, title) {\\n      if ($tw.utils.count(tiddler) === 0) {\\n        newFields['selection-' + title] = 'unchecked'\\n        newFields['suppressed-' + title] = 'yes'\\n      }\\n    })\\n    // Save the $:/Import tiddler\\n    newFields.text = JSON.stringify(importData, null, $tw.config.preferences.jsonSpaces)\\n    this.wiki.addTiddler(new $tw.Tiddler(importTiddler, newFields))\\n    // Update the story and history details\\n    var autoOpenOnImport = event.autoOpenOnImport ? event.autoOpenOnImport : this.getVariable('tv-auto-open-on-import')\\n    if (autoOpenOnImport !== 'no') {\\n      var storyList = this.getStoryList()\\n      var history = []\\n      // Add it to the story\\n      if (storyList && storyList.indexOf(importTitle) === -1) {\\n        storyList.unshift(importTitle)\\n      }\\n      // And to history\\n      history.push(importTitle)\\n      // Save the updated story and history\\n      this.saveStoryList(storyList)\\n      this.addToHistory(history)\\n    }\\n    return false\\n  }\\n\\n  //\\n  NavigatorWidget.prototype.handlePerformImportEvent = function (event) {\\n    var self = this\\n    var importTiddler = this.wiki.getTiddler(event.param)\\n    var importData = this.wiki.getTiddlerDataCached(event.param, {\\n      tiddlers: {},\\n    })\\n    var importReport = []\\n    // Add the tiddlers to the store\\n    importReport.push($tw.language.getString('Import/Imported/Hint') + '\\\\n')\\n    $tw.utils.each(importData.tiddlers, function (tiddlerFields) {\\n      var title = tiddlerFields.title\\n      if (title && importTiddler && importTiddler.fields['selection-' + title] !== 'unchecked') {\\n        if ($tw.utils.hop(importTiddler.fields, ['rename-' + title])) {\\n          var tiddler = new $tw.Tiddler(tiddlerFields, {\\n            title: importTiddler.fields['rename-' + title],\\n          })\\n        } else {\\n          var tiddler = new $tw.Tiddler(tiddlerFields)\\n        }\\n        tiddler = $tw.hooks.invokeHook('th-importing-tiddler', tiddler)\\n        self.wiki.addTiddler(tiddler)\\n        importReport.push('# [[' + tiddlerFields.title + ']]')\\n      }\\n    })\\n    // Replace the $:/Import tiddler with an import report\\n    this.wiki.addTiddler(\\n      new $tw.Tiddler({\\n        title: event.param,\\n        text: importReport.join('\\\\n'),\\n        status: 'complete',\\n      })\\n    )\\n    // Navigate to the $:/Import tiddler\\n    this.addToHistory([event.param])\\n    // Trigger an autosave\\n    $tw.rootWidget.dispatchEvent({ type: 'tm-auto-save-wiki' })\\n  }\\n\\n  //\\n  NavigatorWidget.prototype.handlePerformIpfsImportEvent = function (event) {\\n    var self = this\\n    var importTiddler = this.wiki.getTiddler(event.param)\\n    var importData = this.wiki.getTiddlerDataCached(event.param, {\\n      tiddlers: {},\\n    })\\n    var importReport = []\\n    // Add the tiddlers to the store\\n    importReport.push($tw.language.getString('Import/Imported/Hint') + '\\\\n')\\n    $tw.utils.each(importData.tiddlers, function (tiddlerFields) {\\n      var title = tiddlerFields.title\\n      if (title && importTiddler && importTiddler.fields['import-' + title] === 'yes' && importTiddler.fields['importSelection-' + title] !== 'unchecked') {\\n        if ($tw.utils.hop(importTiddler.fields, ['rename-' + title])) {\\n          var tiddler = new $tw.Tiddler(tiddlerFields, {\\n            title: importTiddler.fields['rename-' + title],\\n          })\\n        } else {\\n          var tiddler = new $tw.Tiddler(tiddlerFields)\\n        }\\n        tiddler = $tw.hooks.invokeHook('th-importing-tiddler', tiddler)\\n        self.wiki.addTiddler(tiddler)\\n        importReport.push('# [[' + tiddlerFields.title + ']]')\\n      }\\n    })\\n    importReport.push('\\\\n')\\n    // Delete tiddlers from the store\\n    importReport.push($tw.language.getString('Import/Deleted/Hint') + '\\\\n')\\n    $tw.utils.each(importData.tiddlers, function (tiddlerFields) {\\n      var title = tiddlerFields.title\\n      if (title && importTiddler && importTiddler.fields['delete-' + title] === 'yes' && importTiddler.fields['deleteSelection-' + title] !== 'unchecked') {\\n        var tiddler = self.wiki.getTiddler(title)\\n        if (tiddler) {\\n          self.handleDeleteTiddlerEvent({ param: tiddlerFields.title })\\n          tiddler = self.wiki.getTiddler(title)\\n          if (tiddler === undefined) {\\n            importReport.push('# [[' + tiddlerFields.title + ']]')\\n          }\\n        }\\n      }\\n    })\\n    // Replace the $:/IpfsImport tiddler with an import report\\n    this.wiki.addTiddler(\\n      new $tw.Tiddler({\\n        title: event.param,\\n        text: importReport.join('\\\\n'),\\n        status: 'complete',\\n      })\\n    )\\n    // Navigate to the $:/IpfsImport tiddler\\n    this.addToHistory([event.param])\\n    // Trigger an autosave\\n    $tw.rootWidget.dispatchEvent({ type: 'tm-auto-save-wiki' })\\n  }\\n\\n  NavigatorWidget.prototype.handleFoldTiddlerEvent = function (event) {\\n    var paramObject = event.paramObject || {}\\n    if (paramObject.foldedState) {\\n      var foldedState = this.wiki.getTiddlerText(paramObject.foldedState, 'show') === 'show' ? 'hide' : 'show'\\n      this.wiki.setText(paramObject.foldedState, 'text', null, foldedState)\\n    }\\n  }\\n\\n  NavigatorWidget.prototype.handleFoldOtherTiddlersEvent = function (event) {\\n    var self = this\\n    var paramObject = event.paramObject || {}\\n    var prefix = paramObject.foldedStatePrefix\\n    $tw.utils.each(this.getStoryList(), function (title) {\\n      self.wiki.setText(prefix + title, 'text', null, event.param === title ? 'show' : 'hide')\\n    })\\n  }\\n\\n  NavigatorWidget.prototype.handleFoldAllTiddlersEvent = function (event) {\\n    var self = this\\n    var paramObject = event.paramObject || {}\\n    var prefix = paramObject.foldedStatePrefix || '$:/state/folded/'\\n    $tw.utils.each(this.getStoryList(), function (title) {\\n      self.wiki.setText(prefix + title, 'text', null, 'hide')\\n    })\\n  }\\n\\n  NavigatorWidget.prototype.handleUnfoldAllTiddlersEvent = function (event) {\\n    var self = this\\n    var paramObject = event.paramObject || {}\\n    var prefix = paramObject.foldedStatePrefix\\n    $tw.utils.each(this.getStoryList(), function (title) {\\n      self.wiki.setText(prefix + title, 'text', null, 'show')\\n    })\\n  }\\n\\n  NavigatorWidget.prototype.handleRenameTiddlerEvent = function (event) {\\n    var options = {}\\n    var paramObject = event.paramObject || {}\\n    var from = paramObject.from || event.tiddlerTitle\\n    var to = paramObject.to\\n    /*eslint no-unneeded-ternary:\\\"off\\\"*/\\n    options.dontRenameInTags = paramObject.renameInTags === 'false' || paramObject.renameInTags === 'no' ? true : false\\n    options.dontRenameInLists = paramObject.renameInLists === 'false' || paramObject.renameInLists === 'no' ? true : false\\n    this.wiki.renameTiddler(from, to, options)\\n  }\\n\\n  exports.navigator = NavigatorWidget\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/plugins/ipfs/ipfs-wiki.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-wiki.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-wiki.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: wikimethod\\n\\nwikimethod\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Parse a block of text of a specified MIME type\\n   *  type: content type of text to be parsed\\n   *  text: text\\n   *  options: see below\\n   * Options include:\\n   *  parseAsInline: if true, the text of the tiddler will be parsed as an inline run\\n   *  _canonical_uri: optional string of the canonical URI of this content\\n   */\\n  exports.parseText = function (type, text, options) {\\n    text = text || ''\\n    options = options || {}\\n    // Select a parser\\n    var Parser = $tw.Wiki.parsers[type]\\n    if (!Parser && $tw.utils.getFileExtensionInfo(type)) {\\n      Parser = $tw.Wiki.parsers[$tw.utils.getFileExtensionInfo(type).type]\\n    }\\n    if (!Parser) {\\n      Parser = $tw.Wiki.parsers[options.defaultType || 'text/vnd.tiddlywiki']\\n    }\\n    if (!Parser) {\\n      return null\\n    }\\n    // Return the parser instance\\n    return new Parser(type, text, {\\n      parseAsInline: options.parseAsInline,\\n      wiki: this,\\n      tiddler: options.tiddler,\\n    })\\n  }\\n\\n  /*\\n   * Parse a tiddler according to its MIME type\\n   */\\n  exports.parseTiddler = function (title, options) {\\n    options = $tw.utils.extend({}, options)\\n    var cacheType = options.parseAsInline ? 'inlineParseTree' : 'blockParseTree'\\n    var tiddler = this.getTiddler(title)\\n    var self = this\\n    return tiddler\\n      ? this.getCacheForTiddler(title, cacheType, function () {\\n          options.tiddler = tiddler\\n          return self.parseText(tiddler.fields.type, tiddler.fields.text, options)\\n        })\\n      : null\\n  }\\n\\n  /**\\n   * Parse text from a tiddler and render it into another format\\n   * outputType: content type for the output\\n   * title: title of the tiddler to be rendered\\n   * options: see below\\n   * Options include:\\n   * variables: hashmap of variables to set\\n   * parentWidget: optional parent widget for the root node\\n   */\\n  exports.renderTiddlerAndSign = async function (outputType, title, options) {\\n    options = options || {}\\n    var parser = this.parseTiddler(title, options)\\n    var widgetNode = this.makeWidget(parser, options)\\n    var container = $tw.fakeDocument.createElement('div')\\n    widgetNode.render(container, null)\\n    var sign = $tw.wiki.locateTWElement(container, 'sign')\\n    if (sign) {\\n      var content = JSON.parse($tw.utils.htmlDecode(sign.textContent))\\n      content.signature = await $tw.ipfs.personalSign(content.keccak256)\\n      content.signature = $tw.crypto.encrypt(content.signature)\\n      content = JSON.stringify(content)\\n      sign.textContent = $tw.utils.htmlEncode(content)\\n    }\\n    return outputType === 'text/html' ? container.innerHTML : outputType === 'text/plain-formatted' ? container.formattedTextContent : container.textContent\\n  }\\n\\n  exports.locateTWElement = function (element, type) {\\n    if (element.children) {\\n      for (var i = 0; i < element.children.length; i++) {\\n        const current = element.children[i]\\n        if (current[type]) {\\n          return current\\n        }\\n        if (current.children) {\\n          const found = $tw.wiki.locateTWElement(current, type)\\n          if (found) {\\n            return found\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Read an array of browser File objects, invoking callback(tiddlerFieldsArray) once they're all read\\n   */\\n  exports.readFiles = async function (files, options) {\\n    var callback\\n    if (typeof options === 'function') {\\n      callback = options\\n      options = {}\\n    } else {\\n      callback = options.callback\\n    }\\n    var result = []\\n    var outstanding = files.length\\n    var readFileCallback = function (content) {\\n      if ($tw.utils.isArray(content)) {\\n        result.push.apply(result, content)\\n      } else {\\n        result = content\\n      }\\n      if (--outstanding === 0) {\\n        callback(result)\\n      }\\n    }\\n    for (var f = 0; f < files.length; f++) {\\n      await this.readFile(files[f], $tw.utils.extend({}, options, { callback: readFileCallback }))\\n    }\\n    return files.length\\n  }\\n\\n  /**\\n   * Read a browser File object, invoking callback(tiddlerFieldsArray) with an array of tiddler fields objects\\n   */\\n  exports.readFile = async function (file, options) {\\n    var callback\\n    if (typeof options === 'function') {\\n      callback = options\\n      options = {}\\n    } else {\\n      callback = options.callback\\n    }\\n    // Get the type, falling back to the filename extension\\n    var type = file.type\\n    if (type === '' || !type) {\\n      var dotPos = file.name.lastIndexOf('.')\\n      if (dotPos !== -1) {\\n        var fileExtensionInfo = $tw.utils.getFileExtensionInfo(file.name.substr(dotPos))\\n        if (fileExtensionInfo) {\\n          type = fileExtensionInfo.type\\n        }\\n      }\\n    }\\n    // Figure out if we're reading a binary file\\n    var contentTypeInfo = $tw.config.contentTypeInfo[type]\\n    var isBinary = contentTypeInfo ? contentTypeInfo.encoding === 'base64' : false\\n    // Log some debugging information\\n    if ($tw.log.IMPORT) {\\n      console.log(\\\"Importing file '\\\" + file.name + \\\"', type: '\\\" + type + \\\"', isBinary: \\\" + isBinary)\\n    }\\n    // Give the hook a chance to process the drag\\n    if (\\n      (await $tw.hooks.invokeHook('th-importing-file', {\\n        file: file,\\n        type: type,\\n        isBinary: isBinary,\\n        callback: callback,\\n      })) !== true\\n    ) {\\n      this.readFileContent(file, type, isBinary, options.deserializer, callback)\\n    }\\n  }\\n\\n  /**\\n   * Lower level utility to read the content of a browser File object,\\n   * invoking callback(tiddlerFieldsArray) with an array of tiddler fields objects\\n   */\\n  exports.readFileContent = function (file, type, isBinary, deserializer, callback) {\\n    var self = this\\n    // Create the FileReader\\n    var reader = new FileReader()\\n    // Onload\\n    reader.onload = function (event) {\\n      var text = event.target.result\\n      var tiddlerFields = { title: file.name || 'Untitled', type: type }\\n      if (isBinary) {\\n        var commaPos = text.indexOf(',')\\n        if (commaPos !== -1) {\\n          text = text.substr(commaPos + 1)\\n        }\\n      }\\n      // Check whether this is a compressed TiddlyWiki file\\n      var compressedStoreArea = $tw.utils.extractCompressedStoreArea(text)\\n      if (compressedStoreArea) {\\n        if (!$tw.utils.inflateCompressedStoreArea(compressedStoreArea, callback)) {\\n          // Otherwise, just try to deserialise any tiddlers in the file\\n          callback(\\n            self.deserializeTiddlers(type, compressedStoreArea, tiddlerFields, {\\n              deserializer: deserializer,\\n            })\\n          )\\n        }\\n      } else {\\n        // Check whether this is an encrypted TiddlyWiki file\\n        var encryptedStoreArea = $tw.utils.extractEncryptedStoreArea(text)\\n        if (encryptedStoreArea) {\\n          if (!$tw.utils.decrypt(encryptedStoreArea, callback)) {\\n            callback(\\n              self.deserializeTiddlers(type, encryptedStoreArea, tiddlerFields, {\\n                deserializer: deserializer,\\n              })\\n            )\\n          }\\n        } else {\\n          // Otherwise, just try to deserialise any tiddlers in the file\\n          callback(\\n            self.deserializeTiddlers(type, text, tiddlerFields, {\\n              deserializer: deserializer,\\n            })\\n          )\\n        }\\n      }\\n    }\\n    // Kick off the read\\n    if (isBinary) {\\n      reader.readAsDataURL(file)\\n    } else {\\n      reader.readAsText(file)\\n    }\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"wikimethod\"\n        },\n        \"$:/plugins/ipfs/changelog\": {\n            \"title\": \"$:/plugins/ipfs/changelog\",\n            \"tags\": \"$:/ipfs/core\",\n            \"type\": \"text/vnd.tiddlywiki\",\n            \"text\": \"!! v0.4.0\\n\\n[[See GitHub for detailed change history of this release|https://github.com/xmaysonnave/tiddlywiki-ipfs/compare/v0.3.0...v0.4.0]]\\n\\n!! v0.3.0\\n\\n[[See GitHub for detailed change history of this release|https://github.com/xmaysonnave/tiddlywiki-ipfs/compare/v0.2.9...v0.3.0]]\\n\\n!! v0.2.9\\n\\n[[See GitHub for detailed change history of this release|https://github.com/xmaysonnave/tiddlywiki-ipfs/compare/v0.2.8...v0.2.9]]\\n\\n!! v0.2.8\\n\\n[[See GitHub for detailed change history of this release|https://github.com/xmaysonnave/tiddlywiki-ipfs/compare/v0.2.7...v0.2.8]]\\n\\n...\\n\\n!! 0.2.2\\n\\n* First public release\"\n        },\n        \"$:/plugins/ipfs/readme\": {\n            \"title\": \"$:/plugins/ipfs/readme\",\n            \"tags\": \"$:/ipfs/core\",\n            \"type\": \"text/vnd.tiddlywiki\",\n            \"text\": \"!! IPFS with ~TiddlyWiki\\n\\nFeatures:\\n\\n* Store `TiddlyWiki`'s and attachments on [ext[IPFS|https://ipfs.io/]]\\n* Access `TiddlyWiki`'s and attachments from [ext[IPFS|https://ipfs.io/]]\\n* Compress `TiddlyWiki`'s and attachments\\n* Encrypt, Decrypt and Sign `TiddlyWiki`'s and attachments\\n  * Standford\\n  * Ethereum\\n  * [ext[SHA-3|https://en.wikipedia.org/wiki/SHA-3]]\\n* Import and Export\\n* Publish and Manage IPNS Names and Keys\\n* Interact with [ext[Metamask|https://metamask.io]] Ethereum wallets\\n* Publish to [ext[ENS|https://ens.domains]]\\n* Share over [ext[IPFS|https://ipfs.io/]] `TiddlyWiki`'s [ext[Tiddlers|https://tiddlywiki.com/#Tiddlers]] and attachments\\n\\nSupported Browsers:\\n\\n* [ext[Firefox|https://www.mozilla.org]]\\n* [ext[Chrome|https://www.google.com/chrome/]]\\n* [ext[Chromium|https://www.chromium.org]]\\n\\nSupported Ethereum browser extension:\\n\\n* [ext[Metamask|https://metamask.io]]\\n\\nSupported Mobile ĐApp browser:\\n\\n* [ext[Metamask|https://metamask.io]]\\n\\nSupported ENS Ethereum Networks\\n\\n* `Mainnet`: Ethereum Main Network\\n* `Ropsten`: Ethereum Test Network (~PoW)\\n* `Rinkeby`: Ethereum Test Network (~PoA)\\n* `Goerli`: Ethereum Test Network (~PoA)\\n\\nResources:\\n\\n* https://github.com/xmaysonnave/tiddlywiki-ipfs/\\n* https://github.com/xmaysonnave/tiddlywiki-ipfs/blob/main/README.md\\n\\nCurrent:\\n\\n* [[$:/boot/boot.js]] {{$:/boot/boot.js!!version}} <$ipfslink value=<<boot-boot-version-url>>>[img[Available on IPFS|$:/ipfs/icons/ipfs]]</$ipfslink>\\n* [[$:/library/ipfs-modules.js]] {{$:/library/ipfs-modules.js!!version}} <$ipfslink value=<<library-ipfs-modules-version-url>>>[img[Available on IPFS|$:/ipfs/icons/ipfs]]</$ipfslink>\\n\\nBuilt:\\n\\n* `$:/boot/boot.js` {{$:/boot/boot.js-build!!_version}} <$ipfslink value={{$:/boot/boot.js-build!!_source_uri}}>[img[Available on IPFS|$:/ipfs/icons/ipfs]]</$ipfslink>\\n* `$:/library/ipfs-modules.js` {{$:/library/ipfs-modules.js-build!!_version}} <$ipfslink value={{$:/library/ipfs-modules.js-build!!_source_uri}}>[img[Available on IPFS|$:/ipfs/icons/ipfs]]</$ipfslink>\\n* [[$:/plugins/ipfs]] {{$:/plugins/ipfs!!version}} <$ipfslink value=<<plugins-ipfs-version-url>>>[img[Available on IPFS|$:/ipfs/icons/ipfs]]</$ipfslink>\\n\\nLatest:\\n\\n* `$:/boot/boot.js` <$ipfslink value=\\\"ipns://k51qzi5uqu5dmj8zym08576inkibqy8apl49xg888d1x0q5vhk1lt2uj6sp2wl/latest-build/tiddlywiki-ipfs/boot/\\\">[img[Available on IPFS|$:/ipfs/icons/ipfs]]</$ipfslink>\\n* `$:/library/ipfs-modules.js`  <$ipfslink value=\\\"ipns://k51qzi5uqu5dmj8zym08576inkibqy8apl49xg888d1x0q5vhk1lt2uj6sp2wl/latest-build/tiddlywiki-ipfs/library/\\\">[img[Available on IPFS|$:/ipfs/icons/ipfs]]</$ipfslink>\\n* `$:/plugins/ipfs` <$ipfslink value=\\\"ipns://k51qzi5uqu5dmj8zym08576inkibqy8apl49xg888d1x0q5vhk1lt2uj6sp2wl/latest-build/tiddlywiki-ipfs/plugin/\\\">[img[Available on IPFS|$:/ipfs/icons/ipfs]]</$ipfslink>\"\n        },\n        \"$:/ipfs/saver/api/http/10.45.0.1/5001\": {\n            \"title\": \"$:/ipfs/saver/api/http/10.45.0.1/5001\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/api\",\n            \"text\": \"http://10.45.0.1:5001\"\n        },\n        \"$:/ipfs/saver/api/http/127.0.0.1/5001\": {\n            \"title\": \"$:/ipfs/saver/api/http/127.0.0.1/5001\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/api\",\n            \"text\": \"http://127.0.0.1:5001\"\n        },\n        \"$:/ipfs/saver/api/https/bluelight.link\": {\n            \"title\": \"$:/ipfs/saver/api/https/bluelight.link\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/api\",\n            \"text\": \"https://api.bluelight.link\"\n        },\n        \"$:/ipfs/saver/api/https/ipfs.infura.io/5001\": {\n            \"title\": \"$:/ipfs/saver/api/https/ipfs.infura.io/5001\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/api\",\n            \"text\": \"https://ipfs.infura.io:5001\"\n        },\n        \"$:/ipfs/saver/api/http/localhost/5001\": {\n            \"title\": \"$:/ipfs/saver/api/http/localhost/5001\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/api\",\n            \"text\": \"http://localhost:5001\"\n        },\n        \"$:/ipfs/saver/gateway/http/10.45.0.1/8080\": {\n            \"title\": \"$:/ipfs/saver/gateway/http/10.45.0.1/8080\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"http://10.45.0.1:8080\"\n        },\n        \"$:/ipfs/saver/gateway/http/127.0.0.1\": {\n            \"title\": \"$:/ipfs/saver/gateway/http/127.0.0.1\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"http://127.0.0.1:8080\"\n        },\n        \"$:/ipfs/saver/gateway/https/bluelight.link\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/bluelight.link\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://bluelight.link\"\n        },\n        \"$:/ipfs/saver/gateway/https/cf-ipfs.com\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/cf-ipfs.com\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://cf-ipfs.com\"\n        },\n        \"$:/ipfs/saver/gateway/https/cloudflare-ipfs.com\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/cloudflare-ipfs.com\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://cloudflare-ipfs.com\"\n        },\n        \"$:/ipfs/saver/gateway/https/dweb.link\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/dweb.link\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://dweb.link\"\n        },\n        \"$:/ipfs/saver/gateway/https/ipfs.eternum.io\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ipfs.eternum.io\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://ipfs.eternum.io\"\n        },\n        \"$:/ipfs/saver/gateway/https/gateway.bluelightav.org\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/gateway.bluelightav.org\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://gateway.bluelightav.org\"\n        },\n        \"$:/ipfs/saver/gateway/https/gateway.ipfs.io\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/gateway.ipfs.io\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://gateway.ipfs.io\"\n        },\n        \"$:/ipfs/saver/gateway/https/ipfs.greyh.at\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ipfs.greyh.at\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://ipfs.greyh.at\"\n        },\n        \"$:/ipfs/saver/gateway/https/hardbin.com\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/hardbin.com\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://hardbin.com\"\n        },\n        \"$:/ipfs/saver/gateway/https/ipfs.infura.io\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ipfs.infura.io\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://ipfs.infura.io\"\n        },\n        \"$:/ipfs/saver/gateway/https/ipfs.io\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ipfs.io\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://ipfs.io\"\n        },\n        \"$:/ipfs/saver/gateway/https/ipfs.jes.xxx\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ipfs.jes.xxx\",\n            \"tags\": \"$:/ipfs/core $:/ipfs $:/ipfs/saver/gateway\",\n            \"text\": \"https://ipfs.jes.xxx\"\n        },\n        \"$:/ipfs/saver/gateway/http/localhost\": {\n            \"title\": \"$:/ipfs/saver/gateway/http/localhost\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"http://localhost:8080\"\n        },\n        \"$:/ipfs/saver/gateway/https/ninetailed.ninja\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ninetailed.ninja\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://ninetailed.ninja\"\n        },\n        \"$:/ipfs/saver/gateway/https/gateway.pinata.cloud\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/gateway.pinata.cloud\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://gateway.pinata.cloud\"\n        },\n        \"$:/ipfs/saver/gateway/https/ipfs.sloppyta.co\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ipfs.sloppyta.co\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://ipfs.sloppyta.co\"\n        },\n        \"$:/ipfs/saver/gateway/https/gateway.temporal.cloud\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/gateway.temporal.cloud\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://gateway.temporal.cloud\"\n        },\n        \"$:/core/templates/static.area\": {\n            \"title\": \"$:/core/templates/static.area\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"<$reveal type=\\\"nomatch\\\" state=\\\"$:/isCompressed\\\" text=\\\"yes\\\">\\n<$reveal type=\\\"nomatch\\\" state=\\\"$:/isEncrypted\\\" text=\\\"yes\\\">\\n{{{ [all[shadows+tiddlers]tag[$:/tags/RawStaticContent]!has[draft.of]] ||$:/core/templates/raw-static-tiddler}}}\\n{{$:/core/templates/static.content||$:/core/templates/html-tiddler}}\\n</$reveal>\\n<!-- ensure splash screen isn't shown when JS is disabled -->\\n`<style>\\n.tc-remove-when-wiki-loaded {display: none;}\\n</style>`\\n</$reveal>\\n<$reveal type=\\\"match\\\" state=\\\"$:/isCompressed\\\" text=\\\"yes\\\">\\n<!-- ensure splash screen isn't shown when JS is disabled -->\\n`<style>\\n.tc-remove-when-wiki-loaded {display: none;}\\n</style>`\\n</$reveal>\"\n        },\n        \"$:/core/templates/store.area.template.html\": {\n            \"title\": \"$:/core/templates/store.area.template.html\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"<$reveal type=\\\"nomatch\\\" state=\\\"$:/isCompressed\\\" text=\\\"yes\\\">\\n<$reveal type=\\\"nomatch\\\" state=\\\"$:/isEncrypted\\\" text=\\\"yes\\\">\\n`<div id=\\\"storeArea\\\" type=\\\"text/plain\\\" style=\\\"display:none;\\\">`\\n<$list filter=<<saveTiddlerFilter>> template=\\\"$:/core/templates/html-div-tiddler\\\"/>\\n<$list filter={{{ [<skinnySaveTiddlerFilter>] }}} template=\\\"$:/core/templates/html-div-skinny-tiddler\\\"/>\\n`</div>`\\n</$reveal>\\n<$reveal type=\\\"match\\\" state=\\\"$:/isEncrypted\\\" text=\\\"yes\\\">\\n`<!--~~ Encrypted tiddlers ~~-->`\\n`<pre id=\\\"encryptedStoreArea\\\" type=\\\"text/plain\\\" style=\\\"display:none;\\\">`\\n<$encrypt filter=<<saveTiddlerFilter>>/>\\n`</pre>`\\n</$reveal>\\n</$reveal>\\n<$reveal type=\\\"match\\\" state=\\\"$:/isCompressed\\\" text=\\\"yes\\\">\\n`<!--~~ Compressed tiddlers ~~-->`\\n`<pre id=\\\"compressedStoreArea\\\" type=\\\"text/plain\\\" style=\\\"display:none;\\\">`\\n<$compress filter=<<saveTiddlerFilter>>/>\\n`</pre>`\\n</$reveal>\"\n        },\n        \"$:/core/ui/ControlPanel/Saving/General\": {\n            \"title\": \"$:/core/ui/ControlPanel/Saving/General\",\n            \"tags\": \"$:/ipfs/core $:/tags/ControlPanel/Saving\",\n            \"caption\": \"{{$:/language/ControlPanel/Saving/General/Caption}}\",\n            \"list-before\": \"\",\n            \"text\": \"\\\\define lingo-base() $:/language/ControlPanel/Settings/\\n\\n\\\\define preferred-saver()\\n<$text text=<<infosaver \\\"$(currentTiddler)$\\\">>/>\\n\\\\end\\n\\n{{$:/language/ControlPanel/Saving/General/Hint}}\\n\\n!! <$link to=\\\"$:/config/AutoSave\\\"><<lingo AutoSave/Caption>></$link>\\n\\n<<lingo AutoSave/Hint>>\\n\\n<$radio tiddler=\\\"$:/config/AutoSave\\\" value=\\\"yes\\\"> <<lingo AutoSave/Enabled/Description>> </$radio>\\n\\n<$radio tiddler=\\\"$:/config/AutoSave\\\" value=\\\"no\\\"> <<lingo AutoSave/Disabled/Description>> </$radio>\\n\\n!! <$link to=\\\"$:/isCompressed\\\"><<lingo Compression/Caption>></$link>\\n\\n<$checkbox tiddler=\\\"$:/isCompressed\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> <<lingo Compression/Description>> </$checkbox>\\n\\n!! <$link to=\\\"$:/config/encryption\\\"><<lingo Encryption/Caption>></$link>\\n\\n<$radio tiddler=\\\"$:/config/encryption\\\" value=\\\"standford\\\"> <<lingo Encryption/Standford/Description>> </$radio>\\n\\n<$radio tiddler=\\\"$:/config/encryption\\\" value=\\\"ethereum\\\"> <<lingo Encryption/Ethereum/Description>> </$radio>\\n\\n<$checkbox tiddler=\\\"$:/isSigned\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> <<lingo Encryption/Signature/Description>> </$checkbox>\\n\\n!! <$link to=\\\"$:/config/PreferredSaver\\\"><<lingo PreferredSaver/Caption>></$link>\\n\\n<$select tiddler=\\\"$:/config/PreferredSaver\\\">\\n<$list filter=\\\"[savers[]sort[]]\\\">\\n<option value=<<currentTiddler>>><<preferred-saver>></option>\\n</$list>\\n</$select>\"\n        },\n        \"$:/core/ui/ControlPanel/Saving/Ipfs\": {\n            \"title\": \"$:/core/ui/ControlPanel/Saving/Ipfs\",\n            \"tags\": \"$:/ipfs/core $:/tags/ControlPanel/Saving\",\n            \"caption\": \"{{$:/language/ControlPanel/Saving/IpfsService/Caption}}\",\n            \"text\": \"\\\\define lingo-base() $:/language/ControlPanel/Saving/IpfsService/\\n\\\\define service-name() Ipfs\\n\\n<<lingo Description>>\\n\\n''<<lingo Global>>''\\n\\n<table>\\n<tbody>\\n<tr>\\n<td width=\\\"90%\\\">''<$link to=\\\"$:/ipfs/saver/verbose\\\"><<lingo Verbose/Description>></$link>''</td>\\n<td width=\\\"10%\\\"><$checkbox tiddler=\\\"$:/ipfs/saver/verbose\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"yes\\\"/></td>\\n</tr>\\n<tr>\\n<td width=\\\"90%\\\">''<$link to=\\\"$:/ipfs/saver/pin\\\"><<lingo Pin/Description>></$link>''</td>\\n<td width=\\\"10%\\\"><$checkbox tiddler=\\\"$:/ipfs/saver/pin\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"yes\\\"/></td>\\n</tr>\\n<tr>\\n<td width=\\\"90%\\\">''<$link to=\\\"$:/ipfs/saver/unpin\\\"><<lingo Unpin/Description>></$link>''</td>\\n<td width=\\\"10%\\\"><$checkbox tiddler=\\\"$:/ipfs/saver/unpin\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"/></td>\\n</tr>\\n<tr>\\n<td width=\\\"90%\\\">''<$link to=\\\"$:/ipfs/saver/ipns/resolve\\\"><<lingo IPNS/Resolve/Description>></$link>''</td>\\n<td width=\\\"10%\\\"><$checkbox tiddler=\\\"$:/ipfs/saver/ipns/resolve\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"/></td>\\n</tr>\\n<tr>\\n<td width=\\\"90%\\\">''<$link to=\\\"$:/ipfs/saver/eth-link/resolve\\\"><<lingo ethLink/Resolve/Description>></$link>''</td>\\n<td width=\\\"10%\\\"><$checkbox tiddler=\\\"$:/ipfs/saver/eth-link/resolve\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"/></td>\\n</tr>\\n</tbody>\\n</table>\\n\\n''<$link to=\\\"$:/ipfs/saver/export\\\"><<lingo Export>></$link>''\\n\\n<$radio tiddler=\\\"$:/ipfs/saver/export\\\" value=\\\"json\\\"><<lingo Export/Json/Description>></$radio>\\n<$radio tiddler=\\\"$:/ipfs/saver/export\\\" value=\\\"static\\\"><<lingo Export/Static/Description>></$radio>\\n<$radio tiddler=\\\"$:/ipfs/saver/export\\\" value=\\\"tid\\\"><<lingo Export/Tid/Description>></$radio>\\n\\n''<$link to=\\\"$:/ipfs/saver/protocol\\\"><<lingo Protocol>></$link>''\\n\\n<$radio tiddler=\\\"$:/ipfs/saver/protocol\\\" value=\\\"ens\\\"><<lingo Protocol/Ens/Description>></$radio>\\n<$radio tiddler=\\\"$:/ipfs/saver/protocol\\\" value=\\\"ipfs\\\"><<lingo Protocol/Ipfs/Description>></$radio>\\n<$radio tiddler=\\\"$:/ipfs/saver/protocol\\\" value=\\\"ipns\\\"><<lingo Protocol/Ipns/Description>></$radio>\\n\\n''<$link to=\\\"$:/ipfs/saver/policy\\\"><<lingo Policy>></$link>''\\n\\n<$radio tiddler=\\\"$:/ipfs/saver/policy\\\" value=\\\"origin\\\"><<lingo Policy/Origin/Description>></$radio>\\n<$radio tiddler=\\\"$:/ipfs/saver/policy\\\" value=\\\"gateway\\\"><<lingo Policy/Gateway/Description>></$radio>\\n\\n''<<lingo Url>>''\\n\\n<table>\\n<tbody>\\n<tr>\\n<td width=\\\"20%\\\">''<$link to=\\\"$:/ipfs/saver/api\\\"><<lingo ApiUrl>></$link>''</td>\\n<td width=\\\"80%\\\">\\n<$select tiddler=\\\"$:/ipfs/saver/api\\\" class=\\\"tc-edit-texteditor\\\">\\n<$list filter=\\\"[all[shadows+tiddlers]tag[$:/ipfs/saver/api]!has[draft.of]sort[]]\\\">\\n<option value=<<currentTiddler>>><$transclude><$text text=<<currentTiddler>>/></$transclude></option>\\n</$list>\\n</$select>\\n</td>\\n</tr>\\n<tr>\\n<td width=\\\"20%\\\">''<$link to=\\\"$:/ipfs/saver/gateway\\\"><<lingo GatewayUrl>></$link>''</td>\\n<td width=\\\"80%\\\">\\n<$select tiddler=\\\"$:/ipfs/saver/gateway\\\" class=\\\"tc-edit-texteditor\\\">\\n<$list filter=\\\"[all[shadows+tiddlers]tag[$:/ipfs/saver/gateway]!has[draft.of]sort[]]\\\">\\n<option value=<<currentTiddler>>><$transclude><$text text=<<currentTiddler>>/></$transclude></option>\\n</$list>\\n</$select>\\n</td>\\n</tr>\\n</tbody>\\n</table>\\n\\n''<<lingo Ens>>''\\n\\n<table>\\n<tbody>\\n<tr>\\n<td width=\\\"20%\\\">''<$link to=\\\"$:/ipfs/saver/ens/domain\\\"><<lingo EnsDomain>></$link>''</td>\\n<td width=\\\"80%\\\"><$edit-text tiddler=\\\"$:/ipfs/saver/ens/domain\\\" class=\\\"tc-edit-texteditor\\\" default=\\\"\\\" tag=\\\"input\\\"/></td>\\n</tr>\\n</tbody>\\n</table>\\n\\n<table style=\\\"width:20%;margin-left:40%;margin-right:40%;text-align:center;\\\">\\n<tbody>\\n<tr>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ens-manager-open\\\" tooltip={{$:/language/Buttons/Ens/Manager/Open/Hint}} aria-label={{$:/language/Buttons/Ens/Manager/Open/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/ipfs/image/ens}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ens/Manager/Open/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ens-resolve-and-open\\\" tooltip={{$:/language/Buttons/Ens/Resolve/And/Open/Hint}} aria-label={{$:/language/Buttons/Ens/Resolve/And/Open/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/globe}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ens/Resolve/And/Open/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n</tr>\\n</tbody>\\n</table>\\n\\n''<<lingo Ipns>>''\\n\\n<table>\\n<tbody>\\n<tr>\\n<td width=\\\"20%\\\">''<$link to=\\\"$:/ipfs/saver/ipns/name\\\"><<lingo IpnsName>></$link>''</td>\\n<td width=\\\"80%\\\"><$edit-text tiddler=\\\"$:/ipfs/saver/ipns/name\\\" class=\\\"tc-edit-texteditor\\\" default=\\\"\\\" tag=\\\"input\\\"/></td>\\n</tr>\\n<tr>\\n<td width=\\\"20%\\\">''<$link to=\\\"$:/ipfs/saver/ipns/key\\\"><<lingo IpnsKey>></$link>''</td>\\n<td width=\\\"80%\\\"><$text text={{$:/ipfs/saver/ipns/key}} class=\\\"tc-edit-texteditor\\\"/></td>\\n</tr>\\n</tbody>\\n</table>\\n\\n<table style=\\\"width:50%;margin-left:25%;margin-right:25%;text-align:center;\\\">\\n<tbody>\\n<tr>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ipns-rename\\\" tooltip={{$:/language/Buttons/Ipns/Rename/Hint}} aria-label={{$:/language/Buttons/Ipns/Rename/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/mono-line}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Rename/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ipns-generate\\\" tooltip={{$:/language/Buttons/Ipns/Generate/Hint}} aria-label={{$:/language/Buttons/Ipns/Generate/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/new-here-button}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Generate/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ipns-remove\\\" tooltip={{$:/language/Buttons/Ipns/Remove/Hint}} aria-label={{$:/language/Buttons/Ipns/Remove/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/delete-button}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Remove/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ipns-fetch\\\" tooltip={{$:/language/Buttons/Ipns/Fetch/Hint}} aria-label={{$:/language/Buttons/Ipns/Fetch/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/refresh-button}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Fetch/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ipns-resolve-and-open\\\" tooltip={{$:/language/Buttons/Ipns/Resolve/And/Open/Hint}} aria-label={{$:/language/Buttons/Ipns/Resolve/And/Open/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/globe}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Resolve/And/Open/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ipns-publish-to-ens\\\" tooltip={{$:/language/Buttons/Ipns/Publish/To/Ens/Hint}} aria-label={{$:/language/Buttons/Ipns/Publish/To/Ens/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/ipfs/image/ens}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Publish/To/Ens/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n</tr>\\n</tbody>\\n</table>\"\n        },\n        \"$:/core/ui/ControlPanel/Toolbars/ItemTemplate\": {\n            \"title\": \"$:/core/ui/ControlPanel/Toolbars/ItemTemplate\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"\\\\define config-title()\\n$(config-base)$$(currentTiddler)$\\n\\\\end\\n\\n<$draggable tiddler=<<currentTiddler>>>\\n<$checkbox tiddler=<<config-title>> field=\\\"text\\\" checked=\\\"show\\\" unchecked=\\\"hide\\\" default=\\\"show\\\"/> <span class=\\\"tc-icon-wrapper tc-icon-ipfs-wrapper\\\"> <$transclude field=\\\"caption\\\"/> <i class=\\\"tc-muted\\\">-- <$transclude field=\\\"description\\\"/></i></span>\\n</$draggable>\\n\"\n        },\n        \"$:/core/ui/EditTemplate/body\": {\n            \"title\": \"$:/core/ui/EditTemplate/body\",\n            \"tags\": \"$:/ipfs/core $:/tags/EditTemplate\",\n            \"text\": \"\\\\define lingo-base() $:/language/EditTemplate/Body/\\n\\\\define config-visibility-title()\\n$:/config/EditorToolbarButtons/Visibility/$(currentTiddler)$\\n\\\\end\\n<$list filter=\\\"[all[current]has[_canonical_uri]]\\\">\\n\\n<div class=\\\"tc-message-box\\\">\\n\\n<<lingo External/Hint>>\\n\\n<$ipfslink field=\\\"_canonical_uri\\\" tiddler=<<currentTiddler>>/>\\n\\n</div>\\n\\n</$list>\\n\\n<$list filter=\\\"[all[current]!has[_canonical_uri]]\\\">\\n\\n<$reveal state=\\\"$:/state/showeditpreview\\\" type=\\\"match\\\" text=\\\"yes\\\">\\n\\n<div class=\\\"tc-tiddler-preview\\\">\\n\\n<$transclude tiddler=\\\"$:/core/ui/EditTemplate/body/editor\\\" mode=\\\"inline\\\"/>\\n\\n<div class=\\\"tc-tiddler-preview-preview\\\">\\n\\n<$transclude tiddler={{$:/state/editpreviewtype}} mode=\\\"inline\\\">\\n\\n<$transclude tiddler=\\\"$:/core/ui/EditTemplate/body/preview/output\\\" mode=\\\"inline\\\"/>\\n\\n</$transclude>\\n\\n</div>\\n\\n</div>\\n\\n</$reveal>\\n\\n<$reveal state=\\\"$:/state/showeditpreview\\\" type=\\\"nomatch\\\" text=\\\"yes\\\">\\n\\n<$transclude tiddler=\\\"$:/core/ui/EditTemplate/body/editor\\\" mode=\\\"inline\\\"/>\\n\\n</$reveal>\\n\\n</$list>\"\n        },\n        \"$:/core/ui/EditTemplate/fields\": {\n            \"title\": \"$:/core/ui/EditTemplate/fields\",\n            \"tags\": \"$:/ipfs/core $:/tags/EditTemplate\",\n            \"text\": \"\\\\define lingo-base() $:/language/EditTemplate/\\n\\\\define config-title()\\n$:/config/EditTemplateFields/Visibility/$(currentField)$\\n\\\\end\\n\\n\\\\define config-filter()\\n[[hide]] -[title{$(config-title)$}]\\n\\\\end\\n\\n\\\\define current-tiddler-new-field-selector()\\n[data-tiddler-title=\\\"$(currentTiddlerCSSescaped)$\\\"] .tc-edit-field-add-name-wrapper input\\n\\\\end\\n\\n\\\\define new-field-actions()\\n<$action-sendmessage $message=\\\"tm-add-field\\\" $name={{{ [<newFieldNameTiddler>get[text]] }}} $value={{{ [<newFieldValueTiddler>get[text]] }}}/>\\n<$action-deletetiddler $filter=\\\"[<newFieldNameTiddler>] [<newFieldValueTiddler>] [<storeTitle>] [<searchListState>]\\\"/>\\n<$action-sendmessage $message=\\\"tm-focus-selector\\\" $param=<<current-tiddler-new-field-selector>>/>\\n\\\\end\\n\\n\\\\define delete-state-tiddlers() <$action-deletetiddler $filter=\\\"[<newFieldNameTiddler>] [<storeTitle>] [<searchListState>]\\\"/>\\n\\n\\\\define cancel-search-actions-inner()\\n<$list filter=\\\"[<storeTitle>has[text]] [<newFieldNameTiddler>has[text]]\\\" variable=\\\"ignore\\\" emptyMessage=\\\"\\\"\\\"<<cancel-delete-tiddler-actions \\\"cancel\\\">>\\\"\\\"\\\">\\n<<delete-state-tiddlers>>\\n</$list>\\n\\\\end\\n\\n\\\\define cancel-search-actions()\\n<$set name=\\\"userInput\\\" value={{{ [<storeTitle>get[text]] }}}>\\n<$list filter=\\\"[<newFieldNameTiddler>get[text]!match<userInput>]\\\" emptyMessage=\\\"\\\"\\\"<<cancel-search-actions-inner>>\\\"\\\"\\\">\\n<$action-setfield $tiddler=<<newFieldNameTiddler>> text=<<userInput>>/><$action-setfield $tiddler=<<refreshTitle>> text=\\\"yes\\\"/>\\n</$list>\\n</$set>\\n\\\\end\\n\\n\\\\define new-field()\\n<$vars name={{{ [<newFieldNameTiddler>get[text]] }}}>\\n<$reveal type=\\\"nomatch\\\" text=\\\"\\\" default=<<name>>>\\n<$button tooltip=<<lingo Fields/Add/Button/Hint>>>\\n<$action-sendmessage $message=\\\"tm-add-field\\\"\\n$name=<<name>>\\n$value={{{ [<newFieldValueTiddler>get[text]] }}}/>\\n<$action-deletetiddler $filter=\\\"[<newFieldNameTiddler>] [<newFieldValueTiddler>] [<storeTitle>] [<searchListState>]\\\"/>\\n<<lingo Fields/Add/Button>>\\n</$button>\\n</$reveal>\\n<$reveal type=\\\"match\\\" text=\\\"\\\" default=<<name>>>\\n<$button>\\n<<lingo Fields/Add/Button>>\\n</$button>\\n</$reveal>\\n</$vars>\\n\\\\end\\n\\\\whitespace trim\\n\\n<div class=\\\"tc-edit-fields\\\">\\n<table class={{{ [all[current]fields[]] :filter[lookup[$:/config/EditTemplateFields/Visibility/]!match[hide]] +[count[]!match[0]] +[then[tc-edit-fields]] ~[[tc-edit-fields tc-edit-fields-small]] }}}>\\n<tbody>\\n<$list filter=\\\"[all[current]fields[]] +[sort[title]]\\\" variable=\\\"currentField\\\" storyview=\\\"pop\\\">\\n<$list filter=<<config-filter>> variable=\\\"temp\\\">\\n<tr class=\\\"tc-edit-field\\\">\\n<td class=\\\"tc-edit-field-name\\\">\\n<$ipfslink value=<<currentField>> field=<<currentField>> tiddler=<<currentTiddler>>/>:</td>\\n<td class=\\\"tc-edit-field-value\\\">\\n<$keyboard key=\\\"((delete-field))\\\" actions=\\\"\\\"\\\"<$action-deletefield $field=<<currentField>>/><$set name=\\\"currentTiddlerCSSescaped\\\" value={{{ [<currentTiddler>escapecss[]] }}}><$action-sendmessage $message=\\\"tm-focus-selector\\\" $param=<<current-tiddler-new-field-selector>>/></$set>\\\"\\\"\\\">\\n<$edit-text tiddler=<<currentTiddler>> field=<<currentField>> placeholder={{$:/language/EditTemplate/Fields/Add/Value/Placeholder}} tabindex={{$:/config/EditTabIndex}} cancelPopups=\\\"yes\\\"/>\\n</$keyboard>\\n</td>\\n<td class=\\\"tc-edit-field-remove\\\">\\n<$button class=\\\"tc-btn-invisible\\\" tooltip={{$:/language/EditTemplate/Field/Remove/Hint}} aria-label={{$:/language/EditTemplate/Field/Remove/Caption}}>\\n<$action-deletefield $field=<<currentField>>/><$set name=\\\"currentTiddlerCSSescaped\\\" value={{{ [<currentTiddler>escapecss[]] }}}><$action-sendmessage $message=\\\"tm-focus-selector\\\" $param=<<current-tiddler-new-field-selector>>/></$set>\\n{{$:/core/images/delete-button}}\\n</$button>\\n</td>\\n</tr>\\n</$list>\\n</$list>\\n</tbody>\\n</table>\\n</div>\\n\\n<$fieldmangler>\\n<div class=\\\"tc-edit-field-add\\\">\\n<em class=\\\"tc-edit tc-big-gap-right\\\">\\n<<lingo Fields/Add/Prompt>>\\n</em>\\n<$vars refreshTitle=<<qualify \\\"$:/temp/fieldname/refresh\\\">> storeTitle=<<newFieldNameInputTiddler>> searchListState=<<newFieldNameSelectionTiddler>>>\\n<div class=\\\"tc-edit-field-add-name-wrapper\\\">\\n<$macrocall $name=\\\"keyboard-driven-input\\\" tiddler=<<newFieldNameTiddler>> storeTitle=<<storeTitle>> refreshTitle=<<refreshTitle>>\\n\\t\\tselectionStateTitle=<<searchListState>> tag=\\\"input\\\" default=\\\"\\\" placeholder={{$:/language/EditTemplate/Fields/Add/Name/Placeholder}}\\n\\t\\tfocusPopup=<<qualify \\\"$:/state/popup/field-dropdown\\\">> class=\\\"tc-edit-texteditor tc-popup-handle\\\" tabindex={{$:/config/EditTabIndex}}\\n\\t\\tfocus={{{ [{$:/config/AutoFocus}match[fields]then[true]] ~[[false]] }}} cancelPopups=\\\"yes\\\"\\n\\t\\tconfigTiddlerFilter=\\\"[[$:/config/EditMode/fieldname-filter]]\\\" inputCancelActions=<<cancel-search-actions>> />\\n<$button popup=<<qualify \\\"$:/state/popup/field-dropdown\\\">> class=\\\"tc-btn-invisible tc-btn-dropdown tc-small-gap\\\" tooltip={{$:/language/EditTemplate/Field/Dropdown/Hint}} aria-label={{$:/language/EditTemplate/Field/Dropdown/Caption}}>{{$:/core/images/down-arrow}}</$button>\\n<$reveal state=<<qualify \\\"$:/state/popup/field-dropdown\\\">> type=\\\"nomatch\\\" text=\\\"\\\" default=\\\"\\\">\\n<div class=\\\"tc-block-dropdown tc-edit-type-dropdown\\\">\\n<$set name=\\\"tv-show-missing-links\\\" value=\\\"yes\\\">\\n<$linkcatcher to=<<newFieldNameTiddler>>>\\n<div class=\\\"tc-dropdown-item\\\">\\n<<lingo Fields/Add/Dropdown/User>>\\n</div>\\n<$set name=\\\"newFieldName\\\" value={{{ [<storeTitle>get[text]] }}}>\\n<$list filter=\\\"[!is[shadow]!is[system]fields[]search:title<newFieldName>sort[]] -created -creator -draft.of -draft.title -modified -modifier -tags -text -title -type\\\"  variable=\\\"currentField\\\">\\n<$list filter=\\\"[<currentField>addsuffix[-primaryList]] -[<searchListState>get[text]]\\\" emptyMessage=\\\"\\\"\\\"<$link to=<<currentField>> class=\\\"tc-list-item-selected\\\"><$text text=<<currentField>>/></$link>\\\"\\\"\\\">\\n<$link to=<<currentField>>>\\n<$text text=<<currentField>>/>\\n</$link>\\n</$list>\\n</$list>\\n<div class=\\\"tc-dropdown-item\\\">\\n<<lingo Fields/Add/Dropdown/System>>\\n</div>\\n<$list filter=\\\"[fields[]search:title<newFieldName>sort[]] -[!is[shadow]!is[system]fields[]]\\\" variable=\\\"currentField\\\">\\n<$list filter=\\\"[<currentField>addsuffix[-secondaryList]] -[<searchListState>get[text]]\\\" emptyMessage=\\\"\\\"\\\"<$link to=<<currentField>> class=\\\"tc-list-item-selected\\\"><$text text=<<currentField>>/></$link>\\\"\\\"\\\">\\n<$link to=<<currentField>>>\\n<$text text=<<currentField>>/>\\n</$link>\\n</$list>\\n</$list>\\n</$set>\\n</$linkcatcher>\\n</$set>\\n</div>\\n</$reveal>\\n</div>\\n<span class=\\\"tc-edit-field-add-value tc-small-gap-right\\\">\\n<$set name=\\\"currentTiddlerCSSescaped\\\" value={{{ [<currentTiddler>escapecss[]] }}}>\\n<$keyboard key=\\\"((add-field))\\\" actions=<<new-field-actions>>>\\n<$edit-text tiddler=<<newFieldValueTiddler>> tag=\\\"input\\\" default=\\\"\\\" placeholder={{$:/language/EditTemplate/Fields/Add/Value/Placeholder}} class=\\\"tc-edit-texteditor\\\" tabindex={{$:/config/EditTabIndex}} cancelPopups=\\\"yes\\\"/>\\n</$keyboard>\\n</$set>\\n</span>\\n<span class=\\\"tc-edit-field-add-button\\\">\\n<$macrocall $name=\\\"new-field\\\"/>\\n</span>\\n</$vars>\\n</div>\\n</$fieldmangler>\"\n        },\n        \"$:/core/ui/EditTemplate\": {\n            \"title\": \"$:/core/ui/EditTemplate\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"\\\\define delete-edittemplate-state-tiddlers() <$action-deletetiddler $filter=\\\"[<newFieldNameTiddler>] [<newFieldValueTiddler>] [<newFieldNameInputTiddler>] [<newFieldNameSelectionTiddler>] [<newTagNameTiddler>] [<newTagNameInputTiddler>] [<newTagNameSelectionTiddler>] [<typeInputTiddler>] [<typeSelectionTiddler>]\\\"/>\\n\\\\define save-tiddler-actions()\\n<$action-sendmessage $message=\\\"tm-add-tag\\\" $param={{{ [<newTagNameTiddler>get[text]] }}}/>\\n<$action-sendmessage $message=\\\"tm-add-field\\\" $name={{{ [<newFieldNameTiddler>get[text]] }}} $value={{{ [<newFieldValueTiddler>get[text]] }}}/>\\n<<delete-edittemplate-state-tiddlers>>\\n<$action-sendmessage $message=\\\"tm-save-tiddler\\\"/>\\n\\\\end\\n\\\\define cancel-delete-tiddler-actions(message)\\n<<delete-edittemplate-state-tiddlers>>\\n<$action-sendmessage $message=\\\"tm-$message$-tiddler\\\"/>\\n\\\\end\\n<div data-tiddler-title=<<currentTiddler>> data-tags={{!!tags}} class={{{ tc-tiddler-frame tc-tiddler-edit-frame [<currentTiddler>is[tiddler]then[tc-tiddler-exists]] [<currentTiddler>is[missing]!is[shadow]then[tc-tiddler-missing]] [<currentTiddler>is[shadow]then[tc-tiddler-exists tc-tiddler-shadow]] [<currentTiddler>is[system]then[tc-tiddler-system]] [{!!class}] [<currentTiddler>tags[]encodeuricomponent[]addprefix[tc-tagged-]] +[join[ ]] }}}>\\n<$fieldmangler>\\n<$vars storyTiddler=<<currentTiddler>> newTagNameTiddler=<<qualify \\\"$:/temp/NewTagName\\\">> newFieldNameTiddler=<<qualify \\\"$:/temp/NewFieldName\\\">> newFieldValueTiddler=<<qualify \\\"$:/temp/NewFieldValue\\\">> newFieldNameInputTiddler=<<qualify \\\"$:/temp/NewFieldName/input\\\">> newFieldNameSelectionTiddler=<<qualify \\\"$:/temp/NewFieldName/selected-item\\\">> newTagNameInputTiddler=<<qualify \\\"$:/temp/NewTagName/input\\\">> newTagNameSelectionTiddler=<<qualify \\\"$:/temp/NewTagName/selected-item\\\">> typeInputTiddler=<<qualify \\\"$:/temp/Type/input\\\">> typeSelectionTiddler=<<qualify \\\"$:/temp/Type/selected-item\\\">>>\\n<$keyboard key=\\\"((cancel-edit-tiddler))\\\" actions=<<cancel-delete-tiddler-actions \\\"cancel\\\">>>\\n<$keyboard key=\\\"((save-tiddler))\\\" actions=<<save-tiddler-actions>>>\\n<$list filter=\\\"[all[shadows+tiddlers]list[$:/tags/EditTemplate]!has[draft.of]]\\\" variable=\\\"listItem\\\">\\n<$set name=\\\"tv-config-toolbar-class\\\" filter=\\\"[<tv-config-toolbar-class>] [<listItem>encodeuricomponent[]addprefix[tc-btn-]]\\\">\\n<$transclude tiddler=<<listItem>>/>\\n</$set>\\n</$list>\\n</$keyboard>\\n</$keyboard>\\n</$vars>\\n</$fieldmangler>\\n</div>\"\n        },\n        \"$:/core/ui/IpfsExportListing\": {\n            \"title\": \"$:/core/ui/IpfsExportListing\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"\\\\define lingo-base() $:/language/Export/\\n\\n\\\\define selectionField()\\nselection-$(payloadTiddler)$\\n\\\\end\\n\\n\\\\define previewPopupState()\\n$(currentTiddler)$!!popup-$(payloadTiddler)$\\n\\\\end\\n\\n\\\\define select-all-actions()\\n<$list filter=\\\"[all[current]plugintiddlers[]sort[title]]\\\" variable=\\\"payloadTiddler\\\">\\n<$action-setfield $field={{{ [<payloadTiddler>addprefix[selection-]] }}} $value={{$:/state/export/select-all}}/>\\n</$list>\\n\\\\end\\n\\n<table>\\n<tbody>\\n<tr>\\n<th>\\n<$checkbox title={{$:/language/Export/Listing/Export/Caption}} tiddler=\\\"$:/state/export/select-all\\\" field=\\\"text\\\" checked=\\\"checked\\\" unchecked=\\\"unchecked\\\" default=\\\"checked\\\" actions=<<select-all-actions>>/>\\n</th>\\n<th>\\n<<lingo Listing/Title/Caption>>\\n</th>\\n</tr>\\n<$list filter=\\\"[all[current]plugintiddlers[]sort[title]]\\\" variable=\\\"payloadTiddler\\\">\\n<tr>\\n<td>\\n<$checkbox field=<<selectionField>> checked=\\\"checked\\\" unchecked=\\\"unchecked\\\" default=\\\"checked\\\"/>\\n</td>\\n<td>\\n<$reveal type=\\\"nomatch\\\" state=<<previewPopupState>> text=\\\"yes\\\" tag=\\\"div\\\">\\n<$button class=\\\"tc-btn-invisible tc-btn-dropdown\\\" set=<<previewPopupState>> setTo=\\\"yes\\\">\\n{{$:/core/images/right-arrow}}&nbsp;<$link to=<<payloadTiddler>>/>\\n</$button>\\n</$reveal>\\n<$reveal type=\\\"match\\\" state=<<previewPopupState>> text=\\\"yes\\\" tag=\\\"div\\\">\\n<$button class=\\\"tc-btn-invisible tc-btn-dropdown\\\" set=<<previewPopupState>> setTo=\\\"no\\\">\\n{{$:/core/images/down-arrow}}&nbsp;<$link to=<<payloadTiddler>>/>\\n</$button>\\n</$reveal>\\n</td>\\n</tr>\\n<tr>\\n<td colspan=\\\"2\\\">\\n<$reveal type=\\\"match\\\" text=\\\"yes\\\" state=<<previewPopupState>> tag=\\\"div\\\">\\n<$list filter=\\\"[{$:/state/ipfsexportpreviewtype}has[text]]\\\" variable=\\\"listItem\\\" emptyMessage={{$:/core/ui/IpfsExportPreviews/Text}}>\\n<$transclude tiddler={{$:/state/ipfsexportpreviewtype}} mode=\\\"inline\\\"/>\\n</$list>\\n</$reveal>\\n</td>\\n</tr>\\n</$list>\\n</tbody>\\n</table>\\n\"\n        },\n        \"$:/core/ui/IpfsExportPreviews/Fields\": {\n            \"title\": \"$:/core/ui/IpfsExportPreviews/Fields\",\n            \"tags\": \"$:/tags/IpfsExportPreview $:/ipfs/core\",\n            \"caption\": \"{{$:/language/Import/Listing/Preview/Fields}}\",\n            \"text\": \"<table class=\\\"tc-view-field-table\\\">\\n<tbody>\\n<$list filter=\\\"[<payloadTiddler>subtiddlerfields<currentTiddler>sort[]] -text\\\" variable=\\\"fieldName\\\">\\n<tr class=\\\"tc-view-field\\\">\\n<td class=\\\"tc-view-field-name\\\">\\n<$text text=<<fieldName>>/>\\n</td>\\n<td class=\\\"tc-view-field-value\\\">\\n<$view field=<<fieldName>> tiddler=<<currentTiddler>> subtiddler=<<payloadTiddler>>/>\\n</td>\\n</tr>\\n</$list>\\n</tbody>\\n</table>\\n\"\n        },\n        \"$:/core/ui/IpfsExportPreviews/Text\": {\n            \"title\": \"$:/core/ui/IpfsExportPreviews/Text\",\n            \"tags\": \"$:/tags/IpfsExportPreview $:/ipfs/core\",\n            \"caption\": \"{{$:/language/Import/Listing/Preview/Text}}\",\n            \"text\": \"<$transclude tiddler=<<currentTiddler>> subtiddler=<<payloadTiddler>> mode=\\\"block\\\"/>\\n\"\n        },\n        \"$:/core/ui/IpfsExportPreviews/TextRaw\": {\n            \"title\": \"$:/core/ui/IpfsExportPreviews/TextRaw\",\n            \"tags\": \"$:/tags/IpfsExportPreview $:/plugin/ipfs\",\n            \"caption\": \"{{$:/language/Import/Listing/Preview/TextRaw}}\",\n            \"text\": \"<pre><code><$view tiddler=<<currentTiddler>> subtiddler=<<payloadTiddler>> /></code></pre>\"\n        },\n        \"$:/core/ui/IpfsImportListing\": {\n            \"title\": \"$:/core/ui/IpfsImportListing\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"\\\\define lingo-base() $:/language/Import/\\n\\n\\\\define messageField() message-$(payloadTiddler)$\\n\\n\\\\define payloadTitleFilter() [<currentTiddler>get<renameField>minlength[1]else<payloadTiddler>]\\n\\n\\\\define overWriteWarning()\\n<$list filter=\\\"[<currentTiddler>!has<suppressedField>]\\\">\\n<$text text={{{[subfilter<payloadTitleFilter>!is[tiddler]then[]] ~[<lingo-base>addsuffix[Listing/Rename/OverwriteWarning]get[text]]}}}/>\\n</$list>\\n\\\\end\\n\\n\\\\define importSelectionField() importSelection-$(payloadTiddler)$\\n\\n\\\\define renameField() rename-$(payloadTiddler)$\\n\\n\\\\define suppressedField() suppressed-$(payloadTiddler)$\\n\\n\\\\define newImportTitleTiddler() $:/temp/NewImportTitle-$(payloadTiddler)$\\n\\n\\\\define deleteSelectionField() deleteSelection-$(payloadTiddler)$\\n\\n\\\\define previewPopupState() $(currentTiddler)$!!popup-$(payloadTiddler)$\\n\\n\\\\define renameFieldState() $(currentTiddler)$!!state-rename-$(payloadTiddler)$\\n\\n\\\\define importState() $(currentTiddler)$!!import-$(payloadTiddler)$\\n\\n\\\\define deleteState() $(currentTiddler)$!!delete-$(payloadTiddler)$\\n\\n\\\\define select-all-actions()\\n<$list filter=\\\"[all[current]plugintiddlers[]sort[title]]\\\" variable=\\\"payloadTiddler\\\">\\n<$action-setfield $field={{{ [<payloadTiddler>addprefix[importSelection-]] }}} $value={{$:/state/import/select-all}}/>\\n</$list>\\n\\\\end\\n\\n\\\\define delete-all-actions()\\n<$list filter=\\\"[all[current]plugintiddlers[]sort[title]]\\\" variable=\\\"payloadTiddler\\\">\\n<$action-setfield $field={{{ [<payloadTiddler>addprefix[deleteSelection-]] }}} $value={{$:/state/import/delete-all}}/>\\n</$list>\\n\\\\end\\n\\n<table class=\\\"tc-import-table\\\">\\n<tbody>\\n<tr>\\n<th align=\\\"left\\\">\\n<$checkbox tiddler=\\\"$:/state/import/select-all\\\" field=\\\"text\\\" checked=\\\"checked\\\" unchecked=\\\"unchecked\\\" default=\\\"checked\\\" actions=<<select-all-actions>>>\\n<<lingo Listing/ImportAll/Caption>>\\n</$checkbox>\\n</th>\\n<th>\\n<$checkbox tiddler=\\\"$:/state/import/delete-all\\\" field=\\\"text\\\" checked=\\\"checked\\\" unchecked=\\\"unchecked\\\" default=\\\"checked\\\" actions=<<delete-all-actions>>>\\n<<lingo Listing/DeleteAll/Caption>>\\n</$checkbox>\\n</th>\\n<th>\\n<<lingo Listing/Title/Caption>>\\n</th>\\n<th>\\n<<lingo Listing/Status/Caption>>\\n</th>\\n</tr>\\n<$list filter=\\\"[all[current]plugintiddlers[]sort[title]]\\\" variable=\\\"payloadTiddler\\\">\\n<tr class={{{[<currentTiddler>has<suppressedField>then[tc-row-disabled]] ~[subfilter<payloadTitleFilter>is[tiddler]then[tc-row-warning]] }}}>\\n<td>\\n<$reveal type=\\\"match\\\" state=<<importState>> text=\\\"yes\\\" tag=\\\"div\\\">\\n<$checkbox field=<<importSelectionField>> checked=\\\"checked\\\" unchecked=\\\"unchecked\\\" default=\\\"checked\\\"/>\\n</$reveal>\\n</td>\\n<td>\\n<$reveal type=\\\"match\\\" state=<<deleteState>> text=\\\"yes\\\" tag=\\\"div\\\">\\n<$checkbox field=<<deleteSelectionField>> checked=\\\"checked\\\" unchecked=\\\"unchecked\\\" default=\\\"checked\\\"/>\\n</$reveal>\\n</td>\\n<td>\\n<$reveal type=\\\"nomatch\\\" state=<<renameFieldState>> text=\\\"yes\\\" tag=\\\"div\\\">\\n<$reveal type=\\\"nomatch\\\" state=<<previewPopupState>> text=\\\"yes\\\" tag=\\\"div\\\" class=\\\"tc-flex\\\">\\n<$button class=\\\"tc-btn-invisible tc-btn-dropdown tc-flex-grow-1 tc-word-break\\\" set=<<previewPopupState>> setTo=\\\"yes\\\" disabled={{{[<currentTiddler>has<suppressedField>then[yes]else[no]]}}}>\\n<span class=\\\"tc-small-gap-right\\\">{{$:/core/images/right-arrow}}</span><$link to={{{[subfilter<payloadTitleFilter>]}}}/>\\n</$button>\\n<$list filter=\\\"[<currentTiddler>!has<suppressedField>]\\\"><$button class=\\\"tc-btn-invisible\\\" set=<<renameFieldState>> setTo=\\\"yes\\\" tooltip={{{[<lingo-base>addsuffix[Listing/Rename/Tooltip]get[text]]}}}>{{$:/core/images/edit-button}}</$button></$list>\\n</$reveal>\\n<$reveal type=\\\"match\\\" state=<<previewPopupState>> text=\\\"yes\\\" tag=\\\"div\\\">\\n<$button class=\\\"tc-btn-invisible tc-btn-dropdown\\\" set=<<previewPopupState>> setTo=\\\"no\\\">\\n<span class=\\\"tc-small-gap-right\\\">{{$:/core/images/down-arrow}}</span><$link to={{{[subfilter<payloadTitleFilter>]}}}/>\\n</$button>\\n</$reveal>\\n</$reveal>\\n<$reveal type=\\\"match\\\" state=<<renameFieldState>> text=\\\"yes\\\" tag=\\\"div\\\">\\n<$text text={{{[<lingo-base>addsuffix[Listing/Rename/Prompt]get[text]]}}}/>\\n</$reveal>\\n</td>\\n<td>\\n<$view field=<<messageField>>/>\\n<<overWriteWarning>>\\n</td>\\n</tr>\\n<$reveal type=\\\"match\\\" state=<<renameFieldState>> text=\\\"yes\\\" tag=\\\"tr\\\">\\n<td colspan=\\\"4\\\">\\n<div class=\\\"tc-flex\\\">\\n<$edit-text tiddler=<<newImportTitleTiddler>>  default={{{[subfilter<payloadTitleFilter>]}}} tag=\\\"input\\\" class=\\\"tc-import-rename tc-flex-grow-1\\\"/><span class=\\\"tc-small-gap-left\\\"><$button  class=\\\"tc-btn-invisible\\\" set=<<renameFieldState>> setTo=\\\"no\\\" tooltip={{{[<lingo-base>addsuffix[Listing/Rename/CancelRename]get[text]]}}}>{{$:/core/images/close-button}}<$action-deletetiddler $tiddler=<<newImportTitleTiddler>>/></$button><span class=\\\"tc-small-gap-right\\\"/></span><$button  class=\\\"tc-btn-invisible\\\" set=<<renameFieldState>> setTo=\\\"no\\\" tooltip={{{[<lingo-base>addsuffix[Listing/Rename/ConfirmRename]get[text]]}}}>{{$:/core/images/done-button}}<$action-setfield $field=<<renameField>> $value={{{[<newImportTitleTiddler>get[text]minlength[1]else<payloadTiddler>]}}} /><$action-deletetiddler $tiddler=<<newImportTitleTiddler>>/></$button>\\n</div>\\n</td>\\n</$reveal>\\n<tr>\\n<td colspan=\\\"4\\\">\\n<$reveal type=\\\"match\\\" text=\\\"yes\\\" state=<<previewPopupState>> tag=\\\"div\\\">\\n<$list filter=\\\"[{$:/state/ipfsimportpreviewtype}has[text]]\\\" variable=\\\"listItem\\\" emptyMessage={{$:/core/ui/ImportPreviews/Text}}>\\n<$transclude tiddler={{$:/state/ipfsimportpreviewtype}}/>\\n</$list>\\n</$reveal>\\n</td>\\n</tr>\\n</$list>\\n</tbody>\\n</table>\\n\"\n        },\n        \"$:/core/ui/Buttons/encryption\": {\n            \"title\": \"$:/core/ui/Buttons/encryption\",\n            \"tags\": \"$:/ipfs/core $:/tags/PageControls\",\n            \"caption\": \"{{$:/core/images/locked-padlock}} {{$:/language/Buttons/Encryption/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Encryption/Hint}}\",\n            \"text\": \"\\\\whitespace trim\\n<$reveal type=\\\"match\\\" state=\\\"$:/isEncrypted\\\" text=\\\"yes\\\">\\n<$button message=\\\"tm-clear-password\\\" tooltip=<<ipfs-encryption-tooltip>> aria-label={{$:/language/Buttons/Encryption/ClearPassword/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/locked-padlock}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Encryption/ClearPassword/Caption}}/></span>\\n</$list>\\n</$button>\\n</$reveal>\\n<$reveal type=\\\"nomatch\\\" state=\\\"$:/isEncrypted\\\" text=\\\"yes\\\">\\n<$button message=\\\"tm-set-password\\\" tooltip=<<ipfs-encryption-tooltip>> aria-label={{$:/language/Buttons/Encryption/SetPassword/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/unlocked-padlock}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Encryption/SetPassword/Caption}}/></span>\\n</$list>\\n</$button>\\n</$reveal>\\n\"\n        },\n        \"$:/core/ui/Buttons/ens/publish\": {\n            \"title\": \"$:/core/ui/Buttons/ens/publish\",\n            \"tags\": \"$:/ipfs/core $:/tags/PageControls\",\n            \"caption\": \"{{$:/language/Buttons/Ens/Publish/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ens/Publish/Hint}}\",\n            \"text\": \"<$button message=\\\"tm-ens-publish\\\" tooltip={{$:/language/Buttons/Ens/Publish/Hint}} aria-label={{$:/language/Buttons/Ens/Publish/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/ipfs/image/ens}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ens/Publish/Caption}}/></span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/console/mobile\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/console/mobile\",\n            \"tags\": \"$:/ipfs/core  $:/tags/PageControls\",\n            \"caption\": \"{{$:/core/images/preview-open}} {{$:/language/Buttons/Console/Mobile/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Console/Mobile/Hint}}\",\n            \"text\": \"<$button message=\\\"tm-console-mobile\\\" tooltip=<<ipfs-console-tooltip>> aria-label={{$:/language/Buttons/Console/Mobile/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/preview-open}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Console/Mobile/Caption}}/></span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/pin\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/pin\",\n            \"tags\": \"$:/ipfs/core $:/tags/PageControls\",\n            \"caption\": \"{{$:/core/images/chevron-up}} {{$:/language/Buttons/Ipfs/Pin/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Pin/Hint}}\",\n            \"text\": \"<$button message=\\\"tm-ipfs-pin\\\" tooltip={{$:/language/Buttons/Ipfs/Pin/Hint}} aria-label={{$:/language/Buttons/Ipfs/Pin/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/chevron-up}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipfs/Pin/Caption}}/></span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/unpin\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/unpin\",\n            \"tags\": \"$:/ipfs/core $:/tags/PageControls\",\n            \"caption\": \"{{$:/core/images/chevron-down}} {{$:/language/Buttons/Ipfs/Unpin/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Unpin/Hint}}\",\n            \"text\": \"<$button message=\\\"tm-ipfs-unpin\\\" tooltip={{$:/language/Buttons/Ipfs/Unpin/Hint}} aria-label={{$:/language/Buttons/Ipfs/Unpin/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/chevron-down}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipfs/Unpin/Caption}}/></span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipns/publish\": {\n            \"title\": \"$:/core/ui/Buttons/ipns/publish\",\n            \"tags\": \"$:/ipfs/core $:/tags/PageControls\",\n            \"caption\": \"{{$:/core/images/excise}} {{$:/language/Buttons/Ipns/Publish/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipns/Publish/Hint}}\",\n            \"text\": \"<$button message=\\\"tm-ipns-publish\\\" tooltip={{$:/language/Buttons/Ipns/Publish/Hint}} aria-label={{$:/language/Buttons/Ipns/Publish/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/excise}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Publish/Caption}}/></span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/SideBar/Tools\": {\n            \"title\": \"$:/core/ui/SideBar/Tools\",\n            \"tags\": \"$:/ipfs/core $:/tags/SideBar\",\n            \"caption\": \"{{$:/language/SideBar/Tools/Caption}}\",\n            \"text\": \"\\\\define lingo-base() $:/language/ControlPanel/\\n\\\\define config-title()\\n$:/config/PageControlButtons/Visibility/$(listItem)$\\n\\\\end\\n\\n<<lingo Basics/Version/Prompt>> <b><<version>></b>, <<lingo Ipfs/Version/Prompt>> <b><<plugins-ipfs.js-version>></b>\\n\\n<$set name=\\\"tv-config-toolbar-icons\\\" value=\\\"yes\\\">\\n\\n<$set name=\\\"tv-config-toolbar-text\\\" value=\\\"yes\\\">\\n\\n<$set name=\\\"tv-config-toolbar-class\\\" value=\\\"\\\">\\n\\n<$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/PageControls]!has[draft.of]]\\\" variable=\\\"listItem\\\">\\n\\n<div style=\\\"position:relative;\\\" class={{{ [<listItem>encodeuricomponent[]addprefix[tc-btn-]] }}}>\\n\\n<$checkbox tiddler=<<config-title>> field=\\\"text\\\" checked=\\\"show\\\" unchecked=\\\"hide\\\" default=\\\"show\\\"/> <$transclude tiddler=<<listItem>>/> <i class=\\\"tc-muted\\\"><$transclude tiddler=<<listItem>> field=\\\"description\\\"/></i>\\n\\n</div>\\n\\n</$list>\\n\\n</$set>\\n\\n</$set>\\n\\n</$set>\"\n        },\n        \"$:/core/ui/ViewTemplate/ipfsexport\": {\n            \"title\": \"$:/core/ui/ViewTemplate/ipfsexport\",\n            \"tags\": \"$:/tags/ViewTemplate $:/ipfs/core\",\n            \"text\": \"\\\\define lingo-base() $:/language/Export/\\n\\n\\\\define buttons()\\n<$button message=\\\"tm-delete-tiddler\\\" param=<<currentTiddler>>><<lingo Listing/Cancel/Caption>></$button>\\n<$button message=\\\"tm-perform-ipfs-export\\\" param=<<currentTiddler>>><<lingo Listing/Export/Caption>></$button>\\n<<lingo Listing/Preview>> <$select tiddler=\\\"$:/state/ipfsexportpreviewtype\\\" default=\\\"$:/core/ui/IpfsExportPreviews/Text\\\">\\n<$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/IpfsExportPreview]!has[draft.of]]\\\">\\n<option value=<<currentTiddler>>>{{!!caption}}</option>\\n</$list>\\n</$select>\\n\\\\end\\n\\n<$list filter=\\\"[all[current]field:plugin-type[ipfs-export]]\\\">\\n\\n<div class=\\\"tc-import\\\">\\n\\n<<lingo Listing/Hint>>\\n\\n<<buttons>>\\n\\n{{||$:/core/ui/IpfsExportListing}}\\n\\n<<buttons>>\\n\\n</div>\\n\\n</$list>\\n\"\n        },\n        \"$:/core/ui/ViewTemplate/ipfsimport\": {\n            \"title\": \"$:/core/ui/ViewTemplate/ipfsimport\",\n            \"tags\": \"$:/tags/ViewTemplate $:/ipfs/core\",\n            \"text\": \"\\\\define lingo-base() $:/language/Import/\\n\\n\\\\define buttons()\\n<$button message=\\\"tm-delete-tiddler\\\" param=<<currentTiddler>>><<lingo Listing/Cancel/Caption>></$button>\\n<$button message=\\\"tm-perform-ipfs-import\\\" param=<<currentTiddler>>><<lingo Listing/Import/Caption>></$button>\\n<<lingo Listing/Preview>> <$select tiddler=\\\"$:/state/ipfsimportpreviewtype\\\" default=\\\"$:/core/ui/ImportPreviews/Text\\\">\\n<$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/ImportPreview]!has[draft.of]]\\\">\\n<option value=<<currentTiddler>>>{{!!caption}}</option>\\n</$list>\\n</$select>\\n\\\\end\\n\\n<$list filter=\\\"[all[current]field:plugin-type[ipfs-import]]\\\">\\n\\n<div class=\\\"tc-import\\\">\\n\\n<<lingo Listing/Hint>>\\n\\n<<buttons>>\\n\\n{{||$:/core/ui/IpfsImportListing}}\\n\\n<<buttons>>\\n\\n</div>\\n\\n</$list>\\n\"\n        },\n        \"$:/core/ui/ViewTemplate/plugin\": {\n            \"title\": \"$:/core/ui/ViewTemplate/plugin\",\n            \"tags\": \"$:/tags/ViewTemplate $:/ipfs/core\",\n            \"text\": \"<$reveal tag=\\\"div\\\" class=\\\"tc-tiddler-plugin-info\\\" type=\\\"nomatch\\\" stateTitle=<<folded-state>> text=\\\"hide\\\" retain=\\\"yes\\\" animate=\\\"yes\\\">\\n\\n<$list filter=\\\"[all[current]has[plugin-type]] -[all[current]field:plugin-type[import]] -[all[current]field:plugin-type[ipfs-export]] -[all[current]field:plugin-type[ipfs-import]]\\\">\\n<$set name=\\\"plugin-type\\\" value={{!!plugin-type}}>\\n<$set name=\\\"default-popup-state\\\" value=\\\"yes\\\">\\n<$set name=\\\"qualified-state\\\" value=<<qualify \\\"$:/state/plugin-info\\\">>>\\n{{||$:/core/ui/Components/plugin-info}}\\n</$set>\\n</$set>\\n</$set>\\n</$list>\\n</$reveal>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/export/attachment\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/export/attachment\",\n            \"tags\": \"$:/ipfs/core $:/tags/ViewToolbar\",\n            \"caption\": \"{{$:/language/Buttons/Ipfs/Export/Attachment/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Export/Attachment/Hint}}\",\n            \"text\": \"\\\\whitespace trim\\n<$button message=\\\"tm-ipfs-export-attachment\\\" param=<<currentTiddler>> tooltip={{$:/language/Buttons/Ipfs/Export/Attachment/Hint}} aria-label={{$:/language/Buttons/Ipfs/Export/Attachment/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/ipfs/image/ipfs}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\">\\n<$text text=\\\" \\\"/>\\n<$text text={{$:/language/Buttons/Ipfs/Export/Attachment/Caption}}/>\\n</span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/export/content\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/export/content\",\n            \"tags\": \"$:/ipfs/core $:/tags/ViewToolbar\",\n            \"caption\": \"{{$:/core/images/excise}} {{$:/language/Buttons/Ipfs/Export/Content/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Export/Content/Hint}}\",\n            \"text\": \"\\\\whitespace trim\\n<$button message=\\\"tm-ipfs-export-content\\\" param=<<currentTiddler>> tooltip={{$:/language/Buttons/Ipfs/Export/Content/Hint}} aria-label={{$:/language/Buttons/Ipfs/Export/Content/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/excise}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\">\\n<$text text=\\\" \\\"/>\\n<$text text={{$:/language/Buttons/Ipfs/Export/Content/Caption}}/>\\n</span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/export\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/export\",\n            \"tags\": \"$:/ipfs/core $:/tags/ViewToolbar\",\n            \"caption\": \"{{$:/core/images/excise}} {{$:/language/Buttons/Ipfs/Export/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Export/Hint}}\",\n            \"text\": \"\\\\whitespace trim\\n<$button message=\\\"tm-ipfs-export\\\" param=<<currentTiddler>> tooltip={{$:/language/Buttons/Ipfs/Export/Hint}} aria-label={{$:/language/Buttons/Ipfs/Export/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/excise}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\">\\n<$text text=\\\" \\\"/>\\n<$text text={{$:/language/Buttons/Ipfs/Export/Caption}}/>\\n</span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/refresh\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/refresh\",\n            \"tags\": \"$:/ipfs/core $:/tags/ViewToolbar\",\n            \"caption\": \"{{$:/core/images/refresh-button}} {{$:/language/Buttons/Ipfs/Refresh/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Refresh/Hint}}\",\n            \"text\": \"<$button message=\\\"tm-refresh-tiddler\\\" param=<<currentTiddler>> tooltip={{$:/language/Buttons/Ipfs/Refresh/Hint}} aria-label={{$:/language/Buttons/Ipfs/Refresh/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/refresh-button}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipfs/Refresh/Caption}}/></span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/tiddler/pin\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/tiddler/pin\",\n            \"tags\": \"$:/ipfs/core $:/tags/ViewToolbar\",\n            \"caption\": \"{{$:/core/images/chevron-up}} {{$:/language/Buttons/Ipfs/Tiddler/Pin/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Tiddler/Pin/Hint}}\",\n            \"text\": \"\\\\whitespace trim\\n<$button message=\\\"tm-ipfs-pin\\\" param=<<currentTiddler>> tooltip={{$:/language/Buttons/Ipfs/Tiddler/Pin/Hint}} aria-label={{$:/language/Buttons/Ipfs/Tiddler/Pin/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/chevron-up}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\">\\n<$text text=\\\" \\\"/>\\n<$text text={{$:/language/Buttons/Ipfs/Tiddler/Pin/Caption}}/>\\n</span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/tiddler/unpin\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/tiddler/unpin\",\n            \"tags\": \"$:/ipfs/core $:/tags/ViewToolbar\",\n            \"caption\": \"{{$:/core/images/chevron-down}} {{$:/language/Buttons/Ipfs/Tiddler/Unpin/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Tiddler/Unpin/Hint}}\",\n            \"text\": \"\\\\whitespace trim\\n<$button message=\\\"tm-ipfs-unpin\\\" param=<<currentTiddler>> tooltip={{$:/language/Buttons/Ipfs/Tiddler/Unpin/Hint}} aria-label={{$:/language/Buttons/Ipfs/Tiddler/Unpin/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/chevron-down}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\">\\n<$text text=\\\" \\\"/>\\n<$text text={{$:/language/Buttons/Ipfs/Tiddler/Unpin/Caption}}/>\\n</span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/plugins/ipfs/styles\": {\n            \"title\": \"$:/plugins/ipfs/styles\",\n            \"tags\": \"$:/ipfs/core $:/tags/Stylesheet\",\n            \"type\": \"text/css\",\n            \"text\": \".tc-ipfs-action {\\n  display: block;\\n  margin: auto;\\n  width: 18px;\\n  height: 18px;\\n}\\n\\n.tc-icon-ipfs-wrapper {\\n  display: inline-block;\\n  width: 1em;\\n  height: 1em;\\n}\\n\\na.tc-ipfs-link-external {\\n\\ttext-decoration: underline;\\n\\tcolor: <<colour external-link-foreground>>;\\n\\tbackground-color: <<colour external-link-background>>;\\n}\\n\\na.tc-ipfs-link-external:visited {\\n\\tcolor: <<colour external-link-foreground-visited>>;\\n\\tbackground-color: <<colour external-link-background-visited>>;\\n}\\n\\na.tc-ipfs-link-external:hover {\\n\\tcolor: <<colour external-link-foreground-hover>>;\\n\\tbackground-color: <<colour external-link-background-hover>>;\\n  cursor: pointer;\\n}\\n\\n.ethAddress {\\n  padding: 20px 0px 0px 40px;\\n  height: 80px;\\n}\"\n        },\n        \"$:/config/AutoSave\": {\n            \"title\": \"$:/config/AutoSave\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"no\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/encryption\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/encryption\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"show\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/home\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/home\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"show\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipfs/pin\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipfs/pin\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipfs/unpin\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipfs/unpin\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipfs/console/mobile\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipfs/console/mobile\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"show\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/more-page-actions\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/more-page-actions\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"show\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ens/publish\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ens/publish\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipns/publish\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipns/publish\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/Standford\": {\n            \"title\": \"$:/config/Standford\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"yes\"\n        },\n        \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/export\": {\n            \"title\": \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/export\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/export/content\": {\n            \"title\": \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/export/content\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/export/attachment\": {\n            \"title\": \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/export/attachment\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/refresh\": {\n            \"title\": \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/refresh\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/tiddler/pin\": {\n            \"title\": \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/tiddler/pin\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/tiddler/unpin\": {\n            \"title\": \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/tiddler/unpin\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        }\n    }\n}"
}